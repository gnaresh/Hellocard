// Generated by Construct 2, the HTML5 game and app creator :: http://www.scirra.com
var cr = {};
cr.plugins_ = {};
cr.behaviors = {};
if (typeof Object.getPrototypeOf !== "function")
{
	if (typeof "test".__proto__ === "object")
	{
		Object.getPrototypeOf = function(object) {
			return object.__proto__;
		};
	}
	else
	{
		Object.getPrototypeOf = function(object) {
			return object.constructor.prototype;
		};
	}
}
(function(){
	cr.logexport = function (msg)
	{
		if (window.console && window.console.log)
			window.console.log(msg);
	};
	cr.seal = function(x)
	{
		return x;
	};
	cr.freeze = function(x)
	{
		return x;
	};
	cr.is_undefined = function (x)
	{
		return typeof x === "undefined";
	};
	cr.is_number = function (x)
	{
		return typeof x === "number";
	};
	cr.is_string = function (x)
	{
		return typeof x === "string";
	};
	cr.isPOT = function (x)
	{
		return x > 0 && ((x - 1) & x) === 0;
	};
	cr.nextHighestPowerOfTwo = function(x) {
		--x;
		for (var i = 1; i < 32; i <<= 1) {
			x = x | x >> i;
		}
		return x + 1;
	}
	cr.abs = function (x)
	{
		return (x < 0 ? -x : x);
	};
	cr.max = function (a, b)
	{
		return (a > b ? a : b);
	};
	cr.min = function (a, b)
	{
		return (a < b ? a : b);
	};
	cr.PI = Math.PI;
	cr.round = function (x)
	{
		return (x + 0.5) | 0;
	};
	cr.floor = function (x)
	{
		if (x >= 0)
			return x | 0;
		else
			return (x | 0) - 1;		// correctly round down when negative
	};
	cr.ceil = function (x)
	{
		var f = x | 0;
		return (f === x ? f : f + 1);
	};
	function Vector2(x, y)
	{
		this.x = x;
		this.y = y;
		cr.seal(this);
	};
	Vector2.prototype.offset = function (px, py)
	{
		this.x += px;
		this.y += py;
		return this;
	};
	Vector2.prototype.mul = function (px, py)
	{
		this.x *= px;
		this.y *= py;
		return this;
	};
	cr.vector2 = Vector2;
	cr.segments_intersect = function(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y)
	{
		var max_ax, min_ax, max_ay, min_ay, max_bx, min_bx, max_by, min_by;
		if (a1x < a2x)
		{
			min_ax = a1x;
			max_ax = a2x;
		}
		else
		{
			min_ax = a2x;
			max_ax = a1x;
		}
		if (b1x < b2x)
		{
			min_bx = b1x;
			max_bx = b2x;
		}
		else
		{
			min_bx = b2x;
			max_bx = b1x;
		}
		if (max_ax < min_bx || min_ax > max_bx)
			return false;
		if (a1y < a2y)
		{
			min_ay = a1y;
			max_ay = a2y;
		}
		else
		{
			min_ay = a2y;
			max_ay = a1y;
		}
		if (b1y < b2y)
		{
			min_by = b1y;
			max_by = b2y;
		}
		else
		{
			min_by = b2y;
			max_by = b1y;
		}
		if (max_ay < min_by || min_ay > max_by)
			return false;
		var dpx = b1x - a1x + b2x - a2x;
		var dpy = b1y - a1y + b2y - a2y;
		var qax = a2x - a1x;
		var qay = a2y - a1y;
		var qbx = b2x - b1x;
		var qby = b2y - b1y;
		var d = cr.abs(qay * qbx - qby * qax);
		var la = qbx * dpy - qby * dpx;
		if (cr.abs(la) > d)
			return false;
		var lb = qax * dpy - qay * dpx;
		return cr.abs(lb) <= d;
	};
	function Rect(left, top, right, bottom)
	{
		this.set(left, top, right, bottom);
		cr.seal(this);
	};
	Rect.prototype.set = function (left, top, right, bottom)
	{
		this.left = left;
		this.top = top;
		this.right = right;
		this.bottom = bottom;
	};
	Rect.prototype.copy = function (r)
	{
		this.left = r.left;
		this.top = r.top;
		this.right = r.right;
		this.bottom = r.bottom;
	};
	Rect.prototype.width = function ()
	{
		return this.right - this.left;
	};
	Rect.prototype.height = function ()
	{
		return this.bottom - this.top;
	};
	Rect.prototype.offset = function (px, py)
	{
		this.left += px;
		this.top += py;
		this.right += px;
		this.bottom += py;
		return this;
	};
	Rect.prototype.normalize = function ()
	{
		var temp = 0;
		if (this.left > this.right)
		{
			temp = this.left;
			this.left = this.right;
			this.right = temp;
		}
		if (this.top > this.bottom)
		{
			temp = this.top;
			this.top = this.bottom;
			this.bottom = temp;
		}
	};
	Rect.prototype.intersects_rect = function (rc)
	{
		return !(rc.right < this.left || rc.bottom < this.top || rc.left > this.right || rc.top > this.bottom);
	};
	Rect.prototype.intersects_rect_off = function (rc, ox, oy)
	{
		return !(rc.right + ox < this.left || rc.bottom + oy < this.top || rc.left + ox > this.right || rc.top + oy > this.bottom);
	};
	Rect.prototype.contains_pt = function (x, y)
	{
		return (x >= this.left && x <= this.right) && (y >= this.top && y <= this.bottom);
	};
	Rect.prototype.equals = function (r)
	{
		return this.left === r.left && this.top === r.top && this.right === r.right && this.bottom === r.bottom;
	};
	cr.rect = Rect;
	function Quad()
	{
		this.tlx = 0;
		this.tly = 0;
		this.trx = 0;
		this.try_ = 0;	// is a keyword otherwise!
		this.brx = 0;
		this.bry = 0;
		this.blx = 0;
		this.bly = 0;
		cr.seal(this);
	};
	Quad.prototype.set_from_rect = function (rc)
	{
		this.tlx = rc.left;
		this.tly = rc.top;
		this.trx = rc.right;
		this.try_ = rc.top;
		this.brx = rc.right;
		this.bry = rc.bottom;
		this.blx = rc.left;
		this.bly = rc.bottom;
	};
	Quad.prototype.set_from_rotated_rect = function (rc, a)
	{
		if (a === 0)
		{
			this.set_from_rect(rc);
		}
		else
		{
			var sin_a = Math.sin(a);
			var cos_a = Math.cos(a);
			var left_sin_a = rc.left * sin_a;
			var top_sin_a = rc.top * sin_a;
			var right_sin_a = rc.right * sin_a;
			var bottom_sin_a = rc.bottom * sin_a;
			var left_cos_a = rc.left * cos_a;
			var top_cos_a = rc.top * cos_a;
			var right_cos_a = rc.right * cos_a;
			var bottom_cos_a = rc.bottom * cos_a;
			this.tlx = left_cos_a - top_sin_a;
			this.tly = top_cos_a + left_sin_a;
			this.trx = right_cos_a - top_sin_a;
			this.try_ = top_cos_a + right_sin_a;
			this.brx = right_cos_a - bottom_sin_a;
			this.bry = bottom_cos_a + right_sin_a;
			this.blx = left_cos_a - bottom_sin_a;
			this.bly = bottom_cos_a + left_sin_a;
		}
	};
	Quad.prototype.offset = function (px, py)
	{
		this.tlx += px;
		this.tly += py;
		this.trx += px;
		this.try_ += py;
		this.brx += px;
		this.bry += py;
		this.blx += px;
		this.bly += py;
		return this;
	};
	var minresult = 0;
	var maxresult = 0;
	function minmax4(a, b, c, d)
	{
		if (a < b)
		{
			if (c < d)
			{
				if (a < c)
					minresult = a;
				else
					minresult = c;
				if (b > d)
					maxresult = b;
				else
					maxresult = d;
			}
			else
			{
				if (a < d)
					minresult = a;
				else
					minresult = d;
				if (b > c)
					maxresult = b;
				else
					maxresult = c;
			}
		}
		else
		{
			if (c < d)
			{
				if (b < c)
					minresult = b;
				else
					minresult = c;
				if (a > d)
					maxresult = a;
				else
					maxresult = d;
			}
			else
			{
				if (b < d)
					minresult = b;
				else
					minresult = d;
				if (a > c)
					maxresult = a;
				else
					maxresult = c;
			}
		}
	};
	Quad.prototype.bounding_box = function (rc)
	{
		minmax4(this.tlx, this.trx, this.brx, this.blx);
		rc.left = minresult;
		rc.right = maxresult;
		minmax4(this.tly, this.try_, this.bry, this.bly);
		rc.top = minresult;
		rc.bottom = maxresult;
	};
	Quad.prototype.contains_pt = function (x, y)
	{
		var v0x = this.trx - this.tlx;
		var v0y = this.try_ - this.tly;
		var v1x = this.brx - this.tlx;
		var v1y = this.bry - this.tly;
		var v2x = x - this.tlx;
		var v2y = y - this.tly;
		var dot00 = v0x * v0x + v0y * v0y
		var dot01 = v0x * v1x + v0y * v1y
		var dot02 = v0x * v2x + v0y * v2y
		var dot11 = v1x * v1x + v1y * v1y
		var dot12 = v1x * v2x + v1y * v2y
		var invDenom = 1.0 / (dot00 * dot11 - dot01 * dot01);
		var u = (dot11 * dot02 - dot01 * dot12) * invDenom;
		var v = (dot00 * dot12 - dot01 * dot02) * invDenom;
		if ((u >= 0.0) && (v > 0.0) && (u + v < 1))
			return true;
		v0x = this.blx - this.tlx;
		v0y = this.bly - this.tly;
		var dot00 = v0x * v0x + v0y * v0y
		var dot01 = v0x * v1x + v0y * v1y
		var dot02 = v0x * v2x + v0y * v2y
		invDenom = 1.0 / (dot00 * dot11 - dot01 * dot01);
		u = (dot11 * dot02 - dot01 * dot12) * invDenom;
		v = (dot00 * dot12 - dot01 * dot02) * invDenom;
		return (u >= 0.0) && (v > 0.0) && (u + v < 1);
	};
	Quad.prototype.at = function (i, xory)
	{
		if (xory)
		{
			switch (i)
			{
				case 0: return this.tlx;
				case 1: return this.trx;
				case 2: return this.brx;
				case 3: return this.blx;
				case 4: return this.tlx;
				default: return this.tlx;
			}
		}
		else
		{
			switch (i)
			{
				case 0: return this.tly;
				case 1: return this.try_;
				case 2: return this.bry;
				case 3: return this.bly;
				case 4: return this.tly;
				default: return this.tly;
			}
		}
	};
	Quad.prototype.midX = function ()
	{
		return (this.tlx + this.trx  + this.brx + this.blx) / 4;
	};
	Quad.prototype.midY = function ()
	{
		return (this.tly + this.try_ + this.bry + this.bly) / 4;
	};
	Quad.prototype.intersects_segment = function (x1, y1, x2, y2)
	{
		if (this.contains_pt(x1, y1) || this.contains_pt(x2, y2))
			return true;
		var a1x, a1y, a2x, a2y;
		var i;
		for (i = 0; i < 4; i++)
		{
			a1x = this.at(i, true);
			a1y = this.at(i, false);
			a2x = this.at(i + 1, true);
			a2y = this.at(i + 1, false);
			if (cr.segments_intersect(x1, y1, x2, y2, a1x, a1y, a2x, a2y))
				return true;
		}
		return false;
	};
	Quad.prototype.intersects_quad = function (rhs)
	{
		var midx = rhs.midX();
		var midy = rhs.midY();
		if (this.contains_pt(midx, midy))
			return true;
		midx = this.midX();
		midy = this.midY();
		if (rhs.contains_pt(midx, midy))
			return true;
		var a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y;
		var i, j;
		for (i = 0; i < 4; i++)
		{
			for (j = 0; j < 4; j++)
			{
				a1x = this.at(i, true);
				a1y = this.at(i, false);
				a2x = this.at(i + 1, true);
				a2y = this.at(i + 1, false);
				b1x = rhs.at(j, true);
				b1y = rhs.at(j, false);
				b2x = rhs.at(j + 1, true);
				b2y = rhs.at(j + 1, false);
				if (cr.segments_intersect(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y))
					return true;
			}
		}
		return false;
	};
	cr.quad = Quad;
	cr.RGB = function (red, green, blue)
	{
		return Math.max(Math.min(red, 255), 0)
			 | (Math.max(Math.min(green, 255), 0) << 8)
			 | (Math.max(Math.min(blue, 255), 0) << 16);
	};
	cr.GetRValue = function (rgb)
	{
		return rgb & 0xFF;
	};
	cr.GetGValue = function (rgb)
	{
		return (rgb & 0xFF00) >> 8;
	};
	cr.GetBValue = function (rgb)
	{
		return (rgb & 0xFF0000) >> 16;
	};
	cr.shallowCopy = function (a, b, allowOverwrite)
	{
		var attr;
		for (attr in b)
		{
			if (b.hasOwnProperty(attr))
			{
;
				a[attr] = b[attr];
			}
		}
		return a;
	};
	cr.arrayRemove = function (arr, index)
	{
		var i, len;
		index = cr.floor(index);
		if (index < 0 || index >= arr.length)
			return;							// index out of bounds
		for (i = index, len = arr.length - 1; i < len; i++)
			arr[i] = arr[i + 1];
		arr.length = len;
	};
	cr.shallowAssignArray = function (dest, src)
	{
		dest.length = src.length;
		var i, len;
		for (i = 0, len = src.length; i < len; i++)
			dest[i] = src[i];
	};
	cr.appendArray = function (a, b)
	{
		a.push.apply(a, b);
	};
	cr.fastIndexOf = function (arr, item)
	{
		var i, len;
		for (i = 0, len = arr.length; i < len; ++i)
		{
			if (arr[i] === item)
				return i;
		}
		return -1;
	};
	cr.arrayFindRemove = function (arr, item)
	{
		var index = cr.fastIndexOf(arr, item);
		if (index !== -1)
			cr.arrayRemove(arr, index);
	};
	cr.clamp = function(x, a, b)
	{
		if (x < a)
			return a;
		else if (x > b)
			return b;
		else
			return x;
	};
	cr.to_radians = function(x)
	{
		return x / (180.0 / cr.PI);
	};
	cr.to_degrees = function(x)
	{
		return x * (180.0 / cr.PI);
	};
	cr.clamp_angle_degrees = function (a)
	{
		a %= 360;       // now in (-360, 360) range
		if (a < 0)
			a += 360;   // now in [0, 360) range
		return a;
	};
	cr.clamp_angle = function (a)
	{
		a %= 2 * cr.PI;       // now in (-2pi, 2pi) range
		if (a < 0)
			a += 2 * cr.PI;   // now in [0, 2pi) range
		return a;
	};
	cr.to_clamped_degrees = function (x)
	{
		return cr.clamp_angle_degrees(cr.to_degrees(x));
	};
	cr.to_clamped_radians = function (x)
	{
		return cr.clamp_angle(cr.to_radians(x));
	};
	cr.angleTo = function(x1, y1, x2, y2)
	{
		var dx = x2 - x1;
        var dy = y2 - y1;
		return Math.atan2(dy, dx);
	};
	cr.angleDiff = function (a1, a2)
	{
		if (a1 === a2)
			return 0;
		var s1 = Math.sin(a1);
		var c1 = Math.cos(a1);
		var s2 = Math.sin(a2);
		var c2 = Math.cos(a2);
		var n = s1 * s2 + c1 * c2;
		if (n >= 1)
			return 0;
		if (n <= -1)
			return cr.PI;
		return Math.acos(n);
	};
	cr.angleRotate = function (start, end, step)
	{
		var ss = Math.sin(start);
		var cs = Math.cos(start);
		var se = Math.sin(end);
		var ce = Math.cos(end);
		if (Math.acos(ss * se + cs * ce) > step)
		{
			if (cs * se - ss * ce > 0)
				return cr.clamp_angle(start + step);
			else
				return cr.clamp_angle(start - step);
		}
		else
			return cr.clamp_angle(end);
	};
	cr.angleClockwise = function (a1, a2)
	{
		var s1 = Math.sin(a1);
		var c1 = Math.cos(a1);
		var s2 = Math.sin(a2);
		var c2 = Math.cos(a2);
		return c1 * s2 - s1 * c2 <= 0;
	};
	cr.rotatePtAround = function (px, py, a, ox, oy, getx)
	{
		if (a === 0)
			return getx ? px : py;
		var sin_a = Math.sin(a);
		var cos_a = Math.cos(a);
		px -= ox;
		py -= oy;
		var left_sin_a = px * sin_a;
		var top_sin_a = py * sin_a;
		var left_cos_a = px * cos_a;
		var top_cos_a = py * cos_a;
		px = left_cos_a - top_sin_a;
		py = top_cos_a + left_sin_a;
		px += ox;
		py += oy;
		return getx ? px : py;
	}
	cr.distanceTo = function(x1, y1, x2, y2)
	{
		var dx = x2 - x1;
        var dy = y2 - y1;
		return Math.sqrt(dx*dx + dy*dy);
	};
	cr.xor = function (x, y)
	{
		return !x !== !y;
	};
	cr.lerp = function (a, b, x)
	{
		return a + (b - a) * x;
	};
	cr.unlerp = function (a, b, c)
	{
		if (a === b)
			return 0;		// avoid divide by 0
		return (c - a) / (b - a);
	};
	cr.anglelerp = function (a, b, x)
	{
		var diff = cr.angleDiff(a, b);
		if (cr.angleClockwise(b, a))
		{
			return a + diff * x;
		}
		else
		{
			return a - diff * x;
		}
	};
	cr.qarp = function (a, b, c, x)
	{
		return cr.lerp(cr.lerp(a, b, x), cr.lerp(b, c, x), x);
	};
	cr.cubic = function (a, b, c, d, x)
	{
		return cr.lerp(cr.qarp(a, b, c, x), cr.qarp(b, c, d, x), x);
	};
	cr.cosp = function (a, b, x)
	{
		return (a + b + (a - b) * Math.cos(x * Math.PI)) / 2;
	};
	cr.hasAnyOwnProperty = function (o)
	{
		var p;
		for (p in o)
		{
			if (o.hasOwnProperty(p))
				return true;
		}
		return false;
	};
	cr.wipe = function (obj)
	{
		var p;
		for (p in obj)
		{
			if (obj.hasOwnProperty(p))
				delete obj[p];
		}
	};
	var startup_time = +(new Date());
	cr.performance_now = function()
	{
		if (typeof window["performance"] !== "undefined")
		{
			var winperf = window["performance"];
			if (typeof winperf.now !== "undefined")
				return winperf.now();
			else if (typeof winperf["webkitNow"] !== "undefined")
				return winperf["webkitNow"]();
			else if (typeof winperf["mozNow"] !== "undefined")
				return winperf["mozNow"]();
			else if (typeof winperf["msNow"] !== "undefined")
				return winperf["msNow"]();
		}
		return Date.now() - startup_time;
	};
	var isChrome = false;
	var isSafari = false;
	var isiOS = false;
	var isEjecta = false;
	if (typeof window !== "undefined")		// not c2 editor
	{
		isChrome = /chrome/i.test(navigator.userAgent) || /chromium/i.test(navigator.userAgent);
		isSafari = !isChrome && /safari/i.test(navigator.userAgent);
		isiOS = /(iphone|ipod|ipad)/i.test(navigator.userAgent);
		isEjecta = window["c2ejecta"];
	}
	var supports_set = ((!isSafari && !isEjecta && !isiOS) && (typeof Set !== "undefined" && typeof Set.prototype["forEach"] !== "undefined"));
	function ObjectSet_()
	{
		this.s = null;
		this.items = null;			// lazy allocated (hopefully results in better GC performance)
		this.item_count = 0;
		if (supports_set)
		{
			this.s = new Set();
		}
		this.values_cache = [];
		this.cache_valid = true;
		cr.seal(this);
	};
	ObjectSet_.prototype.contains = function (x)
	{
		if (this.isEmpty())
			return false;
		if (supports_set)
			return this.s["has"](x);
		else
			return (this.items && this.items.hasOwnProperty(x));
	};
	ObjectSet_.prototype.add = function (x)
	{
		if (supports_set)
		{
			if (!this.s["has"](x))
			{
				this.s["add"](x);
				this.cache_valid = false;
			}
		}
		else
		{
			var str = x.toString();
			var items = this.items;
			if (!items)
			{
				this.items = {};
				this.items[str] = x;
				this.item_count = 1;
				this.cache_valid = false;
			}
			else if (!items.hasOwnProperty(str))
			{
				items[str] = x;
				this.item_count++;
				this.cache_valid = false;
			}
		}
	};
	ObjectSet_.prototype.remove = function (x)
	{
		if (this.isEmpty())
			return;
		if (supports_set)
		{
			if (this.s["has"](x))
			{
				this.s["delete"](x);
				this.cache_valid = false;
			}
		}
		else if (this.items)
		{
			var str = x.toString();
			var items = this.items;
			if (items.hasOwnProperty(str))
			{
				delete items[str];
				this.item_count--;
				this.cache_valid = false;
			}
		}
	};
	ObjectSet_.prototype.clear = function (/*wipe_*/)
	{
		if (this.isEmpty())
			return;
		if (supports_set)
		{
			this.s["clear"]();			// best!
		}
		else
		{
				this.items = null;		// creates garbage; will lazy allocate on next add()
			this.item_count = 0;
		}
		this.values_cache.length = 0;
		this.cache_valid = true;
	};
	ObjectSet_.prototype.isEmpty = function ()
	{
		return this.count() === 0;
	};
	ObjectSet_.prototype.count = function ()
	{
		if (supports_set)
			return this.s["size"];
		else
			return this.item_count;
	};
	var current_arr = null;
	var current_index = 0;
	function set_append_to_arr(x)
	{
		current_arr[current_index++] = x;
	};
	ObjectSet_.prototype.update_cache = function ()
	{
		if (this.cache_valid)
			return;
		if (supports_set)
		{
			this.values_cache.length = this.s["size"];
			current_arr = this.values_cache;
			current_index = 0;
			this.s["forEach"](set_append_to_arr);
;
			current_arr = null;
			current_index = 0;
		}
		else
		{
			var values_cache = this.values_cache;
			values_cache.length = this.item_count;
			var p, n = 0, items = this.items;
			if (items)
			{
				for (p in items)
				{
					if (items.hasOwnProperty(p))
						values_cache[n++] = items[p];
				}
			}
;
		}
		this.cache_valid = true;
	};
	ObjectSet_.prototype.valuesRef = function ()
	{
		this.update_cache();
		return this.values_cache;
	};
	cr.ObjectSet = ObjectSet_;
	var tmpSet = new cr.ObjectSet();
	cr.removeArrayDuplicates = function (arr)
	{
		var i, len;
		for (i = 0, len = arr.length; i < len; ++i)
		{
			tmpSet.add(arr[i]);
		}
		cr.shallowAssignArray(arr, tmpSet.valuesRef());
		tmpSet.clear();
	};
	function KahanAdder_()
	{
		this.c = 0;
        this.y = 0;
        this.t = 0;
        this.sum = 0;
		cr.seal(this);
	};
	KahanAdder_.prototype.add = function (v)
	{
		this.y = v - this.c;
	    this.t = this.sum + this.y;
	    this.c = (this.t - this.sum) - this.y;
	    this.sum = this.t;
	};
    KahanAdder_.prototype.reset = function ()
    {
        this.c = 0;
        this.y = 0;
        this.t = 0;
        this.sum = 0;
    };
	cr.KahanAdder = KahanAdder_;
	cr.regexp_escape = function(text)
	{
		return text.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&");
	};
	function CollisionPoly_(pts_array_)
	{
		this.pts_cache = [];
		this.bboxLeft = 0;
		this.bboxTop = 0;
		this.bboxRight = 0;
		this.bboxBottom = 0;
		this.convexpolys = null;		// for physics behavior to cache separated polys
		this.set_pts(pts_array_);
		cr.seal(this);
	};
	CollisionPoly_.prototype.set_pts = function(pts_array_)
	{
		this.pts_array = pts_array_;
		this.pts_count = pts_array_.length / 2;			// x, y, x, y... in array
		this.pts_cache.length = pts_array_.length;
		this.cache_width = -1;
		this.cache_height = -1;
		this.cache_angle = 0;
	};
	CollisionPoly_.prototype.is_empty = function()
	{
		return !this.pts_array.length;
	};
	CollisionPoly_.prototype.update_bbox = function ()
	{
		var myptscache = this.pts_cache;
		var bboxLeft_ = myptscache[0];
		var bboxRight_ = bboxLeft_;
		var bboxTop_ = myptscache[1];
		var bboxBottom_ = bboxTop_;
		var x, y, i = 1, i2, len = this.pts_count;
		for ( ; i < len; ++i)
		{
			i2 = i*2;
			x = myptscache[i2];
			y = myptscache[i2+1];
			if (x < bboxLeft_)
				bboxLeft_ = x;
			if (x > bboxRight_)
				bboxRight_ = x;
			if (y < bboxTop_)
				bboxTop_ = y;
			if (y > bboxBottom_)
				bboxBottom_ = y;
		}
		this.bboxLeft = bboxLeft_;
		this.bboxRight = bboxRight_;
		this.bboxTop = bboxTop_;
		this.bboxBottom = bboxBottom_;
	};
	CollisionPoly_.prototype.set_from_rect = function(rc, offx, offy)
	{
		this.pts_cache.length = 8;
		this.pts_count = 4;
		var myptscache = this.pts_cache;
		myptscache[0] = rc.left - offx;
		myptscache[1] = rc.top - offy;
		myptscache[2] = rc.right - offx;
		myptscache[3] = rc.top - offy;
		myptscache[4] = rc.right - offx;
		myptscache[5] = rc.bottom - offy;
		myptscache[6] = rc.left - offx;
		myptscache[7] = rc.bottom - offy;
		this.cache_width = rc.right - rc.left;
		this.cache_height = rc.bottom - rc.top;
		this.update_bbox();
	};
	CollisionPoly_.prototype.set_from_quad = function(q, offx, offy, w, h)
	{
		this.pts_cache.length = 8;
		this.pts_count = 4;
		var myptscache = this.pts_cache;
		myptscache[0] = q.tlx - offx;
		myptscache[1] = q.tly - offy;
		myptscache[2] = q.trx - offx;
		myptscache[3] = q.try_ - offy;
		myptscache[4] = q.brx - offx;
		myptscache[5] = q.bry - offy;
		myptscache[6] = q.blx - offx;
		myptscache[7] = q.bly - offy;
		this.cache_width = w;
		this.cache_height = h;
		this.update_bbox();
	};
	CollisionPoly_.prototype.set_from_poly = function (r)
	{
		this.pts_count = r.pts_count;
		cr.shallowAssignArray(this.pts_cache, r.pts_cache);
		this.bboxLeft = r.bboxLeft;
		this.bboxTop - r.bboxTop;
		this.bboxRight = r.bboxRight;
		this.bboxBottom = r.bboxBottom;
	};
	CollisionPoly_.prototype.cache_poly = function(w, h, a)
	{
		if (this.cache_width === w && this.cache_height === h && this.cache_angle === a)
			return;		// cache up-to-date
		this.cache_width = w;
		this.cache_height = h;
		this.cache_angle = a;
		var i, i2, i21, len, x, y;
		var sina = 0;
		var cosa = 1;
		var myptsarray = this.pts_array;
		var myptscache = this.pts_cache;
		if (a !== 0)
		{
			sina = Math.sin(a);
			cosa = Math.cos(a);
		}
		for (i = 0, len = this.pts_count; i < len; i++)
		{
			i2 = i*2;
			i21 = i2+1;
			x = myptsarray[i2] * w;
			y = myptsarray[i21] * h;
			myptscache[i2] = (x * cosa) - (y * sina);
			myptscache[i21] = (y * cosa) + (x * sina);
		}
		this.update_bbox();
	};
	CollisionPoly_.prototype.contains_pt = function (a2x, a2y)
	{
		var myptscache = this.pts_cache;
		if (a2x === myptscache[0] && a2y === myptscache[1])
			return true;
		var i, i2, imod, len = this.pts_count;
		var a1x = this.bboxLeft - 110;
		var a1y = this.bboxTop - 101;
		var a3x = this.bboxRight + 131
		var a3y = this.bboxBottom + 120;
		var b1x, b1y, b2x, b2y;
		var count1 = 0, count2 = 0;
		for (i = 0; i < len; i++)
		{
			i2 = i*2;
			imod = ((i+1)%len)*2;
			b1x = myptscache[i2];
			b1y = myptscache[i2+1];
			b2x = myptscache[imod];
			b2y = myptscache[imod+1];
			if (cr.segments_intersect(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y))
				count1++;
			if (cr.segments_intersect(a3x, a3y, a2x, a2y, b1x, b1y, b2x, b2y))
				count2++;
		}
		return (count1 % 2 === 1) || (count2 % 2 === 1);
	};
	CollisionPoly_.prototype.intersects_poly = function (rhs, offx, offy)
	{
		var rhspts = rhs.pts_cache;
		var mypts = this.pts_cache;
		if (this.contains_pt(rhspts[0] + offx, rhspts[1] + offy))
			return true;
		if (rhs.contains_pt(mypts[0] - offx, mypts[1] - offy))
			return true;
		var i, i2, imod, leni, j, j2, jmod, lenj;
		var a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y;
		for (i = 0, leni = this.pts_count; i < leni; i++)
		{
			i2 = i*2;
			imod = ((i+1)%leni)*2;
			a1x = mypts[i2];
			a1y = mypts[i2+1];
			a2x = mypts[imod];
			a2y = mypts[imod+1];
			for (j = 0, lenj = rhs.pts_count; j < lenj; j++)
			{
				j2 = j*2;
				jmod = ((j+1)%lenj)*2;
				b1x = rhspts[j2] + offx;
				b1y = rhspts[j2+1] + offy;
				b2x = rhspts[jmod] + offx;
				b2y = rhspts[jmod+1] + offy;
				if (cr.segments_intersect(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y))
					return true;
			}
		}
		return false;
	};
	CollisionPoly_.prototype.intersects_segment = function (offx, offy, x1, y1, x2, y2)
	{
		var mypts = this.pts_cache;
		if (this.contains_pt(x1 - offx, y1 - offy))
			return true;
		var i, leni, i2, imod;
		var a1x, a1y, a2x, a2y;
		for (i = 0, leni = this.pts_count; i < leni; i++)
		{
			i2 = i*2;
			imod = ((i+1)%leni)*2;
			a1x = mypts[i2] + offx;
			a1y = mypts[i2+1] + offy;
			a2x = mypts[imod] + offx;
			a2y = mypts[imod+1] + offy;
			if (cr.segments_intersect(x1, y1, x2, y2, a1x, a1y, a2x, a2y))
				return true;
		}
		return false;
	};
	CollisionPoly_.prototype.mirror = function (px)
	{
		var i, leni, i2;
		for (i = 0, leni = this.pts_count; i < leni; ++i)
		{
			i2 = i*2;
			this.pts_cache[i2] = px * 2 - this.pts_cache[i2];
		}
	};
	CollisionPoly_.prototype.flip = function (py)
	{
		var i, leni, i21;
		for (i = 0, leni = this.pts_count; i < leni; ++i)
		{
			i21 = i*2+1;
			this.pts_cache[i21] = py * 2 - this.pts_cache[i21];
		}
	};
	CollisionPoly_.prototype.diag = function ()
	{
		var i, leni, i2, i21, temp;
		for (i = 0, leni = this.pts_count; i < leni; ++i)
		{
			i2 = i*2;
			i21 = i2+1;
			temp = this.pts_cache[i2];
			this.pts_cache[i2] = this.pts_cache[i21];
			this.pts_cache[i21] = temp;
		}
	};
	cr.CollisionPoly = CollisionPoly_;
	function SparseGrid_(cellwidth_, cellheight_)
	{
		this.cellwidth = cellwidth_;
		this.cellheight = cellheight_;
		this.cells = {};
	};
	SparseGrid_.prototype.totalCellCount = 0;
	SparseGrid_.prototype.getCell = function (x_, y_, create_if_missing)
	{
		var ret;
		var col = this.cells[x_];
		if (!col)
		{
			if (create_if_missing)
			{
				ret = allocGridCell(this, x_, y_);
				this.cells[x_] = {};
				this.cells[x_][y_] = ret;
				return ret;
			}
			else
				return null;
		}
		ret = col[y_];
		if (ret)
			return ret;
		else if (create_if_missing)
		{
			ret = allocGridCell(this, x_, y_);
			this.cells[x_][y_] = ret;
			return ret;
		}
		else
			return null;
	};
	SparseGrid_.prototype.XToCell = function (x_)
	{
		return cr.floor(x_ / this.cellwidth);
	};
	SparseGrid_.prototype.YToCell = function (y_)
	{
		return cr.floor(y_ / this.cellheight);
	};
	SparseGrid_.prototype.update = function (inst, oldrange, newrange)
	{
		var x, lenx, y, leny, cell;
		if (oldrange)
		{
			for (x = oldrange.left, lenx = oldrange.right; x <= lenx; ++x)
			{
				for (y = oldrange.top, leny = oldrange.bottom; y <= leny; ++y)
				{
					if (newrange && newrange.contains_pt(x, y))
						continue;	// is still in this cell
					cell = this.getCell(x, y, false);	// don't create if missing
					if (!cell)
						continue;	// cell does not exist yet
					cell.remove(inst);
					if (cell.isEmpty())
					{
						freeGridCell(cell);
						this.cells[x][y] = null;
					}
				}
			}
		}
		if (newrange)
		{
			for (x = newrange.left, lenx = newrange.right; x <= lenx; ++x)
			{
				for (y = newrange.top, leny = newrange.bottom; y <= leny; ++y)
				{
					if (oldrange && oldrange.contains_pt(x, y))
						continue;	// is still in this cell
					this.getCell(x, y, true).insert(inst);
				}
			}
		}
	};
	SparseGrid_.prototype.queryRange = function (rc, result)
	{
		var x, lenx, ystart, y, leny, cell;
		x = this.XToCell(rc.left);
		ystart = this.YToCell(rc.top);
		lenx = this.XToCell(rc.right);
		leny = this.YToCell(rc.bottom);
		for ( ; x <= lenx; ++x)
		{
			for (y = ystart; y <= leny; ++y)
			{
				cell = this.getCell(x, y, false);
				if (!cell)
					continue;
				cell.dump(result);
			}
		}
	};
	cr.SparseGrid = SparseGrid_;
	var gridcellcache = [];
	function allocGridCell(grid_, x_, y_)
	{
		var ret;
		SparseGrid_.prototype.totalCellCount++;
		if (gridcellcache.length)
		{
			ret = gridcellcache.pop();
			ret.grid = grid_;
			ret.x = x_;
			ret.y = y_;
			return ret;
		}
		else
			return new cr.GridCell(grid_, x_, y_);
	};
	function freeGridCell(c)
	{
		SparseGrid_.prototype.totalCellCount--;
		c.objects.clear();
		if (gridcellcache.length < 1000)
			gridcellcache.push(c);
	};
	function GridCell_(grid_, x_, y_)
	{
		this.grid = grid_;
		this.x = x_;
		this.y = y_;
		this.objects = new cr.ObjectSet();
	};
	GridCell_.prototype.isEmpty = function ()
	{
		return this.objects.isEmpty();
	};
	GridCell_.prototype.insert = function (inst)
	{
		this.objects.add(inst);
	};
	GridCell_.prototype.remove = function (inst)
	{
		this.objects.remove(inst);
	};
	GridCell_.prototype.dump = function (result)
	{
		cr.appendArray(result, this.objects.valuesRef());
	};
	cr.GridCell = GridCell_;
	var fxNames = [ "lighter",
					"xor",
					"copy",
					"destination-over",
					"source-in",
					"destination-in",
					"source-out",
					"destination-out",
					"source-atop",
					"destination-atop"];
	cr.effectToCompositeOp = function(effect)
	{
		if (effect <= 0 || effect >= 11)
			return "source-over";
		return fxNames[effect - 1];	// not including "none" so offset by 1
	};
	cr.setGLBlend = function(this_, effect, gl)
	{
		if (!gl)
			return;
		this_.srcBlend = gl.ONE;
		this_.destBlend = gl.ONE_MINUS_SRC_ALPHA;
		switch (effect) {
		case 1:		// lighter (additive)
			this_.srcBlend = gl.ONE;
			this_.destBlend = gl.ONE;
			break;
		case 2:		// xor
			break;	// todo
		case 3:		// copy
			this_.srcBlend = gl.ONE;
			this_.destBlend = gl.ZERO;
			break;
		case 4:		// destination-over
			this_.srcBlend = gl.ONE_MINUS_DST_ALPHA;
			this_.destBlend = gl.ONE;
			break;
		case 5:		// source-in
			this_.srcBlend = gl.DST_ALPHA;
			this_.destBlend = gl.ZERO;
			break;
		case 6:		// destination-in
			this_.srcBlend = gl.ZERO;
			this_.destBlend = gl.SRC_ALPHA;
			break;
		case 7:		// source-out
			this_.srcBlend = gl.ONE_MINUS_DST_ALPHA;
			this_.destBlend = gl.ZERO;
			break;
		case 8:		// destination-out
			this_.srcBlend = gl.ZERO;
			this_.destBlend = gl.ONE_MINUS_SRC_ALPHA;
			break;
		case 9:		// source-atop
			this_.srcBlend = gl.DST_ALPHA;
			this_.destBlend = gl.ONE_MINUS_SRC_ALPHA;
			break;
		case 10:	// destination-atop
			this_.srcBlend = gl.ONE_MINUS_DST_ALPHA;
			this_.destBlend = gl.SRC_ALPHA;
			break;
		}
	};
	cr.round6dp = function (x)
	{
		return Math.round(x * 1000000) / 1000000;
	};
	/*
	var localeCompare_options = {
		"usage": "search",
		"sensitivity": "accent"
	};
	var has_localeCompare = !!"a".localeCompare;
	var localeCompare_works1 = (has_localeCompare && "a".localeCompare("A", undefined, localeCompare_options) === 0);
	var localeCompare_works2 = (has_localeCompare && "a".localeCompare("á", undefined, localeCompare_options) !== 0);
	var supports_localeCompare = (has_localeCompare && localeCompare_works1 && localeCompare_works2);
	*/
	cr.equals_nocase = function (a, b)
	{
		if (typeof a !== "string" || typeof b !== "string")
			return false;
		if (a.length !== b.length)
			return false;
		if (a === b)
			return true;
		/*
		if (supports_localeCompare)
		{
			return (a.localeCompare(b, undefined, localeCompare_options) === 0);
		}
		else
		{
		*/
			return a.toLowerCase() === b.toLowerCase();
	};
	cr.isCanvasInputEvent = function (e)
	{
		var target = e.target;
		if (!target)
			return true;
		if (target === document || target === window)
			return true;
		if (document && document.body && target === document.body)
			return true;
		if (cr.equals_nocase(target.tagName, "canvas"))
			return true;
		return false;
	};
}());
var MatrixArray=typeof Float32Array!=="undefined"?Float32Array:Array,glMatrixArrayType=MatrixArray,vec3={},mat3={},mat4={},quat4={};vec3.create=function(a){var b=new MatrixArray(3);a&&(b[0]=a[0],b[1]=a[1],b[2]=a[2]);return b};vec3.set=function(a,b){b[0]=a[0];b[1]=a[1];b[2]=a[2];return b};vec3.add=function(a,b,c){if(!c||a===c)return a[0]+=b[0],a[1]+=b[1],a[2]+=b[2],a;c[0]=a[0]+b[0];c[1]=a[1]+b[1];c[2]=a[2]+b[2];return c};
vec3.subtract=function(a,b,c){if(!c||a===c)return a[0]-=b[0],a[1]-=b[1],a[2]-=b[2],a;c[0]=a[0]-b[0];c[1]=a[1]-b[1];c[2]=a[2]-b[2];return c};vec3.negate=function(a,b){b||(b=a);b[0]=-a[0];b[1]=-a[1];b[2]=-a[2];return b};vec3.scale=function(a,b,c){if(!c||a===c)return a[0]*=b,a[1]*=b,a[2]*=b,a;c[0]=a[0]*b;c[1]=a[1]*b;c[2]=a[2]*b;return c};
vec3.normalize=function(a,b){b||(b=a);var c=a[0],d=a[1],e=a[2],g=Math.sqrt(c*c+d*d+e*e);if(g){if(g===1)return b[0]=c,b[1]=d,b[2]=e,b}else return b[0]=0,b[1]=0,b[2]=0,b;g=1/g;b[0]=c*g;b[1]=d*g;b[2]=e*g;return b};vec3.cross=function(a,b,c){c||(c=a);var d=a[0],e=a[1],a=a[2],g=b[0],f=b[1],b=b[2];c[0]=e*b-a*f;c[1]=a*g-d*b;c[2]=d*f-e*g;return c};vec3.length=function(a){var b=a[0],c=a[1],a=a[2];return Math.sqrt(b*b+c*c+a*a)};vec3.dot=function(a,b){return a[0]*b[0]+a[1]*b[1]+a[2]*b[2]};
vec3.direction=function(a,b,c){c||(c=a);var d=a[0]-b[0],e=a[1]-b[1],a=a[2]-b[2],b=Math.sqrt(d*d+e*e+a*a);if(!b)return c[0]=0,c[1]=0,c[2]=0,c;b=1/b;c[0]=d*b;c[1]=e*b;c[2]=a*b;return c};vec3.lerp=function(a,b,c,d){d||(d=a);d[0]=a[0]+c*(b[0]-a[0]);d[1]=a[1]+c*(b[1]-a[1]);d[2]=a[2]+c*(b[2]-a[2]);return d};vec3.str=function(a){return"["+a[0]+", "+a[1]+", "+a[2]+"]"};
mat3.create=function(a){var b=new MatrixArray(9);a&&(b[0]=a[0],b[1]=a[1],b[2]=a[2],b[3]=a[3],b[4]=a[4],b[5]=a[5],b[6]=a[6],b[7]=a[7],b[8]=a[8]);return b};mat3.set=function(a,b){b[0]=a[0];b[1]=a[1];b[2]=a[2];b[3]=a[3];b[4]=a[4];b[5]=a[5];b[6]=a[6];b[7]=a[7];b[8]=a[8];return b};mat3.identity=function(a){a[0]=1;a[1]=0;a[2]=0;a[3]=0;a[4]=1;a[5]=0;a[6]=0;a[7]=0;a[8]=1;return a};
mat3.transpose=function(a,b){if(!b||a===b){var c=a[1],d=a[2],e=a[5];a[1]=a[3];a[2]=a[6];a[3]=c;a[5]=a[7];a[6]=d;a[7]=e;return a}b[0]=a[0];b[1]=a[3];b[2]=a[6];b[3]=a[1];b[4]=a[4];b[5]=a[7];b[6]=a[2];b[7]=a[5];b[8]=a[8];return b};mat3.toMat4=function(a,b){b||(b=mat4.create());b[15]=1;b[14]=0;b[13]=0;b[12]=0;b[11]=0;b[10]=a[8];b[9]=a[7];b[8]=a[6];b[7]=0;b[6]=a[5];b[5]=a[4];b[4]=a[3];b[3]=0;b[2]=a[2];b[1]=a[1];b[0]=a[0];return b};
mat3.str=function(a){return"["+a[0]+", "+a[1]+", "+a[2]+", "+a[3]+", "+a[4]+", "+a[5]+", "+a[6]+", "+a[7]+", "+a[8]+"]"};mat4.create=function(a){var b=new MatrixArray(16);a&&(b[0]=a[0],b[1]=a[1],b[2]=a[2],b[3]=a[3],b[4]=a[4],b[5]=a[5],b[6]=a[6],b[7]=a[7],b[8]=a[8],b[9]=a[9],b[10]=a[10],b[11]=a[11],b[12]=a[12],b[13]=a[13],b[14]=a[14],b[15]=a[15]);return b};
mat4.set=function(a,b){b[0]=a[0];b[1]=a[1];b[2]=a[2];b[3]=a[3];b[4]=a[4];b[5]=a[5];b[6]=a[6];b[7]=a[7];b[8]=a[8];b[9]=a[9];b[10]=a[10];b[11]=a[11];b[12]=a[12];b[13]=a[13];b[14]=a[14];b[15]=a[15];return b};mat4.identity=function(a){a[0]=1;a[1]=0;a[2]=0;a[3]=0;a[4]=0;a[5]=1;a[6]=0;a[7]=0;a[8]=0;a[9]=0;a[10]=1;a[11]=0;a[12]=0;a[13]=0;a[14]=0;a[15]=1;return a};
mat4.transpose=function(a,b){if(!b||a===b){var c=a[1],d=a[2],e=a[3],g=a[6],f=a[7],h=a[11];a[1]=a[4];a[2]=a[8];a[3]=a[12];a[4]=c;a[6]=a[9];a[7]=a[13];a[8]=d;a[9]=g;a[11]=a[14];a[12]=e;a[13]=f;a[14]=h;return a}b[0]=a[0];b[1]=a[4];b[2]=a[8];b[3]=a[12];b[4]=a[1];b[5]=a[5];b[6]=a[9];b[7]=a[13];b[8]=a[2];b[9]=a[6];b[10]=a[10];b[11]=a[14];b[12]=a[3];b[13]=a[7];b[14]=a[11];b[15]=a[15];return b};
mat4.determinant=function(a){var b=a[0],c=a[1],d=a[2],e=a[3],g=a[4],f=a[5],h=a[6],i=a[7],j=a[8],k=a[9],l=a[10],n=a[11],o=a[12],m=a[13],p=a[14],a=a[15];return o*k*h*e-j*m*h*e-o*f*l*e+g*m*l*e+j*f*p*e-g*k*p*e-o*k*d*i+j*m*d*i+o*c*l*i-b*m*l*i-j*c*p*i+b*k*p*i+o*f*d*n-g*m*d*n-o*c*h*n+b*m*h*n+g*c*p*n-b*f*p*n-j*f*d*a+g*k*d*a+j*c*h*a-b*k*h*a-g*c*l*a+b*f*l*a};
mat4.inverse=function(a,b){b||(b=a);var c=a[0],d=a[1],e=a[2],g=a[3],f=a[4],h=a[5],i=a[6],j=a[7],k=a[8],l=a[9],n=a[10],o=a[11],m=a[12],p=a[13],r=a[14],s=a[15],A=c*h-d*f,B=c*i-e*f,t=c*j-g*f,u=d*i-e*h,v=d*j-g*h,w=e*j-g*i,x=k*p-l*m,y=k*r-n*m,z=k*s-o*m,C=l*r-n*p,D=l*s-o*p,E=n*s-o*r,q=1/(A*E-B*D+t*C+u*z-v*y+w*x);b[0]=(h*E-i*D+j*C)*q;b[1]=(-d*E+e*D-g*C)*q;b[2]=(p*w-r*v+s*u)*q;b[3]=(-l*w+n*v-o*u)*q;b[4]=(-f*E+i*z-j*y)*q;b[5]=(c*E-e*z+g*y)*q;b[6]=(-m*w+r*t-s*B)*q;b[7]=(k*w-n*t+o*B)*q;b[8]=(f*D-h*z+j*x)*q;
b[9]=(-c*D+d*z-g*x)*q;b[10]=(m*v-p*t+s*A)*q;b[11]=(-k*v+l*t-o*A)*q;b[12]=(-f*C+h*y-i*x)*q;b[13]=(c*C-d*y+e*x)*q;b[14]=(-m*u+p*B-r*A)*q;b[15]=(k*u-l*B+n*A)*q;return b};mat4.toRotationMat=function(a,b){b||(b=mat4.create());b[0]=a[0];b[1]=a[1];b[2]=a[2];b[3]=a[3];b[4]=a[4];b[5]=a[5];b[6]=a[6];b[7]=a[7];b[8]=a[8];b[9]=a[9];b[10]=a[10];b[11]=a[11];b[12]=0;b[13]=0;b[14]=0;b[15]=1;return b};
mat4.toMat3=function(a,b){b||(b=mat3.create());b[0]=a[0];b[1]=a[1];b[2]=a[2];b[3]=a[4];b[4]=a[5];b[5]=a[6];b[6]=a[8];b[7]=a[9];b[8]=a[10];return b};mat4.toInverseMat3=function(a,b){var c=a[0],d=a[1],e=a[2],g=a[4],f=a[5],h=a[6],i=a[8],j=a[9],k=a[10],l=k*f-h*j,n=-k*g+h*i,o=j*g-f*i,m=c*l+d*n+e*o;if(!m)return null;m=1/m;b||(b=mat3.create());b[0]=l*m;b[1]=(-k*d+e*j)*m;b[2]=(h*d-e*f)*m;b[3]=n*m;b[4]=(k*c-e*i)*m;b[5]=(-h*c+e*g)*m;b[6]=o*m;b[7]=(-j*c+d*i)*m;b[8]=(f*c-d*g)*m;return b};
mat4.multiply=function(a,b,c){c||(c=a);var d=a[0],e=a[1],g=a[2],f=a[3],h=a[4],i=a[5],j=a[6],k=a[7],l=a[8],n=a[9],o=a[10],m=a[11],p=a[12],r=a[13],s=a[14],a=a[15],A=b[0],B=b[1],t=b[2],u=b[3],v=b[4],w=b[5],x=b[6],y=b[7],z=b[8],C=b[9],D=b[10],E=b[11],q=b[12],F=b[13],G=b[14],b=b[15];c[0]=A*d+B*h+t*l+u*p;c[1]=A*e+B*i+t*n+u*r;c[2]=A*g+B*j+t*o+u*s;c[3]=A*f+B*k+t*m+u*a;c[4]=v*d+w*h+x*l+y*p;c[5]=v*e+w*i+x*n+y*r;c[6]=v*g+w*j+x*o+y*s;c[7]=v*f+w*k+x*m+y*a;c[8]=z*d+C*h+D*l+E*p;c[9]=z*e+C*i+D*n+E*r;c[10]=z*g+C*
j+D*o+E*s;c[11]=z*f+C*k+D*m+E*a;c[12]=q*d+F*h+G*l+b*p;c[13]=q*e+F*i+G*n+b*r;c[14]=q*g+F*j+G*o+b*s;c[15]=q*f+F*k+G*m+b*a;return c};mat4.multiplyVec3=function(a,b,c){c||(c=b);var d=b[0],e=b[1],b=b[2];c[0]=a[0]*d+a[4]*e+a[8]*b+a[12];c[1]=a[1]*d+a[5]*e+a[9]*b+a[13];c[2]=a[2]*d+a[6]*e+a[10]*b+a[14];return c};
mat4.multiplyVec4=function(a,b,c){c||(c=b);var d=b[0],e=b[1],g=b[2],b=b[3];c[0]=a[0]*d+a[4]*e+a[8]*g+a[12]*b;c[1]=a[1]*d+a[5]*e+a[9]*g+a[13]*b;c[2]=a[2]*d+a[6]*e+a[10]*g+a[14]*b;c[3]=a[3]*d+a[7]*e+a[11]*g+a[15]*b;return c};
mat4.translate=function(a,b,c){var d=b[0],e=b[1],b=b[2],g,f,h,i,j,k,l,n,o,m,p,r;if(!c||a===c)return a[12]=a[0]*d+a[4]*e+a[8]*b+a[12],a[13]=a[1]*d+a[5]*e+a[9]*b+a[13],a[14]=a[2]*d+a[6]*e+a[10]*b+a[14],a[15]=a[3]*d+a[7]*e+a[11]*b+a[15],a;g=a[0];f=a[1];h=a[2];i=a[3];j=a[4];k=a[5];l=a[6];n=a[7];o=a[8];m=a[9];p=a[10];r=a[11];c[0]=g;c[1]=f;c[2]=h;c[3]=i;c[4]=j;c[5]=k;c[6]=l;c[7]=n;c[8]=o;c[9]=m;c[10]=p;c[11]=r;c[12]=g*d+j*e+o*b+a[12];c[13]=f*d+k*e+m*b+a[13];c[14]=h*d+l*e+p*b+a[14];c[15]=i*d+n*e+r*b+a[15];
return c};mat4.scale=function(a,b,c){var d=b[0],e=b[1],b=b[2];if(!c||a===c)return a[0]*=d,a[1]*=d,a[2]*=d,a[3]*=d,a[4]*=e,a[5]*=e,a[6]*=e,a[7]*=e,a[8]*=b,a[9]*=b,a[10]*=b,a[11]*=b,a;c[0]=a[0]*d;c[1]=a[1]*d;c[2]=a[2]*d;c[3]=a[3]*d;c[4]=a[4]*e;c[5]=a[5]*e;c[6]=a[6]*e;c[7]=a[7]*e;c[8]=a[8]*b;c[9]=a[9]*b;c[10]=a[10]*b;c[11]=a[11]*b;c[12]=a[12];c[13]=a[13];c[14]=a[14];c[15]=a[15];return c};
mat4.rotate=function(a,b,c,d){var e=c[0],g=c[1],c=c[2],f=Math.sqrt(e*e+g*g+c*c),h,i,j,k,l,n,o,m,p,r,s,A,B,t,u,v,w,x,y,z;if(!f)return null;f!==1&&(f=1/f,e*=f,g*=f,c*=f);h=Math.sin(b);i=Math.cos(b);j=1-i;b=a[0];f=a[1];k=a[2];l=a[3];n=a[4];o=a[5];m=a[6];p=a[7];r=a[8];s=a[9];A=a[10];B=a[11];t=e*e*j+i;u=g*e*j+c*h;v=c*e*j-g*h;w=e*g*j-c*h;x=g*g*j+i;y=c*g*j+e*h;z=e*c*j+g*h;e=g*c*j-e*h;g=c*c*j+i;d?a!==d&&(d[12]=a[12],d[13]=a[13],d[14]=a[14],d[15]=a[15]):d=a;d[0]=b*t+n*u+r*v;d[1]=f*t+o*u+s*v;d[2]=k*t+m*u+A*
v;d[3]=l*t+p*u+B*v;d[4]=b*w+n*x+r*y;d[5]=f*w+o*x+s*y;d[6]=k*w+m*x+A*y;d[7]=l*w+p*x+B*y;d[8]=b*z+n*e+r*g;d[9]=f*z+o*e+s*g;d[10]=k*z+m*e+A*g;d[11]=l*z+p*e+B*g;return d};mat4.rotateX=function(a,b,c){var d=Math.sin(b),b=Math.cos(b),e=a[4],g=a[5],f=a[6],h=a[7],i=a[8],j=a[9],k=a[10],l=a[11];c?a!==c&&(c[0]=a[0],c[1]=a[1],c[2]=a[2],c[3]=a[3],c[12]=a[12],c[13]=a[13],c[14]=a[14],c[15]=a[15]):c=a;c[4]=e*b+i*d;c[5]=g*b+j*d;c[6]=f*b+k*d;c[7]=h*b+l*d;c[8]=e*-d+i*b;c[9]=g*-d+j*b;c[10]=f*-d+k*b;c[11]=h*-d+l*b;return c};
mat4.rotateY=function(a,b,c){var d=Math.sin(b),b=Math.cos(b),e=a[0],g=a[1],f=a[2],h=a[3],i=a[8],j=a[9],k=a[10],l=a[11];c?a!==c&&(c[4]=a[4],c[5]=a[5],c[6]=a[6],c[7]=a[7],c[12]=a[12],c[13]=a[13],c[14]=a[14],c[15]=a[15]):c=a;c[0]=e*b+i*-d;c[1]=g*b+j*-d;c[2]=f*b+k*-d;c[3]=h*b+l*-d;c[8]=e*d+i*b;c[9]=g*d+j*b;c[10]=f*d+k*b;c[11]=h*d+l*b;return c};
mat4.rotateZ=function(a,b,c){var d=Math.sin(b),b=Math.cos(b),e=a[0],g=a[1],f=a[2],h=a[3],i=a[4],j=a[5],k=a[6],l=a[7];c?a!==c&&(c[8]=a[8],c[9]=a[9],c[10]=a[10],c[11]=a[11],c[12]=a[12],c[13]=a[13],c[14]=a[14],c[15]=a[15]):c=a;c[0]=e*b+i*d;c[1]=g*b+j*d;c[2]=f*b+k*d;c[3]=h*b+l*d;c[4]=e*-d+i*b;c[5]=g*-d+j*b;c[6]=f*-d+k*b;c[7]=h*-d+l*b;return c};
mat4.frustum=function(a,b,c,d,e,g,f){f||(f=mat4.create());var h=b-a,i=d-c,j=g-e;f[0]=e*2/h;f[1]=0;f[2]=0;f[3]=0;f[4]=0;f[5]=e*2/i;f[6]=0;f[7]=0;f[8]=(b+a)/h;f[9]=(d+c)/i;f[10]=-(g+e)/j;f[11]=-1;f[12]=0;f[13]=0;f[14]=-(g*e*2)/j;f[15]=0;return f};mat4.perspective=function(a,b,c,d,e){a=c*Math.tan(a*Math.PI/360);b*=a;return mat4.frustum(-b,b,-a,a,c,d,e)};
mat4.ortho=function(a,b,c,d,e,g,f){f||(f=mat4.create());var h=b-a,i=d-c,j=g-e;f[0]=2/h;f[1]=0;f[2]=0;f[3]=0;f[4]=0;f[5]=2/i;f[6]=0;f[7]=0;f[8]=0;f[9]=0;f[10]=-2/j;f[11]=0;f[12]=-(a+b)/h;f[13]=-(d+c)/i;f[14]=-(g+e)/j;f[15]=1;return f};
mat4.lookAt=function(a,b,c,d){d||(d=mat4.create());var e,g,f,h,i,j,k,l,n=a[0],o=a[1],a=a[2];g=c[0];f=c[1];e=c[2];c=b[1];j=b[2];if(n===b[0]&&o===c&&a===j)return mat4.identity(d);c=n-b[0];j=o-b[1];k=a-b[2];l=1/Math.sqrt(c*c+j*j+k*k);c*=l;j*=l;k*=l;b=f*k-e*j;e=e*c-g*k;g=g*j-f*c;(l=Math.sqrt(b*b+e*e+g*g))?(l=1/l,b*=l,e*=l,g*=l):g=e=b=0;f=j*g-k*e;h=k*b-c*g;i=c*e-j*b;(l=Math.sqrt(f*f+h*h+i*i))?(l=1/l,f*=l,h*=l,i*=l):i=h=f=0;d[0]=b;d[1]=f;d[2]=c;d[3]=0;d[4]=e;d[5]=h;d[6]=j;d[7]=0;d[8]=g;d[9]=i;d[10]=k;d[11]=
0;d[12]=-(b*n+e*o+g*a);d[13]=-(f*n+h*o+i*a);d[14]=-(c*n+j*o+k*a);d[15]=1;return d};mat4.fromRotationTranslation=function(a,b,c){c||(c=mat4.create());var d=a[0],e=a[1],g=a[2],f=a[3],h=d+d,i=e+e,j=g+g,a=d*h,k=d*i;d*=j;var l=e*i;e*=j;g*=j;h*=f;i*=f;f*=j;c[0]=1-(l+g);c[1]=k+f;c[2]=d-i;c[3]=0;c[4]=k-f;c[5]=1-(a+g);c[6]=e+h;c[7]=0;c[8]=d+i;c[9]=e-h;c[10]=1-(a+l);c[11]=0;c[12]=b[0];c[13]=b[1];c[14]=b[2];c[15]=1;return c};
mat4.str=function(a){return"["+a[0]+", "+a[1]+", "+a[2]+", "+a[3]+", "+a[4]+", "+a[5]+", "+a[6]+", "+a[7]+", "+a[8]+", "+a[9]+", "+a[10]+", "+a[11]+", "+a[12]+", "+a[13]+", "+a[14]+", "+a[15]+"]"};quat4.create=function(a){var b=new MatrixArray(4);a&&(b[0]=a[0],b[1]=a[1],b[2]=a[2],b[3]=a[3]);return b};quat4.set=function(a,b){b[0]=a[0];b[1]=a[1];b[2]=a[2];b[3]=a[3];return b};
quat4.calculateW=function(a,b){var c=a[0],d=a[1],e=a[2];if(!b||a===b)return a[3]=-Math.sqrt(Math.abs(1-c*c-d*d-e*e)),a;b[0]=c;b[1]=d;b[2]=e;b[3]=-Math.sqrt(Math.abs(1-c*c-d*d-e*e));return b};quat4.inverse=function(a,b){if(!b||a===b)return a[0]*=-1,a[1]*=-1,a[2]*=-1,a;b[0]=-a[0];b[1]=-a[1];b[2]=-a[2];b[3]=a[3];return b};quat4.length=function(a){var b=a[0],c=a[1],d=a[2],a=a[3];return Math.sqrt(b*b+c*c+d*d+a*a)};
quat4.normalize=function(a,b){b||(b=a);var c=a[0],d=a[1],e=a[2],g=a[3],f=Math.sqrt(c*c+d*d+e*e+g*g);if(f===0)return b[0]=0,b[1]=0,b[2]=0,b[3]=0,b;f=1/f;b[0]=c*f;b[1]=d*f;b[2]=e*f;b[3]=g*f;return b};quat4.multiply=function(a,b,c){c||(c=a);var d=a[0],e=a[1],g=a[2],a=a[3],f=b[0],h=b[1],i=b[2],b=b[3];c[0]=d*b+a*f+e*i-g*h;c[1]=e*b+a*h+g*f-d*i;c[2]=g*b+a*i+d*h-e*f;c[3]=a*b-d*f-e*h-g*i;return c};
quat4.multiplyVec3=function(a,b,c){c||(c=b);var d=b[0],e=b[1],g=b[2],b=a[0],f=a[1],h=a[2],a=a[3],i=a*d+f*g-h*e,j=a*e+h*d-b*g,k=a*g+b*e-f*d,d=-b*d-f*e-h*g;c[0]=i*a+d*-b+j*-h-k*-f;c[1]=j*a+d*-f+k*-b-i*-h;c[2]=k*a+d*-h+i*-f-j*-b;return c};quat4.toMat3=function(a,b){b||(b=mat3.create());var c=a[0],d=a[1],e=a[2],g=a[3],f=c+c,h=d+d,i=e+e,j=c*f,k=c*h;c*=i;var l=d*h;d*=i;e*=i;f*=g;h*=g;g*=i;b[0]=1-(l+e);b[1]=k+g;b[2]=c-h;b[3]=k-g;b[4]=1-(j+e);b[5]=d+f;b[6]=c+h;b[7]=d-f;b[8]=1-(j+l);return b};
quat4.toMat4=function(a,b){b||(b=mat4.create());var c=a[0],d=a[1],e=a[2],g=a[3],f=c+c,h=d+d,i=e+e,j=c*f,k=c*h;c*=i;var l=d*h;d*=i;e*=i;f*=g;h*=g;g*=i;b[0]=1-(l+e);b[1]=k+g;b[2]=c-h;b[3]=0;b[4]=k-g;b[5]=1-(j+e);b[6]=d+f;b[7]=0;b[8]=c+h;b[9]=d-f;b[10]=1-(j+l);b[11]=0;b[12]=0;b[13]=0;b[14]=0;b[15]=1;return b};
quat4.slerp=function(a,b,c,d){d||(d=a);var e=a[0]*b[0]+a[1]*b[1]+a[2]*b[2]+a[3]*b[3],g,f;if(Math.abs(e)>=1)return d!==a&&(d[0]=a[0],d[1]=a[1],d[2]=a[2],d[3]=a[3]),d;g=Math.acos(e);f=Math.sqrt(1-e*e);if(Math.abs(f)<0.001)return d[0]=a[0]*0.5+b[0]*0.5,d[1]=a[1]*0.5+b[1]*0.5,d[2]=a[2]*0.5+b[2]*0.5,d[3]=a[3]*0.5+b[3]*0.5,d;e=Math.sin((1-c)*g)/f;c=Math.sin(c*g)/f;d[0]=a[0]*e+b[0]*c;d[1]=a[1]*e+b[1]*c;d[2]=a[2]*e+b[2]*c;d[3]=a[3]*e+b[3]*c;return d};
quat4.str=function(a){return"["+a[0]+", "+a[1]+", "+a[2]+", "+a[3]+"]"};
(function()
{
	var MAX_VERTICES = 8000;						// equates to 2500 objects being drawn
	var MAX_INDICES = (MAX_VERTICES / 2) * 3;		// 6 indices for every 4 vertices
	var MAX_POINTS = 8000;
	var MULTI_BUFFERS = 4;							// cycle 4 buffers to try and avoid blocking
	var BATCH_NULL = 0;
	var BATCH_QUAD = 1;
	var BATCH_SETTEXTURE = 2;
	var BATCH_SETOPACITY = 3;
	var BATCH_SETBLEND = 4;
	var BATCH_UPDATEMODELVIEW = 5;
	var BATCH_RENDERTOTEXTURE = 6;
	var BATCH_CLEAR = 7;
	var BATCH_POINTS = 8;
	var BATCH_SETPROGRAM = 9;
	var BATCH_SETPROGRAMPARAMETERS = 10;
	var BATCH_SETTEXTURE1 = 11;
	function GLWrap_(gl, isMobile)
	{
		this.isIE = /msie/i.test(navigator.userAgent) || /trident/i.test(navigator.userAgent);
		this.width = 0;		// not yet known, wait for call to setSize()
		this.height = 0;
		this.cam = vec3.create([0, 0, 100]);			// camera position
		this.look = vec3.create([0, 0, 0]);				// lookat position
		this.up = vec3.create([0, 1, 0]);				// up vector
		this.worldScale = vec3.create([1, 1, 1]);		// world scaling factor
		this.enable_mipmaps = true;
		this.matP = mat4.create();						// perspective matrix
		this.matMV = mat4.create();						// model view matrix
		this.lastMV = mat4.create();
		this.currentMV = mat4.create();
		this.gl = gl;
		this.initState();
	};
	GLWrap_.prototype.initState = function ()
	{
		var gl = this.gl;
		var i, len;
		this.lastOpacity = 1;
		this.lastTexture0 = null;			// last bound to TEXTURE0
		this.lastTexture1 = null;			// last bound to TEXTURE1
		this.currentOpacity = 1;
		gl.clearColor(0, 0, 0, 0);
		gl.clear(gl.COLOR_BUFFER_BIT);
		gl.enable(gl.BLEND);
        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);
		gl.disable(gl.CULL_FACE);
		gl.disable(gl.DEPTH_TEST);
		this.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);
		this.lastSrcBlend = gl.ONE;
		this.lastDestBlend = gl.ONE_MINUS_SRC_ALPHA;
		this.pointBuffer = gl.createBuffer();
		gl.bindBuffer(gl.ARRAY_BUFFER, this.pointBuffer);
		this.vertexBuffers = new Array(MULTI_BUFFERS);
		this.texcoordBuffers = new Array(MULTI_BUFFERS);
		for (i = 0; i < MULTI_BUFFERS; i++)
		{
			this.vertexBuffers[i] = gl.createBuffer();
			gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffers[i]);
			this.texcoordBuffers[i] = gl.createBuffer();
			gl.bindBuffer(gl.ARRAY_BUFFER, this.texcoordBuffers[i]);
		}
		this.curBuffer = 0;
		this.indexBuffer = gl.createBuffer();
		gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);
		this.vertexData = new Float32Array(MAX_VERTICES * 2);
		this.texcoordData = new Float32Array(MAX_VERTICES * 2);
		this.pointData = new Float32Array(MAX_POINTS * 4);
		var indexData = new Uint16Array(MAX_INDICES);
		i = 0, len = MAX_INDICES;
		var fv = 0;
		while (i < len)
		{
			indexData[i++] = fv;		// top left
			indexData[i++] = fv + 1;	// top right
			indexData[i++] = fv + 2;	// bottom right (first tri)
			indexData[i++] = fv;		// top left
			indexData[i++] = fv + 2;	// bottom right
			indexData[i++] = fv + 3;	// bottom left
			fv += 4;
		}
		gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indexData, gl.STATIC_DRAW);
		this.vertexPtr = 0;
		this.pointPtr = 0;
		var fsSource, vsSource;
		this.shaderPrograms = [];
		fsSource = [
			"varying mediump vec2 vTex;",
			"uniform lowp float opacity;",
			"uniform lowp sampler2D samplerFront;",
			"void main(void) {",
			"	gl_FragColor = texture2D(samplerFront, vTex);",
			"	gl_FragColor *= opacity;",
			"}"
		].join("\n");
		vsSource = [
			"attribute highp vec2 aPos;",
			"attribute mediump vec2 aTex;",
			"varying mediump vec2 vTex;",
			"uniform highp mat4 matP;",
			"uniform highp mat4 matMV;",
			"void main(void) {",
			"	gl_Position = matP * matMV * vec4(aPos.x, aPos.y, 0.0, 1.0);",
			"	vTex = aTex;",
			"}"
		].join("\n");
		var shaderProg = this.createShaderProgram({src: fsSource}, vsSource, "<default>");
;
		this.shaderPrograms.push(shaderProg);		// Default shader is always shader 0
		fsSource = [
			"uniform mediump sampler2D samplerFront;",
			"varying lowp float opacity;",
			"void main(void) {",
			"	gl_FragColor = texture2D(samplerFront, gl_PointCoord);",
			"	gl_FragColor *= opacity;",
			"}"
		].join("\n");
		var pointVsSource = [
			"attribute vec4 aPos;",
			"varying float opacity;",
			"uniform mat4 matP;",
			"uniform mat4 matMV;",
			"void main(void) {",
			"	gl_Position = matP * matMV * vec4(aPos.x, aPos.y, 0.0, 1.0);",
			"	gl_PointSize = aPos.z;",
			"	opacity = aPos.w;",
			"}"
		].join("\n");
		shaderProg = this.createShaderProgram({src: fsSource}, pointVsSource, "<point>");
;
		this.shaderPrograms.push(shaderProg);		// Point shader is always shader 1
		for (var shader_name in cr.shaders)
		{
			if (cr.shaders.hasOwnProperty(shader_name))
				this.shaderPrograms.push(this.createShaderProgram(cr.shaders[shader_name], vsSource, shader_name));
		}
		gl.activeTexture(gl.TEXTURE0);
		gl.bindTexture(gl.TEXTURE_2D, null);
		this.batch = [];
		this.batchPtr = 0;
		this.hasQuadBatchTop = false;
		this.hasPointBatchTop = false;
		this.lastProgram = -1;				// start -1 so first switchProgram can do work
		this.currentProgram = -1;			// current program during batch execution
		this.currentShader = null;
		this.fbo = gl.createFramebuffer();
		this.renderToTex = null;
		this.tmpVec3 = vec3.create([0, 0, 0]);
;
;
		var pointsizes = gl.getParameter(gl.ALIASED_POINT_SIZE_RANGE);
		this.minPointSize = pointsizes[0];
		this.maxPointSize = pointsizes[1];
		if (this.maxPointSize > 2048)
			this.maxPointSize = 2048;
;
		this.switchProgram(0);
		cr.seal(this);
	};
	function GLShaderProgram(gl, shaderProgram, name)
	{
		this.gl = gl;
		this.shaderProgram = shaderProgram;
		this.name = name;
		this.locAPos = gl.getAttribLocation(shaderProgram, "aPos");
		this.locATex = gl.getAttribLocation(shaderProgram, "aTex");
		this.locMatP = gl.getUniformLocation(shaderProgram, "matP");
		this.locMatMV = gl.getUniformLocation(shaderProgram, "matMV");
		this.locOpacity = gl.getUniformLocation(shaderProgram, "opacity");
		this.locSamplerFront = gl.getUniformLocation(shaderProgram, "samplerFront");
		this.locSamplerBack = gl.getUniformLocation(shaderProgram, "samplerBack");
		this.locDestStart = gl.getUniformLocation(shaderProgram, "destStart");
		this.locDestEnd = gl.getUniformLocation(shaderProgram, "destEnd");
		this.locSeconds = gl.getUniformLocation(shaderProgram, "seconds");
		this.locPixelWidth = gl.getUniformLocation(shaderProgram, "pixelWidth");
		this.locPixelHeight = gl.getUniformLocation(shaderProgram, "pixelHeight");
		this.locLayerScale = gl.getUniformLocation(shaderProgram, "layerScale");
		this.locLayerAngle = gl.getUniformLocation(shaderProgram, "layerAngle");
		this.locViewOrigin = gl.getUniformLocation(shaderProgram, "viewOrigin");
		this.hasAnyOptionalUniforms = !!(this.locPixelWidth || this.locPixelHeight || this.locSeconds || this.locSamplerBack || this.locDestStart || this.locDestEnd || this.locLayerScale || this.locLayerAngle || this.locViewOrigin);
		if (this.locOpacity)
			gl.uniform1f(this.locOpacity, 1);
		if (this.locSamplerFront)
			gl.uniform1i(this.locSamplerFront, 0);
		if (this.locSamplerBack)
			gl.uniform1i(this.locSamplerBack, 1);
		if (this.locDestStart)
			gl.uniform2f(this.locDestStart, 0.0, 0.0);
		if (this.locDestEnd)
			gl.uniform2f(this.locDestEnd, 1.0, 1.0);
		if (this.locLayerScale)
			gl.uniform1f(this.locLayerScale, 1.0);
		if (this.locLayerAngle)
			gl.uniform1f(this.locLayerAngle, 0.0);
		if (this.locViewOrigin)
			gl.uniform2f(this.locViewOrigin, 0.0, 0.0);
		this.hasCurrentMatMV = false;		// matMV needs updating
	};
	GLWrap_.prototype.createShaderProgram = function(shaderEntry, vsSource, name)
	{
		var gl = this.gl;
		var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);
		gl.shaderSource(fragmentShader, shaderEntry.src);
		gl.compileShader(fragmentShader);
		if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS))
		{
;
			gl.deleteShader(fragmentShader);
			return null;
		}
		var vertexShader = gl.createShader(gl.VERTEX_SHADER);
		gl.shaderSource(vertexShader, vsSource);
		gl.compileShader(vertexShader);
		if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS))
		{
;
			gl.deleteShader(fragmentShader);
			gl.deleteShader(vertexShader);
			return null;
		}
		var shaderProgram = gl.createProgram();
		gl.attachShader(shaderProgram, fragmentShader);
		gl.attachShader(shaderProgram, vertexShader);
		gl.linkProgram(shaderProgram);
		if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS))
		{
;
			gl.deleteShader(fragmentShader);
			gl.deleteShader(vertexShader);
			gl.deleteProgram(shaderProgram);
			return null;
		}
		gl.useProgram(shaderProgram);
;
		gl.deleteShader(fragmentShader);
		gl.deleteShader(vertexShader);
		var ret = new GLShaderProgram(gl, shaderProgram, name);
		ret.extendBoxHorizontal = shaderEntry.extendBoxHorizontal || 0;
		ret.extendBoxVertical = shaderEntry.extendBoxVertical || 0;
		ret.crossSampling = !!shaderEntry.crossSampling;
		ret.animated = !!shaderEntry.animated;
		ret.parameters = shaderEntry.parameters || [];
		var i, len;
		for (i = 0, len = ret.parameters.length; i < len; i++)
		{
			ret.parameters[i][1] = gl.getUniformLocation(shaderProgram, ret.parameters[i][0]);
			gl.uniform1f(ret.parameters[i][1], 0);
		}
		cr.seal(ret);
		return ret;
	};
	GLWrap_.prototype.getShaderIndex = function(name_)
	{
		var i, len;
		for (i = 0, len = this.shaderPrograms.length; i < len; i++)
		{
			if (this.shaderPrograms[i].name === name_)
				return i;
		}
		return -1;
	};
	GLWrap_.prototype.project = function (x, y, out)
	{
		var mv = this.matMV;
		var proj = this.matP;
		var fTempo = [0, 0, 0, 0, 0, 0, 0, 0];
		fTempo[0] = mv[0]*x+mv[4]*y+mv[12];
		fTempo[1] = mv[1]*x+mv[5]*y+mv[13];
		fTempo[2] = mv[2]*x+mv[6]*y+mv[14];
		fTempo[3] = mv[3]*x+mv[7]*y+mv[15];
		fTempo[4] = proj[0]*fTempo[0]+proj[4]*fTempo[1]+proj[8]*fTempo[2]+proj[12]*fTempo[3];
		fTempo[5] = proj[1]*fTempo[0]+proj[5]*fTempo[1]+proj[9]*fTempo[2]+proj[13]*fTempo[3];
		fTempo[6] = proj[2]*fTempo[0]+proj[6]*fTempo[1]+proj[10]*fTempo[2]+proj[14]*fTempo[3];
		fTempo[7] = -fTempo[2];
		if(fTempo[7]===0.0)	//The w value
			return;
		fTempo[7]=1.0/fTempo[7];
		fTempo[4]*=fTempo[7];
		fTempo[5]*=fTempo[7];
		fTempo[6]*=fTempo[7];
		out[0]=(fTempo[4]*0.5+0.5)*this.width;
		out[1]=(fTempo[5]*0.5+0.5)*this.height;
	};
	GLWrap_.prototype.setSize = function(w, h, force)
	{
		if (this.width === w && this.height === h && !force)
			return;
		this.endBatch();
		this.width = w;
		this.height = h;
		this.gl.viewport(0, 0, w, h);
		mat4.perspective(45, w / h, 1, 1000, this.matP);
		mat4.lookAt(this.cam, this.look, this.up, this.matMV);
		var tl = [0, 0];
		var br = [0, 0];
		this.project(0, 0, tl);
		this.project(1, 1, br);
		this.worldScale[0] = 1 / (br[0] - tl[0]);
		this.worldScale[1] = -1 / (br[1] - tl[1]);
		var i, len, s;
		for (i = 0, len = this.shaderPrograms.length; i < len; i++)
		{
			s = this.shaderPrograms[i];
			s.hasCurrentMatMV = false;
			if (s.locMatP)
			{
				this.gl.useProgram(s.shaderProgram);
				this.gl.uniformMatrix4fv(s.locMatP, false, this.matP);
			}
		}
		this.gl.useProgram(this.shaderPrograms[this.lastProgram].shaderProgram);
		this.gl.bindTexture(this.gl.TEXTURE_2D, null);
		this.gl.activeTexture(this.gl.TEXTURE1);
		this.gl.bindTexture(this.gl.TEXTURE_2D, null);
		this.gl.activeTexture(this.gl.TEXTURE0);
		this.lastTexture0 = null;
		this.lastTexture1 = null;
	};
	GLWrap_.prototype.resetModelView = function ()
	{
		mat4.lookAt(this.cam, this.look, this.up, this.matMV);
		mat4.scale(this.matMV, this.worldScale);
	};
	GLWrap_.prototype.translate = function (x, y)
	{
		if (x === 0 && y === 0)
			return;
		this.tmpVec3[0] = x;// * this.worldScale[0];
		this.tmpVec3[1] = y;// * this.worldScale[1];
		this.tmpVec3[2] = 0;
		mat4.translate(this.matMV, this.tmpVec3);
	};
	GLWrap_.prototype.scale = function (x, y)
	{
		if (x === 1 && y === 1)
			return;
		this.tmpVec3[0] = x;
		this.tmpVec3[1] = y;
		this.tmpVec3[2] = 1;
		mat4.scale(this.matMV, this.tmpVec3);
	};
	GLWrap_.prototype.rotateZ = function (a)
	{
		if (a === 0)
			return;
		mat4.rotateZ(this.matMV, a);
	};
	GLWrap_.prototype.updateModelView = function()
	{
		var anydiff = false;
		for (var i = 0; i < 16; i++)
		{
			if (this.lastMV[i] !== this.matMV[i])
			{
				anydiff = true;
				break;
			}
		}
		if (!anydiff)
			return;
		var b = this.pushBatch();
		b.type = BATCH_UPDATEMODELVIEW;
		if (b.mat4param)
			mat4.set(this.matMV, b.mat4param);
		else
			b.mat4param = mat4.create(this.matMV);
		mat4.set(this.matMV, this.lastMV);
		this.hasQuadBatchTop = false;
		this.hasPointBatchTop = false;
	};
	/*
	var debugBatch = false;
	jQuery(document).mousedown(
		function(info) {
			if (info.which === 2)
				debugBatch = true;
		}
	);
	*/
	function GLBatchJob(type_, glwrap_)
	{
		this.type = type_;
		this.glwrap = glwrap_;
		this.gl = glwrap_.gl;
		this.opacityParam = 0;		// for setOpacity()
		this.startIndex = 0;		// for quad()
		this.indexCount = 0;		// "
		this.texParam = null;		// for setTexture()
		this.mat4param = null;		// for updateModelView()
		this.shaderParams = [];		// for user parameters
		cr.seal(this);
	};
	GLBatchJob.prototype.doSetTexture = function ()
	{
		this.gl.bindTexture(this.gl.TEXTURE_2D, this.texParam);
	};
	GLBatchJob.prototype.doSetTexture1 = function ()
	{
		var gl = this.gl;
		gl.activeTexture(gl.TEXTURE1);
		gl.bindTexture(gl.TEXTURE_2D, this.texParam);
		gl.activeTexture(gl.TEXTURE0);
	};
	GLBatchJob.prototype.doSetOpacity = function ()
	{
		var o = this.opacityParam;
		var glwrap = this.glwrap;
		glwrap.currentOpacity = o;
		var curProg = glwrap.currentShader;
		if (curProg.locOpacity)
			this.gl.uniform1f(curProg.locOpacity, o);
	};
	GLBatchJob.prototype.doQuad = function ()
	{
		this.gl.drawElements(this.gl.TRIANGLES, this.indexCount, this.gl.UNSIGNED_SHORT, this.startIndex * 2);
	};
	GLBatchJob.prototype.doSetBlend = function ()
	{
		this.gl.blendFunc(this.startIndex, this.indexCount);
	};
	GLBatchJob.prototype.doUpdateModelView = function ()
	{
		var i, len, s, shaderPrograms = this.glwrap.shaderPrograms, currentProgram = this.glwrap.currentProgram;
		for (i = 0, len = shaderPrograms.length; i < len; i++)
		{
			s = shaderPrograms[i];
			if (i === currentProgram && s.locMatMV)
			{
				this.gl.uniformMatrix4fv(s.locMatMV, false, this.mat4param);
				s.hasCurrentMatMV = true;
			}
			else
				s.hasCurrentMatMV = false;
		}
		mat4.set(this.mat4param, this.glwrap.currentMV);
	};
	GLBatchJob.prototype.doRenderToTexture = function ()
	{
		var gl = this.gl;
		var glwrap = this.glwrap;
		if (this.texParam)
		{
			if (glwrap.lastTexture1 === this.texParam)
			{
				gl.activeTexture(gl.TEXTURE1);
				gl.bindTexture(gl.TEXTURE_2D, null);
				glwrap.lastTexture1 = null;
				gl.activeTexture(gl.TEXTURE0);
			}
			gl.bindFramebuffer(gl.FRAMEBUFFER, glwrap.fbo);
			gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texParam, 0);
		}
		else
		{
			gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, null, 0);
			gl.bindFramebuffer(gl.FRAMEBUFFER, null);
		}
	};
	GLBatchJob.prototype.doClear = function ()
	{
		var gl = this.gl;
		if (this.startIndex === 0)		// clear whole surface
		{
			gl.clearColor(this.mat4param[0], this.mat4param[1], this.mat4param[2], this.mat4param[3]);
			gl.clear(gl.COLOR_BUFFER_BIT);
		}
		else							// clear rectangle
		{
			gl.enable(gl.SCISSOR_TEST);
			gl.scissor(this.mat4param[0], this.mat4param[1], this.mat4param[2], this.mat4param[3]);
			gl.clearColor(0, 0, 0, 0);
			gl.clear(this.gl.COLOR_BUFFER_BIT);
			gl.disable(gl.SCISSOR_TEST);
		}
	};
	GLBatchJob.prototype.doPoints = function ()
	{
		var gl = this.gl;
		var glwrap = this.glwrap;
		var s = glwrap.shaderPrograms[1];
		gl.useProgram(s.shaderProgram);
		if (!s.hasCurrentMatMV && s.locMatMV)
		{
			gl.uniformMatrix4fv(s.locMatMV, false, glwrap.currentMV);
			s.hasCurrentMatMV = true;
		}
		gl.enableVertexAttribArray(s.locAPos);
		gl.bindBuffer(gl.ARRAY_BUFFER, glwrap.pointBuffer);
		gl.vertexAttribPointer(s.locAPos, 4, gl.FLOAT, false, 0, 0);
		gl.drawArrays(gl.POINTS, this.startIndex / 4, this.indexCount);
		s = glwrap.currentShader;
		gl.useProgram(s.shaderProgram);
		if (s.locAPos >= 0)
		{
			gl.enableVertexAttribArray(s.locAPos);
			gl.bindBuffer(gl.ARRAY_BUFFER, glwrap.vertexBuffers[glwrap.curBuffer]);
			gl.vertexAttribPointer(s.locAPos, 2, gl.FLOAT, false, 0, 0);
		}
		if (s.locATex >= 0)
		{
			gl.enableVertexAttribArray(s.locATex);
			gl.bindBuffer(gl.ARRAY_BUFFER, glwrap.texcoordBuffers[glwrap.curBuffer]);
			gl.vertexAttribPointer(s.locATex, 2, gl.FLOAT, false, 0, 0);
		}
	};
	GLBatchJob.prototype.doSetProgram = function ()
	{
		var gl = this.gl;
		var glwrap = this.glwrap;
		var s = glwrap.shaderPrograms[this.startIndex];		// recycled param to save memory
		glwrap.currentProgram = this.startIndex;			// current batch program
		glwrap.currentShader = s;
		gl.useProgram(s.shaderProgram);						// switch to
		if (!s.hasCurrentMatMV && s.locMatMV)
		{
			gl.uniformMatrix4fv(s.locMatMV, false, glwrap.currentMV);
			s.hasCurrentMatMV = true;
		}
		if (s.locOpacity)
			gl.uniform1f(s.locOpacity, glwrap.currentOpacity);
		if (s.locAPos >= 0)
		{
			gl.enableVertexAttribArray(s.locAPos);
			gl.bindBuffer(gl.ARRAY_BUFFER, glwrap.vertexBuffers[glwrap.curBuffer]);
			gl.vertexAttribPointer(s.locAPos, 2, gl.FLOAT, false, 0, 0);
		}
		if (s.locATex >= 0)
		{
			gl.enableVertexAttribArray(s.locATex);
			gl.bindBuffer(gl.ARRAY_BUFFER, glwrap.texcoordBuffers[glwrap.curBuffer]);
			gl.vertexAttribPointer(s.locATex, 2, gl.FLOAT, false, 0, 0);
		}
	}
	GLBatchJob.prototype.doSetProgramParameters = function ()
	{
		var i, len, s = this.glwrap.currentShader;
		var gl = this.gl;
		var mat4param = this.mat4param;
		if (s.locSamplerBack && this.glwrap.lastTexture1 !== this.texParam)
		{
			gl.activeTexture(gl.TEXTURE1);
			gl.bindTexture(gl.TEXTURE_2D, this.texParam);
			this.glwrap.lastTexture1 = this.texParam;
			gl.activeTexture(gl.TEXTURE0);
		}
		if (s.locPixelWidth)
			gl.uniform1f(s.locPixelWidth, mat4param[0]);
		if (s.locPixelHeight)
			gl.uniform1f(s.locPixelHeight, mat4param[1]);
		if (s.locDestStart)
			gl.uniform2f(s.locDestStart, mat4param[2], mat4param[3]);
		if (s.locDestEnd)
			gl.uniform2f(s.locDestEnd, mat4param[4], mat4param[5]);
		if (s.locLayerScale)
			gl.uniform1f(s.locLayerScale, mat4param[6]);
		if (s.locLayerAngle)
			gl.uniform1f(s.locLayerAngle, mat4param[7]);
		if (s.locViewOrigin)
			gl.uniform2f(s.locViewOrigin, mat4param[8], mat4param[9]);
		if (s.locSeconds)
			gl.uniform1f(s.locSeconds, cr.performance_now() / 1000.0);
		if (s.parameters.length)
		{
			for (i = 0, len = s.parameters.length; i < len; i++)
			{
				gl.uniform1f(s.parameters[i][1], this.shaderParams[i]);
			}
		}
	};
	GLWrap_.prototype.pushBatch = function ()
	{
		if (this.batchPtr === this.batch.length)
			this.batch.push(new GLBatchJob(BATCH_NULL, this));
		return this.batch[this.batchPtr++];
	};
	GLWrap_.prototype.endBatch = function ()
	{
		if (this.batchPtr === 0)
			return;
		if (this.gl.isContextLost())
			return;
		var gl = this.gl;
		if (this.pointPtr > 0)
		{
			gl.bindBuffer(gl.ARRAY_BUFFER, this.pointBuffer);
			gl.bufferData(gl.ARRAY_BUFFER, this.pointData.subarray(0, this.pointPtr), gl.STREAM_DRAW);
			if (s && s.locAPos >= 0 && s.name === "<point>")
				gl.vertexAttribPointer(s.locAPos, 4, gl.FLOAT, false, 0, 0);
		}
		if (this.vertexPtr > 0)
		{
			var s = this.currentShader;
			gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffers[this.curBuffer]);
			gl.bufferData(gl.ARRAY_BUFFER, this.vertexData.subarray(0, this.vertexPtr), gl.STREAM_DRAW);
			if (s && s.locAPos >= 0 && s.name !== "<point>")
				gl.vertexAttribPointer(s.locAPos, 2, gl.FLOAT, false, 0, 0);
			gl.bindBuffer(gl.ARRAY_BUFFER, this.texcoordBuffers[this.curBuffer]);
			gl.bufferData(gl.ARRAY_BUFFER, this.texcoordData.subarray(0, this.vertexPtr), gl.STREAM_DRAW);
			if (s && s.locATex >= 0 && s.name !== "<point>")
				gl.vertexAttribPointer(s.locATex, 2, gl.FLOAT, false, 0, 0);
		}
		var i, len, b;
		for (i = 0, len = this.batchPtr; i < len; i++)
		{
			b = this.batch[i];
			switch (b.type) {
			case 1:
				b.doQuad();
				break;
			case 2:
				b.doSetTexture();
				break;
			case 3:
				b.doSetOpacity();
				break;
			case 4:
				b.doSetBlend();
				break;
			case 5:
				b.doUpdateModelView();
				break;
			case 6:
				b.doRenderToTexture();
				break;
			case 7:
				b.doClear();
				break;
			case 8:
				b.doPoints();
				break;
			case 9:
				b.doSetProgram();
				break;
			case 10:
				b.doSetProgramParameters();
				break;
			case 11:
				b.doSetTexture1();
				break;
			}
		}
		this.batchPtr = 0;
		this.vertexPtr = 0;
		this.pointPtr = 0;
		this.hasQuadBatchTop = false;
		this.hasPointBatchTop = false;
		this.curBuffer++;
		if (this.curBuffer >= MULTI_BUFFERS)
			this.curBuffer = 0;
	};
	GLWrap_.prototype.setOpacity = function (op)
	{
		if (op === this.lastOpacity)
			return;
		var b = this.pushBatch();
		b.type = BATCH_SETOPACITY;
		b.opacityParam = op;
		this.lastOpacity = op;
		this.hasQuadBatchTop = false;
		this.hasPointBatchTop = false;
	};
	GLWrap_.prototype.setTexture = function (tex)
	{
		if (tex === this.lastTexture0)
			return;
;
		var b = this.pushBatch();
		b.type = BATCH_SETTEXTURE;
		b.texParam = tex;
		this.lastTexture0 = tex;
		this.hasQuadBatchTop = false;
		this.hasPointBatchTop = false;
	};
	GLWrap_.prototype.setBlend = function (s, d)
	{
		if (s === this.lastSrcBlend && d === this.lastDestBlend)
			return;
		var b = this.pushBatch();
		b.type = BATCH_SETBLEND;
		b.startIndex = s;		// recycle params to save memory
		b.indexCount = d;
		this.lastSrcBlend = s;
		this.lastDestBlend = d;
		this.hasQuadBatchTop = false;
		this.hasPointBatchTop = false;
	};
	GLWrap_.prototype.isPremultipliedAlphaBlend = function ()
	{
		return (this.lastSrcBlend === this.gl.ONE && this.lastDestBlend === this.gl.ONE_MINUS_SRC_ALPHA);
	};
	GLWrap_.prototype.setAlphaBlend = function ()
	{
		this.setBlend(this.gl.ONE, this.gl.ONE_MINUS_SRC_ALPHA);
	};
	GLWrap_.prototype.setNoPremultiplyAlphaBlend = function ()
	{
		this.setBlend(this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA);
	};
	var LAST_VERTEX = MAX_VERTICES * 2 - 8;
	GLWrap_.prototype.quad = function(tlx, tly, trx, try_, brx, bry, blx, bly)
	{
		if (this.vertexPtr >= LAST_VERTEX)
			this.endBatch();
		var v = this.vertexPtr;			// vertex cursor
		var vd = this.vertexData;		// vertex data array
		var td = this.texcoordData;		// texture coord data array
		if (this.hasQuadBatchTop)
		{
			this.batch[this.batchPtr - 1].indexCount += 6;
		}
		else
		{
			var b = this.pushBatch();
			b.type = BATCH_QUAD;
			b.startIndex = (v / 4) * 3;
			b.indexCount = 6;
			this.hasQuadBatchTop = true;
			this.hasPointBatchTop = false;
		}
		vd[v] = tlx;
		td[v++] = 0;
		vd[v] = tly;
		td[v++] = 0;
		vd[v] = trx;
		td[v++] = 1;
		vd[v] = try_;
		td[v++] = 0;
		vd[v] = brx;
		td[v++] = 1;
		vd[v] = bry;
		td[v++] = 1;
		vd[v] = blx;
		td[v++] = 0;
		vd[v] = bly;
		td[v++] = 1;
		this.vertexPtr = v;
	};
	GLWrap_.prototype.quadTex = function(tlx, tly, trx, try_, brx, bry, blx, bly, rcTex)
	{
		if (this.vertexPtr >= LAST_VERTEX)
			this.endBatch();
		var v = this.vertexPtr;			// vertex cursor
		var vd = this.vertexData;		// vertex data array
		var td = this.texcoordData;		// texture coord data array
		if (this.hasQuadBatchTop)
		{
			this.batch[this.batchPtr - 1].indexCount += 6;
		}
		else
		{
			var b = this.pushBatch();
			b.type = BATCH_QUAD;
			b.startIndex = (v / 4) * 3;
			b.indexCount = 6;
			this.hasQuadBatchTop = true;
			this.hasPointBatchTop = false;
		}
		var rc_left = rcTex.left;
		var rc_top = rcTex.top;
		var rc_right = rcTex.right;
		var rc_bottom = rcTex.bottom;
		vd[v] = tlx;
		td[v++] = rc_left;
		vd[v] = tly;
		td[v++] = rc_top;
		vd[v] = trx;
		td[v++] = rc_right;
		vd[v] = try_;
		td[v++] = rc_top;
		vd[v] = brx;
		td[v++] = rc_right;
		vd[v] = bry;
		td[v++] = rc_bottom;
		vd[v] = blx;
		td[v++] = rc_left;
		vd[v] = bly;
		td[v++] = rc_bottom;
		this.vertexPtr = v;
	};
	GLWrap_.prototype.quadTexUV = function(tlx, tly, trx, try_, brx, bry, blx, bly, tlu, tlv, tru, trv, bru, brv, blu, blv)
	{
		if (this.vertexPtr >= LAST_VERTEX)
			this.endBatch();
		var v = this.vertexPtr;			// vertex cursor
		var vd = this.vertexData;		// vertex data array
		var td = this.texcoordData;		// texture coord data array
		if (this.hasQuadBatchTop)
		{
			this.batch[this.batchPtr - 1].indexCount += 6;
		}
		else
		{
			var b = this.pushBatch();
			b.type = BATCH_QUAD;
			b.startIndex = (v / 4) * 3;
			b.indexCount = 6;
			this.hasQuadBatchTop = true;
			this.hasPointBatchTop = false;
		}
		vd[v] = tlx;
		td[v++] = tlu;
		vd[v] = tly;
		td[v++] = tlv;
		vd[v] = trx;
		td[v++] = tru;
		vd[v] = try_;
		td[v++] = trv;
		vd[v] = brx;
		td[v++] = bru;
		vd[v] = bry;
		td[v++] = brv;
		vd[v] = blx;
		td[v++] = blu;
		vd[v] = bly;
		td[v++] = blv;
		this.vertexPtr = v;
	};
	GLWrap_.prototype.convexPoly = function(pts)
	{
		var pts_count = pts.length / 2;
;
		var tris = pts_count - 2;	// 3 points = 1 tri, 4 points = 2 tris, 5 points = 3 tris etc.
		var last_tri = tris - 1;
		var p0x = pts[0];
		var p0y = pts[1];
		var i, i2, p1x, p1y, p2x, p2y, p3x, p3y;
		for (i = 0; i < tris; i += 2)		// draw 2 triangles at a time
		{
			i2 = i * 2;
			p1x = pts[i2 + 2];
			p1y = pts[i2 + 3];
			p2x = pts[i2 + 4];
			p2y = pts[i2 + 5];
			if (i === last_tri)
			{
				this.quad(p0x, p0y, p1x, p1y, p2x, p2y, p2x, p2y);
			}
			else
			{
				p3x = pts[i2 + 6];
				p3y = pts[i2 + 7];
				this.quad(p0x, p0y, p1x, p1y, p2x, p2y, p3x, p3y);
			}
		}
	};
	var LAST_POINT = MAX_POINTS - 4;
	GLWrap_.prototype.point = function(x_, y_, size_, opacity_)
	{
		if (this.pointPtr >= LAST_POINT)
			this.endBatch();
		var p = this.pointPtr;			// point cursor
		var pd = this.pointData;		// point data array
		if (this.hasPointBatchTop)
		{
			this.batch[this.batchPtr - 1].indexCount++;
		}
		else
		{
			var b = this.pushBatch();
			b.type = BATCH_POINTS;
			b.startIndex = p;
			b.indexCount = 1;
			this.hasPointBatchTop = true;
			this.hasQuadBatchTop = false;
		}
		pd[p++] = x_;
		pd[p++] = y_;
		pd[p++] = size_;
		pd[p++] = opacity_;
		this.pointPtr = p;
	};
	GLWrap_.prototype.switchProgram = function (progIndex)
	{
		if (this.lastProgram === progIndex)
			return;			// no change
		var shaderProg = this.shaderPrograms[progIndex];
		if (!shaderProg)
		{
			if (this.lastProgram === 0)
				return;								// already on default shader
			progIndex = 0;
			shaderProg = this.shaderPrograms[0];
		}
		var b = this.pushBatch();
		b.type = BATCH_SETPROGRAM;
		b.startIndex = progIndex;
		this.lastProgram = progIndex;
		this.hasQuadBatchTop = false;
		this.hasPointBatchTop = false;
	};
	GLWrap_.prototype.programUsesDest = function (progIndex)
	{
		var s = this.shaderPrograms[progIndex];
		return !!(s.locDestStart || s.locDestEnd);
	};
	GLWrap_.prototype.programUsesCrossSampling = function (progIndex)
	{
		var s = this.shaderPrograms[progIndex];
		return !!(s.locDestStart || s.locDestEnd || s.crossSampling);
	};
	GLWrap_.prototype.programExtendsBox = function (progIndex)
	{
		var s = this.shaderPrograms[progIndex];
		return s.extendBoxHorizontal !== 0 || s.extendBoxVertical !== 0;
	};
	GLWrap_.prototype.getProgramBoxExtendHorizontal = function (progIndex)
	{
		return this.shaderPrograms[progIndex].extendBoxHorizontal;
	};
	GLWrap_.prototype.getProgramBoxExtendVertical = function (progIndex)
	{
		return this.shaderPrograms[progIndex].extendBoxVertical;
	};
	GLWrap_.prototype.getProgramParameterType = function (progIndex, paramIndex)
	{
		return this.shaderPrograms[progIndex].parameters[paramIndex][2];
	};
	GLWrap_.prototype.programIsAnimated = function (progIndex)
	{
		return this.shaderPrograms[progIndex].animated;
	};
	GLWrap_.prototype.setProgramParameters = function (backTex, pixelWidth, pixelHeight, destStartX, destStartY, destEndX, destEndY, layerScale, layerAngle, viewOriginLeft, viewOriginTop, params)
	{
		var i, len;
		var s = this.shaderPrograms[this.lastProgram];
		var b, mat4param, shaderParams;
		if (s.hasAnyOptionalUniforms || params.length)
		{
			b = this.pushBatch();
			b.type = BATCH_SETPROGRAMPARAMETERS;
			if (b.mat4param)
				mat4.set(this.matMV, b.mat4param);
			else
				b.mat4param = mat4.create();
			mat4param = b.mat4param;
			mat4param[0] = pixelWidth;
			mat4param[1] = pixelHeight;
			mat4param[2] = destStartX;
			mat4param[3] = destStartY;
			mat4param[4] = destEndX;
			mat4param[5] = destEndY;
			mat4param[6] = layerScale;
			mat4param[7] = layerAngle;
			mat4param[8] = viewOriginLeft;
			mat4param[9] = viewOriginTop;
			if (s.locSamplerBack)
			{
;
				b.texParam = backTex;
			}
			else
				b.texParam = null;
			if (params.length)
			{
				shaderParams = b.shaderParams;
				shaderParams.length = params.length;
				for (i = 0, len = params.length; i < len; i++)
					shaderParams[i] = params[i];
			}
			this.hasQuadBatchTop = false;
			this.hasPointBatchTop = false;
		}
	};
	GLWrap_.prototype.clear = function (r, g, b_, a)
	{
		var b = this.pushBatch();
		b.type = BATCH_CLEAR;
		b.startIndex = 0;					// clear all mode
		if (!b.mat4param)
			b.mat4param = mat4.create();
		b.mat4param[0] = r;
		b.mat4param[1] = g;
		b.mat4param[2] = b_;
		b.mat4param[3] = a;
		this.hasQuadBatchTop = false;
		this.hasPointBatchTop = false;
	};
	GLWrap_.prototype.clearRect = function (x, y, w, h)
	{
		if (w < 0 || h < 0)
			return;							// invalid clear area
		var b = this.pushBatch();
		b.type = BATCH_CLEAR;
		b.startIndex = 1;					// clear rect mode
		if (!b.mat4param)
			b.mat4param = mat4.create();
		b.mat4param[0] = x;
		b.mat4param[1] = y;
		b.mat4param[2] = w;
		b.mat4param[3] = h;
		this.hasQuadBatchTop = false;
		this.hasPointBatchTop = false;
	};
	GLWrap_.prototype.present = function ()
	{
		this.endBatch();
		this.gl.flush();
		/*
		if (debugBatch)
		{
;
			debugBatch = false;
		}
		*/
	};
	function nextHighestPowerOfTwo(x) {
		--x;
		for (var i = 1; i < 32; i <<= 1) {
			x = x | x >> i;
		}
		return x + 1;
	}
	var all_textures = [];
	var textures_by_src = {};
	var BF_RGBA8 = 0;
	var BF_RGB8 = 1;
	var BF_RGBA4 = 2;
	var BF_RGB5_A1 = 3;
	var BF_RGB565 = 4;
	GLWrap_.prototype.loadTexture = function (img, tiling, linearsampling, pixelformat, tiletype, nomip)
	{
		tiling = !!tiling;
		linearsampling = !!linearsampling;
		var tex_key = img.src + "," + tiling + "," + linearsampling + (tiling ? ("," + tiletype) : "");
		var webGL_texture = null;
		if (typeof img.src !== "undefined" && textures_by_src.hasOwnProperty(tex_key))
		{
			webGL_texture = textures_by_src[tex_key];
			webGL_texture.c2refcount++;
			return webGL_texture;
		}
		this.endBatch();
;
		var gl = this.gl;
		var isPOT = (cr.isPOT(img.width) && cr.isPOT(img.height));
		webGL_texture = gl.createTexture();
		gl.bindTexture(gl.TEXTURE_2D, webGL_texture);
		gl.pixelStorei(gl["UNPACK_PREMULTIPLY_ALPHA_WEBGL"], true);
		var internalformat = gl.RGBA;
		var format = gl.RGBA;
		var type = gl.UNSIGNED_BYTE;
		if (pixelformat && !this.isIE)
		{
			switch (pixelformat) {
			case BF_RGB8:
				internalformat = gl.RGB;
				format = gl.RGB;
				break;
			case BF_RGBA4:
				type = gl.UNSIGNED_SHORT_4_4_4_4;
				break;
			case BF_RGB5_A1:
				type = gl.UNSIGNED_SHORT_5_5_5_1;
				break;
			case BF_RGB565:
				internalformat = gl.RGB;
				format = gl.RGB;
				type = gl.UNSIGNED_SHORT_5_6_5;
				break;
			}
		}
		if (!isPOT && tiling)
		{
			var canvas = document.createElement("canvas");
			canvas.width = cr.nextHighestPowerOfTwo(img.width);
			canvas.height = cr.nextHighestPowerOfTwo(img.height);
			var ctx = canvas.getContext("2d");
			ctx["webkitImageSmoothingEnabled"] = linearsampling;
			ctx["mozImageSmoothingEnabled"] = linearsampling;
			ctx["msImageSmoothingEnabled"] = linearsampling;
			ctx["imageSmoothingEnabled"] = linearsampling;
			ctx.drawImage(img,
						  0, 0, img.width, img.height,
						  0, 0, canvas.width, canvas.height);
			gl.texImage2D(gl.TEXTURE_2D, 0, internalformat, format, type, canvas);
		}
		else
			gl.texImage2D(gl.TEXTURE_2D, 0, internalformat, format, type, img);
		if (tiling)
		{
			if (tiletype === "repeat-x")
			{
				gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);
				gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);
			}
			else if (tiletype === "repeat-y")
			{
				gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);
				gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);
			}
			else
			{
				gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);
				gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);
			}
		}
		else
		{
			gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);
			gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);
		}
		if (linearsampling)
		{
			gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);
			if (isPOT && this.enable_mipmaps && !nomip)
			{
				gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR);
				gl.generateMipmap(gl.TEXTURE_2D);
			}
			else
				gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);
		}
		else
		{
			gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);
			gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);
		}
		gl.bindTexture(gl.TEXTURE_2D, null);
		this.lastTexture0 = null;
		webGL_texture.c2width = img.width;
		webGL_texture.c2height = img.height;
		webGL_texture.c2refcount = 1;
		webGL_texture.c2texkey = tex_key;
		all_textures.push(webGL_texture);
		textures_by_src[tex_key] = webGL_texture;
		return webGL_texture;
	};
	GLWrap_.prototype.createEmptyTexture = function (w, h, linearsampling, _16bit, tiling)
	{
		this.endBatch();
		var gl = this.gl;
		if (this.isIE)
			_16bit = false;
		var webGL_texture = gl.createTexture();
		gl.bindTexture(gl.TEXTURE_2D, webGL_texture);
		gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, w, h, 0, gl.RGBA, _16bit ? gl.UNSIGNED_SHORT_4_4_4_4 : gl.UNSIGNED_BYTE, null);
		if (tiling)
		{
			gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);
			gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);
		}
		else
		{
			gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);
			gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);
		}
		gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, linearsampling ? gl.LINEAR : gl.NEAREST);
		gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, linearsampling ? gl.LINEAR : gl.NEAREST);
		gl.bindTexture(gl.TEXTURE_2D, null);
		this.lastTexture0 = null;
		webGL_texture.c2width = w;
		webGL_texture.c2height = h;
		all_textures.push(webGL_texture);
		return webGL_texture;
	};
	GLWrap_.prototype.videoToTexture = function (video_, texture_, _16bit)
	{
		this.endBatch();
		var gl = this.gl;
		if (this.isIE)
			_16bit = false;
		gl.bindTexture(gl.TEXTURE_2D, texture_);
		gl.pixelStorei(gl["UNPACK_PREMULTIPLY_ALPHA_WEBGL"], true);
		gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, _16bit ? gl.UNSIGNED_SHORT_4_4_4_4 : gl.UNSIGNED_BYTE, video_);
		gl.bindTexture(gl.TEXTURE_2D, null);
		this.lastTexture0 = null;
	};
	GLWrap_.prototype.deleteTexture = function (tex)
	{
		if (!tex)
			return;
		if (typeof tex.c2refcount !== "undefined" && tex.c2refcount > 1)
		{
			tex.c2refcount--;
			return;
		}
		this.endBatch();
		if (tex === this.lastTexture0)
		{
			this.gl.bindTexture(this.gl.TEXTURE_2D, null);
			this.lastTexture0 = null;
		}
		if (tex === this.lastTexture1)
		{
			this.gl.activeTexture(this.gl.TEXTURE1);
			this.gl.bindTexture(this.gl.TEXTURE_2D, null);
			this.gl.activeTexture(this.gl.TEXTURE0);
			this.lastTexture1 = null;
		}
		cr.arrayFindRemove(all_textures, tex);
		if (typeof tex.c2texkey !== "undefined")
			delete textures_by_src[tex.c2texkey];
		this.gl.deleteTexture(tex);
	};
	GLWrap_.prototype.estimateVRAM = function ()
	{
		var total = this.width * this.height * 4 * 2;
		var i, len, t;
		for (i = 0, len = all_textures.length; i < len; i++)
		{
			t = all_textures[i];
			total += (t.c2width * t.c2height * 4);
		}
		return total;
	};
	GLWrap_.prototype.textureCount = function ()
	{
		return all_textures.length;
	};
	GLWrap_.prototype.setRenderingToTexture = function (tex)
	{
		if (tex === this.renderToTex)
			return;
;
		var b = this.pushBatch();
		b.type = BATCH_RENDERTOTEXTURE;
		b.texParam = tex;
		this.renderToTex = tex;
		this.hasQuadBatchTop = false;
		this.hasPointBatchTop = false;
	};
	cr.GLWrap = GLWrap_;
}());
;
(function()
{
	function Runtime(canvas)
	{
		if (!canvas || (!canvas.getContext && !canvas["dc"]))
			return;
		if (canvas["c2runtime"])
			return;
		else
			canvas["c2runtime"] = this;
		var self = this;
		this.isCrosswalk = /crosswalk/i.test(navigator.userAgent) || /xwalk/i.test(navigator.userAgent) || !!(typeof window["c2isCrosswalk"] !== "undefined" && window["c2isCrosswalk"]);
		this.isPhoneGap = (!this.isCrosswalk && (typeof window["device"] !== "undefined" && (typeof window["device"]["cordova"] !== "undefined" || typeof window["device"]["phonegap"] !== "undefined"))) || (typeof window["c2isphonegap"] !== "undefined" && window["c2isphonegap"]);
		this.isDirectCanvas = !!canvas["dc"];
		this.isAppMobi = (typeof window["AppMobi"] !== "undefined" || this.isDirectCanvas);
		this.isCocoonJs = !!window["c2cocoonjs"];
		this.isEjecta = !!window["c2ejecta"];
		if (this.isCocoonJs)
		{
			CocoonJS["App"]["onSuspended"].addEventListener(function() {
				self["setSuspended"](true);
			});
			CocoonJS["App"]["onActivated"].addEventListener(function () {
				self["setSuspended"](false);
			});
		}
		if (this.isEjecta)
		{
			document.addEventListener("pagehide", function() {
				self["setSuspended"](true);
			});
			document.addEventListener("pageshow", function() {
				self["setSuspended"](false);
			});
			document.addEventListener("resize", function () {
				self["setSize"](window.innerWidth, window.innerHeight);
			});
		}
		this.isDomFree = (this.isDirectCanvas || this.isCocoonJs || this.isEjecta);
		this.isIE = /msie/i.test(navigator.userAgent) || /trident/i.test(navigator.userAgent) || /iemobile/i.test(navigator.userAgent);
		this.isTizen = /tizen/i.test(navigator.userAgent);
		this.isAndroid = /android/i.test(navigator.userAgent) && !this.isTizen && !this.isIE;		// IE mobile and Tizen masquerade as Android
		this.isiPhone = (/iphone/i.test(navigator.userAgent) || /ipod/i.test(navigator.userAgent)) && !this.isIE;	// treat ipod as an iphone; IE mobile masquerades as iPhone
		this.isiPad = /ipad/i.test(navigator.userAgent);
		this.isiOS = this.isiPhone || this.isiPad || this.isEjecta;
		this.isiPhoneiOS6 = (this.isiPhone && /os\s6/i.test(navigator.userAgent));
		this.isChrome = /chrome/i.test(navigator.userAgent) || /chromium/i.test(navigator.userAgent);
		this.isAmazonWebApp = /amazonwebappplatform/i.test(navigator.userAgent);
		this.isFirefox = /firefox/i.test(navigator.userAgent);
		this.isSafari = /safari/i.test(navigator.userAgent) && !this.isChrome && !this.isIE;		// Chrome and IE Mobile masquerade as Safari
		this.isWindows = /windows/i.test(navigator.userAgent);
		this.isNodeWebkit = (typeof window["c2nodewebkit"] !== "undefined" || /nodewebkit/i.test(navigator.userAgent));
		this.isArcade = (typeof window["is_scirra_arcade"] !== "undefined");
		this.isWindows8App = !!(typeof window["c2isWindows8"] !== "undefined" && window["c2isWindows8"]);
		this.isWindows8Capable = !!(typeof window["c2isWindows8Capable"] !== "undefined" && window["c2isWindows8Capable"]);
		this.isWindowsPhone8 = !!(typeof window["c2isWindowsPhone8"] !== "undefined" && window["c2isWindowsPhone8"]);
		this.isWindowsPhone81 = !!(typeof window["c2isWindowsPhone81"] !== "undefined" && window["c2isWindowsPhone81"]);
		this.isWinJS = (this.isWindows8App || this.isWindows8Capable || this.isWindowsPhone81);	// note not WP8.0
		this.isBlackberry10 = !!(typeof window["c2isBlackberry10"] !== "undefined" && window["c2isBlackberry10"]);
		this.isAndroidStockBrowser = (this.isAndroid && !this.isChrome && !this.isFirefox && !this.isAmazonWebApp && !this.isDomFree);
		this.devicePixelRatio = 1;
		this.isMobile = (this.isPhoneGap || this.isCrosswalk || this.isAppMobi || this.isCocoonJs || this.isAndroid || this.isiOS || this.isWindowsPhone8 || this.isWindowsPhone81 || this.isBlackberry10 || this.isTizen || this.isEjecta);
		if (!this.isMobile)
		{
			this.isMobile = /(blackberry|bb10|playbook|palm|symbian|nokia|windows\s+ce|phone|mobile|tablet|kindle|silk)/i.test(navigator.userAgent);
		}
		if (typeof cr_is_preview !== "undefined" && !this.isNodeWebkit && (window.location.search === "?nw" || /nodewebkit/i.test(navigator.userAgent)))
		{
			this.isNodeWebkit = true;
		}
		this.isDebug = (typeof cr_is_preview !== "undefined" && window.location.search.indexOf("debug") > -1);
		this.canvas = canvas;
		this.canvasdiv = document.getElementById("c2canvasdiv");
		this.gl = null;
		this.glwrap = null;
		this.ctx = null;
		this.fullscreenOldMarginCss = "";
		this.firstInFullscreen = false;
		this.oldWidth = 0;		// for restoring non-fullscreen canvas after fullscreen
		this.oldHeight = 0;
		this.canvas.oncontextmenu = function (e) { if (e.preventDefault) e.preventDefault(); return false; };
		this.canvas.onselectstart = function (e) { if (e.preventDefault) e.preventDefault(); return false; };
		if (this.isDirectCanvas)
			window["c2runtime"] = this;
		if (this.isNodeWebkit)
		{
			window["ondragover"] = function(e) { e.preventDefault(); return false; };
			window["ondrop"] = function(e) { e.preventDefault(); return false; };
			require("nw.gui")["App"]["clearCache"]();
		}
		this.width = canvas.width;
		this.height = canvas.height;
		this.draw_width = this.width;
		this.draw_height = this.height;
		this.cssWidth = this.width;
		this.cssHeight = this.height;
		this.lastWindowWidth = window.innerWidth;
		this.lastWindowHeight = window.innerHeight;
		this.redraw = true;
		this.isSuspended = false;
		if (!Date.now) {
		  Date.now = function now() {
			return +new Date();
		  };
		}
		this.plugins = [];
		this.types = {};
		this.types_by_index = [];
		this.behaviors = [];
		this.layouts = {};
		this.layouts_by_index = [];
		this.eventsheets = {};
		this.eventsheets_by_index = [];
		this.wait_for_textures = [];        // for blocking until textures loaded
		this.triggers_to_postinit = [];
		this.all_global_vars = [];
		this.all_local_vars = [];
		this.solidBehavior = null;
		this.jumpthruBehavior = null;
		this.shadowcasterBehavior = null;
		this.deathRow = new cr.ObjectSet();
		this.isInClearDeathRow = false;
		this.isInOnDestroy = 0;					// needs to support recursion so increments and decrements and is true if > 0
		this.isRunningEvents = false;
		this.createRow = [];
		this.isLoadingState = false;
		this.saveToSlot = "";
		this.loadFromSlot = "";
		this.loadFromJson = "";
		this.lastSaveJson = "";
		this.signalledContinuousPreview = false;
		this.suspendDrawing = false;		// for hiding display until continuous preview loads
		this.dt = 0;
        this.dt1 = 0;
		this.logictime = 0;			// used to calculate CPUUtilisation
		this.cpuutilisation = 0;
		this.zeroDtCount = 0;
        this.timescale = 1.0;
        this.kahanTime = new cr.KahanAdder();
		this.last_tick_time = 0;
		this.measuring_dt = true;
		this.fps = 0;
		this.last_fps_time = 0;
		this.tickcount = 0;
		this.execcount = 0;
		this.framecount = 0;        // for fps
		this.objectcount = 0;
		this.changelayout = null;
		this.destroycallbacks = [];
		this.event_stack = [];
		this.event_stack_index = -1;
		this.localvar_stack = [[]];
		this.localvar_stack_index = 0;
		this.trigger_depth = 0;		// recursion depth for triggers
		this.pushEventStack(null);
		this.loop_stack = [];
		this.loop_stack_index = -1;
		this.next_uid = 0;
		this.next_puid = 0;		// permanent unique ids
		this.layout_first_tick = true;
		this.family_count = 0;
		this.suspend_events = [];
		this.raf_id = -1;
		this.timeout_id = -1;
		this.isloading = true;
		this.loadingprogress = 0;
		this.isNodeFullscreen = false;
		this.stackLocalCount = 0;	// number of stack-based local vars for recursion
		this.audioInstance = null;
		this.halfFramerateMode = false;
		this.lastRafTime = 0;		// time of last requestAnimationFrame call
		this.ranLastRaf = false;	// false if last requestAnimationFrame was skipped for half framerate mode
		this.had_a_click = false;
		this.isInUserInputEvent = false;
		this.objects_to_pretick = new cr.ObjectSet();
        this.objects_to_tick = new cr.ObjectSet();
		this.objects_to_tick2 = new cr.ObjectSet();
		this.registered_collisions = [];
		this.temp_poly = new cr.CollisionPoly([]);
		this.temp_poly2 = new cr.CollisionPoly([]);
		this.allGroups = [];				// array of all event groups
        this.groups_by_name = {};
		this.cndsBySid = {};
		this.actsBySid = {};
		this.varsBySid = {};
		this.blocksBySid = {};
		this.running_layout = null;			// currently running layout
		this.layer_canvas = null;			// for layers "render-to-texture"
		this.layer_ctx = null;
		this.layer_tex = null;
		this.layout_tex = null;
		this.layout_canvas = null;
		this.layout_ctx = null;
		this.is_WebGL_context_lost = false;
		this.uses_background_blending = false;	// if any shader uses background blending, so entire layout renders to texture
		this.fx_tex = [null, null];
		this.fullscreen_scaling = 0;
		this.files_subfolder = "";			// path with project files
		this.objectsByUid = {};				// maps every in-use UID (as a string) to its instance
		this.loaderlogo = null;
		this.snapshotCanvas = null;
		this.snapshotData = "";
		this.load();
		this.isRetina = ((!this.isDomFree || this.isEjecta) && this.useHighDpi && !this.isAndroidStockBrowser);
		this.devicePixelRatio = (this.isRetina ? (window["devicePixelRatio"] || window["webkitDevicePixelRatio"] || window["mozDevicePixelRatio"] || window["msDevicePixelRatio"] || 1) : 1);
		this.ClearDeathRow();
		var attribs;
		var alpha_canvas = this.alphaBackground && !(this.isNodeWebkit || this.isWinJS || this.isWindowsPhone8 || this.isCrosswalk);
		if (this.fullscreen_mode > 0)
			this["setSize"](window.innerWidth, window.innerHeight, true);
		try {
			if (this.enableWebGL && (this.isCocoonJs || this.isEjecta || !this.isDomFree))
			{
				attribs = {
					"alpha": alpha_canvas,
					"depth": false,
					"antialias": false,
					"failIfMajorPerformanceCaveat": true
				};
				this.gl = (canvas.getContext("webgl", attribs) || canvas.getContext("experimental-webgl", attribs));
			}
		}
		catch (e) {
		}
		if (this.gl)
		{
;
			if (!this.isDomFree)
			{
				this.overlay_canvas = document.createElement("canvas");
				jQuery(this.overlay_canvas).appendTo(this.canvas.parentNode);
				this.overlay_canvas.oncontextmenu = function (e) { return false; };
				this.overlay_canvas.onselectstart = function (e) { return false; };
				this.overlay_canvas.width = this.cssWidth;
				this.overlay_canvas.height = this.cssHeight;
				jQuery(this.overlay_canvas).css({"width": this.cssWidth + "px",
												"height": this.cssHeight + "px"});
				this.positionOverlayCanvas();
				this.overlay_ctx = this.overlay_canvas.getContext("2d");
			}
			this.glwrap = new cr.GLWrap(this.gl, this.isMobile);
			this.glwrap.setSize(canvas.width, canvas.height);
			this.glwrap.enable_mipmaps = (this.downscalingQuality !== 0);
			this.ctx = null;
			this.canvas.addEventListener("webglcontextlost", function (ev) {
				ev.preventDefault();
				self.onContextLost();
				console.log("[Construct 2] WebGL context lost");
				window["cr_setSuspended"](true);		// stop rendering
			}, false);
			this.canvas.addEventListener("webglcontextrestored", function (ev) {
				self.glwrap.initState();
				self.glwrap.setSize(self.glwrap.width, self.glwrap.height, true);
				self.layer_tex = null;
				self.layout_tex = null;
				self.fx_tex[0] = null;
				self.fx_tex[1] = null;
				self.onContextRestored();
				self.redraw = true;
				console.log("[Construct 2] WebGL context restored");
				window["cr_setSuspended"](false);		// resume rendering
			}, false);
			var i, len, j, lenj, k, lenk, t, s, l, y;
			for (i = 0, len = this.types_by_index.length; i < len; i++)
			{
				t = this.types_by_index[i];
				for (j = 0, lenj = t.effect_types.length; j < lenj; j++)
				{
					s = t.effect_types[j];
					s.shaderindex = this.glwrap.getShaderIndex(s.id);
					this.uses_background_blending = this.uses_background_blending || this.glwrap.programUsesDest(s.shaderindex);
				}
			}
			for (i = 0, len = this.layouts_by_index.length; i < len; i++)
			{
				l = this.layouts_by_index[i];
				for (j = 0, lenj = l.effect_types.length; j < lenj; j++)
				{
					s = l.effect_types[j];
					s.shaderindex = this.glwrap.getShaderIndex(s.id);
				}
				for (j = 0, lenj = l.layers.length; j < lenj; j++)
				{
					y = l.layers[j];
					for (k = 0, lenk = y.effect_types.length; k < lenk; k++)
					{
						s = y.effect_types[k];
						s.shaderindex = this.glwrap.getShaderIndex(s.id);
						this.uses_background_blending = this.uses_background_blending || this.glwrap.programUsesDest(s.shaderindex);
					}
				}
			}
		}
		else
		{
			if (this.fullscreen_mode > 0 && this.isDirectCanvas)
			{
;
				this.canvas = null;
				document.oncontextmenu = function (e) { return false; };
				document.onselectstart = function (e) { return false; };
				this.ctx = AppMobi["canvas"]["getContext"]("2d");
				try {
					this.ctx["samplingMode"] = this.linearSampling ? "smooth" : "sharp";
					this.ctx["globalScale"] = 1;
					this.ctx["HTML5CompatibilityMode"] = true;
					this.ctx["imageSmoothingEnabled"] = this.linearSampling;
				} catch(e){}
				if (this.width !== 0 && this.height !== 0)
				{
					this.ctx.width = this.width;
					this.ctx.height = this.height;
				}
			}
			if (!this.ctx)
			{
;
				if (this.isCocoonJs)
				{
					attribs = {
						"antialias": !!this.linearSampling,
						"alpha": alpha_canvas
					};
					this.ctx = canvas.getContext("2d", attribs);
				}
				else
				{
					attribs = {
						"alpha": alpha_canvas
					};
					this.ctx = canvas.getContext("2d", attribs);
				}
				this.ctx["webkitImageSmoothingEnabled"] = this.linearSampling;
				this.ctx["mozImageSmoothingEnabled"] = this.linearSampling;
				this.ctx["msImageSmoothingEnabled"] = this.linearSampling;
				this.ctx["imageSmoothingEnabled"] = this.linearSampling;
			}
			this.overlay_canvas = null;
			this.overlay_ctx = null;
		}
		this.tickFunc = function () { self.tick(false); };
		if (window != window.top && !this.isDomFree && !this.isWinJS && !this.isWindowsPhone8)
		{
			document.addEventListener("mousedown", function () {
				window.focus();
			}, true);
			document.addEventListener("touchstart", function () {
				window.focus();
			}, true);
		}
		if (typeof cr_is_preview !== "undefined")
		{
			if (this.isCocoonJs)
				console.log("[Construct 2] In preview-over-wifi via CocoonJS mode");
			if (window.location.search.indexOf("continuous") > -1)
			{
				cr.logexport("Reloading for continuous preview");
				this.loadFromSlot = "__c2_continuouspreview";
				this.suspendDrawing = true;
			}
			if (this.pauseOnBlur && !this.isMobile)
			{
				jQuery(window).focus(function ()
				{
					self["setSuspended"](false);
				});
				jQuery(window).blur(function ()
				{
					self["setSuspended"](true);
				});
			}
		}
		var unfocusFormControlFunc = function (e) {
			if (cr.isCanvasInputEvent(e) && document["activeElement"] && document["activeElement"].blur)
			{
				document["activeElement"].blur();
			}
		}
		if (window.navigator["pointerEnabled"])
		{
			document.addEventListener("pointerdown", unfocusFormControlFunc);
		}
		else if (window.navigator["msPointerEnabled"])
		{
			document.addEventListener("MSPointerDown", unfocusFormControlFunc);
		}
		else
		{
			document.addEventListener("touchstart", unfocusFormControlFunc);
		}
		if (this.fullscreen_mode === 0 && this.isRetina && this.devicePixelRatio > 1)
		{
			this["setSize"](this.original_width, this.original_height, true);
		}
		this.tryLockOrientation();
		this.getready();	// determine things to preload
		this.go();			// run loading screen
		this.extra = {};
		cr.seal(this);
	};
	var webkitRepaintFlag = false;
	Runtime.prototype["setSize"] = function (w, h, force)
	{
		var offx = 0, offy = 0;
		var neww = 0, newh = 0, intscale = 0;
		var tryHideAddressBar = (this.isiPhoneiOS6 && this.isSafari && !navigator["standalone"] && !this.isDomFree && !this.isPhoneGap);
		if (tryHideAddressBar)
			h += 60;		// height of Safari iPhone iOS 6 address bar
		if (this.lastWindowWidth === w && this.lastWindowHeight === h && !force)
			return;
		this.lastWindowWidth = w;
		this.lastWindowHeight = h;
		var mode = this.fullscreen_mode;
		var orig_aspect, cur_aspect;
		var isfullscreen = (document["mozFullScreen"] || document["webkitIsFullScreen"] || !!document["msFullscreenElement"] || document["fullScreen"] || this.isNodeFullscreen) && !this.isPhoneGap;
		if (!isfullscreen && this.fullscreen_mode === 0 && !force)
			return;			// ignore size events when not fullscreen and not using a fullscreen-in-browser mode
		if (isfullscreen && this.fullscreen_scaling > 0)
			mode = this.fullscreen_scaling;
		var dpr = this.devicePixelRatio;
		if (mode >= 4)
		{
			orig_aspect = this.original_width / this.original_height;
			cur_aspect = w / h;
			if (cur_aspect > orig_aspect)
			{
				neww = h * orig_aspect;
				if (mode === 5)	// integer scaling
				{
					intscale = (neww * dpr) / this.original_width;
					if (intscale > 1)
						intscale = Math.floor(intscale);
					else if (intscale < 1)
						intscale = 1 / Math.ceil(1 / intscale);
					neww = this.original_width * intscale / dpr;
					newh = this.original_height * intscale / dpr;
					offx = (w - neww) / 2;
					offy = (h - newh) / 2;
					w = neww;
					h = newh;
				}
				else
				{
					offx = (w - neww) / 2;
					w = neww;
				}
			}
			else
			{
				newh = w / orig_aspect;
				if (mode === 5)	// integer scaling
				{
					intscale = (newh * dpr) / this.original_height;
					if (intscale > 1)
						intscale = Math.floor(intscale);
					else if (intscale < 1)
						intscale = 1 / Math.ceil(1 / intscale);
					neww = this.original_width * intscale / dpr;
					newh = this.original_height * intscale / dpr;
					offx = (w - neww) / 2;
					offy = (h - newh) / 2;
					w = neww;
					h = newh;
				}
				else
				{
					offy = (h - newh) / 2;
					h = newh;
				}
			}
			if (isfullscreen && !this.isNodeWebkit)
			{
				offx = 0;
				offy = 0;
			}
		}
		else if (this.isNodeWebkit && this.isNodeFullscreen && this.fullscreen_mode_set === 0)
		{
			offx = Math.floor((w - this.original_width) / 2);
			offy = Math.floor((h - this.original_height) / 2);
			w = this.original_width;
			h = this.original_height;
		}
		if (mode < 2)
			this.aspect_scale = dpr;
		if (this.isRetina && this.isiPad && dpr > 1)	// don't apply to iPad 1-2
		{
			if (w >= 1024)
				w = 1023;		// 2046 retina pixels
			if (h >= 1024)
				h = 1023;
		}
		this.cssWidth = Math.round(w);
		this.cssHeight = Math.round(h);
		this.width = Math.round(w * dpr);
		this.height = Math.round(h * dpr);
		this.redraw = true;
		if (this.wantFullscreenScalingQuality)
		{
			this.draw_width = this.width;
			this.draw_height = this.height;
			this.fullscreenScalingQuality = true;
		}
		else
		{
			if ((this.width < this.original_width && this.height < this.original_height) || mode === 1)
			{
				this.draw_width = this.width;
				this.draw_height = this.height;
				this.fullscreenScalingQuality = true;
			}
			else
			{
				this.draw_width = this.original_width;
				this.draw_height = this.original_height;
				this.fullscreenScalingQuality = false;
				/*var orig_aspect = this.original_width / this.original_height;
				var cur_aspect = this.width / this.height;
				if ((this.fullscreen_mode !== 2 && cur_aspect > orig_aspect) || (this.fullscreen_mode === 2 && cur_aspect < orig_aspect))
					this.aspect_scale = this.height / this.original_height;
				else
					this.aspect_scale = this.width / this.original_width;*/
				if (mode === 2)		// scale inner
				{
					orig_aspect = this.original_width / this.original_height;
					cur_aspect = this.lastWindowWidth / this.lastWindowHeight;
					if (cur_aspect < orig_aspect)
						this.draw_width = this.draw_height * cur_aspect;
					else if (cur_aspect > orig_aspect)
						this.draw_height = this.draw_width / cur_aspect;
				}
				else if (mode === 3)
				{
					orig_aspect = this.original_width / this.original_height;
					cur_aspect = this.lastWindowWidth / this.lastWindowHeight;
					if (cur_aspect > orig_aspect)
						this.draw_width = this.draw_height * cur_aspect;
					else if (cur_aspect < orig_aspect)
						this.draw_height = this.draw_width / cur_aspect;
				}
			}
		}
		if (this.canvasdiv && !this.isDomFree)
		{
			jQuery(this.canvasdiv).css({"width": Math.round(w) + "px",
										"height": Math.round(h) + "px",
										"margin-left": Math.floor(offx) + "px",
										"margin-top": Math.floor(offy) + "px"});
			if (typeof cr_is_preview !== "undefined")
			{
				jQuery("#borderwrap").css({"width": Math.round(w) + "px",
											"height": Math.round(h) + "px"});
			}
		}
		if (this.canvas)
		{
			this.canvas.width = Math.round(w * dpr);
			this.canvas.height = Math.round(h * dpr);
			if (this.isEjecta)
			{
				this.canvas.style.left = Math.floor(offx) + "px";
				this.canvas.style.top = Math.floor(offy) + "px";
				this.canvas.style.width = Math.round(w) + "px";
				this.canvas.style.height = Math.round(h) + "px";
			}
			else if (this.isRetina && !this.isDomFree)
			{
				jQuery(this.canvas).css({"width": Math.round(w) + "px",
										"height": Math.round(h) + "px"});
			}
		}
		if (this.overlay_canvas)
		{
			this.overlay_canvas.width = Math.round(w);
			this.overlay_canvas.height = Math.round(h);
			jQuery(this.overlay_canvas).css({"width": Math.round(w) + "px",
											"height": Math.round(h) + "px"});
		}
		if (this.glwrap)
		{
			this.glwrap.setSize(Math.round(w * dpr), Math.round(h * dpr));
		}
		if (this.isDirectCanvas && this.ctx)
		{
			this.ctx.width = Math.round(w);
			this.ctx.height = Math.round(h);
		}
		if (this.ctx)
		{
			this.ctx["webkitImageSmoothingEnabled"] = this.linearSampling;
			this.ctx["mozImageSmoothingEnabled"] = this.linearSampling;
			this.ctx["msImageSmoothingEnabled"] = this.linearSampling;
			this.ctx["imageSmoothingEnabled"] = this.linearSampling;
		}
		this.tryLockOrientation();
		if (!this.isDomFree && (tryHideAddressBar || this.isiPhone))
		{
			window.setTimeout(function () {
				window.scrollTo(0, 1);
			}, 100);
		}
	};
	Runtime.prototype.tryLockOrientation = function ()
	{
		if (!this.autoLockOrientation || this.orientations === 0)
			return;
		var orientation = "portrait";
		if (this.orientations === 2)
			orientation = "landscape";
		if (screen["lockOrientation"])
			screen["lockOrientation"](orientation);
		else if (screen["webkitLockOrientation"])
			screen["webkitLockOrientation"](orientation);
		else if (screen["mozLockOrientation"])
			screen["mozLockOrientation"](orientation);
		else if (screen["msLockOrientation"])
			screen["msLockOrientation"](orientation);
	};
	Runtime.prototype.onContextLost = function ()
	{
		this.is_WebGL_context_lost = true;
		var i, len, t;
		for (i = 0, len = this.types_by_index.length; i < len; i++)
		{
			t = this.types_by_index[i];
			if (t.onLostWebGLContext)
				t.onLostWebGLContext();
		}
	};
	Runtime.prototype.onContextRestored = function ()
	{
		this.is_WebGL_context_lost = false;
		var i, len, t;
		for (i = 0, len = this.types_by_index.length; i < len; i++)
		{
			t = this.types_by_index[i];
			if (t.onRestoreWebGLContext)
				t.onRestoreWebGLContext();
		}
	};
	Runtime.prototype.positionOverlayCanvas = function()
	{
		if (this.isDomFree)
			return;
		var isfullscreen = (document["mozFullScreen"] || document["webkitIsFullScreen"] || document["fullScreen"] || !!document["msFullscreenElement"] || this.isNodeFullscreen) && !this.isPhoneGap;
		var overlay_position = isfullscreen ? jQuery(this.canvas).offset() : jQuery(this.canvas).position();
		overlay_position.position = "absolute";
		jQuery(this.overlay_canvas).css(overlay_position);
	};
	var caf = window["cancelAnimationFrame"] ||
	  window["mozCancelAnimationFrame"]    ||
	  window["webkitCancelAnimationFrame"] ||
	  window["msCancelAnimationFrame"]     ||
	  window["oCancelAnimationFrame"];
	Runtime.prototype["setSuspended"] = function (s)
	{
		var i, len;
		if (s && !this.isSuspended)
		{
			cr.logexport("[Construct 2] Suspending");
			this.isSuspended = true;			// next tick will be last
			if (this.raf_id !== -1 && caf)		// note: CocoonJS does not implement cancelAnimationFrame
				caf(this.raf_id);
			if (this.timeout_id !== -1)
				clearTimeout(this.timeout_id);
			for (i = 0, len = this.suspend_events.length; i < len; i++)
				this.suspend_events[i](true);
		}
		else if (!s && this.isSuspended)
		{
			cr.logexport("[Construct 2] Resuming");
			this.isSuspended = false;
			this.last_tick_time = cr.performance_now();	// ensure first tick is a zero-dt one
			this.last_fps_time = cr.performance_now();	// reset FPS counter
			this.framecount = 0;
			this.logictime = 0;
			for (i = 0, len = this.suspend_events.length; i < len; i++)
				this.suspend_events[i](false);
			this.tick(false);						// kick off runtime again
		}
	};
	Runtime.prototype.addSuspendCallback = function (f)
	{
		this.suspend_events.push(f);
	};
	Runtime.prototype.load = function ()
	{
;
		var pm = cr.getProjectModel();
		this.name = pm[0];
		this.first_layout = pm[1];
		this.fullscreen_mode = pm[12];	// 0 = off, 1 = crop, 2 = scale inner, 3 = scale outer, 4 = letterbox scale, 5 = integer letterbox scale
		this.fullscreen_mode_set = pm[12];
		this.original_width = pm[10];
		this.original_height = pm[11];
		this.parallax_x_origin = this.original_width / 2;
		this.parallax_y_origin = this.original_height / 2;
		if (this.isDomFree && !this.isEjecta && (pm[12] >= 4 || pm[12] === 0))
		{
			cr.logexport("[Construct 2] Letterbox scale fullscreen modes are not supported on this platform - falling back to 'Scale outer'");
			this.fullscreen_mode = 3;
			this.fullscreen_mode_set = 3;
		}
		this.uses_loader_layout = pm[18];
		this.loaderstyle = pm[19];
		if (this.loaderstyle === 0)
		{
			this.loaderlogo = new Image();
			this.loaderlogo.src = "loading-logo.png";
		}
		this.next_uid = pm[21];
		this.system = new cr.system_object(this);
		var i, len, j, lenj, k, lenk, idstr, m, b, t, f;
		var plugin, plugin_ctor;
		for (i = 0, len = pm[2].length; i < len; i++)
		{
			m = pm[2][i];
;
			cr.add_common_aces(m);
			plugin = new m[0](this);
			plugin.singleglobal = m[1];
			plugin.is_world = m[2];
			plugin.must_predraw = m[9];
			if (plugin.onCreate)
				plugin.onCreate();  // opportunity to override default ACEs
			cr.seal(plugin);
			this.plugins.push(plugin);
		}
		pm = cr.getProjectModel();
		for (i = 0, len = pm[3].length; i < len; i++)
		{
			m = pm[3][i];
			plugin_ctor = m[1];
;
			plugin = null;
			for (j = 0, lenj = this.plugins.length; j < lenj; j++)
			{
				if (this.plugins[j] instanceof plugin_ctor)
				{
					plugin = this.plugins[j];
					break;
				}
			}
;
;
			var type_inst = new plugin.Type(plugin);
;
			type_inst.name = m[0];
			type_inst.is_family = m[2];
			type_inst.instvar_sids = m[3].slice(0);
			type_inst.vars_count = m[3].length;
			type_inst.behs_count = m[4];
			type_inst.fx_count = m[5];
			type_inst.sid = m[11];
			if (type_inst.is_family)
			{
				type_inst.members = [];				// types in this family
				type_inst.family_index = this.family_count++;
				type_inst.families = null;
			}
			else
			{
				type_inst.members = null;
				type_inst.family_index = -1;
				type_inst.families = [];			// families this type belongs to
			}
			type_inst.family_var_map = null;
			type_inst.family_beh_map = null;
			type_inst.family_fx_map = null;
			type_inst.is_contained = false;
			type_inst.container = null;
			if (m[6])
			{
				type_inst.texture_file = m[6][0];
				type_inst.texture_filesize = m[6][1];
				type_inst.texture_pixelformat = m[6][2];
			}
			else
			{
				type_inst.texture_file = null;
				type_inst.texture_filesize = 0;
				type_inst.texture_pixelformat = 0;		// rgba8
			}
			if (m[7])
			{
				type_inst.animations = m[7];
			}
			else
			{
				type_inst.animations = null;
			}
			type_inst.index = i;                                // save index in to types array in type
			type_inst.instances = [];                           // all instances of this type
			type_inst.deadCache = [];							// destroyed instances to recycle next create
			type_inst.solstack = [new cr.selection(type_inst)]; // initialise SOL stack with one empty SOL
			type_inst.cur_sol = 0;
			type_inst.default_instance = null;
			type_inst.default_layerindex = 0;
			type_inst.stale_iids = true;
			type_inst.updateIIDs = cr.type_updateIIDs;
			type_inst.getFirstPicked = cr.type_getFirstPicked;
			type_inst.getPairedInstance = cr.type_getPairedInstance;
			type_inst.getCurrentSol = cr.type_getCurrentSol;
			type_inst.pushCleanSol = cr.type_pushCleanSol;
			type_inst.pushCopySol = cr.type_pushCopySol;
			type_inst.popSol = cr.type_popSol;
			type_inst.getBehaviorByName = cr.type_getBehaviorByName;
			type_inst.getBehaviorIndexByName = cr.type_getBehaviorIndexByName;
			type_inst.getEffectIndexByName = cr.type_getEffectIndexByName;
			type_inst.applySolToContainer = cr.type_applySolToContainer;
			type_inst.getInstanceByIID = cr.type_getInstanceByIID;
			type_inst.collision_grid = new cr.SparseGrid(this.original_width, this.original_height);
			type_inst.any_cell_changed = true;
			type_inst.any_instance_parallaxed = false;
			type_inst.extra = {};
			type_inst.toString = cr.type_toString;
			type_inst.behaviors = [];
			for (j = 0, lenj = m[8].length; j < lenj; j++)
			{
				b = m[8][j];
				var behavior_ctor = b[1];
				var behavior_plugin = null;
				for (k = 0, lenk = this.behaviors.length; k < lenk; k++)
				{
					if (this.behaviors[k] instanceof behavior_ctor)
					{
						behavior_plugin = this.behaviors[k];
						break;
					}
				}
				if (!behavior_plugin)
				{
					behavior_plugin = new behavior_ctor(this);
					behavior_plugin.my_types = [];						// types using this behavior
					behavior_plugin.my_instances = new cr.ObjectSet(); 	// instances of this behavior
					if (behavior_plugin.onCreate)
						behavior_plugin.onCreate();
					cr.seal(behavior_plugin);
					this.behaviors.push(behavior_plugin);
					if (cr.behaviors.solid && behavior_plugin instanceof cr.behaviors.solid)
						this.solidBehavior = behavior_plugin;
					if (cr.behaviors.jumpthru && behavior_plugin instanceof cr.behaviors.jumpthru)
						this.jumpthruBehavior = behavior_plugin;
					if (cr.behaviors.shadowcaster && behavior_plugin instanceof cr.behaviors.shadowcaster)
						this.shadowcasterBehavior = behavior_plugin;
				}
				if (behavior_plugin.my_types.indexOf(type_inst) === -1)
					behavior_plugin.my_types.push(type_inst);
				var behavior_type = new behavior_plugin.Type(behavior_plugin, type_inst);
				behavior_type.name = b[0];
				behavior_type.sid = b[2];
				behavior_type.onCreate();
				cr.seal(behavior_type);
				type_inst.behaviors.push(behavior_type);
			}
			type_inst.global = m[9];
			type_inst.isOnLoaderLayout = m[10];
			type_inst.effect_types = [];
			for (j = 0, lenj = m[12].length; j < lenj; j++)
			{
				type_inst.effect_types.push({
					id: m[12][j][0],
					name: m[12][j][1],
					shaderindex: -1,
					active: true,
					index: j
				});
			}
			type_inst.tile_poly_data = m[13];
			if (!this.uses_loader_layout || type_inst.is_family || type_inst.isOnLoaderLayout || !plugin.is_world)
			{
				type_inst.onCreate();
				cr.seal(type_inst);
			}
			if (type_inst.name)
				this.types[type_inst.name] = type_inst;
			this.types_by_index.push(type_inst);
			if (plugin.singleglobal)
			{
				var instance = new plugin.Instance(type_inst);
				instance.uid = this.next_uid++;
				instance.puid = this.next_puid++;
				instance.iid = 0;
				instance.get_iid = cr.inst_get_iid;
				instance.toString = cr.inst_toString;
				instance.properties = m[14];
				instance.onCreate();
				cr.seal(instance);
				type_inst.instances.push(instance);
				this.objectsByUid[instance.uid.toString()] = instance;
			}
		}
		for (i = 0, len = pm[4].length; i < len; i++)
		{
			var familydata = pm[4][i];
			var familytype = this.types_by_index[familydata[0]];
			var familymember;
			for (j = 1, lenj = familydata.length; j < lenj; j++)
			{
				familymember = this.types_by_index[familydata[j]];
				familymember.families.push(familytype);
				familytype.members.push(familymember);
			}
		}
		for (i = 0, len = pm[26].length; i < len; i++)
		{
			var containerdata = pm[26][i];
			var containertypes = [];
			for (j = 0, lenj = containerdata.length; j < lenj; j++)
				containertypes.push(this.types_by_index[containerdata[j]]);
			for (j = 0, lenj = containertypes.length; j < lenj; j++)
			{
				containertypes[j].is_contained = true;
				containertypes[j].container = containertypes;
			}
		}
		if (this.family_count > 0)
		{
			for (i = 0, len = this.types_by_index.length; i < len; i++)
			{
				t = this.types_by_index[i];
				if (t.is_family || !t.families.length)
					continue;
				t.family_var_map = new Array(this.family_count);
				t.family_beh_map = new Array(this.family_count);
				t.family_fx_map = new Array(this.family_count);
				var all_fx = [];
				var varsum = 0;
				var behsum = 0;
				var fxsum = 0;
				for (j = 0, lenj = t.families.length; j < lenj; j++)
				{
					f = t.families[j];
					t.family_var_map[f.family_index] = varsum;
					varsum += f.vars_count;
					t.family_beh_map[f.family_index] = behsum;
					behsum += f.behs_count;
					t.family_fx_map[f.family_index] = fxsum;
					fxsum += f.fx_count;
					for (k = 0, lenk = f.effect_types.length; k < lenk; k++)
						all_fx.push(cr.shallowCopy({}, f.effect_types[k]));
				}
				t.effect_types = all_fx.concat(t.effect_types);
				for (j = 0, lenj = t.effect_types.length; j < lenj; j++)
					t.effect_types[j].index = j;
			}
		}
		for (i = 0, len = pm[5].length; i < len; i++)
		{
			m = pm[5][i];
			var layout = new cr.layout(this, m);
			cr.seal(layout);
			this.layouts[layout.name] = layout;
			this.layouts_by_index.push(layout);
		}
		for (i = 0, len = pm[6].length; i < len; i++)
		{
			m = pm[6][i];
			var sheet = new cr.eventsheet(this, m);
			cr.seal(sheet);
			this.eventsheets[sheet.name] = sheet;
			this.eventsheets_by_index.push(sheet);
		}
		for (i = 0, len = this.eventsheets_by_index.length; i < len; i++)
			this.eventsheets_by_index[i].postInit();
		for (i = 0, len = this.eventsheets_by_index.length; i < len; i++)
			this.eventsheets_by_index[i].updateDeepIncludes();
		for (i = 0, len = this.triggers_to_postinit.length; i < len; i++)
			this.triggers_to_postinit[i].postInit();
		this.triggers_to_postinit.length = 0;
		this.audio_to_preload = pm[7];
		this.files_subfolder = pm[8];
		this.pixel_rounding = pm[9];
		this.aspect_scale = 1.0;
		this.enableWebGL = pm[13];
		this.linearSampling = pm[14];
		this.alphaBackground = pm[15];
		this.versionstr = pm[16];
		this.useHighDpi = pm[17];
		this.orientations = pm[20];		// 0 = any, 1 = portrait, 2 = landscape
		this.autoLockOrientation = (this.orientations > 0);
		this.pauseOnBlur = pm[22];
		this.wantFullscreenScalingQuality = pm[23];		// false = low quality, true = high quality
		this.fullscreenScalingQuality = this.wantFullscreenScalingQuality;
		this.downscalingQuality = pm[24];	// 0 = low (mips off), 1 = medium (mips on, dense spritesheet), 2 = high (mips on, sparse spritesheet)
		this.preloadSounds = pm[25];		// 0 = no, 1 = yes
		this.start_time = Date.now();
	};
	var anyImageHadError = false;
	Runtime.prototype.waitForImageLoad = function (img_)
	{
		img_.onerror = function (e)
		{
			img_.c2error = true;
			anyImageHadError = true;
			if (console && console.error)
				console.error("Error loading image '" + img_.src + "': ", e);
		};
		this.wait_for_textures.push(img_);
	};
	Runtime.prototype.findWaitingTexture = function (src_)
	{
		var i, len;
		for (i = 0, len = this.wait_for_textures.length; i < len; i++)
		{
			if (this.wait_for_textures[i].cr_src === src_)
				return this.wait_for_textures[i];
		}
		return null;
	};
	var audio_preload_totalsize = 0;
	var audio_preload_started = false;
	Runtime.prototype.getready = function ()
	{
		if (!this.audioInstance)
			return;
		audio_preload_totalsize = this.audioInstance.setPreloadList(this.audio_to_preload);
	};
	Runtime.prototype.areAllTexturesAndSoundsLoaded = function ()
	{
		var totalsize = audio_preload_totalsize;
		var completedsize = 0;
		var audiocompletedsize = 0;
		var ret = true;
		var i, len, img;
		for (i = 0, len = this.wait_for_textures.length; i < len; i++)
		{
			img = this.wait_for_textures[i];
			var filesize = img.cr_filesize;
			if (!filesize || filesize <= 0)
				filesize = 50000;
			totalsize += filesize;
			if ((img.complete || img["loaded"]) && !img.c2error)
				completedsize += filesize;
			else
				ret = false;    // not all textures loaded
		}
		if (ret && this.preloadSounds && this.audioInstance)
		{
			if (!audio_preload_started)
			{
				this.audioInstance.startPreloads();
				audio_preload_started = true;
			}
			audiocompletedsize = this.audioInstance.getPreloadedSize();
			completedsize += audiocompletedsize;
			if (audiocompletedsize < audio_preload_totalsize)
				ret = false;		// not done yet
		}
		if (totalsize == 0)
			this.progress = 0;
		else
			this.progress = (completedsize / totalsize);
		return ret;
	};
	Runtime.prototype.go = function ()
	{
		if (!this.ctx && !this.glwrap)
			return;
		var ctx = this.ctx || this.overlay_ctx;
		if (this.overlay_canvas)
			this.positionOverlayCanvas();
		this.progress = 0;
		this.last_progress = -1;
		if (this.areAllTexturesAndSoundsLoaded())
			this.go_loading_finished();
		else
		{
			var ms_elapsed = Date.now() - this.start_time;
			if (ctx)
			{
				var overlay_width = this.width;
				var overlay_height = this.height;
				var multiplier = this.devicePixelRatio;
				if (this.overlay_canvas)
				{
					overlay_width = this.cssWidth;
					overlay_height = this.cssHeight;
					multiplier = 1;
				}
				if (this.loaderstyle !== 3 && (this.isCocoonJs || (ms_elapsed >= 500 && this.last_progress != this.progress)))
				{
					ctx.clearRect(0, 0, overlay_width, overlay_height);
					var mx = overlay_width / 2;
					var my = overlay_height / 2;
					var haslogo = (this.loaderstyle === 0 && this.loaderlogo.complete);
					var hlw = 40 * multiplier;
					var hlh = 0;
					var logowidth = 80 * multiplier;
					var logoheight;
					if (haslogo)
					{
						logowidth = this.loaderlogo.width * multiplier;
						logoheight = this.loaderlogo.height * multiplier;
						hlw = logowidth / 2;
						hlh = logoheight / 2;
						ctx.drawImage(this.loaderlogo, cr.floor(mx - hlw), cr.floor(my - hlh), logowidth, logoheight);
					}
					if (this.loaderstyle <= 1)
					{
						my += hlh + (haslogo ? 12 * multiplier : 0);
						mx -= hlw;
						mx = cr.floor(mx) + 0.5;
						my = cr.floor(my) + 0.5;
						ctx.fillStyle = anyImageHadError ? "red" : "DodgerBlue";
						ctx.fillRect(mx, my, Math.floor(logowidth * this.progress), 6 * multiplier);
						ctx.strokeStyle = "black";
						ctx.strokeRect(mx, my, logowidth, 6 * multiplier);
						ctx.strokeStyle = "white";
						ctx.strokeRect(mx - 1 * multiplier, my - 1 * multiplier, logowidth + 2 * multiplier, 8 * multiplier);
					}
					else if (this.loaderstyle === 2)
					{
						ctx.font = (this.isEjecta ? "12pt ArialMT" : "12pt Arial");
						ctx.fillStyle = anyImageHadError ? "#f00" : "#999";
						ctx.textBaseLine = "middle";
						var percent_text = Math.round(this.progress * 100) + "%";
						var text_dim = ctx.measureText ? ctx.measureText(percent_text) : null;
						var text_width = text_dim ? text_dim.width : 0;
						ctx.fillText(percent_text, mx - (text_width / 2), my);
					}
				}
				this.last_progress = this.progress;
			}
			setTimeout((function (self) { return function () { self.go(); }; })(this), (this.isCocoonJs ? 10 : 100));
		}
	};
	Runtime.prototype.go_loading_finished = function ()
	{
		if (this.overlay_canvas)
		{
			this.canvas.parentNode.removeChild(this.overlay_canvas);
			this.overlay_ctx = null;
			this.overlay_canvas = null;
		}
		this.start_time = Date.now();
		this.last_fps_time = cr.performance_now();       // for counting framerate
		var i, len, t;
		if (this.uses_loader_layout)
		{
			for (i = 0, len = this.types_by_index.length; i < len; i++)
			{
				t = this.types_by_index[i];
				if (!t.is_family && !t.isOnLoaderLayout && t.plugin.is_world)
				{
					t.onCreate();
					cr.seal(t);
				}
			}
		}
		else
			this.isloading = false;
		for (i = 0, len = this.layouts_by_index.length; i < len; i++)
		{
			this.layouts_by_index[i].createGlobalNonWorlds();
		}
		if (this.fullscreen_mode >= 2)
		{
			var orig_aspect = this.original_width / this.original_height;
			var cur_aspect = this.width / this.height;
			if ((this.fullscreen_mode !== 2 && cur_aspect > orig_aspect) || (this.fullscreen_mode === 2 && cur_aspect < orig_aspect))
				this.aspect_scale = this.height / this.original_height;
			else
				this.aspect_scale = this.width / this.original_width;
		}
		if (this.first_layout)
			this.layouts[this.first_layout].startRunning();
		else
			this.layouts_by_index[0].startRunning();
;
		if (!this.uses_loader_layout)
		{
			this.loadingprogress = 1;
			this.trigger(cr.system_object.prototype.cnds.OnLoadFinished, null);
		}
		if (navigator["splashscreen"] && navigator["splashscreen"]["hide"])
			navigator["splashscreen"]["hide"]();
		for (i = 0, len = this.types_by_index.length; i < len; i++)
		{
			t = this.types_by_index[i];
			if (t.onAppBegin)
				t.onAppBegin();
		}
		this.tick(false);
		if (this.isDirectCanvas)
			AppMobi["webview"]["execute"]("onGameReady();");
	};
	var raf = window["requestAnimationFrame"] ||
	  window["mozRequestAnimationFrame"]    ||
	  window["webkitRequestAnimationFrame"] ||
	  window["msRequestAnimationFrame"]     ||
	  window["oRequestAnimationFrame"];
	Runtime.prototype.tick = function (background_wake)
	{
		if (!this.running_layout)
			return;
		var logic_start = cr.performance_now();
		if (this.halfFramerateMode && this.ranLastRaf)
		{
			if (logic_start - this.lastRafTime < 29)
			{
				this.ranLastRaf = false;
				this.lastRafTime = logic_start;
				if (raf)
					this.raf_id = raf(this.tickFunc, this.canvas);
				else	// no idea if this works without raf/hi res timers but let's hope for the best
					this.timeout_id = setTimeout(this.tickFunc, this.isMobile ? 1 : 16);
				return;		// skipped this frame
			}
		}
		this.ranLastRaf = true;
		this.lastRafTime = logic_start;
		var fsmode = this.fullscreen_mode;
		var isfullscreen = (document["mozFullScreen"] || document["webkitIsFullScreen"] || document["fullScreen"] || !!document["msFullscreenElement"]) && !this.isPhoneGap;
		if ((isfullscreen || this.isNodeFullscreen) && this.fullscreen_scaling > 0)
			fsmode = this.fullscreen_scaling;
		if (fsmode > 0 && (!this.isiOS || window.self !== window.top))
		{
			var curwidth = window.innerWidth;
			var curheight = window.innerHeight;
			if (this.lastWindowWidth !== curwidth || this.lastWindowHeight !== curheight)
			{
					this["setSize"](curwidth, curheight);
			}
		}
		if (!this.isDomFree)
		{
			if (isfullscreen)
			{
				if (!this.firstInFullscreen)
				{
					this.fullscreenOldMarginCss = jQuery(this.canvas).css("margin") || "0";
					this.firstInFullscreen = true;
				}
				if (!this.isChrome && !this.isNodeWebkit)
				{
					jQuery(this.canvas).css({
						"margin-left": "" + Math.floor((screen.width - (this.width / this.devicePixelRatio)) / 2) + "px",
						"margin-top": "" + Math.floor((screen.height - (this.height / this.devicePixelRatio)) / 2) + "px"
					});
				}
			}
			else
			{
				if (this.firstInFullscreen)
				{
					if (!this.isChrome && !this.isNodeWebkit)
					{
						jQuery(this.canvas).css("margin", this.fullscreenOldMarginCss);
					}
					this.fullscreenOldMarginCss = "";
					this.firstInFullscreen = false;
					if (this.fullscreen_mode === 0)
					{
						this["setSize"](Math.round(this.oldWidth / this.devicePixelRatio), Math.round(this.oldHeight / this.devicePixelRatio), true);
					}
				}
				else
				{
					this.oldWidth = this.width;
					this.oldHeight = this.height;
				}
			}
		}
		if (this.isloading)
		{
			var done = this.areAllTexturesAndSoundsLoaded();		// updates this.progress
			this.loadingprogress = this.progress;
			if (done)
			{
				this.isloading = false;
				this.progress = 1;
				this.trigger(cr.system_object.prototype.cnds.OnLoadFinished, null);
			}
		}
		this.logic();
		if ((this.redraw || this.isCocoonJs) && !this.is_WebGL_context_lost && !this.suspendDrawing && !background_wake)
		{
			this.redraw = false;
			if (this.glwrap)
				this.drawGL();
			else
				this.draw();
			if (this.snapshotCanvas)
			{
				if (this.canvas && this.canvas.toDataURL)
				{
					this.snapshotData = this.canvas.toDataURL(this.snapshotCanvas[0], this.snapshotCanvas[1]);
					this.trigger(cr.system_object.prototype.cnds.OnCanvasSnapshot, null);
				}
				this.snapshotCanvas = null;
			}
		}
		if (!this.hit_breakpoint)
		{
			this.tickcount++;
			this.execcount++;
			this.framecount++;
		}
		this.logictime += cr.performance_now() - logic_start;
		if (this.isSuspended || background_wake)
			return;
		if (raf)
			this.raf_id = raf(this.tickFunc, this.canvas);
		else
		{
			this.timeout_id = setTimeout(this.tickFunc, this.isMobile ? 1 : 16);
		}
	};
	Runtime.prototype.logic = function ()
	{
		var i, leni, j, lenj, k, lenk, type, inst, binst;
		var cur_time = cr.performance_now();
		if (cur_time - this.last_fps_time >= 1000)  // every 1 second
		{
			this.last_fps_time += 1000;
			this.fps = this.framecount;
			this.framecount = 0;
			this.cpuutilisation = this.logictime;
			this.logictime = 0;
		}
		if (this.measuring_dt)
		{
			if (this.last_tick_time !== 0)
			{
				var ms_diff = cur_time - this.last_tick_time;
				if (ms_diff === 0 && !this.isDebug)
				{
					this.zeroDtCount++;
					if (this.zeroDtCout >= 10)
						this.measuring_dt = false;
					this.dt1 = 1.0 / 60.0;            // 60fps assumed (0.01666...)
				}
				else
				{
					this.dt1 = ms_diff / 1000.0; // dt measured in seconds
					if (this.dt1 > 0.5)
						this.dt1 = 0;
					else if (this.dt1 > 0.1)
						this.dt1 = 0.1;
				}
			}
			this.last_tick_time = cur_time;
		}
        this.dt = this.dt1 * this.timescale;
        this.kahanTime.add(this.dt);
		var isfullscreen = (document["mozFullScreen"] || document["webkitIsFullScreen"] || document["fullScreen"] || !!document["msFullscreenElement"] || this.isNodeFullscreen) && !this.isPhoneGap;
		if (this.fullscreen_mode >= 2 /* scale */ || (isfullscreen && this.fullscreen_scaling > 0))
		{
			var orig_aspect = this.original_width / this.original_height;
			var cur_aspect = this.width / this.height;
			var mode = this.fullscreen_mode;
			if (isfullscreen && this.fullscreen_scaling > 0)
				mode = this.fullscreen_scaling;
			if ((mode !== 2 && cur_aspect > orig_aspect) || (mode === 2 && cur_aspect < orig_aspect))
			{
				this.aspect_scale = this.height / this.original_height;
			}
			else
			{
				this.aspect_scale = this.width / this.original_width;
			}
			if (this.running_layout)
			{
				this.running_layout.scrollToX(this.running_layout.scrollX);
				this.running_layout.scrollToY(this.running_layout.scrollY);
			}
		}
		else
			this.aspect_scale = (this.isRetina ? this.devicePixelRatio : 1);
		this.ClearDeathRow();
		this.isInOnDestroy++;
		this.system.runWaits();		// prevent instance list changing
		this.isInOnDestroy--;
		this.ClearDeathRow();		// allow instance list changing
		this.isInOnDestroy++;
        var tickarr = this.objects_to_pretick.valuesRef();
        for (i = 0, leni = tickarr.length; i < leni; i++)
            tickarr[i].pretick();
		for (i = 0, leni = this.types_by_index.length; i < leni; i++)
		{
			type = this.types_by_index[i];
			if (type.is_family || (!type.behaviors.length && !type.families.length))
				continue;
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
			{
				inst = type.instances[j];
				for (k = 0, lenk = inst.behavior_insts.length; k < lenk; k++)
				{
					inst.behavior_insts[k].tick();
				}
			}
		}
		for (i = 0, leni = this.types_by_index.length; i < leni; i++)
		{
			type = this.types_by_index[i];
			if (type.is_family || (!type.behaviors.length && !type.families.length))
				continue;	// type doesn't have any behaviors
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
			{
				inst = type.instances[j];
				for (k = 0, lenk = inst.behavior_insts.length; k < lenk; k++)
				{
					binst = inst.behavior_insts[k];
					if (binst.posttick)
						binst.posttick();
				}
			}
		}
        tickarr = this.objects_to_tick.valuesRef();
        for (i = 0, leni = tickarr.length; i < leni; i++)
            tickarr[i].tick();
		this.isInOnDestroy--;		// end preventing instance lists from being changed
		this.handleSaveLoad();		// save/load now if queued
		i = 0;
		while (this.changelayout && i++ < 10)
		{
			this.doChangeLayout(this.changelayout);
		}
        for (i = 0, leni = this.eventsheets_by_index.length; i < leni; i++)
            this.eventsheets_by_index[i].hasRun = false;
		if (this.running_layout.event_sheet)
			this.running_layout.event_sheet.run();
		this.registered_collisions.length = 0;
		this.layout_first_tick = false;
		this.isInOnDestroy++;		// prevent instance lists from being changed
		for (i = 0, leni = this.types_by_index.length; i < leni; i++)
		{
			type = this.types_by_index[i];
			if (type.is_family || (!type.behaviors.length && !type.families.length))
				continue;	// type doesn't have any behaviors
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
			{
				var inst = type.instances[j];
				for (k = 0, lenk = inst.behavior_insts.length; k < lenk; k++)
				{
					binst = inst.behavior_insts[k];
					if (binst.tick2)
						binst.tick2();
				}
			}
		}
        tickarr = this.objects_to_tick2.valuesRef();
        for (i = 0, leni = tickarr.length; i < leni; i++)
            tickarr[i].tick2();
		this.isInOnDestroy--;		// end preventing instance lists from being changed
	};
	Runtime.prototype.doChangeLayout = function (changeToLayout)
	{
;
		var prev_layout = this.running_layout;
		this.running_layout.stopRunning();
		var i, len, j, lenj, k, lenk, type, inst, binst;
		if (this.glwrap)
		{
			for (i = 0, len = this.types_by_index.length; i < len; i++)
			{
				type = this.types_by_index[i];
				if (type.is_family)
					continue;
				if (type.unloadTextures && (!type.global || type.instances.length === 0) && changeToLayout.initial_types.indexOf(type) === -1)
				{
					type.unloadTextures();
				}
			}
		}
		if (prev_layout == changeToLayout)
			this.system.waits.length = 0;
		changeToLayout.startRunning();
		for (i = 0, len = this.types_by_index.length; i < len; i++)
		{
			type = this.types_by_index[i];
			if (!type.global && !type.plugin.singleglobal)
				continue;
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
			{
				inst = type.instances[j];
				if (inst.onLayoutChange)
					inst.onLayoutChange();
				if (inst.behavior_insts)
				{
					for (k = 0, lenk = inst.behavior_insts.length; k < lenk; k++)
					{
						binst = inst.behavior_insts[k];
						if (binst.onLayoutChange)
							binst.onLayoutChange();
					}
				}
			}
		}
		this.redraw = true;
		this.layout_first_tick = true;
		this.ClearDeathRow();
	};
	Runtime.prototype.pretickMe = function (inst)
    {
        this.objects_to_pretick.add(inst);
    };
	Runtime.prototype.unpretickMe = function (inst)
	{
		this.objects_to_pretick.remove(inst);
	};
    Runtime.prototype.tickMe = function (inst)
    {
        this.objects_to_tick.add(inst);
    };
	Runtime.prototype.untickMe = function (inst)
	{
		this.objects_to_tick.remove(inst);
	};
	Runtime.prototype.tick2Me = function (inst)
    {
        this.objects_to_tick2.add(inst);
    };
	Runtime.prototype.untick2Me = function (inst)
	{
		this.objects_to_tick2.remove(inst);
	};
    Runtime.prototype.getDt = function (inst)
    {
        if (!inst || inst.my_timescale === -1.0)
            return this.dt;
        return this.dt1 * inst.my_timescale;
    };
	Runtime.prototype.draw = function ()
	{
		this.running_layout.draw(this.ctx);
		if (this.isDirectCanvas)
			this.ctx["present"]();
	};
	Runtime.prototype.drawGL = function ()
	{
		this.running_layout.drawGL(this.glwrap);
		this.glwrap.present();
	};
	Runtime.prototype.addDestroyCallback = function (f)
	{
		if (f)
			this.destroycallbacks.push(f);
	};
	Runtime.prototype.removeDestroyCallback = function (f)
	{
		cr.arrayFindRemove(this.destroycallbacks, f);
	};
	Runtime.prototype.getObjectByUID = function (uid_)
	{
;
		var uidstr = uid_.toString();
		if (this.objectsByUid.hasOwnProperty(uidstr))
			return this.objectsByUid[uidstr];
		else
			return null;
	};
	Runtime.prototype.DestroyInstance = function (inst)
	{
		var i, len;
		if (!this.deathRow.contains(inst))
		{
			this.deathRow.add(inst);
			if (inst.is_contained)
			{
				for (i = 0, len = inst.siblings.length; i < len; i++)
				{
					this.DestroyInstance(inst.siblings[i]);
				}
			}
			if (this.isInClearDeathRow)
				this.deathRow.values_cache.push(inst);
			this.isInOnDestroy++;		// support recursion
			this.trigger(Object.getPrototypeOf(inst.type.plugin).cnds.OnDestroyed, inst);
			this.isInOnDestroy--;
		}
	};
	Runtime.prototype.ClearDeathRow = function ()
	{
		var inst, index, type, instances, binst;
		var i, j, k, leni, lenj, lenk;
		var w, f;
		this.isInClearDeathRow = true;
		for (i = 0, leni = this.createRow.length; i < leni; i++)
		{
			inst = this.createRow[i];
			type = inst.type;
			type.instances.push(inst);
			for (j = 0, lenj = type.families.length; j < lenj; j++)
			{
				type.families[j].instances.push(inst);
				type.families[j].stale_iids = true;
			}
		}
		this.createRow.length = 0;
		var arr = this.deathRow.valuesRef();	// get array of items from set
		for (i = 0; i < arr.length; i++)		// check array length every time in case it changes
		{
			inst = arr[i];
			type = inst.type;
			instances = type.instances;
			for (j = 0, lenj = this.destroycallbacks.length; j < lenj; j++)
				this.destroycallbacks[j](inst);
			cr.arrayFindRemove(instances, inst);
			if (instances.length === 0)
				type.any_instance_parallaxed = false;
			if (inst.collcells)
			{
				type.collision_grid.update(inst, inst.collcells, null);
			}
			if (inst.layer)
			{
				cr.arrayRemove(inst.layer.instances, inst.get_zindex());
				inst.layer.zindices_stale = true;
			}
			for (j = 0, lenj = type.families.length; j < lenj; j++)
			{
				cr.arrayFindRemove(type.families[j].instances, inst);
				type.families[j].stale_iids = true;
			}
			if (inst.behavior_insts)
			{
				for (j = 0, lenj = inst.behavior_insts.length; j < lenj; j++)
				{
					binst = inst.behavior_insts[j];
					if (binst.onDestroy)
						binst.onDestroy();
					binst.behavior.my_instances.remove(inst);
				}
			}
			this.objects_to_pretick.remove(inst);
            this.objects_to_tick.remove(inst);
			this.objects_to_tick2.remove(inst);
			for (j = 0, lenj = this.system.waits.length; j < lenj; j++)
			{
				w = this.system.waits[j];
				if (w.sols.hasOwnProperty(type.index))
					cr.arrayFindRemove(w.sols[type.index].insts, inst);
				if (!type.is_family)
				{
					for (k = 0, lenk = type.families.length; k < lenk; k++)
					{
						f = type.families[k];
						if (w.sols.hasOwnProperty(f.index))
							cr.arrayFindRemove(w.sols[f.index].insts, inst);
					}
				}
			}
			if (inst.onDestroy)
				inst.onDestroy();
			if (this.objectsByUid.hasOwnProperty(inst.uid.toString()))
				delete this.objectsByUid[inst.uid.toString()];
			this.objectcount--;
			if (type.deadCache.length < 64)
				type.deadCache.push(inst);
			type.stale_iids = true;
		}
		if (!this.deathRow.isEmpty())
			this.redraw = true;
		this.deathRow.clear();
		this.isInClearDeathRow = false;
	};
	Runtime.prototype.createInstance = function (type, layer, sx, sy)
	{
		if (type.is_family)
		{
			var i = cr.floor(Math.random() * type.members.length);
			return this.createInstance(type.members[i], layer, sx, sy);
		}
		if (!type.default_instance)
		{
			return null;
		}
		return this.createInstanceFromInit(type.default_instance, layer, false, sx, sy, false);
	};
	var all_behaviors = [];
	Runtime.prototype.createInstanceFromInit = function (initial_inst, layer, is_startup_instance, sx, sy, skip_siblings)
	{
		var i, len, j, lenj, p, effect_fallback, x, y;
		if (!initial_inst)
			return null;
		var type = this.types_by_index[initial_inst[1]];
;
;
		var is_world = type.plugin.is_world;
;
		if (this.isloading && is_world && !type.isOnLoaderLayout)
			return null;
		if (is_world && !this.glwrap && initial_inst[0][11] === 11)
			return null;
		var original_layer = layer;
		if (!is_world)
			layer = null;
		var inst;
		if (type.deadCache.length)
		{
			inst = type.deadCache.pop();
			inst.recycled = true;
			type.plugin.Instance.call(inst, type);
		}
		else
		{
			inst = new type.plugin.Instance(type);
			inst.recycled = false;
		}
		if (is_startup_instance && !skip_siblings)
			inst.uid = initial_inst[2];
		else
			inst.uid = this.next_uid++;
		this.objectsByUid[inst.uid.toString()] = inst;
		inst.puid = this.next_puid++;
		inst.iid = type.instances.length;
		for (i = 0, len = this.createRow.length; i < len; ++i)
		{
			if (this.createRow[i].type === type)
				inst.iid++;
		}
		inst.get_iid = cr.inst_get_iid;
		var initial_vars = initial_inst[3];
		if (inst.recycled)
		{
			cr.wipe(inst.extra);
		}
		else
		{
			inst.extra = {};
			if (typeof cr_is_preview !== "undefined")
			{
				inst.instance_var_names = [];
				inst.instance_var_names.length = initial_vars.length;
				for (i = 0, len = initial_vars.length; i < len; i++)
					inst.instance_var_names[i] = initial_vars[i][1];
			}
			inst.instance_vars = [];
			inst.instance_vars.length = initial_vars.length;
		}
		for (i = 0, len = initial_vars.length; i < len; i++)
			inst.instance_vars[i] = initial_vars[i][0];
		if (is_world)
		{
			var wm = initial_inst[0];
;
			inst.x = cr.is_undefined(sx) ? wm[0] : sx;
			inst.y = cr.is_undefined(sy) ? wm[1] : sy;
			inst.z = wm[2];
			inst.width = wm[3];
			inst.height = wm[4];
			inst.depth = wm[5];
			inst.angle = wm[6];
			inst.opacity = wm[7];
			inst.hotspotX = wm[8];
			inst.hotspotY = wm[9];
			inst.blend_mode = wm[10];
			effect_fallback = wm[11];
			if (!this.glwrap && type.effect_types.length)	// no WebGL renderer and shaders used
				inst.blend_mode = effect_fallback;			// use fallback blend mode - destroy mode was handled above
			inst.compositeOp = cr.effectToCompositeOp(inst.blend_mode);
			if (this.gl)
				cr.setGLBlend(inst, inst.blend_mode, this.gl);
			if (inst.recycled)
			{
				for (i = 0, len = wm[12].length; i < len; i++)
				{
					for (j = 0, lenj = wm[12][i].length; j < lenj; j++)
						inst.effect_params[i][j] = wm[12][i][j];
				}
				inst.bbox.set(0, 0, 0, 0);
				inst.collcells.set(0, 0, -1, -1);
				inst.bquad.set_from_rect(inst.bbox);
				inst.bbox_changed_callbacks.length = 0;
			}
			else
			{
				inst.effect_params = wm[12].slice(0);
				for (i = 0, len = inst.effect_params.length; i < len; i++)
					inst.effect_params[i] = wm[12][i].slice(0);
				inst.active_effect_types = [];
				inst.active_effect_flags = [];
				inst.active_effect_flags.length = type.effect_types.length;
				inst.bbox = new cr.rect(0, 0, 0, 0);
				inst.collcells = new cr.rect(0, 0, -1, -1);
				inst.bquad = new cr.quad();
				inst.bbox_changed_callbacks = [];
				inst.set_bbox_changed = cr.set_bbox_changed;
				inst.add_bbox_changed_callback = cr.add_bbox_changed_callback;
				inst.contains_pt = cr.inst_contains_pt;
				inst.update_bbox = cr.update_bbox;
				inst.update_collision_cell = cr.update_collision_cell;
				inst.get_zindex = cr.inst_get_zindex;
			}
			inst.tilemap_exists = false;
			inst.tilemap_width = 0;
			inst.tilemap_height = 0;
			inst.tilemap_data = null;
			if (wm.length === 14)
			{
				inst.tilemap_exists = true;
				inst.tilemap_width = wm[13][0];
				inst.tilemap_height = wm[13][1];
				inst.tilemap_data = wm[13][2];
			}
			for (i = 0, len = type.effect_types.length; i < len; i++)
				inst.active_effect_flags[i] = true;
			inst.updateActiveEffects = cr.inst_updateActiveEffects;
			inst.updateActiveEffects();
			inst.uses_shaders = !!inst.active_effect_types.length;
			inst.bbox_changed = true;
			inst.cell_changed = true;
			type.any_cell_changed = true;
			inst.visible = true;
            inst.my_timescale = -1.0;
			inst.layer = layer;
			inst.zindex = layer.instances.length;	// will be placed at top of current layer
			if (typeof inst.collision_poly === "undefined")
				inst.collision_poly = null;
			inst.collisionsEnabled = true;
			this.redraw = true;
		}
		inst.toString = cr.inst_toString;
		var initial_props, binst;
		all_behaviors.length = 0;
		for (i = 0, len = type.families.length; i < len; i++)
		{
			all_behaviors.push.apply(all_behaviors, type.families[i].behaviors);
		}
		all_behaviors.push.apply(all_behaviors, type.behaviors);
		if (inst.recycled)
		{
			for (i = 0, len = all_behaviors.length; i < len; i++)
			{
				var btype = all_behaviors[i];
				binst = inst.behavior_insts[i];
				binst.recycled = true;
				btype.behavior.Instance.call(binst, btype, inst);
				initial_props = initial_inst[4][i];
				for (j = 0, lenj = initial_props.length; j < lenj; j++)
					binst.properties[j] = initial_props[j];
				binst.onCreate();
				btype.behavior.my_instances.add(inst);
			}
		}
		else
		{
			inst.behavior_insts = [];
			for (i = 0, len = all_behaviors.length; i < len; i++)
			{
				var btype = all_behaviors[i];
				var binst = new btype.behavior.Instance(btype, inst);
				binst.recycled = false;
				binst.properties = initial_inst[4][i].slice(0);
				binst.onCreate();
				cr.seal(binst);
				inst.behavior_insts.push(binst);
				btype.behavior.my_instances.add(inst);
			}
		}
		initial_props = initial_inst[5];
		if (inst.recycled)
		{
			for (i = 0, len = initial_props.length; i < len; i++)
				inst.properties[i] = initial_props[i];
		}
		else
			inst.properties = initial_props.slice(0);
		this.createRow.push(inst);
		if (layer)
		{
;
			layer.instances.push(inst);
			if (layer.parallaxX !== 1 || layer.parallaxY !== 1)
				type.any_instance_parallaxed = true;
		}
		this.objectcount++;
		if (type.is_contained)
		{
			inst.is_contained = true;
			if (inst.recycled)
				inst.siblings.length = 0;
			else
				inst.siblings = [];			// note: should not include self in siblings
			if (!is_startup_instance && !skip_siblings)	// layout links initial instances
			{
				for (i = 0, len = type.container.length; i < len; i++)
				{
					if (type.container[i] === type)
						continue;
					if (!type.container[i].default_instance)
					{
						return null;
					}
					inst.siblings.push(this.createInstanceFromInit(type.container[i].default_instance, original_layer, false, is_world ? inst.x : sx, is_world ? inst.y : sy, true));
				}
				for (i = 0, len = inst.siblings.length; i < len; i++)
				{
					inst.siblings[i].siblings.push(inst);
					for (j = 0; j < len; j++)
					{
						if (i !== j)
							inst.siblings[i].siblings.push(inst.siblings[j]);
					}
				}
			}
		}
		else
		{
			inst.is_contained = false;
			inst.siblings = null;
		}
		inst.onCreate();
		if (!inst.recycled)
			cr.seal(inst);
		for (i = 0, len = inst.behavior_insts.length; i < len; i++)
		{
			if (inst.behavior_insts[i].postCreate)
				inst.behavior_insts[i].postCreate();
		}
		return inst;
	};
	Runtime.prototype.getLayerByName = function (layer_name)
	{
		var i, len;
		for (i = 0, len = this.running_layout.layers.length; i < len; i++)
		{
			var layer = this.running_layout.layers[i];
			if (cr.equals_nocase(layer.name, layer_name))
				return layer;
		}
		return null;
	};
	Runtime.prototype.getLayerByNumber = function (index)
	{
		index = cr.floor(index);
		if (index < 0)
			index = 0;
		if (index >= this.running_layout.layers.length)
			index = this.running_layout.layers.length - 1;
		return this.running_layout.layers[index];
	};
	Runtime.prototype.getLayer = function (l)
	{
		if (cr.is_number(l))
			return this.getLayerByNumber(l);
		else
			return this.getLayerByName(l.toString());
	};
	Runtime.prototype.clearSol = function (solModifiers)
	{
		var i, len;
		for (i = 0, len = solModifiers.length; i < len; i++)
		{
			solModifiers[i].getCurrentSol().select_all = true;
		}
	};
	Runtime.prototype.pushCleanSol = function (solModifiers)
	{
		var i, len;
		for (i = 0, len = solModifiers.length; i < len; i++)
		{
			solModifiers[i].pushCleanSol();
		}
	};
	Runtime.prototype.pushCopySol = function (solModifiers)
	{
		var i, len;
		for (i = 0, len = solModifiers.length; i < len; i++)
		{
			solModifiers[i].pushCopySol();
		}
	};
	Runtime.prototype.popSol = function (solModifiers)
	{
		var i, len;
		for (i = 0, len = solModifiers.length; i < len; i++)
		{
			solModifiers[i].popSol();
		}
	};
	Runtime.prototype.updateAllCells = function (type)
	{
		if (!type.any_cell_changed)
			return;		// all instances must already be up-to-date
		var i, len, instances = type.instances;
		for (i = 0, len = instances.length; i < len; ++i)
		{
			instances[i].update_collision_cell();
		}
		var createRow = this.createRow;
		for (i = 0, len = createRow.length; i < len; ++i)
		{
			if (createRow[i].type === type)
				createRow[i].update_collision_cell();
		}
		type.any_cell_changed = false;
	};
	Runtime.prototype.getCollisionCandidates = function (layer, rtype, bbox, candidates)
	{
		var i, len, t;
		var is_parallaxed = (layer ? (layer.parallaxX !== 1 || layer.parallaxY !== 1) : false);
		if (rtype.is_family)
		{
			for (i = 0, len = rtype.members.length; i < len; ++i)
			{
				t = rtype.members[i];
				if (is_parallaxed || t.any_instance_parallaxed)
				{
					cr.appendArray(candidates, t.instances);
				}
				else
				{
					this.updateAllCells(t);
					t.collision_grid.queryRange(bbox, candidates);
				}
			}
		}
		else
		{
			if (is_parallaxed || rtype.any_instance_parallaxed)
			{
				cr.appendArray(candidates, rtype.instances);
			}
			else
			{
				this.updateAllCells(rtype);
				rtype.collision_grid.queryRange(bbox, candidates);
			}
		}
	};
	Runtime.prototype.getTypesCollisionCandidates = function (layer, types, bbox, candidates)
	{
		var i, len;
		for (i = 0, len = types.length; i < len; ++i)
		{
			this.getCollisionCandidates(layer, types[i], bbox, candidates);
		}
	};
	Runtime.prototype.getSolidCollisionCandidates = function (layer, bbox, candidates)
	{
		var solid = this.getSolidBehavior();
		if (!solid)
			return null;
		this.getTypesCollisionCandidates(layer, solid.my_types, bbox, candidates);
	};
	Runtime.prototype.getJumpthruCollisionCandidates = function (layer, bbox, candidates)
	{
		var jumpthru = this.getJumpthruBehavior();
		if (!jumpthru)
			return null;
		this.getTypesCollisionCandidates(layer, jumpthru.my_types, bbox, candidates);
	};
	Runtime.prototype.testAndSelectCanvasPointOverlap = function (type, ptx, pty, inverted)
	{
		var sol = type.getCurrentSol();
		var i, j, inst, len;
		var lx, ly;
		if (sol.select_all)
		{
			if (!inverted)
			{
				sol.select_all = false;
				sol.instances.length = 0;   // clear contents
			}
			for (i = 0, len = type.instances.length; i < len; i++)
			{
				inst = type.instances[i];
				inst.update_bbox();
				lx = inst.layer.canvasToLayer(ptx, pty, true);
				ly = inst.layer.canvasToLayer(ptx, pty, false);
				if (inst.contains_pt(lx, ly))
				{
					if (inverted)
						return false;
					else
						sol.instances.push(inst);
				}
			}
		}
		else
		{
			j = 0;
			for (i = 0, len = sol.instances.length; i < len; i++)
			{
				inst = sol.instances[i];
				inst.update_bbox();
				lx = inst.layer.canvasToLayer(ptx, pty, true);
				ly = inst.layer.canvasToLayer(ptx, pty, false);
				if (inst.contains_pt(lx, ly))
				{
					if (inverted)
						return false;
					else
					{
						sol.instances[j] = sol.instances[i];
						j++;
					}
				}
			}
			if (!inverted)
				sol.instances.length = j;
		}
		type.applySolToContainer();
		if (inverted)
			return true;		// did not find anything overlapping
		else
			return sol.hasObjects();
	};
	Runtime.prototype.testOverlap = function (a, b)
	{
		if (!a || !b || a === b || !a.collisionsEnabled || !b.collisionsEnabled)
			return false;
		a.update_bbox();
		b.update_bbox();
		var layera = a.layer;
		var layerb = b.layer;
		var different_layers = (layera !== layerb && (layera.parallaxX !== layerb.parallaxX || layerb.parallaxY !== layerb.parallaxY || layera.scale !== layerb.scale || layera.angle !== layerb.angle || layera.zoomRate !== layerb.zoomRate));
		var i, len, i2, i21, x, y, haspolya, haspolyb, polya, polyb;
		if (!different_layers)	// same layers: easy check
		{
			if (!a.bbox.intersects_rect(b.bbox))
				return false;
			if (!a.bquad.intersects_quad(b.bquad))
				return false;
			if (a.tilemap_exists && b.tilemap_exists)
				return false;
			if (a.tilemap_exists)
				return this.testTilemapOverlap(a, b);
			if (b.tilemap_exists)
				return this.testTilemapOverlap(b, a);
			haspolya = (a.collision_poly && !a.collision_poly.is_empty());
			haspolyb = (b.collision_poly && !b.collision_poly.is_empty());
			if (!haspolya && !haspolyb)
				return true;
			if (haspolya)
			{
				a.collision_poly.cache_poly(a.width, a.height, a.angle);
				polya = a.collision_poly;
			}
			else
			{
				this.temp_poly.set_from_quad(a.bquad, a.x, a.y, a.width, a.height);
				polya = this.temp_poly;
			}
			if (haspolyb)
			{
				b.collision_poly.cache_poly(b.width, b.height, b.angle);
				polyb = b.collision_poly;
			}
			else
			{
				this.temp_poly.set_from_quad(b.bquad, b.x, b.y, b.width, b.height);
				polyb = this.temp_poly;
			}
			return polya.intersects_poly(polyb, b.x - a.x, b.y - a.y);
		}
		else	// different layers: need to do full translated check
		{
			haspolya = (a.collision_poly && !a.collision_poly.is_empty());
			haspolyb = (b.collision_poly && !b.collision_poly.is_empty());
			if (haspolya)
			{
				a.collision_poly.cache_poly(a.width, a.height, a.angle);
				this.temp_poly.set_from_poly(a.collision_poly);
			}
			else
			{
				this.temp_poly.set_from_quad(a.bquad, a.x, a.y, a.width, a.height);
			}
			polya = this.temp_poly;
			if (haspolyb)
			{
				b.collision_poly.cache_poly(b.width, b.height, b.angle);
				this.temp_poly2.set_from_poly(b.collision_poly);
			}
			else
			{
				this.temp_poly2.set_from_quad(b.bquad, b.x, b.y, b.width, b.height);
			}
			polyb = this.temp_poly2;
			for (i = 0, len = polya.pts_count; i < len; i++)
			{
				i2 = i * 2;
				i21 = i2 + 1;
				x = polya.pts_cache[i2];
				y = polya.pts_cache[i21];
				polya.pts_cache[i2] = layera.layerToCanvas(x + a.x, y + a.y, true);
				polya.pts_cache[i21] = layera.layerToCanvas(x + a.x, y + a.y, false);
			}
			polya.update_bbox();
			for (i = 0, len = polyb.pts_count; i < len; i++)
			{
				i2 = i * 2;
				i21 = i2 + 1;
				x = polyb.pts_cache[i2];
				y = polyb.pts_cache[i21];
				polyb.pts_cache[i2] = layerb.layerToCanvas(x + b.x, y + b.y, true);
				polyb.pts_cache[i21] = layerb.layerToCanvas(x + b.x, y + b.y, false);
			}
			polyb.update_bbox();
			return polya.intersects_poly(polyb, 0, 0);
		}
	};
	var tmpQuad = new cr.quad();
	var tmpRect = new cr.rect(0, 0, 0, 0);
	var collrect_candidates = [];
	Runtime.prototype.testTilemapOverlap = function (tm, a)
	{
		var i, len, c, rc;
		var bbox = a.bbox;
		var tmx = tm.x;
		var tmy = tm.y;
		tm.getCollisionRectCandidates(bbox, collrect_candidates);
		var collrects = collrect_candidates;
		var haspolya = (a.collision_poly && !a.collision_poly.is_empty());
		for (i = 0, len = collrects.length; i < len; ++i)
		{
			c = collrects[i];
			rc = c.rc;
			if (bbox.intersects_rect_off(rc, tmx, tmy))
			{
				tmpQuad.set_from_rect(rc);
				tmpQuad.offset(tmx, tmy);
				if (tmpQuad.intersects_quad(a.bquad))
				{
					if (haspolya)
					{
						a.collision_poly.cache_poly(a.width, a.height, a.angle);
						if (c.poly)
						{
							if (c.poly.intersects_poly(a.collision_poly, a.x - (tmx + rc.left), a.y - (tmy + rc.top)))
							{
								collrect_candidates.length = 0;
								return true;
							}
						}
						else
						{
							this.temp_poly.set_from_quad(tmpQuad, 0, 0, rc.right - rc.left, rc.bottom - rc.top);
							if (this.temp_poly.intersects_poly(a.collision_poly, a.x, a.y))
							{
								collrect_candidates.length = 0;
								return true;
							}
						}
					}
					else
					{
						if (c.poly)
						{
							this.temp_poly.set_from_quad(a.bquad, 0, 0, a.width, a.height);
							if (c.poly.intersects_poly(this.temp_poly, -(tmx + rc.left), -(tmy + rc.top)))
							{
								collrect_candidates.length = 0;
								return true;
							}
						}
						else
						{
							collrect_candidates.length = 0;
							return true;
						}
					}
				}
			}
		}
		collrect_candidates.length = 0;
		return false;
	};
	Runtime.prototype.testRectOverlap = function (r, b)
	{
		if (!b || !b.collisionsEnabled)
			return false;
		b.update_bbox();
		var layerb = b.layer;
		var haspolyb, polyb;
		if (!b.bbox.intersects_rect(r))
			return false;
		if (b.tilemap_exists)
		{
			b.getCollisionRectCandidates(r, collrect_candidates);
			var collrects = collrect_candidates;
			var i, len, c, tilerc;
			var tmx = b.x;
			var tmy = b.y;
			for (i = 0, len = collrects.length; i < len; ++i)
			{
				c = collrects[i];
				tilerc = c.rc;
				if (r.intersects_rect_off(tilerc, tmx, tmy))
				{
					if (c.poly)
					{
						this.temp_poly.set_from_rect(r, 0, 0);
						if (c.poly.intersects_poly(this.temp_poly, -(tmx + tilerc.left), -(tmy + tilerc.top)))
						{
							collrect_candidates.length = 0;
							return true;
						}
					}
					else
					{
						collrect_candidates.length = 0;
						return true;
					}
				}
			}
			collrect_candidates.length = 0;
			return false;
		}
		else
		{
			tmpQuad.set_from_rect(r);
			if (!b.bquad.intersects_quad(tmpQuad))
				return false;
			haspolyb = (b.collision_poly && !b.collision_poly.is_empty());
			if (!haspolyb)
				return true;
			b.collision_poly.cache_poly(b.width, b.height, b.angle);
			tmpQuad.offset(-r.left, -r.top);
			this.temp_poly.set_from_quad(tmpQuad, 0, 0, 1, 1);
			return b.collision_poly.intersects_poly(this.temp_poly, r.left - b.x, r.top - b.y);
		}
	};
	Runtime.prototype.testSegmentOverlap = function (x1, y1, x2, y2, b)
	{
		if (!b || !b.collisionsEnabled)
			return false;
		b.update_bbox();
		var layerb = b.layer;
		var haspolyb, polyb;
		tmpRect.set(cr.min(x1, x2), cr.min(y1, y2), cr.max(x1, x2), cr.max(y1, y2));
		if (!b.bbox.intersects_rect(tmpRect))
			return false;
		if (b.tilemap_exists)
		{
			b.getCollisionRectCandidates(tmpRect, collrect_candidates);
			var collrects = collrect_candidates;
			var i, len, c, tilerc;
			var tmx = b.x;
			var tmy = b.y;
			for (i = 0, len = collrects.length; i < len; ++i)
			{
				c = collrects[i];
				tilerc = c.rc;
				if (tmpRect.intersects_rect_off(tilerc, tmx, tmy))
				{
					tmpQuad.set_from_rect(tilerc);
					tmpQuad.offset(tmx, tmy);
					if (tmpQuad.intersects_segment(x1, y1, x2, y2))
					{
						if (c.poly)
						{
							if (c.poly.intersects_segment(tmx + tilerc.left, tmy + tilerc.top, x1, y1, x2, y2))
							{
								collrect_candidates.length = 0;
								return true;
							}
						}
						else
						{
							collrect_candidates.length = 0;
							return true;
						}
					}
				}
			}
			collrect_candidates.length = 0;
			return false;
		}
		else
		{
			if (!b.bquad.intersects_segment(x1, y1, x2, y2))
				return false;
			haspolyb = (b.collision_poly && !b.collision_poly.is_empty());
			if (!haspolyb)
				return true;
			b.collision_poly.cache_poly(b.width, b.height, b.angle);
			return b.collision_poly.intersects_segment(b.x, b.y, x1, y1, x2, y2);
		}
	};
	Runtime.prototype.typeHasBehavior = function (t, b)
	{
		if (!b)
			return false;
		var i, len, j, lenj, f;
		for (i = 0, len = t.behaviors.length; i < len; i++)
		{
			if (t.behaviors[i].behavior instanceof b)
				return true;
		}
		if (!t.is_family)
		{
			for (i = 0, len = t.families.length; i < len; i++)
			{
				f = t.families[i];
				for (j = 0, lenj = f.behaviors.length; j < lenj; j++)
				{
					if (f.behaviors[j].behavior instanceof b)
						return true;
				}
			}
		}
		return false;
	};
	Runtime.prototype.typeHasNoSaveBehavior = function (t)
	{
		return this.typeHasBehavior(t, cr.behaviors.NoSave);
	};
	Runtime.prototype.typeHasPersistBehavior = function (t)
	{
		return this.typeHasBehavior(t, cr.behaviors.Persist);
	};
	Runtime.prototype.getSolidBehavior = function ()
	{
		return this.solidBehavior;
	};
	Runtime.prototype.getJumpthruBehavior = function ()
	{
		return this.jumpthruBehavior;
	};
	var candidates = [];
	Runtime.prototype.testOverlapSolid = function (inst)
	{
		var i, len, s;
		inst.update_bbox();
		this.getSolidCollisionCandidates(inst.layer, inst.bbox, candidates);
		for (i = 0, len = candidates.length; i < len; ++i)
		{
			s = candidates[i];
			if (!s.extra.solidEnabled)
				continue;
			if (this.testOverlap(inst, s))
			{
				candidates.length = 0;
				return s;
			}
		}
		candidates.length = 0;
		return null;
	};
	Runtime.prototype.testRectOverlapSolid = function (r)
	{
		var i, len, s;
		this.getSolidCollisionCandidates(null, r, candidates);
		for (i = 0, len = candidates.length; i < len; ++i)
		{
			s = candidates[i];
			if (!s.extra.solidEnabled)
				continue;
			if (this.testRectOverlap(r, s))
			{
				candidates.length = 0;
				return s;
			}
		}
		candidates.length = 0;
		return null;
	};
	var jumpthru_array_ret = [];
	Runtime.prototype.testOverlapJumpThru = function (inst, all)
	{
		var ret = null;
		if (all)
		{
			ret = jumpthru_array_ret;
			ret.length = 0;
		}
		inst.update_bbox();
		this.getJumpthruCollisionCandidates(inst.layer, inst.bbox, candidates);
		var i, len, j;
		for (i = 0, len = candidates.length; i < len; ++i)
		{
			j = candidates[i];
			if (!j.extra.jumpthruEnabled)
				continue;
			if (this.testOverlap(inst, j))
			{
				if (all)
					ret.push(j);
				else
				{
					candidates.length = 0;
					return j;
				}
			}
		}
		candidates.length = 0;
		return ret;
	};
	Runtime.prototype.pushOutSolid = function (inst, xdir, ydir, dist, include_jumpthrus, specific_jumpthru)
	{
		var push_dist = dist || 50;
		var oldx = inst.x
		var oldy = inst.y;
		var i;
		var last_overlapped = null, secondlast_overlapped = null;
		for (i = 0; i < push_dist; i++)
		{
			inst.x = (oldx + (xdir * i));
			inst.y = (oldy + (ydir * i));
			inst.set_bbox_changed();
			if (!this.testOverlap(inst, last_overlapped))
			{
				last_overlapped = this.testOverlapSolid(inst);
				if (last_overlapped)
					secondlast_overlapped = last_overlapped;
				if (!last_overlapped)
				{
					if (include_jumpthrus)
					{
						if (specific_jumpthru)
							last_overlapped = (this.testOverlap(inst, specific_jumpthru) ? specific_jumpthru : null);
						else
							last_overlapped = this.testOverlapJumpThru(inst);
						if (last_overlapped)
							secondlast_overlapped = last_overlapped;
					}
					if (!last_overlapped)
					{
						if (secondlast_overlapped)
							this.pushInFractional(inst, xdir, ydir, secondlast_overlapped, 16);
						return true;
					}
				}
			}
		}
		inst.x = oldx;
		inst.y = oldy;
		inst.set_bbox_changed();
		return false;
	};
	Runtime.prototype.pushOut = function (inst, xdir, ydir, dist, otherinst)
	{
		var push_dist = dist || 50;
		var oldx = inst.x
		var oldy = inst.y;
		var i;
		for (i = 0; i < push_dist; i++)
		{
			inst.x = (oldx + (xdir * i));
			inst.y = (oldy + (ydir * i));
			inst.set_bbox_changed();
			if (!this.testOverlap(inst, otherinst))
				return true;
		}
		inst.x = oldx;
		inst.y = oldy;
		inst.set_bbox_changed();
		return false;
	};
	Runtime.prototype.pushInFractional = function (inst, xdir, ydir, obj, limit)
	{
		var divisor = 2;
		var frac;
		var forward = false;
		var overlapping = false;
		var bestx = inst.x;
		var besty = inst.y;
		while (divisor <= limit)
		{
			frac = 1 / divisor;
			divisor *= 2;
			inst.x += xdir * frac * (forward ? 1 : -1);
			inst.y += ydir * frac * (forward ? 1 : -1);
			inst.set_bbox_changed();
			if (this.testOverlap(inst, obj))
			{
				forward = true;
				overlapping = true;
			}
			else
			{
				forward = false;
				overlapping = false;
				bestx = inst.x;
				besty = inst.y;
			}
		}
		if (overlapping)
		{
			inst.x = bestx;
			inst.y = besty;
			inst.set_bbox_changed();
		}
	};
	Runtime.prototype.pushOutSolidNearest = function (inst, max_dist_)
	{
		var max_dist = (cr.is_undefined(max_dist_) ? 100 : max_dist_);
		var dist = 0;
		var oldx = inst.x
		var oldy = inst.y;
		var dir = 0;
		var dx = 0, dy = 0;
		var last_overlapped = this.testOverlapSolid(inst);
		if (!last_overlapped)
			return true;		// already clear of solids
		while (dist <= max_dist)
		{
			switch (dir) {
			case 0:		dx = 0; dy = -1; dist++; break;
			case 1:		dx = 1; dy = -1; break;
			case 2:		dx = 1; dy = 0; break;
			case 3:		dx = 1; dy = 1; break;
			case 4:		dx = 0; dy = 1; break;
			case 5:		dx = -1; dy = 1; break;
			case 6:		dx = -1; dy = 0; break;
			case 7:		dx = -1; dy = -1; break;
			}
			dir = (dir + 1) % 8;
			inst.x = cr.floor(oldx + (dx * dist));
			inst.y = cr.floor(oldy + (dy * dist));
			inst.set_bbox_changed();
			if (!this.testOverlap(inst, last_overlapped))
			{
				last_overlapped = this.testOverlapSolid(inst);
				if (!last_overlapped)
					return true;
			}
		}
		inst.x = oldx;
		inst.y = oldy;
		inst.set_bbox_changed();
		return false;
	};
	Runtime.prototype.registerCollision = function (a, b)
	{
		if (!a.collisionsEnabled || !b.collisionsEnabled)
			return;
		this.registered_collisions.push([a, b]);
	};
	Runtime.prototype.checkRegisteredCollision = function (a, b)
	{
		var i, len, x;
		for (i = 0, len = this.registered_collisions.length; i < len; i++)
		{
			x = this.registered_collisions[i];
			if ((x[0] == a && x[1] == b) || (x[0] == b && x[1] == a))
				return true;
		}
		return false;
	};
	Runtime.prototype.calculateSolidBounceAngle = function(inst, startx, starty, obj)
	{
		var objx = inst.x;
		var objy = inst.y;
		var radius = cr.max(10, cr.distanceTo(startx, starty, objx, objy));
		var startangle = cr.angleTo(startx, starty, objx, objy);
		var firstsolid = obj || this.testOverlapSolid(inst);
		if (!firstsolid)
			return cr.clamp_angle(startangle + cr.PI);
		var cursolid = firstsolid;
		var i, curangle, anticlockwise_free_angle, clockwise_free_angle;
		var increment = cr.to_radians(5);	// 5 degree increments
		for (i = 1; i < 36; i++)
		{
			curangle = startangle - i * increment;
			inst.x = startx + Math.cos(curangle) * radius;
			inst.y = starty + Math.sin(curangle) * radius;
			inst.set_bbox_changed();
			if (!this.testOverlap(inst, cursolid))
			{
				cursolid = obj ? null : this.testOverlapSolid(inst);
				if (!cursolid)
				{
					anticlockwise_free_angle = curangle;
					break;
				}
			}
		}
		if (i === 36)
			anticlockwise_free_angle = cr.clamp_angle(startangle + cr.PI);
		var cursolid = firstsolid;
		for (i = 1; i < 36; i++)
		{
			curangle = startangle + i * increment;
			inst.x = startx + Math.cos(curangle) * radius;
			inst.y = starty + Math.sin(curangle) * radius;
			inst.set_bbox_changed();
			if (!this.testOverlap(inst, cursolid))
			{
				cursolid = obj ? null : this.testOverlapSolid(inst);
				if (!cursolid)
				{
					clockwise_free_angle = curangle;
					break;
				}
			}
		}
		if (i === 36)
			clockwise_free_angle = cr.clamp_angle(startangle + cr.PI);
		inst.x = objx;
		inst.y = objy;
		inst.set_bbox_changed();
		if (clockwise_free_angle === anticlockwise_free_angle)
			return clockwise_free_angle;
		var half_diff = cr.angleDiff(clockwise_free_angle, anticlockwise_free_angle) / 2;
		var normal;
		if (cr.angleClockwise(clockwise_free_angle, anticlockwise_free_angle))
		{
			normal = cr.clamp_angle(anticlockwise_free_angle + half_diff + cr.PI);
		}
		else
		{
			normal = cr.clamp_angle(clockwise_free_angle + half_diff);
		}
;
		var vx = Math.cos(startangle);
		var vy = Math.sin(startangle);
		var nx = Math.cos(normal);
		var ny = Math.sin(normal);
		var v_dot_n = vx * nx + vy * ny;
		var rx = vx - 2 * v_dot_n * nx;
		var ry = vy - 2 * v_dot_n * ny;
		return cr.angleTo(0, 0, rx, ry);
	};
	var triggerSheetIndex = -1;
	Runtime.prototype.trigger = function (method, inst, value /* for fast triggers */)
	{
;
		if (!this.running_layout)
			return false;
		var sheet = this.running_layout.event_sheet;
		if (!sheet)
			return false;     // no event sheet active; nothing to trigger
		var ret = false;
		var r, i, len;
		triggerSheetIndex++;
		var deep_includes = sheet.deep_includes;
		for (i = 0, len = deep_includes.length; i < len; ++i)
		{
			r = this.triggerOnSheet(method, inst, deep_includes[i], value);
			ret = ret || r;
		}
		r = this.triggerOnSheet(method, inst, sheet, value);
		ret = ret || r;
		triggerSheetIndex--;
		return ret;
    };
    Runtime.prototype.triggerOnSheet = function (method, inst, sheet, value)
    {
        var ret = false;
		var i, leni, r, families;
		if (!inst)
		{
			r = this.triggerOnSheetForTypeName(method, inst, "system", sheet, value);
			ret = ret || r;
		}
		else
		{
			r = this.triggerOnSheetForTypeName(method, inst, inst.type.name, sheet, value);
			ret = ret || r;
			families = inst.type.families;
			for (i = 0, leni = families.length; i < leni; ++i)
			{
				r = this.triggerOnSheetForTypeName(method, inst, families[i].name, sheet, value);
				ret = ret || r;
			}
		}
		return ret;             // true if anything got triggered
	};
	Runtime.prototype.triggerOnSheetForTypeName = function (method, inst, type_name, sheet, value)
	{
		var i, leni;
		var ret = false, ret2 = false;
		var trig, index;
		var fasttrigger = (typeof value !== "undefined");
		var triggers = (fasttrigger ? sheet.fasttriggers : sheet.triggers);
		var obj_entry = triggers[type_name];
		if (!obj_entry)
			return ret;
		var triggers_list = null;
		for (i = 0, leni = obj_entry.length; i < leni; ++i)
		{
			if (obj_entry[i].method == method)
			{
				triggers_list = obj_entry[i].evs;
				break;
			}
		}
		if (!triggers_list)
			return ret;
		var triggers_to_fire;
		if (fasttrigger)
		{
			triggers_to_fire = triggers_list[value];
		}
		else
		{
			triggers_to_fire = triggers_list;
		}
		if (!triggers_to_fire)
			return null;
		for (i = 0, leni = triggers_to_fire.length; i < leni; i++)
		{
			trig = triggers_to_fire[i][0];
			index = triggers_to_fire[i][1];
			ret2 = this.executeSingleTrigger(inst, type_name, trig, index);
			ret = ret || ret2;
		}
		return ret;
	};
	Runtime.prototype.executeSingleTrigger = function (inst, type_name, trig, index)
	{
		var i, leni;
		var ret = false;
		this.trigger_depth++;
		var current_event = this.getCurrentEventStack().current_event;
		if (current_event)
			this.pushCleanSol(current_event.solModifiersIncludingParents);
		var isrecursive = (this.trigger_depth > 1);		// calling trigger from inside another trigger
		this.pushCleanSol(trig.solModifiersIncludingParents);
		if (isrecursive)
			this.pushLocalVarStack();
		var event_stack = this.pushEventStack(trig);
		event_stack.current_event = trig;
		if (inst)
		{
			var sol = this.types[type_name].getCurrentSol();
			sol.select_all = false;
			sol.instances.length = 1;
			sol.instances[0] = inst;
			this.types[type_name].applySolToContainer();
		}
		var ok_to_run = true;
		if (trig.parent)
		{
			var temp_parents_arr = event_stack.temp_parents_arr;
			var cur_parent = trig.parent;
			while (cur_parent)
			{
				temp_parents_arr.push(cur_parent);
				cur_parent = cur_parent.parent;
			}
			temp_parents_arr.reverse();
			for (i = 0, leni = temp_parents_arr.length; i < leni; i++)
			{
				if (!temp_parents_arr[i].run_pretrigger())   // parent event failed
				{
					ok_to_run = false;
					break;
				}
			}
		}
		if (ok_to_run)
		{
			this.execcount++;
			if (trig.orblock)
				trig.run_orblocktrigger(index);
			else
				trig.run();
			ret = ret || event_stack.last_event_true;
		}
		this.popEventStack();
		if (isrecursive)
			this.popLocalVarStack();
		this.popSol(trig.solModifiersIncludingParents);
		if (current_event)
			this.popSol(current_event.solModifiersIncludingParents);
		if (this.isInOnDestroy === 0 && triggerSheetIndex === 0 && !this.isRunningEvents && (!this.deathRow.isEmpty() || this.createRow.length))
		{
			this.ClearDeathRow();
		}
		this.trigger_depth--;
		return ret;
	};
	Runtime.prototype.getCurrentCondition = function ()
	{
		var evinfo = this.getCurrentEventStack();
		return evinfo.current_event.conditions[evinfo.cndindex];
	};
	Runtime.prototype.getCurrentAction = function ()
	{
		var evinfo = this.getCurrentEventStack();
		return evinfo.current_event.actions[evinfo.actindex];
	};
	Runtime.prototype.pushLocalVarStack = function ()
	{
		this.localvar_stack_index++;
		if (this.localvar_stack_index >= this.localvar_stack.length)
			this.localvar_stack.push([]);
	};
	Runtime.prototype.popLocalVarStack = function ()
	{
;
		this.localvar_stack_index--;
	};
	Runtime.prototype.getCurrentLocalVarStack = function ()
	{
		return this.localvar_stack[this.localvar_stack_index];
	};
	Runtime.prototype.pushEventStack = function (cur_event)
	{
		this.event_stack_index++;
		if (this.event_stack_index >= this.event_stack.length)
			this.event_stack.push(new cr.eventStackFrame());
		var ret = this.getCurrentEventStack();
		ret.reset(cur_event);
		return ret;
	};
	Runtime.prototype.popEventStack = function ()
	{
;
		this.event_stack_index--;
	};
	Runtime.prototype.getCurrentEventStack = function ()
	{
		return this.event_stack[this.event_stack_index];
	};
	Runtime.prototype.pushLoopStack = function (name_)
	{
		this.loop_stack_index++;
		if (this.loop_stack_index >= this.loop_stack.length)
		{
			this.loop_stack.push(cr.seal({ name: name_, index: 0, stopped: false }));
		}
		var ret = this.getCurrentLoop();
		ret.name = name_;
		ret.index = 0;
		ret.stopped = false;
		return ret;
	};
	Runtime.prototype.popLoopStack = function ()
	{
;
		this.loop_stack_index--;
	};
	Runtime.prototype.getCurrentLoop = function ()
	{
		return this.loop_stack[this.loop_stack_index];
	};
	Runtime.prototype.getEventVariableByName = function (name, scope)
	{
		var i, leni, j, lenj, sheet, e;
		while (scope)
		{
			for (i = 0, leni = scope.subevents.length; i < leni; i++)
			{
				e = scope.subevents[i];
				if (e instanceof cr.eventvariable && cr.equals_nocase(name, e.name))
					return e;
			}
			scope = scope.parent;
		}
		for (i = 0, leni = this.eventsheets_by_index.length; i < leni; i++)
		{
			sheet = this.eventsheets_by_index[i];
			for (j = 0, lenj = sheet.events.length; j < lenj; j++)
			{
				e = sheet.events[j];
				if (e instanceof cr.eventvariable && cr.equals_nocase(name, e.name))
					return e;
			}
		}
		return null;
	};
	Runtime.prototype.getLayoutBySid = function (sid_)
	{
		var i, len;
		for (i = 0, len = this.layouts_by_index.length; i < len; i++)
		{
			if (this.layouts_by_index[i].sid === sid_)
				return this.layouts_by_index[i];
		}
		return null;
	};
	Runtime.prototype.getObjectTypeBySid = function (sid_)
	{
		var i, len;
		for (i = 0, len = this.types_by_index.length; i < len; i++)
		{
			if (this.types_by_index[i].sid === sid_)
				return this.types_by_index[i];
		}
		return null;
	};
	Runtime.prototype.getGroupBySid = function (sid_)
	{
		var i, len;
		for (i = 0, len = this.allGroups.length; i < len; i++)
		{
			if (this.allGroups[i].sid === sid_)
				return this.allGroups[i];
		}
		return null;
	};
	function makeSaveDb(e)
	{
		var db = e.target.result;
		db.createObjectStore("saves", { keyPath: "slot" });
	};
	function IndexedDB_WriteSlot(slot_, data_, oncomplete_, onerror_)
	{
		var request = indexedDB.open("_C2SaveStates");
		request.onupgradeneeded = makeSaveDb;
		request.onerror = onerror_;
		request.onsuccess = function (e)
		{
			var db = e.target.result;
			db.onerror = onerror_;
			var transaction = db.transaction(["saves"], "readwrite");
			var objectStore = transaction.objectStore("saves");
			var putReq = objectStore.put({"slot": slot_, "data": data_ });
			putReq.onsuccess = oncomplete_;
		};
	};
	function IndexedDB_ReadSlot(slot_, oncomplete_, onerror_)
	{
		var request = indexedDB.open("_C2SaveStates");
		request.onupgradeneeded = makeSaveDb;
		request.onerror = onerror_;
		request.onsuccess = function (e)
		{
			var db = e.target.result;
			db.onerror = onerror_;
			var transaction = db.transaction(["saves"]);
			var objectStore = transaction.objectStore("saves");
			var readReq = objectStore.get(slot_);
			readReq.onsuccess = function (e)
			{
				if (readReq.result)
					oncomplete_(readReq.result["data"]);
				else
					oncomplete_(null);
			};
		};
	};
	Runtime.prototype.signalContinuousPreview = function ()
	{
		this.signalledContinuousPreview = true;
	};
	function doContinuousPreviewReload()
	{
		cr.logexport("Reloading for continuous preview");
		if (!!window["c2cocoonjs"])
		{
			CocoonJS["App"]["reload"]();
		}
		else
		{
			if (window.location.search.indexOf("continuous") > -1)
				window.location.reload(true);
			else
				window.location = window.location + "?continuous";
		}
	};
	Runtime.prototype.handleSaveLoad = function ()
	{
		var self = this;
		var savingToSlot = this.saveToSlot;
		var savingJson = this.lastSaveJson;
		var loadingFromSlot = this.loadFromSlot;
		var continuous = false;
		if (this.signalledContinuousPreview)
		{
			continuous = true;
			savingToSlot = "__c2_continuouspreview";
			this.signalledContinuousPreview = false;
		}
		if (savingToSlot.length)
		{
			this.ClearDeathRow();
			savingJson = this.saveToJSONString();
			if (window.indexedDB && !this.isCocoonJs)
			{
				IndexedDB_WriteSlot(savingToSlot, savingJson, function ()
				{
					cr.logexport("Saved state to IndexedDB storage (" + savingJson.length + " bytes)");
					self.lastSaveJson = savingJson;
					self.trigger(cr.system_object.prototype.cnds.OnSaveComplete, null);
					self.lastSaveJson = "";
					if (continuous)
						doContinuousPreviewReload();
				}, function (e)
				{
					try {
						localStorage.setItem("__c2save_" + savingToSlot, savingJson);
						cr.logexport("Saved state to WebStorage (" + savingJson.length + " bytes)");
						self.lastSaveJson = savingJson;
						self.trigger(cr.system_object.prototype.cnds.OnSaveComplete, null);
						self.lastSaveJson = "";
						if (continuous)
							doContinuousPreviewReload();
					}
					catch (f)
					{
						cr.logexport("Failed to save game state: " + e + "; " + f);
					}
				});
			}
			else
			{
				try {
					localStorage.setItem("__c2save_" + savingToSlot, savingJson);
					cr.logexport("Saved state to WebStorage (" + savingJson.length + " bytes)");
					self.lastSaveJson = savingJson;
					this.trigger(cr.system_object.prototype.cnds.OnSaveComplete, null);
					self.lastSaveJson = "";
					if (continuous)
						doContinuousPreviewReload();
				}
				catch (e)
				{
					cr.logexport("Error saving to WebStorage: " + e);
				}
			}
			this.saveToSlot = "";
			this.loadFromSlot = "";
			this.loadFromJson = "";
		}
		if (loadingFromSlot.length)
		{
			if (window.indexedDB && !this.isCocoonJs)
			{
				IndexedDB_ReadSlot(loadingFromSlot, function (result_)
				{
					if (result_)
					{
						self.loadFromJson = result_;
						cr.logexport("Loaded state from IndexedDB storage (" + self.loadFromJson.length + " bytes)");
					}
					else
					{
						self.loadFromJson = localStorage.getItem("__c2save_" + loadingFromSlot) || "";
						cr.logexport("Loaded state from WebStorage (" + self.loadFromJson.length + " bytes)");
					}
					self.suspendDrawing = false;
					if (!self.loadFromJson.length)
						self.trigger(cr.system_object.prototype.cnds.OnLoadFailed, null);
				}, function (e)
				{
					self.loadFromJson = localStorage.getItem("__c2save_" + loadingFromSlot) || "";
					cr.logexport("Loaded state from WebStorage (" + self.loadFromJson.length + " bytes)");
					self.suspendDrawing = false;
					if (!self.loadFromJson.length)
						self.trigger(cr.system_object.prototype.cnds.OnLoadFailed, null);
				});
			}
			else
			{
				this.loadFromJson = localStorage.getItem("__c2save_" + loadingFromSlot) || "";
				cr.logexport("Loaded state from WebStorage (" + this.loadFromJson.length + " bytes)");
				this.suspendDrawing = false;
				if (!self.loadFromJson.length)
					self.trigger(cr.system_object.prototype.cnds.OnLoadFailed, null);
			}
			this.loadFromSlot = "";
			this.saveToSlot = "";
		}
		if (this.loadFromJson.length)
		{
			this.ClearDeathRow();
			this.loadFromJSONString(this.loadFromJson);
			this.lastSaveJson = this.loadFromJson;
			this.trigger(cr.system_object.prototype.cnds.OnLoadComplete, null);
			this.lastSaveJson = "";
			this.loadFromJson = "";
		}
	};
	function CopyExtraObject(extra)
	{
		var p, ret = {};
		for (p in extra)
		{
			if (extra.hasOwnProperty(p))
			{
				if (extra[p] instanceof cr.ObjectSet)
					continue;
				if (extra[p] && typeof extra[p].c2userdata !== "undefined")
					continue;
				ret[p] = extra[p];
			}
		}
		return ret;
	};
	Runtime.prototype.saveToJSONString = function()
	{
		var i, len, j, lenj, type, layout, typeobj, g, c, a, v, p;
		var o = {
			"c2save":				true,
			"version":				1,
			"rt": {
				"time":				this.kahanTime.sum,
				"timescale":		this.timescale,
				"tickcount":		this.tickcount,
				"execcount":		this.execcount,
				"next_uid":			this.next_uid,
				"running_layout":	this.running_layout.sid,
				"start_time_offset": (Date.now() - this.start_time)
			},
			"types": {},
			"layouts": {},
			"events": {
				"groups": {},
				"cnds": {},
				"acts": {},
				"vars": {}
			}
		};
		for (i = 0, len = this.types_by_index.length; i < len; i++)
		{
			type = this.types_by_index[i];
			if (type.is_family || this.typeHasNoSaveBehavior(type))
				continue;
			typeobj = {
				"instances": []
			};
			if (cr.hasAnyOwnProperty(type.extra))
				typeobj["ex"] = CopyExtraObject(type.extra);
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
			{
				typeobj["instances"].push(this.saveInstanceToJSON(type.instances[j]));
			}
			o["types"][type.sid.toString()] = typeobj;
		}
		for (i = 0, len = this.layouts_by_index.length; i < len; i++)
		{
			layout = this.layouts_by_index[i];
			o["layouts"][layout.sid.toString()] = layout.saveToJSON();
		}
		var ogroups = o["events"]["groups"];
		for (i = 0, len = this.allGroups.length; i < len; i++)
		{
			g = this.allGroups[i];
			ogroups[g.sid.toString()] = this.groups_by_name[g.group_name].group_active;
		}
		var ocnds = o["events"]["cnds"];
		for (p in this.cndsBySid)
		{
			if (this.cndsBySid.hasOwnProperty(p))
			{
				c = this.cndsBySid[p];
				if (cr.hasAnyOwnProperty(c.extra))
					ocnds[p] = { "ex": CopyExtraObject(c.extra) };
			}
		}
		var oacts = o["events"]["acts"];
		for (p in this.actsBySid)
		{
			if (this.actsBySid.hasOwnProperty(p))
			{
				a = this.actsBySid[p];
				if (cr.hasAnyOwnProperty(a.extra))
					oacts[p] = { "ex": a.extra };
			}
		}
		var ovars = o["events"]["vars"];
		for (p in this.varsBySid)
		{
			if (this.varsBySid.hasOwnProperty(p))
			{
				v = this.varsBySid[p];
				if (!v.is_constant && (!v.parent || v.is_static))
					ovars[p] = v.data;
			}
		}
		o["system"] = this.system.saveToJSON();
		return JSON.stringify(o);
	};
	Runtime.prototype.refreshUidMap = function ()
	{
		var i, len, type, j, lenj, inst;
		this.objectsByUid = {};
		for (i = 0, len = this.types_by_index.length; i < len; i++)
		{
			type = this.types_by_index[i];
			if (type.is_family)
				continue;
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
			{
				inst = type.instances[j];
				this.objectsByUid[inst.uid.toString()] = inst;
			}
		}
	};
	Runtime.prototype.loadFromJSONString = function (str)
	{
		var o = JSON.parse(str);
		if (!o["c2save"])
			return;		// probably not a c2 save state
		if (o["version"] > 1)
			return;		// from future version of c2; assume not compatible
		var rt = o["rt"];
		this.kahanTime.reset();
		this.kahanTime.sum = rt["time"];
		this.timescale = rt["timescale"];
		this.tickcount = rt["tickcount"];
		this.start_time = Date.now() - rt["start_time_offset"];
		var layout_sid = rt["running_layout"];
		if (layout_sid !== this.running_layout.sid)
		{
			var changeToLayout = this.getLayoutBySid(layout_sid);
			if (changeToLayout)
				this.doChangeLayout(changeToLayout);
			else
				return;		// layout that was saved on has gone missing (deleted?)
		}
		this.isLoadingState = true;
		var i, len, j, lenj, k, lenk, p, type, existing_insts, load_insts, inst, binst, layout, layer, g, iid, t;
		var otypes = o["types"];
		for (p in otypes)
		{
			if (otypes.hasOwnProperty(p))
			{
				type = this.getObjectTypeBySid(parseInt(p, 10));
				if (!type || type.is_family || this.typeHasNoSaveBehavior(type))
					continue;
				if (otypes[p]["ex"])
					type.extra = otypes[p]["ex"];
				else
					cr.wipe(type.extra);
				existing_insts = type.instances;
				load_insts = otypes[p]["instances"];
				for (i = 0, len = cr.min(existing_insts.length, load_insts.length); i < len; i++)
				{
					this.loadInstanceFromJSON(existing_insts[i], load_insts[i]);
				}
				for (i = load_insts.length, len = existing_insts.length; i < len; i++)
					this.DestroyInstance(existing_insts[i]);
				for (i = existing_insts.length, len = load_insts.length; i < len; i++)
				{
					layer = null;
					if (type.plugin.is_world)
					{
						layer = this.running_layout.getLayerBySid(load_insts[i]["w"]["l"]);
						if (!layer)
							continue;
					}
					inst = this.createInstanceFromInit(type.default_instance, layer, false, 0, 0, true);
					this.loadInstanceFromJSON(inst, load_insts[i]);
				}
				type.stale_iids = true;
			}
		}
		this.ClearDeathRow();
		this.refreshUidMap();
		var olayouts = o["layouts"];
		for (p in olayouts)
		{
			if (olayouts.hasOwnProperty(p))
			{
				layout = this.getLayoutBySid(parseInt(p, 10));
				if (!layout)
					continue;		// must've gone missing
				layout.loadFromJSON(olayouts[p]);
			}
		}
		var ogroups = o["events"]["groups"];
		for (p in ogroups)
		{
			if (ogroups.hasOwnProperty(p))
			{
				g = this.getGroupBySid(parseInt(p, 10));
				if (g && this.groups_by_name[g.group_name])
					this.groups_by_name[g.group_name].group_active = ogroups[p];
			}
		}
		var ocnds = o["events"]["cnds"];
		for (p in ocnds)
		{
			if (ocnds.hasOwnProperty(p) && this.cndsBySid.hasOwnProperty(p))
			{
				this.cndsBySid[p].extra = ocnds[p]["ex"];
			}
		}
		var oacts = o["events"]["acts"];
		for (p in oacts)
		{
			if (oacts.hasOwnProperty(p) && this.actsBySid.hasOwnProperty(p))
			{
				this.actsBySid[p].extra = oacts[p]["ex"];
			}
		}
		var ovars = o["events"]["vars"];
		for (p in ovars)
		{
			if (ovars.hasOwnProperty(p) && this.varsBySid.hasOwnProperty(p))
			{
				this.varsBySid[p].data = ovars[p];
			}
		}
		this.next_uid = rt["next_uid"];
		this.isLoadingState = false;
		this.system.loadFromJSON(o["system"]);
		for (i = 0, len = this.types_by_index.length; i < len; i++)
		{
			type = this.types_by_index[i];
			if (type.is_family)
				continue;
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
			{
				inst = type.instances[j];
				if (type.is_contained)
				{
					iid = inst.get_iid();
					inst.siblings.length = 0;
					for (k = 0, lenk = type.container.length; k < lenk; k++)
					{
						t = type.container[k];
						if (type === t)
							continue;
;
						inst.siblings.push(t.instances[iid]);
					}
				}
				if (inst.afterLoad)
					inst.afterLoad();
				if (inst.behavior_insts)
				{
					for (k = 0, lenk = inst.behavior_insts.length; k < lenk; k++)
					{
						binst = inst.behavior_insts[k];
						if (binst.afterLoad)
							binst.afterLoad();
					}
				}
			}
		}
		this.redraw = true;
	};
	Runtime.prototype.saveInstanceToJSON = function(inst, state_only)
	{
		var i, len, world, behinst, et;
		var type = inst.type;
		var plugin = type.plugin;
		var o = {};
		if (state_only)
			o["c2"] = true;		// mark as known json data from Construct 2
		else
			o["uid"] = inst.uid;
		if (cr.hasAnyOwnProperty(inst.extra))
			o["ex"] = CopyExtraObject(inst.extra);
		if (inst.instance_vars && inst.instance_vars.length)
		{
			o["ivs"] = {};
			for (i = 0, len = inst.instance_vars.length; i < len; i++)
			{
				o["ivs"][inst.type.instvar_sids[i].toString()] = inst.instance_vars[i];
			}
		}
		if (plugin.is_world)
		{
			world = {
				"x": inst.x,
				"y": inst.y,
				"w": inst.width,
				"h": inst.height,
				"l": inst.layer.sid,
				"zi": inst.get_zindex()
			};
			if (inst.angle !== 0)
				world["a"] = inst.angle;
			if (inst.opacity !== 1)
				world["o"] = inst.opacity;
			if (inst.hotspotX !== 0.5)
				world["hX"] = inst.hotspotX;
			if (inst.hotspotY !== 0.5)
				world["hY"] = inst.hotspotY;
			if (inst.blend_mode !== 0)
				world["bm"] = inst.blend_mode;
			if (!inst.visible)
				world["v"] = inst.visible;
			if (!inst.collisionsEnabled)
				world["ce"] = inst.collisionsEnabled;
			if (inst.my_timescale !== -1)
				world["mts"] = inst.my_timescale;
			if (type.effect_types.length)
			{
				world["fx"] = [];
				for (i = 0, len = type.effect_types.length; i < len; i++)
				{
					et = type.effect_types[i];
					world["fx"].push({"name": et.name,
									  "active": inst.active_effect_flags[et.index],
									  "params": inst.effect_params[et.index] });
				}
			}
			o["w"] = world;
		}
		if (inst.behavior_insts && inst.behavior_insts.length)
		{
			o["behs"] = {};
			for (i = 0, len = inst.behavior_insts.length; i < len; i++)
			{
				behinst = inst.behavior_insts[i];
				if (behinst.saveToJSON)
					o["behs"][behinst.type.sid.toString()] = behinst.saveToJSON();
			}
		}
		if (inst.saveToJSON)
			o["data"] = inst.saveToJSON();
		return o;
	};
	Runtime.prototype.getInstanceVarIndexBySid = function (type, sid_)
	{
		var i, len;
		for (i = 0, len = type.instvar_sids.length; i < len; i++)
		{
			if (type.instvar_sids[i] === sid_)
				return i;
		}
		return -1;
	};
	Runtime.prototype.getBehaviorIndexBySid = function (inst, sid_)
	{
		var i, len;
		for (i = 0, len = inst.behavior_insts.length; i < len; i++)
		{
			if (inst.behavior_insts[i].type.sid === sid_)
				return i;
		}
		return -1;
	};
	Runtime.prototype.loadInstanceFromJSON = function(inst, o, state_only)
	{
		var p, i, len, iv, oivs, world, fxindex, obehs, behindex;
		var oldlayer;
		var type = inst.type;
		var plugin = type.plugin;
		if (state_only)
		{
			if (!o["c2"])
				return;
		}
		else
			inst.uid = o["uid"];
		if (o["ex"])
			inst.extra = o["ex"];
		else
			cr.wipe(inst.extra);
		oivs = o["ivs"];
		if (oivs)
		{
			for (p in oivs)
			{
				if (oivs.hasOwnProperty(p))
				{
					iv = this.getInstanceVarIndexBySid(type, parseInt(p, 10));
					if (iv < 0 || iv >= inst.instance_vars.length)
						continue;		// must've gone missing
					inst.instance_vars[iv] = oivs[p];
				}
			}
		}
		if (plugin.is_world)
		{
			world = o["w"];
			if (inst.layer.sid !== world["l"])
			{
				oldlayer = inst.layer;
				inst.layer = this.running_layout.getLayerBySid(world["l"]);
				if (inst.layer)
				{
					inst.layer.instances.push(inst);
					inst.layer.zindices_stale = true;
					cr.arrayFindRemove(oldlayer.instances, inst);
					oldlayer.zindices_stale = true;
				}
				else
				{
					inst.layer = oldlayer;
					this.DestroyInstance(inst);
				}
			}
			inst.x = world["x"];
			inst.y = world["y"];
			inst.width = world["w"];
			inst.height = world["h"];
			inst.zindex = world["zi"];
			inst.angle = world.hasOwnProperty("a") ? world["a"] : 0;
			inst.opacity = world.hasOwnProperty("o") ? world["o"] : 1;
			inst.hotspotX = world.hasOwnProperty("hX") ? world["hX"] : 0.5;
			inst.hotspotY = world.hasOwnProperty("hY") ? world["hY"] : 0.5;
			inst.visible = world.hasOwnProperty("v") ? world["v"] : true;
			inst.collisionsEnabled = world.hasOwnProperty("ce") ? world["ce"] : true;
			inst.my_timescale = world.hasOwnProperty("mts") ? world["mts"] : -1;
			inst.blend_mode = world.hasOwnProperty("bm") ? world["bm"] : 0;;
			inst.compositeOp = cr.effectToCompositeOp(inst.blend_mode);
			if (this.gl)
				cr.setGLBlend(inst, inst.blend_mode, this.gl);
			inst.set_bbox_changed();
			if (world.hasOwnProperty("fx"))
			{
				for (i = 0, len = world["fx"].length; i < len; i++)
				{
					fxindex = type.getEffectIndexByName(world["fx"][i]["name"]);
					if (fxindex < 0)
						continue;		// must've gone missing
					inst.active_effect_flags[fxindex] = world["fx"][i]["active"];
					inst.effect_params[fxindex] = world["fx"][i]["params"];
				}
			}
			inst.updateActiveEffects();
		}
		obehs = o["behs"];
		if (obehs)
		{
			for (p in obehs)
			{
				if (obehs.hasOwnProperty(p))
				{
					behindex = this.getBehaviorIndexBySid(inst, parseInt(p, 10));
					if (behindex < 0)
						continue;		// must've gone missing
					inst.behavior_insts[behindex].loadFromJSON(obehs[p]);
				}
			}
		}
		if (o["data"])
			inst.loadFromJSON(o["data"]);
	};
	cr.runtime = Runtime;
	cr.createRuntime = function (canvasid)
	{
		return new Runtime(document.getElementById(canvasid));
	};
	cr.createDCRuntime = function (w, h)
	{
		return new Runtime({ "dc": true, "width": w, "height": h });
	};
	window["cr_createRuntime"] = cr.createRuntime;
	window["cr_createDCRuntime"] = cr.createDCRuntime;
	window["createCocoonJSRuntime"] = function ()
	{
		window["c2cocoonjs"] = true;
		var canvas = document.createElement("screencanvas") || document.createElement("canvas");
		canvas.screencanvas = true;
		document.body.appendChild(canvas);
		var rt = new Runtime(canvas);
		window["c2runtime"] = rt;
		window.addEventListener("orientationchange", function () {
			window["c2runtime"]["setSize"](window.innerWidth, window.innerHeight);
		});
		window["c2runtime"]["setSize"](window.innerWidth, window.innerHeight);
		return rt;
	};
	window["createEjectaRuntime"] = function ()
	{
		var canvas = document.getElementById("canvas");
		var rt = new Runtime(canvas);
		window["c2runtime"] = rt;
		window["c2runtime"]["setSize"](window.innerWidth, window.innerHeight);
		return rt;
	};
}());
window["cr_getC2Runtime"] = function()
{
	var canvas = document.getElementById("c2canvas");
	if (canvas)
		return canvas["c2runtime"];
	else if (window["c2runtime"])
		return window["c2runtime"];
	else
		return null;
}
window["cr_sizeCanvas"] = function(w, h)
{
	if (w === 0 || h === 0)
		return;
	var runtime = window["cr_getC2Runtime"]();
	if (runtime)
		runtime["setSize"](w, h);
}
window["cr_setSuspended"] = function(s)
{
	var runtime = window["cr_getC2Runtime"]();
	if (runtime)
		runtime["setSuspended"](s);
}
;
(function()
{
	function Layout(runtime, m)
	{
		this.runtime = runtime;
		this.event_sheet = null;
		this.scrollX = (this.runtime.original_width / 2);
		this.scrollY = (this.runtime.original_height / 2);
		this.scale = 1.0;
		this.angle = 0;
		this.first_visit = true;
		this.name = m[0];
		this.width = m[1];
		this.height = m[2];
		this.unbounded_scrolling = m[3];
		this.sheetname = m[4];
		this.sid = m[5];
		var lm = m[6];
		var i, len;
		this.layers = [];
		this.initial_types = [];
		for (i = 0, len = lm.length; i < len; i++)
		{
			var layer = new cr.layer(this, lm[i]);
			layer.number = i;
			cr.seal(layer);
			this.layers.push(layer);
		}
		var im = m[7];
		this.initial_nonworld = [];
		for (i = 0, len = im.length; i < len; i++)
		{
			var inst = im[i];
			var type = this.runtime.types_by_index[inst[1]];
;
			if (!type.default_instance)
				type.default_instance = inst;
			this.initial_nonworld.push(inst);
			if (this.initial_types.indexOf(type) === -1)
				this.initial_types.push(type);
		}
		this.effect_types = [];
		this.active_effect_types = [];
		this.effect_params = [];
		for (i = 0, len = m[8].length; i < len; i++)
		{
			this.effect_types.push({
				id: m[8][i][0],
				name: m[8][i][1],
				shaderindex: -1,
				active: true,
				index: i
			});
			this.effect_params.push(m[8][i][2].slice(0));
		}
		this.updateActiveEffects();
		this.rcTex = new cr.rect(0, 0, 1, 1);
		this.rcTex2 = new cr.rect(0, 0, 1, 1);
		this.persist_data = {};
	};
	Layout.prototype.saveObjectToPersist = function (inst)
	{
		var sidStr = inst.type.sid.toString();
		if (!this.persist_data.hasOwnProperty(sidStr))
			this.persist_data[sidStr] = [];
		var type_persist = this.persist_data[sidStr];
		type_persist.push(this.runtime.saveInstanceToJSON(inst));
	};
	Layout.prototype.hasOpaqueBottomLayer = function ()
	{
		var layer = this.layers[0];
		return !layer.transparent && layer.opacity === 1.0 && !layer.forceOwnTexture && layer.visible;
	};
	Layout.prototype.updateActiveEffects = function ()
	{
		this.active_effect_types.length = 0;
		var i, len, et;
		for (i = 0, len = this.effect_types.length; i < len; i++)
		{
			et = this.effect_types[i];
			if (et.active)
				this.active_effect_types.push(et);
		}
	};
	Layout.prototype.getEffectByName = function (name_)
	{
		var i, len, et;
		for (i = 0, len = this.effect_types.length; i < len; i++)
		{
			et = this.effect_types[i];
			if (et.name === name_)
				return et;
		}
		return null;
	};
	var created_instances = [];
	Layout.prototype.startRunning = function ()
	{
		if (this.sheetname)
		{
			this.event_sheet = this.runtime.eventsheets[this.sheetname];
;
			this.event_sheet.updateDeepIncludes();
		}
		this.runtime.running_layout = this;
		this.scrollX = (this.runtime.original_width / 2);
		this.scrollY = (this.runtime.original_height / 2);
		var i, k, len, lenk, type, type_instances, inst, iid, t, s, p, q, type_data, layer;
		for (i = 0, len = this.runtime.types_by_index.length; i < len; i++)
		{
			type = this.runtime.types_by_index[i];
			if (type.is_family)
				continue;		// instances are only transferred for their real type
			type_instances = type.instances;
			for (k = 0, lenk = type_instances.length; k < lenk; k++)
			{
				inst = type_instances[k];
				if (inst.layer)
				{
					var num = inst.layer.number;
					if (num >= this.layers.length)
						num = this.layers.length - 1;
					inst.layer = this.layers[num];
					if (inst.layer.instances.indexOf(inst) === -1)
						inst.layer.instances.push(inst);
					inst.layer.zindices_stale = true;
				}
			}
		}
		var layer;
		created_instances.length = 0;
		this.boundScrolling();
		for (i = 0, len = this.layers.length; i < len; i++)
		{
			layer = this.layers[i];
			layer.createInitialInstances();		// fills created_instances
			layer.disableAngle = true;
			var px = layer.canvasToLayer(0, 0, true, true);
			var py = layer.canvasToLayer(0, 0, false, true);
			layer.disableAngle = false;
			if (this.runtime.pixel_rounding)
			{
				px = (px + 0.5) | 0;
				py = (py + 0.5) | 0;
			}
			layer.rotateViewport(px, py, null);
		}
		var uids_changed = false;
		if (!this.first_visit)
		{
			for (p in this.persist_data)
			{
				if (this.persist_data.hasOwnProperty(p))
				{
					type = this.runtime.getObjectTypeBySid(parseInt(p, 10));
					if (!type || type.is_family || !this.runtime.typeHasPersistBehavior(type))
						continue;
					type_data = this.persist_data[p];
					for (i = 0, len = type_data.length; i < len; i++)
					{
						layer = null;
						if (type.plugin.is_world)
						{
							layer = this.getLayerBySid(type_data[i]["w"]["l"]);
							if (!layer)
								continue;
						}
						inst = this.runtime.createInstanceFromInit(type.default_instance, layer, false, 0, 0, true);
						this.runtime.loadInstanceFromJSON(inst, type_data[i]);
						uids_changed = true;
						created_instances.push(inst);
					}
					type_data.length = 0;
				}
			}
			for (i = 0, len = this.layers.length; i < len; i++)
			{
				this.layers[i].instances.sort(sortInstanceByZIndex);
				this.layers[i].zindices_stale = true;		// in case of duplicates/holes
			}
		}
		if (uids_changed)
		{
			this.runtime.ClearDeathRow();
			this.runtime.refreshUidMap();
		}
		for (i = 0; i < created_instances.length; i++)
		{
			inst = created_instances[i];
			if (!inst.type.is_contained)
				continue;
			iid = inst.get_iid();
			for (k = 0, lenk = inst.type.container.length; k < lenk; k++)
			{
				t = inst.type.container[k];
				if (inst.type === t)
					continue;
				if (t.instances.length > iid)
					inst.siblings.push(t.instances[iid]);
				else
				{
					if (!t.default_instance)
					{
					}
					else
					{
						s = this.runtime.createInstanceFromInit(t.default_instance, inst.layer, true, inst.x, inst.y, true);
						this.runtime.ClearDeathRow();
						t.updateIIDs();
						inst.siblings.push(s);
						created_instances.push(s);		// come back around and link up its own instances too
					}
				}
			}
		}
		for (i = 0, len = this.initial_nonworld.length; i < len; i++)
		{
			inst = this.runtime.createInstanceFromInit(this.initial_nonworld[i], null, true);
;
		}
		this.runtime.changelayout = null;
		this.runtime.ClearDeathRow();
		if (this.runtime.ctx && !this.runtime.isDomFree)
		{
			for (i = 0, len = this.runtime.types_by_index.length; i < len; i++)
			{
				t = this.runtime.types_by_index[i];
				if (t.is_family || !t.instances.length || !t.preloadCanvas2D)
					continue;
				t.preloadCanvas2D(this.runtime.ctx);
			}
		}
		/*
		if (this.runtime.glwrap)
		{
			console.log("Estimated VRAM at layout start: " + this.runtime.glwrap.textureCount() + " textures, approx. " + Math.round(this.runtime.glwrap.estimateVRAM() / 1024) + " kb");
		}
		*/
		for (i = 0, len = created_instances.length; i < len; i++)
		{
			inst = created_instances[i];
			this.runtime.trigger(Object.getPrototypeOf(inst.type.plugin).cnds.OnCreated, inst);
		}
		created_instances.length = 0;
		this.runtime.trigger(cr.system_object.prototype.cnds.OnLayoutStart, null);
		this.first_visit = false;
	};
	Layout.prototype.createGlobalNonWorlds = function ()
	{
		var i, k, len, initial_inst, inst, type;
		for (i = 0, k = 0, len = this.initial_nonworld.length; i < len; i++)
		{
			initial_inst = this.initial_nonworld[i];
			type = this.runtime.types_by_index[initial_inst[1]];
			if (type.global)
				inst = this.runtime.createInstanceFromInit(initial_inst, null, true);
			else
			{
				this.initial_nonworld[k] = initial_inst;
				k++;
			}
		}
		this.initial_nonworld.length = k;
	};
	Layout.prototype.stopRunning = function ()
	{
;
		/*
		if (this.runtime.glwrap)
		{
			console.log("Estimated VRAM at layout end: " + this.runtime.glwrap.textureCount() + " textures, approx. " + Math.round(this.runtime.glwrap.estimateVRAM() / 1024) + " kb");
		}
		*/
		this.runtime.trigger(cr.system_object.prototype.cnds.OnLayoutEnd, null);
		this.runtime.system.waits.length = 0;
		var i, leni, j, lenj;
		var layer_instances, inst, type;
		for (i = 0, leni = this.layers.length; i < leni; i++)
		{
			layer_instances = this.layers[i].instances;
			for (j = 0, lenj = layer_instances.length; j < lenj; j++)
			{
				inst = layer_instances[j];
				if (!inst.type.global)
				{
					if (this.runtime.typeHasPersistBehavior(inst.type))
						this.saveObjectToPersist(inst);
					this.runtime.DestroyInstance(inst);
				}
			}
			this.runtime.ClearDeathRow();
			layer_instances.length = 0;
			this.layers[i].zindices_stale = true;
		}
		for (i = 0, leni = this.runtime.types_by_index.length; i < leni; i++)
		{
			type = this.runtime.types_by_index[i];
			if (type.global || type.plugin.is_world || type.plugin.singleglobal || type.is_family)
				continue;
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
				this.runtime.DestroyInstance(type.instances[j]);
			this.runtime.ClearDeathRow();
		}
	};
	Layout.prototype.draw = function (ctx)
	{
		var layout_canvas;
		var layout_ctx = ctx;
		var ctx_changed = false;
		var render_offscreen = !this.runtime.fullscreenScalingQuality;
		if (render_offscreen)
		{
			if (!this.runtime.layout_canvas)
			{
				this.runtime.layout_canvas = document.createElement("canvas");
				layout_canvas = this.runtime.layout_canvas;
				layout_canvas.width = this.runtime.draw_width;
				layout_canvas.height = this.runtime.draw_height;
				this.runtime.layout_ctx = layout_canvas.getContext("2d");
				ctx_changed = true;
			}
			layout_canvas = this.runtime.layout_canvas;
			layout_ctx = this.runtime.layout_ctx;
			if (layout_canvas.width !== this.runtime.draw_width)
			{
				layout_canvas.width = this.runtime.draw_width;
				ctx_changed = true;
			}
			if (layout_canvas.height !== this.runtime.draw_height)
			{
				layout_canvas.height = this.runtime.draw_height;
				ctx_changed = true;
			}
			if (ctx_changed)
			{
				layout_ctx["webkitImageSmoothingEnabled"] = this.runtime.linearSampling;
				layout_ctx["mozImageSmoothingEnabled"] = this.runtime.linearSampling;
				layout_ctx["msImageSmoothingEnabled"] = this.runtime.linearSampling;
				layout_ctx["imageSmoothingEnabled"] = this.runtime.linearSampling;
			}
		}
		layout_ctx.globalAlpha = 1;
		layout_ctx.globalCompositeOperation = "source-over";
		if (this.runtime.alphaBackground && !this.hasOpaqueBottomLayer())
			layout_ctx.clearRect(0, 0, this.runtime.draw_width, this.runtime.draw_height);
		var i, len, l;
		for (i = 0, len = this.layers.length; i < len; i++)
		{
			l = this.layers[i];
			if (l.visible && l.opacity > 0 && l.blend_mode !== 11)
				l.draw(layout_ctx);
		}
		if (render_offscreen)
		{
			ctx.drawImage(layout_canvas, 0, 0, this.runtime.width, this.runtime.height);
		}
	};
	Layout.prototype.drawGL = function (glw)
	{
		var render_to_texture = (this.active_effect_types.length > 0 ||
								 this.runtime.uses_background_blending ||
								 !this.runtime.fullscreenScalingQuality);
		if (render_to_texture)
		{
			if (!this.runtime.layout_tex)
			{
				this.runtime.layout_tex = glw.createEmptyTexture(this.runtime.draw_width, this.runtime.draw_height, this.runtime.linearSampling);
			}
			if (this.runtime.layout_tex.c2width !== this.runtime.draw_width || this.runtime.layout_tex.c2height !== this.runtime.draw_height)
			{
				glw.deleteTexture(this.runtime.layout_tex);
				this.runtime.layout_tex = glw.createEmptyTexture(this.runtime.draw_width, this.runtime.draw_height, this.runtime.linearSampling);
			}
			glw.setRenderingToTexture(this.runtime.layout_tex);
			if (!this.runtime.fullscreenScalingQuality)
			{
				glw.setSize(this.runtime.draw_width, this.runtime.draw_height);
			}
		}
		else
		{
			if (this.runtime.layout_tex)
			{
				glw.setRenderingToTexture(null);
				glw.deleteTexture(this.runtime.layout_tex);
				this.runtime.layout_tex = null;
			}
		}
		if (this.runtime.alphaBackground && !this.hasOpaqueBottomLayer())
			glw.clear(0, 0, 0, 0);
		var i, len;
		for (i = 0, len = this.layers.length; i < len; i++)
		{
			if (this.layers[i].visible && this.layers[i].opacity > 0)
				this.layers[i].drawGL(glw);
		}
		if (render_to_texture)
		{
			if (this.active_effect_types.length === 0 ||
				(this.active_effect_types.length === 1 && this.runtime.fullscreenScalingQuality))
			{
				if (this.active_effect_types.length === 1)
				{
					var etindex = this.active_effect_types[0].index;
					glw.switchProgram(this.active_effect_types[0].shaderindex);
					glw.setProgramParameters(null,								// backTex
											 1.0 / this.runtime.draw_width,		// pixelWidth
											 1.0 / this.runtime.draw_height,	// pixelHeight
											 0.0, 0.0,							// destStart
											 1.0, 1.0,							// destEnd
											 this.scale,						// layerScale
											 this.angle,						// layerAngle
											 0.0, 0.0,							// viewOrigin
											 this.effect_params[etindex]);		// fx parameters
					if (glw.programIsAnimated(this.active_effect_types[0].shaderindex))
						this.runtime.redraw = true;
				}
				else
					glw.switchProgram(0);
				if (!this.runtime.fullscreenScalingQuality)
				{
					glw.setSize(this.runtime.width, this.runtime.height);
				}
				glw.setRenderingToTexture(null);				// to backbuffer
				glw.setOpacity(1);
				glw.setTexture(this.runtime.layout_tex);
				glw.setAlphaBlend();
				glw.resetModelView();
				glw.updateModelView();
				var halfw = this.runtime.width / 2;
				var halfh = this.runtime.height / 2;
				glw.quad(-halfw, halfh, halfw, halfh, halfw, -halfh, -halfw, -halfh);
				glw.setTexture(null);
			}
			else
			{
				this.renderEffectChain(glw, null, null, null);
			}
		}
	};
	Layout.prototype.getRenderTarget = function()
	{
		return (this.active_effect_types.length > 0 ||
				this.runtime.uses_background_blending ||
				!this.runtime.fullscreenScalingQuality) ? this.runtime.layout_tex : null;
	};
	Layout.prototype.getMinLayerScale = function ()
	{
		var m = this.layers[0].getScale();
		var i, len, l;
		for (i = 1, len = this.layers.length; i < len; i++)
		{
			l = this.layers[i];
			if (l.parallaxX === 0 && l.parallaxY === 0)
				continue;
			if (l.getScale() < m)
				m = l.getScale();
		}
		return m;
	};
	Layout.prototype.scrollToX = function (x)
	{
		if (!this.unbounded_scrolling)
		{
			var widthBoundary = (this.runtime.draw_width * (1 / this.getMinLayerScale()) / 2);
			if (x > this.width - widthBoundary)
				x = this.width - widthBoundary;
			if (x < widthBoundary)
				x = widthBoundary;
		}
		if (this.scrollX !== x)
		{
			this.scrollX = x;
			this.runtime.redraw = true;
		}
	};
	Layout.prototype.scrollToY = function (y)
	{
		if (!this.unbounded_scrolling)
		{
			var heightBoundary = (this.runtime.draw_height * (1 / this.getMinLayerScale()) / 2);
			if (y > this.height - heightBoundary)
				y = this.height - heightBoundary;
			if (y < heightBoundary)
				y = heightBoundary;
		}
		if (this.scrollY !== y)
		{
			this.scrollY = y;
			this.runtime.redraw = true;
		}
	};
	Layout.prototype.boundScrolling = function ()
	{
		this.scrollToX(this.scrollX);
		this.scrollToY(this.scrollY);
	};
	Layout.prototype.renderEffectChain = function (glw, layer, inst, rendertarget)
	{
		var active_effect_types = inst ?
							inst.active_effect_types :
							layer ?
								layer.active_effect_types :
								this.active_effect_types;
		var layerScale = 1, layerAngle = 0, viewOriginLeft = 0, viewOriginTop = 0;
		if (inst)
		{
			layerScale = inst.layer.getScale();
			layerAngle = inst.layer.getAngle();
			viewOriginLeft = inst.layer.viewLeft;
			viewOriginTop = inst.layer.viewTop;
		}
		else if (layer)
		{
			layerScale = layer.getScale();
			layerAngle = layer.getAngle();
			viewOriginLeft = layer.viewLeft;
			viewOriginTop = layer.viewTop;
		}
		var fx_tex = this.runtime.fx_tex;
		var i, len, last, temp, fx_index = 0, other_fx_index = 1;
		var y, h;
		var windowWidth = this.runtime.draw_width;
		var windowHeight = this.runtime.draw_height;
		var halfw = windowWidth / 2;
		var halfh = windowHeight / 2;
		var rcTex = layer ? layer.rcTex : this.rcTex;
		var rcTex2 = layer ? layer.rcTex2 : this.rcTex2;
		var screenleft = 0, clearleft = 0;
		var screentop = 0, cleartop = 0;
		var screenright = windowWidth, clearright = windowWidth;
		var screenbottom = windowHeight, clearbottom = windowHeight;
		var boxExtendHorizontal = 0;
		var boxExtendVertical = 0;
		var inst_layer_angle = inst ? inst.layer.getAngle() : 0;
		if (inst)
		{
			for (i = 0, len = active_effect_types.length; i < len; i++)
			{
				boxExtendHorizontal += glw.getProgramBoxExtendHorizontal(active_effect_types[i].shaderindex);
				boxExtendVertical += glw.getProgramBoxExtendVertical(active_effect_types[i].shaderindex);
			}
			var bbox = inst.bbox;
			screenleft = layer.layerToCanvas(bbox.left, bbox.top, true, true);
			screentop = layer.layerToCanvas(bbox.left, bbox.top, false, true);
			screenright = layer.layerToCanvas(bbox.right, bbox.bottom, true, true);
			screenbottom = layer.layerToCanvas(bbox.right, bbox.bottom, false, true);
			if (inst_layer_angle !== 0)
			{
				var screentrx = layer.layerToCanvas(bbox.right, bbox.top, true, true);
				var screentry = layer.layerToCanvas(bbox.right, bbox.top, false, true);
				var screenblx = layer.layerToCanvas(bbox.left, bbox.bottom, true, true);
				var screenbly = layer.layerToCanvas(bbox.left, bbox.bottom, false, true);
				temp = Math.min(screenleft, screenright, screentrx, screenblx);
				screenright = Math.max(screenleft, screenright, screentrx, screenblx);
				screenleft = temp;
				temp = Math.min(screentop, screenbottom, screentry, screenbly);
				screenbottom = Math.max(screentop, screenbottom, screentry, screenbly);
				screentop = temp;
			}
			screenleft -= boxExtendHorizontal;
			screentop -= boxExtendVertical;
			screenright += boxExtendHorizontal;
			screenbottom += boxExtendVertical;
			rcTex2.left = screenleft / windowWidth;
			rcTex2.top = 1 - screentop / windowHeight;
			rcTex2.right = screenright / windowWidth;
			rcTex2.bottom = 1 - screenbottom / windowHeight;
			clearleft = screenleft = cr.floor(screenleft);
			cleartop = screentop = cr.floor(screentop);
			clearright = screenright = cr.ceil(screenright);
			clearbottom = screenbottom = cr.ceil(screenbottom);
			clearleft -= boxExtendHorizontal;
			cleartop -= boxExtendVertical;
			clearright += boxExtendHorizontal;
			clearbottom += boxExtendVertical;
			if (screenleft < 0)					screenleft = 0;
			if (screentop < 0)					screentop = 0;
			if (screenright > windowWidth)		screenright = windowWidth;
			if (screenbottom > windowHeight)	screenbottom = windowHeight;
			if (clearleft < 0)					clearleft = 0;
			if (cleartop < 0)					cleartop = 0;
			if (clearright > windowWidth)		clearright = windowWidth;
			if (clearbottom > windowHeight)		clearbottom = windowHeight;
			rcTex.left = screenleft / windowWidth;
			rcTex.top = 1 - screentop / windowHeight;
			rcTex.right = screenright / windowWidth;
			rcTex.bottom = 1 - screenbottom / windowHeight;
		}
		else
		{
			rcTex.left = rcTex2.left = 0;
			rcTex.top = rcTex2.top = 0;
			rcTex.right = rcTex2.right = 1;
			rcTex.bottom = rcTex2.bottom = 1;
		}
		var pre_draw = (inst && (((inst.angle || inst_layer_angle) && glw.programUsesDest(active_effect_types[0].shaderindex)) || boxExtendHorizontal !== 0 || boxExtendVertical !== 0 || inst.opacity !== 1 || inst.type.plugin.must_predraw)) || (layer && !inst && layer.opacity !== 1);
		glw.setAlphaBlend();
		if (pre_draw)
		{
			if (!fx_tex[fx_index])
			{
				fx_tex[fx_index] = glw.createEmptyTexture(windowWidth, windowHeight, this.runtime.linearSampling);
			}
			if (fx_tex[fx_index].c2width !== windowWidth || fx_tex[fx_index].c2height !== windowHeight)
			{
				glw.deleteTexture(fx_tex[fx_index]);
				fx_tex[fx_index] = glw.createEmptyTexture(windowWidth, windowHeight, this.runtime.linearSampling);
			}
			glw.switchProgram(0);
			glw.setRenderingToTexture(fx_tex[fx_index]);
			h = clearbottom - cleartop;
			y = (windowHeight - cleartop) - h;
			glw.clearRect(clearleft, y, clearright - clearleft, h);
			if (inst)
			{
				inst.drawGL(glw);
			}
			else
			{
				glw.setTexture(this.runtime.layer_tex);
				glw.setOpacity(layer.opacity);
				glw.resetModelView();
				glw.translate(-halfw, -halfh);
				glw.updateModelView();
				glw.quadTex(screenleft, screenbottom, screenright, screenbottom, screenright, screentop, screenleft, screentop, rcTex);
			}
			rcTex2.left = rcTex2.top = 0;
			rcTex2.right = rcTex2.bottom = 1;
			if (inst)
			{
				temp = rcTex.top;
				rcTex.top = rcTex.bottom;
				rcTex.bottom = temp;
			}
			fx_index = 1;
			other_fx_index = 0;
		}
		glw.setOpacity(1);
		var last = active_effect_types.length - 1;
		var post_draw = glw.programUsesCrossSampling(active_effect_types[last].shaderindex) ||
						(!layer && !inst && !this.runtime.fullscreenScalingQuality);
		var etindex = 0;
		for (i = 0, len = active_effect_types.length; i < len; i++)
		{
			if (!fx_tex[fx_index])
			{
				fx_tex[fx_index] = glw.createEmptyTexture(windowWidth, windowHeight, this.runtime.linearSampling);
			}
			if (fx_tex[fx_index].c2width !== windowWidth || fx_tex[fx_index].c2height !== windowHeight)
			{
				glw.deleteTexture(fx_tex[fx_index]);
				fx_tex[fx_index] = glw.createEmptyTexture(windowWidth, windowHeight, this.runtime.linearSampling);
			}
			glw.switchProgram(active_effect_types[i].shaderindex);
			etindex = active_effect_types[i].index;
			if (glw.programIsAnimated(active_effect_types[i].shaderindex))
				this.runtime.redraw = true;
			if (i == 0 && !pre_draw)
			{
				glw.setRenderingToTexture(fx_tex[fx_index]);
				h = clearbottom - cleartop;
				y = (windowHeight - cleartop) - h;
				glw.clearRect(clearleft, y, clearright - clearleft, h);
				if (inst)
				{
					glw.setProgramParameters(rendertarget,					// backTex
											 1.0 / inst.width,				// pixelWidth
											 1.0 / inst.height,				// pixelHeight
											 rcTex2.left, rcTex2.top,		// destStart
											 rcTex2.right, rcTex2.bottom,	// destEnd
											 layerScale,
											 layerAngle,
											 viewOriginLeft, viewOriginTop,
											 inst.effect_params[etindex]);	// fx params
					inst.drawGL(glw);
				}
				else
				{
					glw.setProgramParameters(rendertarget,					// backTex
											 1.0 / windowWidth,				// pixelWidth
											 1.0 / windowHeight,			// pixelHeight
											 0.0, 0.0,						// destStart
											 1.0, 1.0,						// destEnd
											 layerScale,
											 layerAngle,
											 viewOriginLeft, viewOriginTop,
											 layer ?						// fx params
												layer.effect_params[etindex] :
												this.effect_params[etindex]);
					glw.setTexture(layer ? this.runtime.layer_tex : this.runtime.layout_tex);
					glw.resetModelView();
					glw.translate(-halfw, -halfh);
					glw.updateModelView();
					glw.quadTex(screenleft, screenbottom, screenright, screenbottom, screenright, screentop, screenleft, screentop, rcTex);
				}
				rcTex2.left = rcTex2.top = 0;
				rcTex2.right = rcTex2.bottom = 1;
				if (inst && !post_draw)
				{
					temp = screenbottom;
					screenbottom = screentop;
					screentop = temp;
				}
			}
			else
			{
				glw.setProgramParameters(rendertarget,						// backTex
										 1.0 / windowWidth,					// pixelWidth
										 1.0 / windowHeight,				// pixelHeight
										 rcTex2.left, rcTex2.top,			// destStart
										 rcTex2.right, rcTex2.bottom,		// destEnd
										 layerScale,
										 layerAngle,
										 viewOriginLeft, viewOriginTop,
										 inst ?								// fx params
											inst.effect_params[etindex] :
											layer ?
												layer.effect_params[etindex] :
												this.effect_params[etindex]);
				glw.setTexture(null);
				if (i === last && !post_draw)
				{
					if (inst)
						glw.setBlend(inst.srcBlend, inst.destBlend);
					else if (layer)
						glw.setBlend(layer.srcBlend, layer.destBlend);
					glw.setRenderingToTexture(rendertarget);
				}
				else
				{
					glw.setRenderingToTexture(fx_tex[fx_index]);
					h = clearbottom - cleartop;
					y = (windowHeight - cleartop) - h;
					glw.clearRect(clearleft, y, clearright - clearleft, h);
				}
				glw.setTexture(fx_tex[other_fx_index]);
				glw.resetModelView();
				glw.translate(-halfw, -halfh);
				glw.updateModelView();
				glw.quadTex(screenleft, screenbottom, screenright, screenbottom, screenright, screentop, screenleft, screentop, rcTex);
				if (i === last && !post_draw)
					glw.setTexture(null);
			}
			fx_index = (fx_index === 0 ? 1 : 0);
			other_fx_index = (fx_index === 0 ? 1 : 0);		// will be opposite to fx_index since it was just assigned
		}
		if (post_draw)
		{
			glw.switchProgram(0);
			if (inst)
				glw.setBlend(inst.srcBlend, inst.destBlend);
			else if (layer)
				glw.setBlend(layer.srcBlend, layer.destBlend);
			else
			{
				if (!this.runtime.fullscreenScalingQuality)
				{
					glw.setSize(this.runtime.width, this.runtime.height);
					halfw = this.runtime.width / 2;
					halfh = this.runtime.height / 2;
					screenleft = 0;
					screentop = 0;
					screenright = this.runtime.width;
					screenbottom = this.runtime.height;
				}
			}
			glw.setRenderingToTexture(rendertarget);
			glw.setTexture(fx_tex[other_fx_index]);
			glw.resetModelView();
			glw.translate(-halfw, -halfh);
			glw.updateModelView();
			if (inst && active_effect_types.length === 1 && !pre_draw)
				glw.quadTex(screenleft, screentop, screenright, screentop, screenright, screenbottom, screenleft, screenbottom, rcTex);
			else
				glw.quadTex(screenleft, screenbottom, screenright, screenbottom, screenright, screentop, screenleft, screentop, rcTex);
			glw.setTexture(null);
		}
	};
	Layout.prototype.getLayerBySid = function (sid_)
	{
		var i, len;
		for (i = 0, len = this.layers.length; i < len; i++)
		{
			if (this.layers[i].sid === sid_)
				return this.layers[i];
		}
		return null;
	};
	Layout.prototype.saveToJSON = function ()
	{
		var i, len, layer, et;
		var o = {
			"sx": this.scrollX,
			"sy": this.scrollY,
			"s": this.scale,
			"a": this.angle,
			"w": this.width,
			"h": this.height,
			"fv": this.first_visit,			// added r127
			"persist": this.persist_data,
			"fx": [],
			"layers": {}
		};
		for (i = 0, len = this.effect_types.length; i < len; i++)
		{
			et = this.effect_types[i];
			o["fx"].push({"name": et.name, "active": et.active, "params": this.effect_params[et.index] });
		}
		for (i = 0, len = this.layers.length; i < len; i++)
		{
			layer = this.layers[i];
			o["layers"][layer.sid.toString()] = layer.saveToJSON();
		}
		return o;
	};
	Layout.prototype.loadFromJSON = function (o)
	{
		var i, len, fx, p, layer;
		this.scrollX = o["sx"];
		this.scrollY = o["sy"];
		this.scale = o["s"];
		this.angle = o["a"];
		this.width = o["w"];
		this.height = o["h"];
		this.persist_data = o["persist"];
		if (typeof o["fv"] !== "undefined")
			this.first_visit = o["fv"];
		var ofx = o["fx"];
		for (i = 0, len = ofx.length; i < len; i++)
		{
			fx = this.getEffectByName(ofx[i]["name"]);
			if (!fx)
				continue;		// must've gone missing
			fx.active = ofx[i]["active"];
			this.effect_params[fx.index] = ofx[i]["params"];
		}
		this.updateActiveEffects();
		var olayers = o["layers"];
		for (p in olayers)
		{
			if (olayers.hasOwnProperty(p))
			{
				layer = this.getLayerBySid(parseInt(p, 10));
				if (!layer)
					continue;		// must've gone missing
				layer.loadFromJSON(olayers[p]);
			}
		}
	};
	cr.layout = Layout;
	function Layer(layout, m)
	{
		this.layout = layout;
		this.runtime = layout.runtime;
		this.instances = [];        // running instances
		this.scale = 1.0;
		this.angle = 0;
		this.disableAngle = false;
		this.tmprect = new cr.rect(0, 0, 0, 0);
		this.tmpquad = new cr.quad();
		this.viewLeft = 0;
		this.viewRight = 0;
		this.viewTop = 0;
		this.viewBottom = 0;
		this.zindices_stale = false;
		this.name = m[0];
		this.index = m[1];
		this.sid = m[2];
		this.visible = m[3];		// initially visible
		this.background_color = m[4];
		this.transparent = m[5];
		this.parallaxX = m[6];
		this.parallaxY = m[7];
		this.opacity = m[8];
		this.forceOwnTexture = m[9];
		this.zoomRate = m[10];
		this.blend_mode = m[11];
		this.effect_fallback = m[12];
		this.compositeOp = "source-over";
		this.srcBlend = 0;
		this.destBlend = 0;
		this.render_offscreen = false;
		var im = m[13];
		var i, len;
		this.initial_instances = [];
		for (i = 0, len = im.length; i < len; i++)
		{
			var inst = im[i];
			var type = this.runtime.types_by_index[inst[1]];
;
			if (!type.default_instance)
			{
				type.default_instance = inst;
				type.default_layerindex = this.index;
			}
			this.initial_instances.push(inst);
			if (this.layout.initial_types.indexOf(type) === -1)
				this.layout.initial_types.push(type);
		}
		this.effect_types = [];
		this.active_effect_types = [];
		this.effect_params = [];
		for (i = 0, len = m[14].length; i < len; i++)
		{
			this.effect_types.push({
				id: m[14][i][0],
				name: m[14][i][1],
				shaderindex: -1,
				active: true,
				index: i
			});
			this.effect_params.push(m[14][i][2].slice(0));
		}
		this.updateActiveEffects();
		this.rcTex = new cr.rect(0, 0, 1, 1);
		this.rcTex2 = new cr.rect(0, 0, 1, 1);
	};
	Layer.prototype.updateActiveEffects = function ()
	{
		this.active_effect_types.length = 0;
		var i, len, et;
		for (i = 0, len = this.effect_types.length; i < len; i++)
		{
			et = this.effect_types[i];
			if (et.active)
				this.active_effect_types.push(et);
		}
	};
	Layer.prototype.getEffectByName = function (name_)
	{
		var i, len, et;
		for (i = 0, len = this.effect_types.length; i < len; i++)
		{
			et = this.effect_types[i];
			if (et.name === name_)
				return et;
		}
		return null;
	};
	Layer.prototype.createInitialInstances = function ()
	{
		var i, k, len, inst, initial_inst, type, keep, hasPersistBehavior;
		for (i = 0, k = 0, len = this.initial_instances.length; i < len; i++)
		{
			initial_inst = this.initial_instances[i];
			type = this.runtime.types_by_index[initial_inst[1]];
;
			hasPersistBehavior = this.runtime.typeHasPersistBehavior(type);
			keep = true;
			if (!hasPersistBehavior || this.layout.first_visit)
			{
				inst = this.runtime.createInstanceFromInit(initial_inst, this, true);
;
				created_instances.push(inst);
				if (inst.type.global)
					keep = false;
			}
			if (keep)
			{
				this.initial_instances[k] = this.initial_instances[i];
				k++;
			}
		}
		this.initial_instances.length = k;
		this.runtime.ClearDeathRow();		// flushes creation row so IIDs will be correct
		if (!this.runtime.glwrap && this.effect_types.length)	// no WebGL renderer and shaders used
			this.blend_mode = this.effect_fallback;				// use fallback blend mode
		this.compositeOp = cr.effectToCompositeOp(this.blend_mode);
		if (this.runtime.gl)
			cr.setGLBlend(this, this.blend_mode, this.runtime.gl);
	};
	Layer.prototype.updateZIndices = function ()
	{
		if (!this.zindices_stale)
			return;
		var i, len;
		for (i = 0, len = this.instances.length; i < len; i++)
		{
;
;
			this.instances[i].zindex = i;
		}
		this.zindices_stale = false;
	};
	Layer.prototype.getScale = function (include_aspect)
	{
		return this.getNormalScale() * (this.runtime.fullscreenScalingQuality || include_aspect ? this.runtime.aspect_scale : 1);
	};
	Layer.prototype.getNormalScale = function ()
	{
		return ((this.scale * this.layout.scale) - 1) * this.zoomRate + 1;
	};
	Layer.prototype.getAngle = function ()
	{
		if (this.disableAngle)
			return 0;
		return cr.clamp_angle(this.layout.angle + this.angle);
	};
	Layer.prototype.draw = function (ctx)
	{
		this.render_offscreen = (this.forceOwnTexture || this.opacity !== 1.0 || this.blend_mode !== 0);
		var layer_canvas = this.runtime.canvas;
		var layer_ctx = ctx;
		var ctx_changed = false;
		if (this.render_offscreen)
		{
			if (!this.runtime.layer_canvas)
			{
				this.runtime.layer_canvas = document.createElement("canvas");
;
				layer_canvas = this.runtime.layer_canvas;
				layer_canvas.width = this.runtime.draw_width;
				layer_canvas.height = this.runtime.draw_height;
				this.runtime.layer_ctx = layer_canvas.getContext("2d");
;
				ctx_changed = true;
			}
			layer_canvas = this.runtime.layer_canvas;
			layer_ctx = this.runtime.layer_ctx;
			if (layer_canvas.width !== this.runtime.draw_width)
			{
				layer_canvas.width = this.runtime.draw_width;
				ctx_changed = true;
			}
			if (layer_canvas.height !== this.runtime.draw_height)
			{
				layer_canvas.height = this.runtime.draw_height;
				ctx_changed = true;
			}
			if (ctx_changed)
			{
				layer_ctx["webkitImageSmoothingEnabled"] = this.runtime.linearSampling;
				layer_ctx["mozImageSmoothingEnabled"] = this.runtime.linearSampling;
				layer_ctx["msImageSmoothingEnabled"] = this.runtime.linearSampling;
				layer_ctx["imageSmoothingEnabled"] = this.runtime.linearSampling;
			}
			if (this.transparent)
				layer_ctx.clearRect(0, 0, this.runtime.draw_width, this.runtime.draw_height);
		}
		layer_ctx.globalAlpha = 1;
		layer_ctx.globalCompositeOperation = "source-over";
		if (!this.transparent)
		{
			layer_ctx.fillStyle = "rgb(" + this.background_color[0] + "," + this.background_color[1] + "," + this.background_color[2] + ")";
			layer_ctx.fillRect(0, 0, this.runtime.draw_width, this.runtime.draw_height);
		}
		layer_ctx.save();
		this.disableAngle = true;
		var px = this.canvasToLayer(0, 0, true, true);
		var py = this.canvasToLayer(0, 0, false, true);
		this.disableAngle = false;
		if (this.runtime.pixel_rounding)
		{
			px = (px + 0.5) | 0;
			py = (py + 0.5) | 0;
		}
		this.rotateViewport(px, py, layer_ctx);
		var myscale = this.getScale();
		layer_ctx.scale(myscale, myscale);
		layer_ctx.translate(-px, -py);
		var i, len, inst, bbox;
		for (i = 0, len = this.instances.length; i < len; i++)
		{
			inst = this.instances[i];
			if (!inst.visible || inst.width === 0 || inst.height === 0)
				continue;
			inst.update_bbox();
			bbox = inst.bbox;
			if (bbox.right < this.viewLeft || bbox.bottom < this.viewTop || bbox.left > this.viewRight || bbox.top > this.viewBottom)
				continue;
			layer_ctx.globalCompositeOperation = inst.compositeOp;
			inst.draw(layer_ctx);
		}
		layer_ctx.restore();
		if (this.render_offscreen)
		{
			ctx.globalCompositeOperation = this.compositeOp;
			ctx.globalAlpha = this.opacity;
			ctx.drawImage(layer_canvas, 0, 0);
		}
	};
	Layer.prototype.rotateViewport = function (px, py, ctx)
	{
		var myscale = this.getScale();
		this.viewLeft = px;
		this.viewTop = py;
		this.viewRight = px + (this.runtime.draw_width * (1 / myscale));
		this.viewBottom = py + (this.runtime.draw_height * (1 / myscale));
		var myAngle = this.getAngle();
		if (myAngle !== 0)
		{
			if (ctx)
			{
				ctx.translate(this.runtime.draw_width / 2, this.runtime.draw_height / 2);
				ctx.rotate(-myAngle);
				ctx.translate(this.runtime.draw_width / -2, this.runtime.draw_height / -2);
			}
			this.tmprect.set(this.viewLeft, this.viewTop, this.viewRight, this.viewBottom);
			this.tmprect.offset((this.viewLeft + this.viewRight) / -2, (this.viewTop + this.viewBottom) / -2);
			this.tmpquad.set_from_rotated_rect(this.tmprect, myAngle);
			this.tmpquad.bounding_box(this.tmprect);
			this.tmprect.offset((this.viewLeft + this.viewRight) / 2, (this.viewTop + this.viewBottom) / 2);
			this.viewLeft = this.tmprect.left;
			this.viewTop = this.tmprect.top;
			this.viewRight = this.tmprect.right;
			this.viewBottom = this.tmprect.bottom;
		}
	}
	Layer.prototype.drawGL = function (glw)
	{
		var windowWidth = this.runtime.draw_width;
		var windowHeight = this.runtime.draw_height;
		var shaderindex = 0;
		var etindex = 0;
		this.render_offscreen = (this.forceOwnTexture || this.opacity !== 1.0 || this.active_effect_types.length > 0 || this.blend_mode !== 0);
		if (this.render_offscreen)
		{
			if (!this.runtime.layer_tex)
			{
				this.runtime.layer_tex = glw.createEmptyTexture(this.runtime.draw_width, this.runtime.draw_height, this.runtime.linearSampling);
			}
			if (this.runtime.layer_tex.c2width !== this.runtime.draw_width || this.runtime.layer_tex.c2height !== this.runtime.draw_height)
			{
				glw.deleteTexture(this.runtime.layer_tex);
				this.runtime.layer_tex = glw.createEmptyTexture(this.runtime.draw_width, this.runtime.draw_height, this.runtime.linearSampling);
			}
			glw.setRenderingToTexture(this.runtime.layer_tex);
			if (this.transparent)
				glw.clear(0, 0, 0, 0);
		}
		if (!this.transparent)
		{
			glw.clear(this.background_color[0] / 255, this.background_color[1] / 255, this.background_color[2] / 255, 1);
		}
		this.disableAngle = true;
		var px = this.canvasToLayer(0, 0, true, true);
		var py = this.canvasToLayer(0, 0, false, true);
		this.disableAngle = false;
		if (this.runtime.pixel_rounding)
		{
			px = (px + 0.5) | 0;
			py = (py + 0.5) | 0;
		}
		this.rotateViewport(px, py, null);
		var myscale = this.getScale();
		glw.resetModelView();
		glw.scale(myscale, myscale);
		glw.rotateZ(-this.getAngle());
		glw.translate((this.viewLeft + this.viewRight) / -2, (this.viewTop + this.viewBottom) / -2);
		glw.updateModelView();
		var i, len, inst, bbox;
		for (i = 0, len = this.instances.length; i < len; i++)
		{
			inst = this.instances[i];
			if (!inst.visible || inst.width === 0 || inst.height === 0)
				continue;
			inst.update_bbox();
			bbox = inst.bbox;
			if (bbox.right < this.viewLeft || bbox.bottom < this.viewTop || bbox.left > this.viewRight || bbox.top > this.viewBottom)
				continue;
			if (inst.uses_shaders)
			{
				shaderindex = inst.active_effect_types[0].shaderindex;
				etindex = inst.active_effect_types[0].index;
				if (inst.active_effect_types.length === 1 && !glw.programUsesCrossSampling(shaderindex) &&
					!glw.programExtendsBox(shaderindex) && ((!inst.angle && !inst.layer.getAngle()) || !glw.programUsesDest(shaderindex)) &&
					inst.opacity === 1 && !inst.type.plugin.must_predraw)
				{
					glw.switchProgram(shaderindex);
					glw.setBlend(inst.srcBlend, inst.destBlend);
					if (glw.programIsAnimated(shaderindex))
						this.runtime.redraw = true;
					var destStartX = 0, destStartY = 0, destEndX = 0, destEndY = 0;
					if (glw.programUsesDest(shaderindex))
					{
						var bbox = inst.bbox;
						var screenleft = this.layerToCanvas(bbox.left, bbox.top, true, true);
						var screentop = this.layerToCanvas(bbox.left, bbox.top, false, true);
						var screenright = this.layerToCanvas(bbox.right, bbox.bottom, true, true);
						var screenbottom = this.layerToCanvas(bbox.right, bbox.bottom, false, true);
						destStartX = screenleft / windowWidth;
						destStartY = 1 - screentop / windowHeight;
						destEndX = screenright / windowWidth;
						destEndY = 1 - screenbottom / windowHeight;
					}
					glw.setProgramParameters(this.render_offscreen ? this.runtime.layer_tex : this.layout.getRenderTarget(), // backTex
											 1.0 / inst.width,			// pixelWidth
											 1.0 / inst.height,			// pixelHeight
											 destStartX, destStartY,
											 destEndX, destEndY,
											 this.getScale(),
											 this.getAngle(),
											 this.viewLeft, this.viewTop,
											 inst.effect_params[etindex]);
					inst.drawGL(glw);
				}
				else
				{
					this.layout.renderEffectChain(glw, this, inst, this.render_offscreen ? this.runtime.layer_tex : this.layout.getRenderTarget());
					glw.resetModelView();
					glw.scale(myscale, myscale);
					glw.rotateZ(-this.getAngle());
					glw.translate((this.viewLeft + this.viewRight) / -2, (this.viewTop + this.viewBottom) / -2);
					glw.updateModelView();
				}
			}
			else
			{
				glw.switchProgram(0);		// un-set any previously set shader
				glw.setBlend(inst.srcBlend, inst.destBlend);
				inst.drawGL(glw);
			}
		}
		if (this.render_offscreen)
		{
			shaderindex = this.active_effect_types.length ? this.active_effect_types[0].shaderindex : 0;
			etindex = this.active_effect_types.length ? this.active_effect_types[0].index : 0;
			if (this.active_effect_types.length === 0 || (this.active_effect_types.length === 1 &&
				!glw.programUsesCrossSampling(shaderindex) && this.opacity === 1))
			{
				if (this.active_effect_types.length === 1)
				{
					glw.switchProgram(shaderindex);
					glw.setProgramParameters(this.layout.getRenderTarget(),		// backTex
											 1.0 / this.runtime.draw_width,		// pixelWidth
											 1.0 / this.runtime.draw_height,	// pixelHeight
											 0.0, 0.0,							// destStart
											 1.0, 1.0,							// destEnd
											 this.getScale(),					// layerScale
											 this.getAngle(),
											 this.viewLeft, this.viewTop,
											 this.effect_params[etindex]);		// fx parameters
					if (glw.programIsAnimated(shaderindex))
						this.runtime.redraw = true;
				}
				else
					glw.switchProgram(0);
				glw.setRenderingToTexture(this.layout.getRenderTarget());
				glw.setOpacity(this.opacity);
				glw.setTexture(this.runtime.layer_tex);
				glw.setBlend(this.srcBlend, this.destBlend);
				glw.resetModelView();
				glw.updateModelView();
				var halfw = this.runtime.draw_width / 2;
				var halfh = this.runtime.draw_height / 2;
				glw.quad(-halfw, halfh, halfw, halfh, halfw, -halfh, -halfw, -halfh);
				glw.setTexture(null);
			}
			else
			{
				this.layout.renderEffectChain(glw, this, null, this.layout.getRenderTarget());
			}
		}
	};
	Layer.prototype.canvasToLayer = function (ptx, pty, getx, using_draw_area)
	{
		var multiplier = this.runtime.devicePixelRatio;
		if (this.runtime.isRetina)
		{
			ptx *= multiplier;
			pty *= multiplier;
		}
		var ox = this.runtime.parallax_x_origin;
		var oy = this.runtime.parallax_y_origin;
		var x = ((this.layout.scrollX - ox) * this.parallaxX) + ox;
		var y = ((this.layout.scrollY - oy) * this.parallaxY) + oy;
		var invScale = 1 / this.getScale(!using_draw_area);
		if (using_draw_area)
		{
			x -= (this.runtime.draw_width * invScale) / 2;
			y -= (this.runtime.draw_height * invScale) / 2;
		}
		else
		{
			x -= (this.runtime.width * invScale) / 2;
			y -= (this.runtime.height * invScale) / 2;
		}
		x += ptx * invScale;
		y += pty * invScale;
		var a = this.getAngle();
		if (a !== 0)
		{
			x -= this.layout.scrollX;
			y -= this.layout.scrollY;
			var cosa = Math.cos(a);
			var sina = Math.sin(a);
			var x_temp = (x * cosa) - (y * sina);
			y = (y * cosa) + (x * sina);
			x = x_temp;
			x += this.layout.scrollX;
			y += this.layout.scrollY;
		}
		return getx ? x : y;
	};
	Layer.prototype.layerToCanvas = function (ptx, pty, getx, using_draw_area)
	{
		var a = this.getAngle();
		if (a !== 0)
		{
			ptx -= this.layout.scrollX;
			pty -= this.layout.scrollY;
			var cosa = Math.cos(-a);
			var sina = Math.sin(-a);
			var x_temp = (ptx * cosa) - (pty * sina);
			pty = (pty * cosa) + (ptx * sina);
			ptx = x_temp;
			ptx += this.layout.scrollX;
			pty += this.layout.scrollY;
		}
		var ox = this.runtime.parallax_x_origin;
		var oy = this.runtime.parallax_y_origin;
		var x = ((this.layout.scrollX - ox) * this.parallaxX) + ox;
		var y = ((this.layout.scrollY - oy) * this.parallaxY) + oy;
		var invScale = 1 / this.getScale(!using_draw_area);
		if (using_draw_area)
		{
			x -= (this.runtime.draw_width * invScale) / 2;
			y -= (this.runtime.draw_height * invScale) / 2;
		}
		else
		{
			x -= (this.runtime.width * invScale) / 2;
			y -= (this.runtime.height * invScale) / 2;
		}
		x = (ptx - x) / invScale;
		y = (pty - y) / invScale;
		var multiplier = this.runtime.devicePixelRatio;
		if (this.runtime.isRetina && !using_draw_area)
		{
			x /= multiplier;
			y /= multiplier;
		}
		return getx ? x : y;
	};
	Layer.prototype.rotatePt = function (x_, y_, getx)
	{
		if (this.getAngle() === 0)
			return getx ? x_ : y_;
		var nx = this.layerToCanvas(x_, y_, true);
		var ny = this.layerToCanvas(x_, y_, false);
		this.disableAngle = true;
		var px = this.canvasToLayer(nx, ny, true);
		var py = this.canvasToLayer(nx, ny, true);
		this.disableAngle = false;
		return getx ? px : py;
	};
	Layer.prototype.saveToJSON = function ()
	{
		var i, len, et;
		var o = {
			"s": this.scale,
			"a": this.angle,
			"vl": this.viewLeft,
			"vt": this.viewTop,
			"vr": this.viewRight,
			"vb": this.viewBottom,
			"v": this.visible,
			"bc": this.background_color,
			"t": this.transparent,
			"px": this.parallaxX,
			"py": this.parallaxY,
			"o": this.opacity,
			"zr": this.zoomRate,
			"fx": [],
			"instances": []
		};
		for (i = 0, len = this.effect_types.length; i < len; i++)
		{
			et = this.effect_types[i];
			o["fx"].push({"name": et.name, "active": et.active, "params": this.effect_params[et.index] });
		}
		return o;
	};
	function sortInstanceByZIndex(a, b)
	{
		return a.zindex - b.zindex;
	};
	Layer.prototype.loadFromJSON = function (o)
	{
		var i, len, p, inst, fx;
		this.scale = o["s"];
		this.angle = o["a"];
		this.viewLeft = o["vl"];
		this.viewTop = o["vt"];
		this.viewRight = o["vr"];
		this.viewBottom = o["vb"];
		this.visible = o["v"];
		this.background_color = o["bc"];
		this.transparent = o["t"];
		this.parallaxX = o["px"];
		this.parallaxY = o["py"];
		this.opacity = o["o"];
		this.zoomRate = o["zr"];
		var ofx = o["fx"];
		for (i = 0, len = ofx.length; i < len; i++)
		{
			fx = this.getEffectByName(ofx[i]["name"]);
			if (!fx)
				continue;		// must've gone missing
			fx.active = ofx[i]["active"];
			this.effect_params[fx.index] = ofx[i]["params"];
		}
		this.updateActiveEffects();
		this.instances.sort(sortInstanceByZIndex);
		this.zindices_stale = true;
	};
	cr.layer = Layer;
}());
;
(function()
{
	var allUniqueSolModifiers = [];
	function testSolsMatch(arr1, arr2)
	{
		var i, len = arr1.length;
		switch (len) {
		case 0:
			return true;
		case 1:
			return arr1[0] === arr2[0];
		case 2:
			return arr1[0] === arr2[0] && arr1[1] === arr2[1];
		default:
			for (i = 0; i < len; i++)
			{
				if (arr1[i] !== arr2[i])
					return false;
			}
			return true;
		}
	};
	function solArraySorter(t1, t2)
	{
		return t1.index - t2.index;
	};
	function findMatchingSolModifier(arr)
	{
		var i, len, u, temp, subarr;
		if (arr.length === 2)
		{
			if (arr[0].index > arr[1].index)
			{
				temp = arr[0];
				arr[0] = arr[1];
				arr[1] = temp;
			}
		}
		else if (arr.length > 2)
			arr.sort(solArraySorter);		// so testSolsMatch compares in same order
		if (arr.length >= allUniqueSolModifiers.length)
			allUniqueSolModifiers.length = arr.length + 1;
		if (!allUniqueSolModifiers[arr.length])
			allUniqueSolModifiers[arr.length] = [];
		subarr = allUniqueSolModifiers[arr.length];
		for (i = 0, len = subarr.length; i < len; i++)
		{
			u = subarr[i];
			if (testSolsMatch(arr, u))
				return u;
		}
		subarr.push(arr);
		return arr;
	};
	function EventSheet(runtime, m)
	{
		this.runtime = runtime;
		this.triggers = {};
		this.fasttriggers = {};
        this.hasRun = false;
        this.includes = new cr.ObjectSet(); 	// all event sheets included by this sheet, at first-level indirection only
		this.deep_includes = [];				// all includes from this sheet recursively, in trigger order
		this.already_included_sheets = [];		// used while building deep_includes
		this.name = m[0];
		var em = m[1];		// events model
		this.events = [];       // triggers won't make it to this array
		var i, len;
		for (i = 0, len = em.length; i < len; i++)
			this.init_event(em[i], null, this.events);
	};
    EventSheet.prototype.toString = function ()
    {
        return this.name;
    };
	EventSheet.prototype.init_event = function (m, parent, nontriggers)
	{
		switch (m[0]) {
		case 0:	// event block
		{
			var block = new cr.eventblock(this, parent, m);
			cr.seal(block);
			if (block.orblock)
			{
				nontriggers.push(block);
				var i, len;
				for (i = 0, len = block.conditions.length; i < len; i++)
				{
					if (block.conditions[i].trigger)
						this.init_trigger(block, i);
				}
			}
			else
			{
				if (block.is_trigger())
					this.init_trigger(block, 0);
				else
					nontriggers.push(block);
			}
			break;
		}
		case 1: // variable
		{
			var v = new cr.eventvariable(this, parent, m);
			cr.seal(v);
			nontriggers.push(v);
			break;
		}
        case 2:	// include
        {
            var inc = new cr.eventinclude(this, parent, m);
			cr.seal(inc);
            nontriggers.push(inc);
			break;
        }
		default:
;
		}
	};
	EventSheet.prototype.postInit = function ()
	{
		var i, len;
		for (i = 0, len = this.events.length; i < len; i++)
		{
			this.events[i].postInit(i < len - 1 && this.events[i + 1].is_else_block);
		}
	};
	EventSheet.prototype.updateDeepIncludes = function ()
	{
		this.deep_includes.length = 0;
		this.already_included_sheets.length = 0;
		this.addDeepIncludes(this);
		this.already_included_sheets.length = 0;
	};
	EventSheet.prototype.addDeepIncludes = function (root_sheet)
	{
		var i, len, inc, sheet;
		var deep_includes = root_sheet.deep_includes;
		var already_included_sheets = root_sheet.already_included_sheets;
		var arr = this.includes.valuesRef();
		for (i = 0, len = arr.length; i < len; ++i)
		{
			inc = arr[i];
			sheet = inc.include_sheet;
			if (!inc.isActive() || root_sheet === sheet || already_included_sheets.indexOf(sheet) > -1)
				continue;
			already_included_sheets.push(sheet);
			sheet.addDeepIncludes(root_sheet);
			deep_includes.push(sheet);
		}
	};
	EventSheet.prototype.run = function (from_include)
	{
		if (!this.runtime.resuming_breakpoint)
		{
			this.hasRun = true;
			if (!from_include)
				this.runtime.isRunningEvents = true;
		}
		var i, len;
		for (i = 0, len = this.events.length; i < len; i++)
		{
			var ev = this.events[i];
			ev.run();
				this.runtime.clearSol(ev.solModifiers);
				if (!this.runtime.deathRow.isEmpty() || this.runtime.createRow.length)
					this.runtime.ClearDeathRow();
		}
			if (!from_include)
				this.runtime.isRunningEvents = false;
	};
	function isPerformanceSensitiveTrigger(method)
	{
		if (cr.plugins_.Sprite && method === cr.plugins_.Sprite.prototype.cnds.OnFrameChanged)
		{
			return true;
		}
		return false;
	};
	EventSheet.prototype.init_trigger = function (trig, index)
	{
		if (!trig.orblock)
			this.runtime.triggers_to_postinit.push(trig);	// needs to be postInit'd later
		var i, len;
		var cnd = trig.conditions[index];
		var type_name;
		if (cnd.type)
			type_name = cnd.type.name;
		else
			type_name = "system";
		var fasttrigger = cnd.fasttrigger;
		var triggers = (fasttrigger ? this.fasttriggers : this.triggers);
		if (!triggers[type_name])
			triggers[type_name] = [];
		var obj_entry = triggers[type_name];
		var method = cnd.func;
		if (fasttrigger)
		{
			if (!cnd.parameters.length)				// no parameters
				return;
			var firstparam = cnd.parameters[0];
			if (firstparam.type !== 1 ||			// not a string param
				firstparam.expression.type !== 2)	// not a string literal node
			{
				return;
			}
			var fastevs;
			var firstvalue = firstparam.expression.value.toLowerCase();
			var i, len;
			for (i = 0, len = obj_entry.length; i < len; i++)
			{
				if (obj_entry[i].method == method)
				{
					fastevs = obj_entry[i].evs;
					if (!fastevs[firstvalue])
						fastevs[firstvalue] = [[trig, index]];
					else
						fastevs[firstvalue].push([trig, index]);
					return;
				}
			}
			fastevs = {};
			fastevs[firstvalue] = [[trig, index]];
			obj_entry.push({ method: method, evs: fastevs });
		}
		else
		{
			for (i = 0, len = obj_entry.length; i < len; i++)
			{
				if (obj_entry[i].method == method)
				{
					obj_entry[i].evs.push([trig, index]);
					return;
				}
			}
			if (isPerformanceSensitiveTrigger(method))
				obj_entry.unshift({ method: method, evs: [[trig, index]]});
			else
				obj_entry.push({ method: method, evs: [[trig, index]]});
		}
	};
	cr.eventsheet = EventSheet;
	function Selection(type)
	{
		this.type = type;
		this.instances = [];        // subset of picked instances
		this.else_instances = [];	// subset of unpicked instances
		this.select_all = true;
	};
	Selection.prototype.hasObjects = function ()
	{
		if (this.select_all)
			return this.type.instances.length;
		else
			return this.instances.length;
	};
	Selection.prototype.getObjects = function ()
	{
		if (this.select_all)
			return this.type.instances;
		else
			return this.instances;
	};
	/*
	Selection.prototype.ensure_picked = function (inst, skip_siblings)
	{
		var i, len;
		var orblock = inst.runtime.getCurrentEventStack().current_event.orblock;
		if (this.select_all)
		{
			this.select_all = false;
			if (orblock)
			{
				cr.shallowAssignArray(this.else_instances, inst.type.instances);
				cr.arrayFindRemove(this.else_instances, inst);
			}
			this.instances.length = 1;
			this.instances[0] = inst;
		}
		else
		{
			if (orblock)
			{
				i = this.else_instances.indexOf(inst);
				if (i !== -1)
				{
					this.instances.push(this.else_instances[i]);
					this.else_instances.splice(i, 1);
				}
			}
			else
			{
				if (this.instances.indexOf(inst) === -1)
					this.instances.push(inst);
			}
		}
		if (!skip_siblings)
		{
		}
	};
	*/
	Selection.prototype.pick_one = function (inst)
	{
		if (!inst)
			return;
		if (inst.runtime.getCurrentEventStack().current_event.orblock)
		{
			if (this.select_all)
			{
				this.instances.length = 0;
				cr.shallowAssignArray(this.else_instances, inst.type.instances);
				this.select_all = false;
			}
			var i = this.else_instances.indexOf(inst);
			if (i !== -1)
			{
				this.instances.push(this.else_instances[i]);
				this.else_instances.splice(i, 1);
			}
		}
		else
		{
			this.select_all = false;
			this.instances.length = 1;
			this.instances[0] = inst;
		}
	};
	cr.selection = Selection;
	function EventBlock(sheet, parent, m)
	{
		this.sheet = sheet;
		this.parent = parent;
		this.runtime = sheet.runtime;
		this.solModifiers = [];
		this.solModifiersIncludingParents = [];
		this.solWriterAfterCnds = false;	// block does not change SOL after running its conditions
		this.group = false;					// is group of events
		this.initially_activated = false;	// if a group, is active on startup
		this.toplevelevent = false;			// is an event block parented only by a top-level group
		this.toplevelgroup = false;			// is parented only by other groups or is top-level (i.e. not in a subevent)
		this.has_else_block = false;		// is followed by else
;
		this.conditions = [];
		this.actions = [];
		this.subevents = [];
		this.group_name = "";
		this.group = false;
		this.initially_activated = false;
		this.group_active = false;
		this.contained_includes = null;
        if (m[1])
        {
			this.group_name = m[1][1].toLowerCase();
			this.group = true;
			this.initially_activated = !!m[1][0];
			this.contained_includes = [];
			this.group_active = this.initially_activated;
			this.runtime.allGroups.push(this);
            this.runtime.groups_by_name[this.group_name] = this;
        }
		this.orblock = m[2];
		this.sid = m[4];
		if (!this.group)
			this.runtime.blocksBySid[this.sid.toString()] = this;
		var i, len;
		var cm = m[5];
		for (i = 0, len = cm.length; i < len; i++)
		{
			var cnd = new cr.condition(this, cm[i]);
			cnd.index = i;
			cr.seal(cnd);
			this.conditions.push(cnd);
			/*
			if (cnd.is_logical())
				this.is_logical = true;
			if (cnd.type && !cnd.type.plugin.singleglobal && this.cndReferences.indexOf(cnd.type) === -1)
				this.cndReferences.push(cnd.type);
			*/
			this.addSolModifier(cnd.type);
		}
		var am = m[6];
		for (i = 0, len = am.length; i < len; i++)
		{
			var act = new cr.action(this, am[i]);
			act.index = i;
			cr.seal(act);
			this.actions.push(act);
		}
		if (m.length === 8)
		{
			var em = m[7];
			for (i = 0, len = em.length; i < len; i++)
				this.sheet.init_event(em[i], this, this.subevents);
		}
		this.is_else_block = false;
		if (this.conditions.length)
		{
			this.is_else_block = (this.conditions[0].type == null && this.conditions[0].func == cr.system_object.prototype.cnds.Else);
		}
	};
	window["_c2hh_"] = "3DBD288B0D9212925BF1A3884433D2777283BFFC";
	EventBlock.prototype.postInit = function (hasElse/*, prevBlock_*/)
	{
		var i, len;
		var p = this.parent;
		if (this.group)
		{
			this.toplevelgroup = true;
			while (p)
			{
				if (!p.group)
				{
					this.toplevelgroup = false;
					break;
				}
				p = p.parent;
			}
		}
		this.toplevelevent = !this.is_trigger() && (!this.parent || (this.parent.group && this.parent.toplevelgroup));
		this.has_else_block = !!hasElse;
		this.solModifiersIncludingParents = this.solModifiers.slice(0);
		p = this.parent;
		while (p)
		{
			for (i = 0, len = p.solModifiers.length; i < len; i++)
				this.addParentSolModifier(p.solModifiers[i]);
			p = p.parent;
		}
		this.solModifiers = findMatchingSolModifier(this.solModifiers);
		this.solModifiersIncludingParents = findMatchingSolModifier(this.solModifiersIncludingParents);
		var i, len/*, s*/;
		for (i = 0, len = this.conditions.length; i < len; i++)
			this.conditions[i].postInit();
		for (i = 0, len = this.actions.length; i < len; i++)
			this.actions[i].postInit();
		for (i = 0, len = this.subevents.length; i < len; i++)
		{
			this.subevents[i].postInit(i < len - 1 && this.subevents[i + 1].is_else_block);
		}
		/*
		if (this.is_else_block && this.prev_block)
		{
			for (i = 0, len = this.prev_block.solModifiers.length; i < len; i++)
			{
				s = this.prev_block.solModifiers[i];
				if (this.solModifiers.indexOf(s) === -1)
					this.solModifiers.push(s);
			}
		}
		*/
	};
	EventBlock.prototype.setGroupActive = function (a)
	{
		if (this.group_active === !!a)
			return;		// same state
		this.group_active = !!a;
		var i, len;
		for (i = 0, len = this.contained_includes.length; i < len; ++i)
		{
			this.contained_includes[i].updateActive();
		}
		if (len > 0 && this.runtime.running_layout.event_sheet)
			this.runtime.running_layout.event_sheet.updateDeepIncludes();
	};
	function addSolModifierToList(type, arr)
	{
		var i, len, t;
		if (!type)
			return;
		if (arr.indexOf(type) === -1)
			arr.push(type);
		if (type.is_contained)
		{
			for (i = 0, len = type.container.length; i < len; i++)
			{
				t = type.container[i];
				if (type === t)
					continue;		// already handled
				if (arr.indexOf(t) === -1)
					arr.push(t);
			}
		}
	};
	EventBlock.prototype.addSolModifier = function (type)
	{
		addSolModifierToList(type, this.solModifiers);
	};
	EventBlock.prototype.addParentSolModifier = function (type)
	{
		addSolModifierToList(type, this.solModifiersIncludingParents);
	};
	EventBlock.prototype.setSolWriterAfterCnds = function ()
	{
		this.solWriterAfterCnds = true;
		if (this.parent)
			this.parent.setSolWriterAfterCnds();
	};
	EventBlock.prototype.is_trigger = function ()
	{
		if (!this.conditions.length)    // no conditions
			return false;
		else
			return this.conditions[0].trigger;
	};
	EventBlock.prototype.run = function ()
	{
		var i, len, any_true = false, cnd_result;
		var runtime = this.runtime;
		var evinfo = this.runtime.getCurrentEventStack();
		evinfo.current_event = this;
		var conditions = this.conditions;
			if (!this.is_else_block)
				evinfo.else_branch_ran = false;
		if (this.orblock)
		{
			if (conditions.length === 0)
				any_true = true;		// be sure to run if empty block
				evinfo.cndindex = 0
			for (len = conditions.length; evinfo.cndindex < len; evinfo.cndindex++)
			{
				if (conditions[evinfo.cndindex].trigger)		// skip triggers when running OR block
					continue;
				cnd_result = conditions[evinfo.cndindex].run();
				if (cnd_result)			// make sure all conditions run and run if any were true
					any_true = true;
			}
			evinfo.last_event_true = any_true;
			if (any_true)
				this.run_actions_and_subevents();
		}
		else
		{
				evinfo.cndindex = 0
			for (len = conditions.length; evinfo.cndindex < len; evinfo.cndindex++)
			{
				cnd_result = conditions[evinfo.cndindex].run();
				if (!cnd_result)    // condition failed
				{
					evinfo.last_event_true = false;
					if (this.toplevelevent && (!runtime.deathRow.isEmpty() || runtime.createRow.length))
						runtime.ClearDeathRow();
					return;		// bail out now
				}
			}
			evinfo.last_event_true = true;
			this.run_actions_and_subevents();
		}
		this.end_run(evinfo);
	};
	EventBlock.prototype.end_run = function (evinfo)
	{
		if (evinfo.last_event_true && this.has_else_block)
			evinfo.else_branch_ran = true;
		if (this.toplevelevent && (!this.runtime.deathRow.isEmpty() || this.runtime.createRow.length))
			this.runtime.ClearDeathRow();
	};
	EventBlock.prototype.run_orblocktrigger = function (index)
	{
		var evinfo = this.runtime.getCurrentEventStack();
		evinfo.current_event = this;
		if (this.conditions[index].run())
		{
			this.run_actions_and_subevents();
			this.runtime.getCurrentEventStack().last_event_true = true;
		}
	};
	EventBlock.prototype.run_actions_and_subevents = function ()
	{
		var evinfo = this.runtime.getCurrentEventStack();
		var len;
		for (evinfo.actindex = 0, len = this.actions.length; evinfo.actindex < len; evinfo.actindex++)
		{
			if (this.actions[evinfo.actindex].run())
				return;
		}
		this.run_subevents();
	};
	EventBlock.prototype.resume_actions_and_subevents = function ()
	{
		var evinfo = this.runtime.getCurrentEventStack();
		var len;
		for (len = this.actions.length; evinfo.actindex < len; evinfo.actindex++)
		{
			if (this.actions[evinfo.actindex].run())
				return;
		}
		this.run_subevents();
	};
	EventBlock.prototype.run_subevents = function ()
	{
		if (!this.subevents.length)
			return;
		var i, len, subev, pushpop/*, skipped_pop = false, pop_modifiers = null*/;
		var last = this.subevents.length - 1;
			this.runtime.pushEventStack(this);
		if (this.solWriterAfterCnds)
		{
			for (i = 0, len = this.subevents.length; i < len; i++)
			{
				subev = this.subevents[i];
					pushpop = (!this.toplevelgroup || (!this.group && i < last));
					if (pushpop)
						this.runtime.pushCopySol(subev.solModifiers);
				subev.run();
					if (pushpop)
						this.runtime.popSol(subev.solModifiers);
					else
						this.runtime.clearSol(subev.solModifiers);
			}
		}
		else
		{
			for (i = 0, len = this.subevents.length; i < len; i++)
			{
				this.subevents[i].run();
			}
		}
			this.runtime.popEventStack();
	};
	EventBlock.prototype.run_pretrigger = function ()
	{
		var evinfo = this.runtime.getCurrentEventStack();
		evinfo.current_event = this;
		var any_true = false;
		var i, len;
		for (evinfo.cndindex = 0, len = this.conditions.length; evinfo.cndindex < len; evinfo.cndindex++)
		{
;
			if (this.conditions[evinfo.cndindex].run())
				any_true = true;
			else if (!this.orblock)			// condition failed (let OR blocks run all conditions anyway)
				return false;               // bail out
		}
		return this.orblock ? any_true : true;
	};
	EventBlock.prototype.retrigger = function ()
	{
		this.runtime.execcount++;
		var prevcndindex = this.runtime.getCurrentEventStack().cndindex;
		var len;
		var evinfo = this.runtime.pushEventStack(this);
		if (!this.orblock)
		{
			for (evinfo.cndindex = prevcndindex + 1, len = this.conditions.length; evinfo.cndindex < len; evinfo.cndindex++)
			{
				if (!this.conditions[evinfo.cndindex].run())    // condition failed
				{
					this.runtime.popEventStack();               // moving up level of recursion
					return false;                               // bail out
				}
			}
		}
		this.run_actions_and_subevents();
		this.runtime.popEventStack();
		return true;		// ran an iteration
	};
	EventBlock.prototype.isFirstConditionOfType = function (cnd)
	{
		var cndindex = cnd.index;
		if (cndindex === 0)
			return true;
		--cndindex;
		for ( ; cndindex >= 0; --cndindex)
		{
			if (this.conditions[cndindex].type === cnd.type)
				return false;
		}
		return true;
	};
	cr.eventblock = EventBlock;
	function Condition(block, m)
	{
		this.block = block;
		this.sheet = block.sheet;
		this.runtime = block.runtime;
		this.parameters = [];
		this.results = [];
		this.extra = {};		// for plugins to stow away some custom info
		this.index = -1;
		this.anyParamVariesPerInstance = false;
		this.func = m[1];
;
		this.trigger = (m[3] > 0);
		this.fasttrigger = (m[3] === 2);
		this.looping = m[4];
		this.inverted = m[5];
		this.isstatic = m[6];
		this.sid = m[7];
		this.runtime.cndsBySid[this.sid.toString()] = this;
		if (m[0] === -1)		// system object
		{
			this.type = null;
			this.run = this.run_system;
			this.behaviortype = null;
			this.beh_index = -1;
		}
		else
		{
			this.type = this.runtime.types_by_index[m[0]];
;
			if (this.isstatic)
				this.run = this.run_static;
			else
				this.run = this.run_object;
			if (m[2])
			{
				this.behaviortype = this.type.getBehaviorByName(m[2]);
;
				this.beh_index = this.type.getBehaviorIndexByName(m[2]);
;
			}
			else
			{
				this.behaviortype = null;
				this.beh_index = -1;
			}
			if (this.block.parent)
				this.block.parent.setSolWriterAfterCnds();
		}
		if (this.fasttrigger)
			this.run = this.run_true;
		if (m.length === 10)
		{
			var i, len;
			var em = m[9];
			for (i = 0, len = em.length; i < len; i++)
			{
				var param = new cr.parameter(this, em[i]);
				cr.seal(param);
				this.parameters.push(param);
			}
			this.results.length = em.length;
		}
	};
	Condition.prototype.postInit = function ()
	{
		var i, len, p;
		for (i = 0, len = this.parameters.length; i < len; i++)
		{
			p = this.parameters[i];
			p.postInit();
			if (p.variesPerInstance)
				this.anyParamVariesPerInstance = true;
		}
	};
	/*
	Condition.prototype.is_logical = function ()
	{
		return !this.type || this.type.plugin.singleglobal;
	};
	*/
	Condition.prototype.run_true = function ()
	{
		return true;
	};
	Condition.prototype.run_system = function ()
	{
		var i, len;
		for (i = 0, len = this.parameters.length; i < len; i++)
			this.results[i] = this.parameters[i].get();
		return cr.xor(this.func.apply(this.runtime.system, this.results), this.inverted);
	};
	Condition.prototype.run_static = function ()
	{
		var i, len;
		for (i = 0, len = this.parameters.length; i < len; i++)
			this.results[i] = this.parameters[i].get();
		var ret = this.func.apply(this.behaviortype ? this.behaviortype : this.type, this.results);
		this.type.applySolToContainer();
		return ret;
	};
	Condition.prototype.run_object = function ()
	{
		var i, j, k, leni, lenj, p, ret, met, inst, s, sol2;
		var type = this.type;
		var sol = type.getCurrentSol();
		var is_orblock = this.block.orblock && !this.trigger;		// triggers in OR blocks need to work normally
		var offset = 0;
		var is_contained = type.is_contained;
		var is_family = type.is_family;
		var family_index = type.family_index;
		var beh_index = this.beh_index;
		var is_beh = (beh_index > -1);
		var params_vary = this.anyParamVariesPerInstance;
		var parameters = this.parameters;
		var results = this.results;
		var inverted = this.inverted;
		var func = this.func;
		var arr, container;
		if (params_vary)
		{
			for (j = 0, lenj = parameters.length; j < lenj; ++j)
			{
				p = parameters[j];
				if (!p.variesPerInstance)
					results[j] = p.get(0);
			}
		}
		else
		{
			for (j = 0, lenj = parameters.length; j < lenj; ++j)
				results[j] = parameters[j].get(0);
		}
		if (sol.select_all) {
			sol.instances.length = 0;       // clear contents
			sol.else_instances.length = 0;
			arr = type.instances;
			for (i = 0, leni = arr.length; i < leni; ++i)
			{
				inst = arr[i];
;
				if (params_vary)
				{
					for (j = 0, lenj = parameters.length; j < lenj; ++j)
					{
						p = parameters[j];
						if (p.variesPerInstance)
							results[j] = p.get(i);        // default SOL index is current object
					}
				}
				if (is_beh)
				{
					offset = 0;
					if (is_family)
					{
						offset = inst.type.family_beh_map[family_index];
					}
					ret = func.apply(inst.behavior_insts[beh_index + offset], results);
				}
				else
					ret = func.apply(inst, results);
				met = cr.xor(ret, inverted);
				if (met)
					sol.instances.push(inst);
				else if (is_orblock)					// in OR blocks, keep the instances not meeting the condition for subsequent testing
					sol.else_instances.push(inst);
			}
			if (type.finish)
				type.finish(true);
			sol.select_all = false;
			type.applySolToContainer();
			return sol.hasObjects();
		}
		else {
			k = 0;
			var using_else_instances = (is_orblock && !this.block.isFirstConditionOfType(this));
			arr = (using_else_instances ? sol.else_instances : sol.instances);
			var any_true = false;
			for (i = 0, leni = arr.length; i < leni; ++i)
			{
				inst = arr[i];
;
				if (params_vary)
				{
					for (j = 0, lenj = parameters.length; j < lenj; ++j)
					{
						p = parameters[j];
						if (p.variesPerInstance)
							results[j] = p.get(i);        // default SOL index is current object
					}
				}
				if (is_beh)
				{
					offset = 0;
					if (is_family)
					{
						offset = inst.type.family_beh_map[family_index];
					}
					ret = func.apply(inst.behavior_insts[beh_index + offset], results);
				}
				else
					ret = func.apply(inst, results);
				if (cr.xor(ret, inverted))
				{
					any_true = true;
					if (using_else_instances)
					{
						sol.instances.push(inst);
						if (is_contained)
						{
							for (j = 0, lenj = inst.siblings.length; j < lenj; j++)
							{
								s = inst.siblings[j];
								s.type.getCurrentSol().instances.push(s);
							}
						}
					}
					else
					{
						arr[k] = inst;
						if (is_contained)
						{
							for (j = 0, lenj = inst.siblings.length; j < lenj; j++)
							{
								s = inst.siblings[j];
								s.type.getCurrentSol().instances[k] = s;
							}
						}
						k++;
					}
				}
				else
				{
					if (using_else_instances)
					{
						arr[k] = inst;
						if (is_contained)
						{
							for (j = 0, lenj = inst.siblings.length; j < lenj; j++)
							{
								s = inst.siblings[j];
								s.type.getCurrentSol().else_instances[k] = s;
							}
						}
						k++;
					}
					else if (is_orblock)
					{
						sol.else_instances.push(inst);
						if (is_contained)
						{
							for (j = 0, lenj = inst.siblings.length; j < lenj; j++)
							{
								s = inst.siblings[j];
								s.type.getCurrentSol().else_instances.push(s);
							}
						}
					}
				}
			}
			arr.length = k;
			if (is_contained)
			{
				container = type.container;
				for (i = 0, leni = container.length; i < leni; i++)
				{
					sol2 = container[i].getCurrentSol();
					if (using_else_instances)
						sol2.else_instances.length = k;
					else
						sol2.instances.length = k;
				}
			}
			var pick_in_finish = any_true;		// don't pick in finish() if we're only doing the logic test below
			if (using_else_instances && !any_true)
			{
				for (i = 0, leni = sol.instances.length; i < leni; i++)
				{
					inst = sol.instances[i];
					if (params_vary)
					{
						for (j = 0, lenj = parameters.length; j < lenj; j++)
						{
							p = parameters[j];
							if (p.variesPerInstance)
								results[j] = p.get(i);
						}
					}
					if (is_beh)
						ret = func.apply(inst.behavior_insts[beh_index], results);
					else
						ret = func.apply(inst, results);
					if (cr.xor(ret, inverted))
					{
						any_true = true;
						break;		// got our flag, don't need to test any more
					}
				}
			}
			if (type.finish)
				type.finish(pick_in_finish || is_orblock);
			return is_orblock ? any_true : sol.hasObjects();
		}
	};
	cr.condition = Condition;
	function Action(block, m)
	{
		this.block = block;
		this.sheet = block.sheet;
		this.runtime = block.runtime;
		this.parameters = [];
		this.results = [];
		this.extra = {};		// for plugins to stow away some custom info
		this.index = -1;
		this.anyParamVariesPerInstance = false;
		this.func = m[1];
;
		if (m[0] === -1)	// system
		{
			this.type = null;
			this.run = this.run_system;
			this.behaviortype = null;
			this.beh_index = -1;
		}
		else
		{
			this.type = this.runtime.types_by_index[m[0]];
;
			this.run = this.run_object;
			if (m[2])
			{
				this.behaviortype = this.type.getBehaviorByName(m[2]);
;
				this.beh_index = this.type.getBehaviorIndexByName(m[2]);
;
			}
			else
			{
				this.behaviortype = null;
				this.beh_index = -1;
			}
		}
		this.sid = m[3];
		this.runtime.actsBySid[this.sid.toString()] = this;
		if (m.length === 6)
		{
			var i, len;
			var em = m[5];
			for (i = 0, len = em.length; i < len; i++)
			{
				var param = new cr.parameter(this, em[i]);
				cr.seal(param);
				this.parameters.push(param);
			}
			this.results.length = em.length;
		}
	};
	Action.prototype.postInit = function ()
	{
		var i, len, p;
		for (i = 0, len = this.parameters.length; i < len; i++)
		{
			p = this.parameters[i];
			p.postInit();
			if (p.variesPerInstance)
				this.anyParamVariesPerInstance = true;
		}
	};
	Action.prototype.run_system = function ()
	{
		var i, len;
		for (i = 0, len = this.parameters.length; i < len; i++)
			this.results[i] = this.parameters[i].get();
		return this.func.apply(this.runtime.system, this.results);
	};
	Action.prototype.run_object = function ()
	{
		var instances = this.type.getCurrentSol().getObjects();
		var is_family = this.type.is_family;
		var family_index = this.type.family_index;
		var beh_index = this.beh_index;
		var is_beh = (beh_index > -1);
		var params_vary = this.anyParamVariesPerInstance;
		var parameters = this.parameters;
		var results = this.results;
		var func = this.func;
		var i, j, leni, lenj, p, inst, offset;
		if (params_vary)
		{
			for (j = 0, lenj = parameters.length; j < lenj; ++j)
			{
				p = parameters[j];
				if (!p.variesPerInstance)
					results[j] = p.get(0);
			}
		}
		else
		{
			for (j = 0, lenj = parameters.length; j < lenj; ++j)
				results[j] = parameters[j].get(0);
		}
		for (i = 0, leni = instances.length; i < leni; ++i)
		{
			inst = instances[i];
			if (params_vary)
			{
				for (j = 0, lenj = parameters.length; j < lenj; ++j)
				{
					p = parameters[j];
					if (p.variesPerInstance)
						results[j] = p.get(i);    // pass i to use as default SOL index
				}
			}
			if (is_beh)
			{
				offset = 0;
				if (is_family)
				{
					offset = inst.type.family_beh_map[family_index];
				}
				func.apply(inst.behavior_insts[beh_index + offset], results);
			}
			else
				func.apply(inst, results);
		}
		return false;
	};
	cr.action = Action;
	var tempValues = [];
	var tempValuesPtr = -1;
	function Parameter(owner, m)
	{
		this.owner = owner;
		this.block = owner.block;
		this.sheet = owner.sheet;
		this.runtime = owner.runtime;
		this.type = m[0];
		this.expression = null;
		this.solindex = 0;
		this.get = null;
		this.combosel = 0;
		this.layout = null;
		this.key = 0;
		this.object = null;
		this.index = 0;
		this.varname = null;
		this.eventvar = null;
		this.fileinfo = null;
		this.subparams = null;
		this.variadicret = null;
		this.subparams = null;
		this.variadicret = null;
		this.variesPerInstance = false;
		var i, len, param;
		switch (m[0])
		{
			case 0:		// number
			case 7:		// any
				this.expression = new cr.expNode(this, m[1]);
				this.solindex = 0;
				this.get = this.get_exp;
				break;
			case 1:		// string
				this.expression = new cr.expNode(this, m[1]);
				this.solindex = 0;
				this.get = this.get_exp_str;
				break;
			case 5:		// layer
				this.expression = new cr.expNode(this, m[1]);
				this.solindex = 0;
				this.get = this.get_layer;
				break;
			case 3:		// combo
			case 8:		// cmp
				this.combosel = m[1];
				this.get = this.get_combosel;
				break;
			case 6:		// layout
				this.layout = this.runtime.layouts[m[1]];
;
				this.get = this.get_layout;
				break;
			case 9:		// keyb
				this.key = m[1];
				this.get = this.get_key;
				break;
			case 4:		// object
				this.object = this.runtime.types_by_index[m[1]];
;
				this.get = this.get_object;
				this.block.addSolModifier(this.object);
				if (this.owner instanceof cr.action)
					this.block.setSolWriterAfterCnds();
				else if (this.block.parent)
					this.block.parent.setSolWriterAfterCnds();
				break;
			case 10:	// instvar
				this.index = m[1];
				if (owner.type.is_family)
				{
					this.get = this.get_familyvar;
					this.variesPerInstance = true;
				}
				else
					this.get = this.get_instvar;
				break;
			case 11:	// eventvar
				this.varname = m[1];
				this.eventvar = null;
				this.get = this.get_eventvar;
				break;
			case 2:		// audiofile	["name", ismusic]
			case 12:	// fileinfo		"name"
				this.fileinfo = m[1];
				this.get = this.get_audiofile;
				break;
			case 13:	// variadic
				this.get = this.get_variadic;
				this.subparams = [];
				this.variadicret = [];
				for (i = 1, len = m.length; i < len; i++)
				{
					param = new cr.parameter(this.owner, m[i]);
					cr.seal(param);
					this.subparams.push(param);
					this.variadicret.push(0);
				}
				break;
			default:
;
		}
	};
	Parameter.prototype.postInit = function ()
	{
		var i, len;
		if (this.type === 11)		// eventvar
		{
			this.eventvar = this.runtime.getEventVariableByName(this.varname, this.block.parent);
;
		}
		else if (this.type === 13)	// variadic, postInit all sub-params
		{
			for (i = 0, len = this.subparams.length; i < len; i++)
				this.subparams[i].postInit();
		}
		if (this.expression)
			this.expression.postInit();
	};
	Parameter.prototype.maybeVaryForType = function (t)
	{
		if (this.variesPerInstance)
			return;				// already varies per instance, no need to check again
		if (!t)
			return;				// never vary for system type
		if (!t.plugin.singleglobal)
		{
			this.variesPerInstance = true;
			return;
		}
	};
	Parameter.prototype.setVaries = function ()
	{
		this.variesPerInstance = true;
	};
	Parameter.prototype.pushTempValue = function ()
	{
		tempValuesPtr++;
		if (tempValues.length === tempValuesPtr)
			tempValues.push(new cr.expvalue());
		return tempValues[tempValuesPtr];
	};
	Parameter.prototype.popTempValue = function ()
	{
		tempValuesPtr--;
	};
	Parameter.prototype.get_exp = function (solindex)
	{
		this.solindex = solindex || 0;   // default SOL index to use
		var temp = this.pushTempValue();
		this.expression.get(temp);
		this.popTempValue();
		return temp.data;      			// return actual JS value, not expvalue
	};
	Parameter.prototype.get_exp_str = function (solindex)
	{
		this.solindex = solindex || 0;   // default SOL index to use
		var temp = this.pushTempValue();
		this.expression.get(temp);
		this.popTempValue();
		if (cr.is_string(temp.data))
			return temp.data;
		else
			return "";
	};
	Parameter.prototype.get_object = function ()
	{
		return this.object;
	};
	Parameter.prototype.get_combosel = function ()
	{
		return this.combosel;
	};
	Parameter.prototype.get_layer = function (solindex)
	{
		this.solindex = solindex || 0;   // default SOL index to use
		var temp = this.pushTempValue();
		this.expression.get(temp);
		this.popTempValue();
		if (temp.is_number())
			return this.runtime.getLayerByNumber(temp.data);
		else
			return this.runtime.getLayerByName(temp.data);
	}
	Parameter.prototype.get_layout = function ()
	{
		return this.layout;
	};
	Parameter.prototype.get_key = function ()
	{
		return this.key;
	};
	Parameter.prototype.get_instvar = function ()
	{
		return this.index;
	};
	Parameter.prototype.get_familyvar = function (solindex_)
	{
		var solindex = solindex_ || 0;
		var familytype = this.owner.type;
		var realtype = null;
		var sol = familytype.getCurrentSol();
		var objs = sol.getObjects();
		if (objs.length)
			realtype = objs[solindex % objs.length].type;
		else if (sol.else_instances.length)
			realtype = sol.else_instances[solindex % sol.else_instances.length].type;
		else if (familytype.instances.length)
			realtype = familytype.instances[solindex % familytype.instances.length].type;
		else
			return 0;
		return this.index + realtype.family_var_map[familytype.family_index];
	};
	Parameter.prototype.get_eventvar = function ()
	{
		return this.eventvar;
	};
	Parameter.prototype.get_audiofile = function ()
	{
		return this.fileinfo;
	};
	Parameter.prototype.get_variadic = function ()
	{
		var i, len;
		for (i = 0, len = this.subparams.length; i < len; i++)
		{
			this.variadicret[i] = this.subparams[i].get();
		}
		return this.variadicret;
	};
	cr.parameter = Parameter;
	function EventVariable(sheet, parent, m)
	{
		this.sheet = sheet;
		this.parent = parent;
		this.runtime = sheet.runtime;
		this.solModifiers = [];
		this.name = m[1];
		this.vartype = m[2];
		this.initial = m[3];
		this.is_static = !!m[4];
		this.is_constant = !!m[5];
		this.sid = m[6];
		this.runtime.varsBySid[this.sid.toString()] = this;
		this.data = this.initial;	// note: also stored in event stack frame for local nonstatic nonconst vars
		if (this.parent)			// local var
		{
			if (this.is_static || this.is_constant)
				this.localIndex = -1;
			else
				this.localIndex = this.runtime.stackLocalCount++;
			this.runtime.all_local_vars.push(this);
		}
		else						// global var
		{
			this.localIndex = -1;
			this.runtime.all_global_vars.push(this);
		}
	};
	EventVariable.prototype.postInit = function ()
	{
		this.solModifiers = findMatchingSolModifier(this.solModifiers);
	};
	EventVariable.prototype.setValue = function (x)
	{
;
		var lvs = this.runtime.getCurrentLocalVarStack();
		if (!this.parent || this.is_static || !lvs)
			this.data = x;
		else	// local nonstatic variable: use event stack to keep value at this level of recursion
		{
			if (this.localIndex >= lvs.length)
				lvs.length = this.localIndex + 1;
			lvs[this.localIndex] = x;
		}
	};
	EventVariable.prototype.getValue = function ()
	{
		var lvs = this.runtime.getCurrentLocalVarStack();
		if (!this.parent || this.is_static || !lvs || this.is_constant)
			return this.data;
		else	// local nonstatic variable
		{
			if (this.localIndex >= lvs.length)
			{
;
				return this.initial;
			}
			if (typeof lvs[this.localIndex] === "undefined")
			{
;
				return this.initial;
			}
			return lvs[this.localIndex];
		}
	};
	EventVariable.prototype.run = function ()
	{
			if (this.parent && !this.is_static && !this.is_constant)
				this.setValue(this.initial);
	};
	cr.eventvariable = EventVariable;
	function EventInclude(sheet, parent, m)
	{
		this.sheet = sheet;
		this.parent = parent;
		this.runtime = sheet.runtime;
		this.solModifiers = [];
		this.include_sheet = null;		// determined in postInit
		this.include_sheet_name = m[1];
		this.active = true;
	};
	EventInclude.prototype.toString = function ()
	{
		return "include:" + this.include_sheet.toString();
	};
	EventInclude.prototype.postInit = function ()
	{
        this.include_sheet = this.runtime.eventsheets[this.include_sheet_name];
;
;
        this.sheet.includes.add(this);
		this.solModifiers = findMatchingSolModifier(this.solModifiers);
		var p = this.parent;
		while (p)
		{
			if (p.group)
				p.contained_includes.push(this);
			p = p.parent;
		}
		this.updateActive();
	};
	EventInclude.prototype.run = function ()
	{
			if (this.parent)
				this.runtime.pushCleanSol(this.runtime.types_by_index);
        if (!this.include_sheet.hasRun)
            this.include_sheet.run(true);			// from include
			if (this.parent)
				this.runtime.popSol(this.runtime.types_by_index);
	};
	EventInclude.prototype.updateActive = function ()
	{
		var p = this.parent;
		while (p)
		{
			if (p.group && !p.group_active)
			{
				this.active = false;
				return;
			}
			p = p.parent;
		}
		this.active = true;
	};
	EventInclude.prototype.isActive = function ()
	{
		return this.active;
	};
	cr.eventinclude = EventInclude;
	function EventStackFrame()
	{
		this.temp_parents_arr = [];
		this.reset(null);
		cr.seal(this);
	};
	EventStackFrame.prototype.reset = function (cur_event)
	{
		this.current_event = cur_event;
		this.cndindex = 0;
		this.actindex = 0;
		this.temp_parents_arr.length = 0;
		this.last_event_true = false;
		this.else_branch_ran = false;
		this.any_true_state = false;
	};
	EventStackFrame.prototype.isModifierAfterCnds = function ()
	{
		if (this.current_event.solWriterAfterCnds)
			return true;
		if (this.cndindex < this.current_event.conditions.length - 1)
			return !!this.current_event.solModifiers.length;
		return false;
	};
	cr.eventStackFrame = EventStackFrame;
}());
(function()
{
	function ExpNode(owner_, m)
	{
		this.owner = owner_;
		this.runtime = owner_.runtime;
		this.type = m[0];
;
		this.get = [this.eval_int,
					this.eval_float,
					this.eval_string,
					this.eval_unaryminus,
					this.eval_add,
					this.eval_subtract,
					this.eval_multiply,
					this.eval_divide,
					this.eval_mod,
					this.eval_power,
					this.eval_and,
					this.eval_or,
					this.eval_equal,
					this.eval_notequal,
					this.eval_less,
					this.eval_lessequal,
					this.eval_greater,
					this.eval_greaterequal,
					this.eval_conditional,
					this.eval_system_exp,
					this.eval_object_behavior_exp,
					this.eval_instvar_exp,
					this.eval_object_behavior_exp,
					this.eval_eventvar_exp][this.type];
		var paramsModel = null;
		this.value = null;
		this.first = null;
		this.second = null;
		this.third = null;
		this.func = null;
		this.results = null;
		this.parameters = null;
		this.object_type = null;
		this.beh_index = -1;
		this.instance_expr = null;
		this.varindex = -1;
		this.behavior_type = null;
		this.varname = null;
		this.eventvar = null;
		this.return_string = false;
		switch (this.type) {
		case 0:		// int
		case 1:		// float
		case 2:		// string
			this.value = m[1];
			break;
		case 3:		// unaryminus
			this.first = new cr.expNode(owner_, m[1]);
			break;
		case 18:	// conditional
			this.first = new cr.expNode(owner_, m[1]);
			this.second = new cr.expNode(owner_, m[2]);
			this.third = new cr.expNode(owner_, m[3]);
			break;
		case 19:	// system_exp
			this.func = m[1];
;
			if (this.func === cr.system_object.prototype.exps.random
			 || this.func === cr.system_object.prototype.exps.choose)
			{
				this.owner.setVaries();
			}
			this.results = [];
			this.parameters = [];
			if (m.length === 3)
			{
				paramsModel = m[2];
				this.results.length = paramsModel.length + 1;	// must also fit 'ret'
			}
			else
				this.results.length = 1;      // to fit 'ret'
			break;
		case 20:	// object_exp
			this.object_type = this.runtime.types_by_index[m[1]];
;
			this.beh_index = -1;
			this.func = m[2];
			this.return_string = m[3];
			if (cr.plugins_.Function && this.func === cr.plugins_.Function.prototype.exps.Call)
			{
				this.owner.setVaries();
			}
			if (m[4])
				this.instance_expr = new cr.expNode(owner_, m[4]);
			else
				this.instance_expr = null;
			this.results = [];
			this.parameters = [];
			if (m.length === 6)
			{
				paramsModel = m[5];
				this.results.length = paramsModel.length + 1;
			}
			else
				this.results.length = 1;	// to fit 'ret'
			break;
		case 21:		// instvar_exp
			this.object_type = this.runtime.types_by_index[m[1]];
;
			this.return_string = m[2];
			if (m[3])
				this.instance_expr = new cr.expNode(owner_, m[3]);
			else
				this.instance_expr = null;
			this.varindex = m[4];
			break;
		case 22:		// behavior_exp
			this.object_type = this.runtime.types_by_index[m[1]];
;
			this.behavior_type = this.object_type.getBehaviorByName(m[2]);
;
			this.beh_index = this.object_type.getBehaviorIndexByName(m[2]);
			this.func = m[3];
			this.return_string = m[4];
			if (m[5])
				this.instance_expr = new cr.expNode(owner_, m[5]);
			else
				this.instance_expr = null;
			this.results = [];
			this.parameters = [];
			if (m.length === 7)
			{
				paramsModel = m[6];
				this.results.length = paramsModel.length + 1;
			}
			else
				this.results.length = 1;	// to fit 'ret'
			break;
		case 23:		// eventvar_exp
			this.varname = m[1];
			this.eventvar = null;	// assigned in postInit
			break;
		}
		this.owner.maybeVaryForType(this.object_type);
		if (this.type >= 4 && this.type <= 17)
		{
			this.first = new cr.expNode(owner_, m[1]);
			this.second = new cr.expNode(owner_, m[2]);
		}
		if (paramsModel)
		{
			var i, len;
			for (i = 0, len = paramsModel.length; i < len; i++)
				this.parameters.push(new cr.expNode(owner_, paramsModel[i]));
		}
		cr.seal(this);
	};
	ExpNode.prototype.postInit = function ()
	{
		if (this.type === 23)	// eventvar_exp
		{
			this.eventvar = this.owner.runtime.getEventVariableByName(this.varname, this.owner.block.parent);
;
		}
		if (this.first)
			this.first.postInit();
		if (this.second)
			this.second.postInit();
		if (this.third)
			this.third.postInit();
		if (this.instance_expr)
			this.instance_expr.postInit();
		if (this.parameters)
		{
			var i, len;
			for (i = 0, len = this.parameters.length; i < len; i++)
				this.parameters[i].postInit();
		}
	};
	ExpNode.prototype.eval_system_exp = function (ret)
	{
		this.results[0] = ret;
		var temp = this.owner.pushTempValue();
		var i, len;
		for (i = 0, len = this.parameters.length; i < len; i++)
		{
			this.parameters[i].get(temp);
			this.results[i + 1] = temp.data;   // passing actual javascript value as argument instead of expvalue
		}
		this.owner.popTempValue();
		this.func.apply(this.runtime.system, this.results);
	};
	ExpNode.prototype.eval_object_behavior_exp = function (ret)
	{
		var sol = this.object_type.getCurrentSol();
		var instances = sol.getObjects();
		if (!instances.length)
		{
			if (sol.else_instances.length)
				instances = sol.else_instances;
			else
			{
				if (this.return_string)
					ret.set_string("");
				else
					ret.set_int(0);
				return;
			}
		}
		this.results[0] = ret;
		ret.object_class = this.object_type;		// so expression can access family type if need be
		var temp = this.owner.pushTempValue();
		var i, len;
		for (i = 0, len = this.parameters.length; i < len; i++) {
			this.parameters[i].get(temp);
			this.results[i + 1] = temp.data;   // passing actual javascript value as argument instead of expvalue
		}
		var index = this.owner.solindex;
		if (this.instance_expr) {
			this.instance_expr.get(temp);
			if (temp.is_number()) {
				index = temp.data;
				instances = this.object_type.instances;    // pick from all instances, not SOL
			}
		}
		this.owner.popTempValue();
		index %= instances.length;      // wraparound
		if (index < 0)
			index += instances.length;
		var returned_val;
		var inst = instances[index];
		if (this.beh_index > -1)
		{
			var offset = 0;
			if (this.object_type.is_family)
			{
				offset = inst.type.family_beh_map[this.object_type.family_index];
			}
			returned_val = this.func.apply(inst.behavior_insts[this.beh_index + offset], this.results);
		}
		else
			returned_val = this.func.apply(inst, this.results);
;
	};
	ExpNode.prototype.eval_instvar_exp = function (ret)
	{
		var sol = this.object_type.getCurrentSol();
		var instances = sol.getObjects();
		if (!instances.length)
		{
			if (sol.else_instances.length)
				instances = sol.else_instances;
			else
			{
				if (this.return_string)
					ret.set_string("");
				else
					ret.set_int(0);
				return;
			}
		}
		var index = this.owner.solindex;
		if (this.instance_expr)
		{
			var temp = this.owner.pushTempValue();
			this.instance_expr.get(temp);
			if (temp.is_number())
			{
				index = temp.data;
				var type_instances = this.object_type.instances;
				index %= type_instances.length;     // wraparound
				if (index < 0)                      // offset
					index += type_instances.length;
				var to_ret = type_instances[index].instance_vars[this.varindex];
				if (cr.is_string(to_ret))
					ret.set_string(to_ret);
				else
					ret.set_float(to_ret);
				this.owner.popTempValue();
				return;         // done
			}
			this.owner.popTempValue();
		}
		index %= instances.length;      // wraparound
		if (index < 0)
			index += instances.length;
		var inst = instances[index];
		var offset = 0;
		if (this.object_type.is_family)
		{
			offset = inst.type.family_var_map[this.object_type.family_index];
		}
		var to_ret = inst.instance_vars[this.varindex + offset];
		if (cr.is_string(to_ret))
			ret.set_string(to_ret);
		else
			ret.set_float(to_ret);
	};
	ExpNode.prototype.eval_int = function (ret)
	{
		ret.type = cr.exptype.Integer;
		ret.data = this.value;
	};
	ExpNode.prototype.eval_float = function (ret)
	{
		ret.type = cr.exptype.Float;
		ret.data = this.value;
	};
	ExpNode.prototype.eval_string = function (ret)
	{
		ret.type = cr.exptype.String;
		ret.data = this.value;
	};
	ExpNode.prototype.eval_unaryminus = function (ret)
	{
		this.first.get(ret);                // retrieve operand
		if (ret.is_number())
			ret.data = -ret.data;
	};
	ExpNode.prototype.eval_add = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number() && temp.is_number())
		{
			ret.data += temp.data;          // both operands numbers: add
			if (temp.is_float())
				ret.make_float();
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_subtract = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number() && temp.is_number())
		{
			ret.data -= temp.data;          // both operands numbers: subtract
			if (temp.is_float())
				ret.make_float();
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_multiply = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number() && temp.is_number())
		{
			ret.data *= temp.data;          // both operands numbers: multiply
			if (temp.is_float())
				ret.make_float();
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_divide = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number() && temp.is_number())
		{
			ret.data /= temp.data;          // both operands numbers: divide
			ret.make_float();
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_mod = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number() && temp.is_number())
		{
			ret.data %= temp.data;          // both operands numbers: modulo
			if (temp.is_float())
				ret.make_float();
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_power = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number() && temp.is_number())
		{
			ret.data = Math.pow(ret.data, temp.data);   // both operands numbers: raise to power
			if (temp.is_float())
				ret.make_float();
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_and = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number())
		{
			if (temp.is_string())
			{
				ret.set_string(ret.data.toString() + temp.data);
			}
			else
			{
				if (ret.data && temp.data)
					ret.set_int(1);
				else
					ret.set_int(0);
			}
		}
		else if (ret.is_string())
		{
			if (temp.is_string())
				ret.data += temp.data;
			else
			{
				ret.data += (Math.round(temp.data * 1e10) / 1e10).toString();
			}
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_or = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number() && temp.is_number())
		{
			if (ret.data || temp.data)
				ret.set_int(1);
			else
				ret.set_int(0);
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_conditional = function (ret)
	{
		this.first.get(ret);                // condition operand
		if (ret.data)                       // is true
			this.second.get(ret);           // evaluate second operand to ret
		else
			this.third.get(ret);            // evaluate third operand to ret
	};
	ExpNode.prototype.eval_equal = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		ret.set_int(ret.data === temp.data ? 1 : 0);
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_notequal = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		ret.set_int(ret.data !== temp.data ? 1 : 0);
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_less = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		ret.set_int(ret.data < temp.data ? 1 : 0);
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_lessequal = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		ret.set_int(ret.data <= temp.data ? 1 : 0);
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_greater = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		ret.set_int(ret.data > temp.data ? 1 : 0);
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_greaterequal = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		ret.set_int(ret.data >= temp.data ? 1 : 0);
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_eventvar_exp = function (ret)
	{
		var val = this.eventvar.getValue();
		if (cr.is_number(val))
			ret.set_float(val);
		else
			ret.set_string(val);
	};
	cr.expNode = ExpNode;
	function ExpValue(type, data)
	{
		this.type = type || cr.exptype.Integer;
		this.data = data || 0;
		this.object_class = null;
;
;
;
		if (this.type == cr.exptype.Integer)
			this.data = Math.floor(this.data);
		cr.seal(this);
	};
	ExpValue.prototype.is_int = function ()
	{
		return this.type === cr.exptype.Integer;
	};
	ExpValue.prototype.is_float = function ()
	{
		return this.type === cr.exptype.Float;
	};
	ExpValue.prototype.is_number = function ()
	{
		return this.type === cr.exptype.Integer || this.type === cr.exptype.Float;
	};
	ExpValue.prototype.is_string = function ()
	{
		return this.type === cr.exptype.String;
	};
	ExpValue.prototype.make_int = function ()
	{
		if (!this.is_int())
		{
			if (this.is_float())
				this.data = Math.floor(this.data);      // truncate float
			else if (this.is_string())
				this.data = parseInt(this.data, 10);
			this.type = cr.exptype.Integer;
		}
	};
	ExpValue.prototype.make_float = function ()
	{
		if (!this.is_float())
		{
			if (this.is_string())
				this.data = parseFloat(this.data);
			this.type = cr.exptype.Float;
		}
	};
	ExpValue.prototype.make_string = function ()
	{
		if (!this.is_string())
		{
			this.data = this.data.toString();
			this.type = cr.exptype.String;
		}
	};
	ExpValue.prototype.set_int = function (val)
	{
;
		this.type = cr.exptype.Integer;
		this.data = Math.floor(val);
	};
	ExpValue.prototype.set_float = function (val)
	{
;
		this.type = cr.exptype.Float;
		this.data = val;
	};
	ExpValue.prototype.set_string = function (val)
	{
;
		this.type = cr.exptype.String;
		this.data = val;
	};
	ExpValue.prototype.set_any = function (val)
	{
		if (cr.is_number(val))
		{
			this.type = cr.exptype.Float;
			this.data = val;
		}
		else if (cr.is_string(val))
		{
			this.type = cr.exptype.String;
			this.data = val.toString();
		}
		else
		{
			this.type = cr.exptype.Integer;
			this.data = 0;
		}
	};
	cr.expvalue = ExpValue;
	cr.exptype = {
		Integer: 0,     // emulated; no native integer support in javascript
		Float: 1,
		String: 2
	};
}());
;
cr.system_object = function (runtime)
{
    this.runtime = runtime;
	this.waits = [];
};
cr.system_object.prototype.saveToJSON = function ()
{
	var o = {};
	var i, len, j, lenj, p, w, t, sobj;
	o["waits"] = [];
	var owaits = o["waits"];
	var waitobj;
	for (i = 0, len = this.waits.length; i < len; i++)
	{
		w = this.waits[i];
		waitobj = {
			"t": w.time,
			"ev": w.ev.sid,
			"sm": [],
			"sols": {}
		};
		if (w.ev.actions[w.actindex])
			waitobj["act"] = w.ev.actions[w.actindex].sid;
		for (j = 0, lenj = w.solModifiers.length; j < lenj; j++)
			waitobj["sm"].push(w.solModifiers[j].sid);
		for (p in w.sols)
		{
			if (w.sols.hasOwnProperty(p))
			{
				t = this.runtime.types_by_index[parseInt(p, 10)];
;
				sobj = {
					"sa": w.sols[p].sa,
					"insts": []
				};
				for (j = 0, lenj = w.sols[p].insts.length; j < lenj; j++)
					sobj["insts"].push(w.sols[p].insts[j].uid);
				waitobj["sols"][t.sid.toString()] = sobj;
			}
		}
		owaits.push(waitobj);
	}
	return o;
};
cr.system_object.prototype.loadFromJSON = function (o)
{
	var owaits = o["waits"];
	var i, len, j, lenj, p, w, addWait, e, aindex, t, savedsol, nusol, inst;
	this.waits.length = 0;
	for (i = 0, len = owaits.length; i < len; i++)
	{
		w = owaits[i];
		e = this.runtime.blocksBySid[w["ev"].toString()];
		if (!e)
			continue;	// event must've gone missing
		aindex = -1;
		for (j = 0, lenj = e.actions.length; j < lenj; j++)
		{
			if (e.actions[j].sid === w["act"])
			{
				aindex = j;
				break;
			}
		}
		if (aindex === -1)
			continue;	// action must've gone missing
		addWait = {};
		addWait.sols = {};
		addWait.solModifiers = [];
		addWait.deleteme = false;
		addWait.time = w["t"];
		addWait.ev = e;
		addWait.actindex = aindex;
		for (j = 0, lenj = w["sm"].length; j < lenj; j++)
		{
			t = this.runtime.getObjectTypeBySid(w["sm"][j]);
			if (t)
				addWait.solModifiers.push(t);
		}
		for (p in w["sols"])
		{
			if (w["sols"].hasOwnProperty(p))
			{
				t = this.runtime.getObjectTypeBySid(parseInt(p, 10));
				if (!t)
					continue;		// type must've been deleted
				savedsol = w["sols"][p];
				nusol = {
					sa: savedsol["sa"],
					insts: []
				};
				for (j = 0, lenj = savedsol["insts"].length; j < lenj; j++)
				{
					inst = this.runtime.getObjectByUID(savedsol["insts"][j]);
					if (inst)
						nusol.insts.push(inst);
				}
				addWait.sols[t.index.toString()] = nusol;
			}
		}
		this.waits.push(addWait);
	}
};
(function ()
{
	var sysProto = cr.system_object.prototype;
	function SysCnds() {};
    SysCnds.prototype.EveryTick = function()
    {
        return true;
    };
    SysCnds.prototype.OnLayoutStart = function()
    {
        return true;
    };
    SysCnds.prototype.OnLayoutEnd = function()
    {
        return true;
    };
    SysCnds.prototype.Compare = function(x, cmp, y)
    {
        return cr.do_cmp(x, cmp, y);
    };
    SysCnds.prototype.CompareTime = function (cmp, t)
    {
        var elapsed = this.runtime.kahanTime.sum;
        if (cmp === 0)
        {
            var cnd = this.runtime.getCurrentCondition();
            if (!cnd.extra.CompareTime_executed)
            {
                if (elapsed >= t)
                {
                    cnd.extra.CompareTime_executed = true;
                    return true;
                }
            }
            return false;
        }
        return cr.do_cmp(elapsed, cmp, t);
    };
    SysCnds.prototype.LayerVisible = function (layer)
    {
        if (!layer)
            return false;
        else
            return layer.visible;
    };
	SysCnds.prototype.LayerCmpOpacity = function (layer, cmp, opacity_)
	{
		if (!layer)
			return false;
		return cr.do_cmp(layer.opacity * 100, cmp, opacity_);
	};
    SysCnds.prototype.Repeat = function (count)
    {
		var current_frame = this.runtime.getCurrentEventStack();
        var current_event = current_frame.current_event;
		var solModifierAfterCnds = current_frame.isModifierAfterCnds();
        var current_loop = this.runtime.pushLoopStack();
        var i;
		if (solModifierAfterCnds)
		{
			for (i = 0; i < count && !current_loop.stopped; i++)
			{
				this.runtime.pushCopySol(current_event.solModifiers);
				current_loop.index = i;
				current_event.retrigger();
				this.runtime.popSol(current_event.solModifiers);
			}
		}
		else
		{
			for (i = 0; i < count && !current_loop.stopped; i++)
			{
				current_loop.index = i;
				current_event.retrigger();
			}
		}
        this.runtime.popLoopStack();
		return false;
    };
	SysCnds.prototype.While = function (count)
    {
		var current_frame = this.runtime.getCurrentEventStack();
        var current_event = current_frame.current_event;
		var solModifierAfterCnds = current_frame.isModifierAfterCnds();
        var current_loop = this.runtime.pushLoopStack();
        var i;
		if (solModifierAfterCnds)
		{
			for (i = 0; !current_loop.stopped; i++)
			{
				this.runtime.pushCopySol(current_event.solModifiers);
				current_loop.index = i;
				if (!current_event.retrigger())		// one of the other conditions returned false
					current_loop.stopped = true;	// break
				this.runtime.popSol(current_event.solModifiers);
			}
		}
		else
		{
			for (i = 0; !current_loop.stopped; i++)
			{
				current_loop.index = i;
				if (!current_event.retrigger())
					current_loop.stopped = true;
			}
		}
        this.runtime.popLoopStack();
		return false;
    };
    SysCnds.prototype.For = function (name, start, end)
    {
        var current_frame = this.runtime.getCurrentEventStack();
        var current_event = current_frame.current_event;
		var solModifierAfterCnds = current_frame.isModifierAfterCnds();
        var current_loop = this.runtime.pushLoopStack(name);
        var i;
		if (end < start)
		{
			if (solModifierAfterCnds)
			{
				for (i = start; i >= end && !current_loop.stopped; --i)  // inclusive to end
				{
					this.runtime.pushCopySol(current_event.solModifiers);
					current_loop.index = i;
					current_event.retrigger();
					this.runtime.popSol(current_event.solModifiers);
				}
			}
			else
			{
				for (i = start; i >= end && !current_loop.stopped; --i)  // inclusive to end
				{
					current_loop.index = i;
					current_event.retrigger();
				}
			}
		}
		else
		{
			if (solModifierAfterCnds)
			{
				for (i = start; i <= end && !current_loop.stopped; ++i)  // inclusive to end
				{
					this.runtime.pushCopySol(current_event.solModifiers);
					current_loop.index = i;
					current_event.retrigger();
					this.runtime.popSol(current_event.solModifiers);
				}
			}
			else
			{
				for (i = start; i <= end && !current_loop.stopped; ++i)  // inclusive to end
				{
					current_loop.index = i;
					current_event.retrigger();
				}
			}
		}
        this.runtime.popLoopStack();
		return false;
    };
	var foreach_instancestack = [];
	var foreach_instanceptr = -1;
    SysCnds.prototype.ForEach = function (obj)
    {
        var sol = obj.getCurrentSol();
		foreach_instanceptr++;
		if (foreach_instancestack.length === foreach_instanceptr)
			foreach_instancestack.push([]);
		var instances = foreach_instancestack[foreach_instanceptr];
		cr.shallowAssignArray(instances, sol.getObjects());
        var current_frame = this.runtime.getCurrentEventStack();
        var current_event = current_frame.current_event;
		var solModifierAfterCnds = current_frame.isModifierAfterCnds();
        var current_loop = this.runtime.pushLoopStack();
        var i, len, j, lenj, inst, s, sol2;
		var is_contained = obj.is_contained;
		if (solModifierAfterCnds)
		{
			for (i = 0, len = instances.length; i < len && !current_loop.stopped; i++)
			{
				this.runtime.pushCopySol(current_event.solModifiers);
				inst = instances[i];
				sol = obj.getCurrentSol();
				sol.select_all = false;
				sol.instances.length = 1;
				sol.instances[0] = inst;
				if (is_contained)
				{
					for (j = 0, lenj = inst.siblings.length; j < lenj; j++)
					{
						s = inst.siblings[j];
						sol2 = s.type.getCurrentSol();
						sol2.select_all = false;
						sol2.instances.length = 1;
						sol2.instances[0] = s;
					}
				}
				current_loop.index = i;
				current_event.retrigger();
				this.runtime.popSol(current_event.solModifiers);
			}
		}
		else
		{
			sol.select_all = false;
			sol.instances.length = 1;
			for (i = 0, len = instances.length; i < len && !current_loop.stopped; i++)
			{
				inst = instances[i];
				sol.instances[0] = inst;
				if (is_contained)
				{
					for (j = 0, lenj = inst.siblings.length; j < lenj; j++)
					{
						s = inst.siblings[j];
						sol2 = s.type.getCurrentSol();
						sol2.select_all = false;
						sol2.instances.length = 1;
						sol2.instances[0] = s;
					}
				}
				current_loop.index = i;
				current_event.retrigger();
			}
		}
		instances.length = 0;
        this.runtime.popLoopStack();
		foreach_instanceptr--;
		return false;
    };
	function foreach_sortinstances(a, b)
	{
		var va = a.extra.c2_foreachordered_val;
		var vb = b.extra.c2_foreachordered_val;
		if (cr.is_number(va) && cr.is_number(vb))
			return va - vb;
		else
		{
			va = "" + va;
			vb = "" + vb;
			if (va < vb)
				return -1;
			else if (va > vb)
				return 1;
			else
				return 0;
		}
	};
	SysCnds.prototype.ForEachOrdered = function (obj, exp, order)
    {
        var sol = obj.getCurrentSol();
		foreach_instanceptr++;
		if (foreach_instancestack.length === foreach_instanceptr)
			foreach_instancestack.push([]);
		var instances = foreach_instancestack[foreach_instanceptr];
		cr.shallowAssignArray(instances, sol.getObjects());
        var current_frame = this.runtime.getCurrentEventStack();
        var current_event = current_frame.current_event;
		var current_condition = this.runtime.getCurrentCondition();
		var solModifierAfterCnds = current_frame.isModifierAfterCnds();
        var current_loop = this.runtime.pushLoopStack();
		var i, len, j, lenj, inst, s, sol2;
		for (i = 0, len = instances.length; i < len; i++)
		{
			instances[i].extra.c2_foreachordered_val = current_condition.parameters[1].get(i);
		}
		instances.sort(foreach_sortinstances);
		if (order === 1)
			instances.reverse();
		var is_contained = obj.is_contained;
		if (solModifierAfterCnds)
		{
			for (i = 0, len = instances.length; i < len && !current_loop.stopped; i++)
			{
				this.runtime.pushCopySol(current_event.solModifiers);
				inst = instances[i];
				sol = obj.getCurrentSol();
				sol.select_all = false;
				sol.instances.length = 1;
				sol.instances[0] = inst;
				if (is_contained)
				{
					for (j = 0, lenj = inst.siblings.length; j < lenj; j++)
					{
						s = inst.siblings[j];
						sol2 = s.type.getCurrentSol();
						sol2.select_all = false;
						sol2.instances.length = 1;
						sol2.instances[0] = s;
					}
				}
				current_loop.index = i;
				current_event.retrigger();
				this.runtime.popSol(current_event.solModifiers);
			}
		}
		else
		{
			sol.select_all = false;
			sol.instances.length = 1;
			for (i = 0, len = instances.length; i < len && !current_loop.stopped; i++)
			{
				inst = instances[i];
				sol.instances[0] = inst;
				if (is_contained)
				{
					for (j = 0, lenj = inst.siblings.length; j < lenj; j++)
					{
						s = inst.siblings[j];
						sol2 = s.type.getCurrentSol();
						sol2.select_all = false;
						sol2.instances.length = 1;
						sol2.instances[0] = s;
					}
				}
				current_loop.index = i;
				current_event.retrigger();
			}
		}
		instances.length = 0;
        this.runtime.popLoopStack();
		foreach_instanceptr--;
		return false;
    };
	SysCnds.prototype.PickByComparison = function (obj_, exp_, cmp_, val_)
	{
		var i, len, k, inst;
		if (!obj_)
			return;
		foreach_instanceptr++;
		if (foreach_instancestack.length === foreach_instanceptr)
			foreach_instancestack.push([]);
		var tmp_instances = foreach_instancestack[foreach_instanceptr];
		var sol = obj_.getCurrentSol();
		cr.shallowAssignArray(tmp_instances, sol.getObjects());
		if (sol.select_all)
			sol.else_instances.length = 0;
		var current_condition = this.runtime.getCurrentCondition();
		for (i = 0, k = 0, len = tmp_instances.length; i < len; i++)
		{
			inst = tmp_instances[i];
			tmp_instances[k] = inst;
			exp_ = current_condition.parameters[1].get(i);
			val_ = current_condition.parameters[3].get(i);
			if (cr.do_cmp(exp_, cmp_, val_))
			{
				k++;
			}
			else
			{
				sol.else_instances.push(inst);
			}
		}
		tmp_instances.length = k;
		sol.select_all = false;
		cr.shallowAssignArray(sol.instances, tmp_instances);
		tmp_instances.length = 0;
		foreach_instanceptr--;
		obj_.applySolToContainer();
		return !!sol.instances.length;
	};
	SysCnds.prototype.PickByEvaluate = function (obj_, exp_)
	{
		var i, len, k, inst;
		if (!obj_)
			return;
		foreach_instanceptr++;
		if (foreach_instancestack.length === foreach_instanceptr)
			foreach_instancestack.push([]);
		var tmp_instances = foreach_instancestack[foreach_instanceptr];
		var sol = obj_.getCurrentSol();
		cr.shallowAssignArray(tmp_instances, sol.getObjects());
		if (sol.select_all)
			sol.else_instances.length = 0;
		var current_condition = this.runtime.getCurrentCondition();
		for (i = 0, k = 0, len = tmp_instances.length; i < len; i++)
		{
			inst = tmp_instances[i];
			tmp_instances[k] = inst;
			exp_ = current_condition.parameters[1].get(i);
			if (exp_)
			{
				k++;
			}
			else
			{
				sol.else_instances.push(inst);
			}
		}
		tmp_instances.length = k;
		sol.select_all = false;
		cr.shallowAssignArray(sol.instances, tmp_instances);
		tmp_instances.length = 0;
		foreach_instanceptr--;
		obj_.applySolToContainer();
		return !!sol.instances.length;
	};
    SysCnds.prototype.TriggerOnce = function ()
    {
        var cndextra = this.runtime.getCurrentCondition().extra;
		if (typeof cndextra.TriggerOnce_lastTick === "undefined")
			cndextra.TriggerOnce_lastTick = -1;
        var last_tick = cndextra.TriggerOnce_lastTick;
        var cur_tick = this.runtime.tickcount;
        cndextra.TriggerOnce_lastTick = cur_tick;
        return this.runtime.layout_first_tick || last_tick !== cur_tick - 1;
    };
    SysCnds.prototype.Every = function (seconds)
    {
        var cnd = this.runtime.getCurrentCondition();
        var last_time = cnd.extra.Every_lastTime || 0;
        var cur_time = this.runtime.kahanTime.sum;
		if (typeof cnd.extra.Every_seconds === "undefined")
			cnd.extra.Every_seconds = seconds;
		var this_seconds = cnd.extra.Every_seconds;
        if (cur_time >= last_time + this_seconds)
        {
            cnd.extra.Every_lastTime = last_time + this_seconds;
			if (cur_time >= cnd.extra.Every_lastTime + 0.04)
			{
				cnd.extra.Every_lastTime = cur_time;
			}
			cnd.extra.Every_seconds = seconds;
            return true;
        }
		else if (cur_time < last_time - 0.1)
		{
			cnd.extra.Every_lastTime = cur_time;
		}
		return false;
    };
    SysCnds.prototype.PickNth = function (obj, index)
    {
        if (!obj)
            return false;
        var sol = obj.getCurrentSol();
        var instances = sol.getObjects();
		index = cr.floor(index);
        if (index < 0 || index >= instances.length)
            return false;
		var inst = instances[index];
        sol.pick_one(inst);
		obj.applySolToContainer();
        return true;
    };
	SysCnds.prototype.PickRandom = function (obj)
    {
        if (!obj)
            return false;
        var sol = obj.getCurrentSol();
        var instances = sol.getObjects();
		var index = cr.floor(Math.random() * instances.length);
        if (index >= instances.length)
            return false;
		var inst = instances[index];
        sol.pick_one(inst);
		obj.applySolToContainer();
        return true;
    };
	SysCnds.prototype.CompareVar = function (v, cmp, val)
    {
        return cr.do_cmp(v.getValue(), cmp, val);
    };
    SysCnds.prototype.IsGroupActive = function (group)
    {
		var g = this.runtime.groups_by_name[group.toLowerCase()];
        return g && g.group_active;
    };
	SysCnds.prototype.IsPreview = function ()
	{
		return typeof cr_is_preview !== "undefined";
	};
	SysCnds.prototype.PickAll = function (obj)
    {
        if (!obj)
            return false;
		if (!obj.instances.length)
			return false;
        var sol = obj.getCurrentSol();
        sol.select_all = true;
		obj.applySolToContainer();
        return true;
    };
	SysCnds.prototype.IsMobile = function ()
	{
		return this.runtime.isMobile;
	};
	SysCnds.prototype.CompareBetween = function (x, a, b)
	{
		return x >= a && x <= b;
	};
	SysCnds.prototype.Else = function ()
	{
		var current_frame = this.runtime.getCurrentEventStack();
		if (current_frame.else_branch_ran)
			return false;		// another event in this else-if chain has run
		else
			return !current_frame.last_event_true;
		/*
		var current_frame = this.runtime.getCurrentEventStack();
        var current_event = current_frame.current_event;
		var prev_event = current_event.prev_block;
		if (!prev_event)
			return false;
		if (prev_event.is_logical)
			return !this.runtime.last_event_true;
		var i, len, j, lenj, s, sol, temp, inst, any_picked = false;
		for (i = 0, len = prev_event.cndReferences.length; i < len; i++)
		{
			s = prev_event.cndReferences[i];
			sol = s.getCurrentSol();
			if (sol.select_all || sol.instances.length === s.instances.length)
			{
				sol.select_all = false;
				sol.instances.length = 0;
			}
			else
			{
				if (sol.instances.length === 1 && sol.else_instances.length === 0 && s.instances.length >= 2)
				{
					inst = sol.instances[0];
					sol.instances.length = 0;
					for (j = 0, lenj = s.instances.length; j < lenj; j++)
					{
						if (s.instances[j] != inst)
							sol.instances.push(s.instances[j]);
					}
					any_picked = true;
				}
				else
				{
					temp = sol.instances;
					sol.instances = sol.else_instances;
					sol.else_instances = temp;
					any_picked = true;
				}
			}
		}
		return any_picked;
		*/
	};
	SysCnds.prototype.OnLoadFinished = function ()
	{
		return true;
	};
	SysCnds.prototype.OnCanvasSnapshot = function ()
	{
		return true;
	};
	SysCnds.prototype.EffectsSupported = function ()
	{
		return !!this.runtime.glwrap;
	};
	SysCnds.prototype.OnSaveComplete = function ()
	{
		return true;
	};
	SysCnds.prototype.OnLoadComplete = function ()
	{
		return true;
	};
	SysCnds.prototype.OnLoadFailed = function ()
	{
		return true;
	};
	SysCnds.prototype.ObjectUIDExists = function (u)
	{
		return !!this.runtime.getObjectByUID(u);
	};
	SysCnds.prototype.IsOnPlatform = function (p)
	{
		var rt = this.runtime;
		switch (p) {
		case 0:		// HTML5 website
			return !rt.isDomFree && !rt.isNodeWebkit && !rt.isPhoneGap && !rt.isCrosswalk && !rt.isWinJS && !rt.isWindowsPhone8 && !rt.isBlackberry10 && !rt.isAmazonWebApp;
		case 1:		// iOS
			return rt.isiOS;
		case 2:		// Android
			return rt.isAndroid;
		case 3:		// Windows 8
			return rt.isWindows8App;
		case 4:		// Windows Phone 8
			return rt.isWindowsPhone8;
		case 5:		// Blackberry 10
			return rt.isBlackberry10;
		case 6:		// Tizen
			return rt.isTizen;
		case 7:		// CocoonJS
			return rt.isCocoonJs;
		case 8:		// PhoneGap
			return rt.isPhoneGap;
		case 9:	// Scirra Arcade
			return rt.isArcade;
		case 10:	// node-webkit
			return rt.isNodeWebkit;
		case 11:	// crosswalk
			return rt.isCrosswalk;
		case 12:	// amazon webapp
			return rt.isAmazonWebApp;
		default:	// should not be possible
			return false;
		}
	};
	var cacheRegex = null;
	var lastRegex = "";
	var lastFlags = "";
	function getRegex(regex_, flags_)
	{
		if (!cacheRegex || regex_ !== lastRegex || flags_ !== lastFlags)
		{
			cacheRegex = new RegExp(regex_, flags_);
			lastRegex = regex_;
			lastFlags = flags_;
		}
		cacheRegex.lastIndex = 0;		// reset
		return cacheRegex;
	};
	SysCnds.prototype.RegexTest = function (str_, regex_, flags_)
	{
		var regex = getRegex(regex_, flags_);
		return regex.test(str_);
	};
	var tmp_arr = [];
	SysCnds.prototype.PickOverlappingPoint = function (obj_, x_, y_)
	{
		if (!obj_)
            return false;
        var sol = obj_.getCurrentSol();
        var instances = sol.getObjects();
		var current_event = this.runtime.getCurrentEventStack().current_event;
		var orblock = current_event.orblock;
		var cnd = this.runtime.getCurrentCondition();
		var i, len, inst, pick;
		if (sol.select_all)
		{
			cr.shallowAssignArray(tmp_arr, instances);
			sol.else_instances.length = 0;
			sol.select_all = false;
			sol.instances.length = 0;
		}
		else
		{
			if (orblock)
			{
				cr.shallowAssignArray(tmp_arr, sol.else_instances);
				sol.else_instances.length = 0;
			}
			else
			{
				cr.shallowAssignArray(tmp_arr, instances);
				sol.instances.length = 0;
			}
		}
		for (i = 0, len = tmp_arr.length; i < len; ++i)
		{
			inst = tmp_arr[i];
			inst.update_bbox();
			pick = cr.xor(inst.contains_pt(x_, y_), cnd.inverted);
			if (pick)
				sol.instances.push(inst);
			else
				sol.else_instances.push(inst);
		}
		obj_.applySolToContainer();
		return cr.xor(!!sol.instances.length, cnd.inverted);
	};
	sysProto.cnds = new SysCnds();
    function SysActs() {};
    SysActs.prototype.GoToLayout = function (to)
    {
		if (this.runtime.isloading)
			return;		// cannot change layout while loading on loader layout
		if (this.runtime.changelayout)
			return;		// already changing to a different layout
;
        this.runtime.changelayout = to;
    };
	SysActs.prototype.NextPrevLayout = function (prev)
    {
		if (this.runtime.isloading)
			return;		// cannot change layout while loading on loader layout
		if (this.runtime.changelayout)
			return;		// already changing to a different layout
		var index = this.runtime.layouts_by_index.indexOf(this.runtime.running_layout);
		if (prev && index === 0)
			return;		// cannot go to previous layout from first layout
		if (!prev && index === this.runtime.layouts_by_index.length - 1)
			return;		// cannot go to next layout from last layout
		var to = this.runtime.layouts_by_index[index + (prev ? -1 : 1)];
;
        this.runtime.changelayout = to;
    };
    SysActs.prototype.CreateObject = function (obj, layer, x, y)
    {
        if (!layer || !obj)
            return;
        var inst = this.runtime.createInstance(obj, layer, x, y);
		if (!inst)
			return;
		this.runtime.isInOnDestroy++;
		var i, len, s;
		this.runtime.trigger(Object.getPrototypeOf(obj.plugin).cnds.OnCreated, inst);
		if (inst.is_contained)
		{
			for (i = 0, len = inst.siblings.length; i < len; i++)
			{
				s = inst.siblings[i];
				this.runtime.trigger(Object.getPrototypeOf(s.type.plugin).cnds.OnCreated, s);
			}
		}
		this.runtime.isInOnDestroy--;
        var sol = obj.getCurrentSol();
        sol.select_all = false;
		sol.instances.length = 1;
		sol.instances[0] = inst;
		if (inst.is_contained)
		{
			for (i = 0, len = inst.siblings.length; i < len; i++)
			{
				s = inst.siblings[i];
				sol = s.type.getCurrentSol();
				sol.select_all = false;
				sol.instances.length = 1;
				sol.instances[0] = s;
			}
		}
    };
    SysActs.prototype.SetLayerVisible = function (layer, visible_)
    {
        if (!layer)
            return;
		if (layer.visible !== visible_)
		{
			layer.visible = visible_;
			this.runtime.redraw = true;
		}
    };
	SysActs.prototype.SetLayerOpacity = function (layer, opacity_)
	{
		if (!layer)
			return;
		opacity_ = cr.clamp(opacity_ / 100, 0, 1);
		if (layer.opacity !== opacity_)
		{
			layer.opacity = opacity_;
			this.runtime.redraw = true;
		}
	};
	SysActs.prototype.SetLayerScaleRate = function (layer, sr)
	{
		if (!layer)
			return;
		if (layer.zoomRate !== sr)
		{
			layer.zoomRate = sr;
			this.runtime.redraw = true;
		}
	};
	SysActs.prototype.SetLayoutScale = function (s)
	{
		if (!this.runtime.running_layout)
			return;
		if (this.runtime.running_layout.scale !== s)
		{
			this.runtime.running_layout.scale = s;
			this.runtime.running_layout.boundScrolling();
			this.runtime.redraw = true;
		}
	};
    SysActs.prototype.ScrollX = function(x)
    {
        this.runtime.running_layout.scrollToX(x);
    };
    SysActs.prototype.ScrollY = function(y)
    {
        this.runtime.running_layout.scrollToY(y);
    };
    SysActs.prototype.Scroll = function(x, y)
    {
        this.runtime.running_layout.scrollToX(x);
        this.runtime.running_layout.scrollToY(y);
    };
    SysActs.prototype.ScrollToObject = function(obj)
    {
        var inst = obj.getFirstPicked();
        if (inst)
        {
            this.runtime.running_layout.scrollToX(inst.x);
            this.runtime.running_layout.scrollToY(inst.y);
        }
    };
	SysActs.prototype.SetVar = function(v, x)
	{
;
		if (v.vartype === 0)
		{
			if (cr.is_number(x))
				v.setValue(x);
			else
				v.setValue(parseFloat(x));
		}
		else if (v.vartype === 1)
			v.setValue(x.toString());
	};
	SysActs.prototype.AddVar = function(v, x)
	{
;
		if (v.vartype === 0)
		{
			if (cr.is_number(x))
				v.setValue(v.getValue() + x);
			else
				v.setValue(v.getValue() + parseFloat(x));
		}
		else if (v.vartype === 1)
			v.setValue(v.getValue() + x.toString());
	};
	SysActs.prototype.SubVar = function(v, x)
	{
;
		if (v.vartype === 0)
		{
			if (cr.is_number(x))
				v.setValue(v.getValue() - x);
			else
				v.setValue(v.getValue() - parseFloat(x));
		}
	};
    SysActs.prototype.SetGroupActive = function (group, active)
    {
		var g = this.runtime.groups_by_name[group.toLowerCase()];
		if (!g)
			return;
		switch (active) {
		case 0:
			g.setGroupActive(false);
			break;
		case 1:
			g.setGroupActive(true);
			break;
		case 2:
			g.setGroupActive(!g.group_active);
			break;
		}
    };
    SysActs.prototype.SetTimescale = function (ts_)
    {
        var ts = ts_;
        if (ts < 0)
            ts = 0;
        this.runtime.timescale = ts;
    };
    SysActs.prototype.SetObjectTimescale = function (obj, ts_)
    {
        var ts = ts_;
        if (ts < 0)
            ts = 0;
        if (!obj)
            return;
        var sol = obj.getCurrentSol();
        var instances = sol.getObjects();
        var i, len;
        for (i = 0, len = instances.length; i < len; i++)
        {
            instances[i].my_timescale = ts;
        }
    };
    SysActs.prototype.RestoreObjectTimescale = function (obj)
    {
        if (!obj)
            return false;
        var sol = obj.getCurrentSol();
        var instances = sol.getObjects();
        var i, len;
        for (i = 0, len = instances.length; i < len; i++)
        {
            instances[i].my_timescale = -1.0;
        }
    };
	var waitobjrecycle = [];
	function allocWaitObject()
	{
		var w;
		if (waitobjrecycle.length)
			w = waitobjrecycle.pop();
		else
		{
			w = {};
			w.sols = {};
			w.solModifiers = [];
		}
		w.deleteme = false;
		return w;
	};
	function freeWaitObject(w)
	{
		cr.wipe(w.sols);
		w.solModifiers.length = 0;
		waitobjrecycle.push(w);
	};
	var solstateobjects = [];
	function allocSolStateObject()
	{
		var s;
		if (solstateobjects.length)
			s = solstateobjects.pop();
		else
		{
			s = {};
			s.insts = [];
		}
		s.sa = false;
		return s;
	};
	function freeSolStateObject(s)
	{
		s.insts.length = 0;
		solstateobjects.push(s);
	};
	SysActs.prototype.Wait = function (seconds)
	{
		if (seconds < 0)
			return;
		var i, len, s, t, ss;
		var evinfo = this.runtime.getCurrentEventStack();
		var waitobj = allocWaitObject();
		waitobj.time = this.runtime.kahanTime.sum + seconds;
		waitobj.signaltag = "";
		waitobj.signalled = false;
		waitobj.ev = evinfo.current_event;
		waitobj.actindex = evinfo.actindex + 1;	// pointing at next action
		for (i = 0, len = this.runtime.types_by_index.length; i < len; i++)
		{
			t = this.runtime.types_by_index[i];
			s = t.getCurrentSol();
			if (s.select_all && evinfo.current_event.solModifiers.indexOf(t) === -1)
				continue;
			waitobj.solModifiers.push(t);
			ss = allocSolStateObject();
			ss.sa = s.select_all;
			cr.shallowAssignArray(ss.insts, s.instances);
			waitobj.sols[i.toString()] = ss;
		}
		this.waits.push(waitobj);
		return true;
	};
	SysActs.prototype.WaitForSignal = function (tag)
	{
		var i, len, s, t, ss;
		var evinfo = this.runtime.getCurrentEventStack();
		var waitobj = allocWaitObject();
		waitobj.time = -1;
		waitobj.signaltag = tag.toLowerCase();
		waitobj.signalled = false;
		waitobj.ev = evinfo.current_event;
		waitobj.actindex = evinfo.actindex + 1;	// pointing at next action
		for (i = 0, len = this.runtime.types_by_index.length; i < len; i++)
		{
			t = this.runtime.types_by_index[i];
			s = t.getCurrentSol();
			if (s.select_all && evinfo.current_event.solModifiers.indexOf(t) === -1)
				continue;
			waitobj.solModifiers.push(t);
			ss = allocSolStateObject();
			ss.sa = s.select_all;
			cr.shallowAssignArray(ss.insts, s.instances);
			waitobj.sols[i.toString()] = ss;
		}
		this.waits.push(waitobj);
		return true;
	};
	SysActs.prototype.Signal = function (tag)
	{
		var lowertag = tag.toLowerCase();
		var i, len, w;
		for (i = 0, len = this.waits.length; i < len; ++i)
		{
			w = this.waits[i];
			if (w.time !== -1)
				continue;					// timer wait, ignore
			if (w.signaltag === lowertag)	// waiting for this signal
				w.signalled = true;			// will run on next check
		}
	};
	SysActs.prototype.SetLayerScale = function (layer, scale)
    {
        if (!layer)
            return;
		if (layer.scale === scale)
			return;
        layer.scale = scale;
        this.runtime.redraw = true;
    };
	SysActs.prototype.ResetGlobals = function ()
	{
		var i, len, g;
		for (i = 0, len = this.runtime.all_global_vars.length; i < len; i++)
		{
			g = this.runtime.all_global_vars[i];
			g.data = g.initial;
		}
	};
	SysActs.prototype.SetLayoutAngle = function (a)
	{
		a = cr.to_radians(a);
		a = cr.clamp_angle(a);
		if (this.runtime.running_layout)
		{
			if (this.runtime.running_layout.angle !== a)
			{
				this.runtime.running_layout.angle = a;
				this.runtime.redraw = true;
			}
		}
	};
	SysActs.prototype.SetLayerAngle = function (layer, a)
    {
        if (!layer)
            return;
		a = cr.to_radians(a);
		a = cr.clamp_angle(a);
		if (layer.angle === a)
			return;
        layer.angle = a;
        this.runtime.redraw = true;
    };
	SysActs.prototype.SetLayerParallax = function (layer, px, py)
    {
        if (!layer)
            return;
		if (layer.parallaxX === px / 100 && layer.parallaxY === py / 100)
			return;
        layer.parallaxX = px / 100;
		layer.parallaxY = py / 100;
		if (layer.parallaxX !== 1 || layer.parallaxY !== 1)
		{
			var i, len, instances = layer.instances;
			for (i = 0, len = instances.length; i < len; ++i)
			{
				instances[i].type.any_instance_parallaxed = true;
			}
		}
        this.runtime.redraw = true;
    };
	SysActs.prototype.SetLayerBackground = function (layer, c)
    {
        if (!layer)
            return;
		var r = cr.GetRValue(c);
		var g = cr.GetGValue(c);
		var b = cr.GetBValue(c);
		if (layer.background_color[0] === r && layer.background_color[1] === g && layer.background_color[2] === b)
			return;
        layer.background_color[0] = r;
		layer.background_color[1] = g;
		layer.background_color[2] = b;
        this.runtime.redraw = true;
    };
	SysActs.prototype.SetLayerTransparent = function (layer, t)
    {
        if (!layer)
            return;
		if (!!t === !!layer.transparent)
			return;
		layer.transparent = !!t;
        this.runtime.redraw = true;
    };
	SysActs.prototype.StopLoop = function ()
	{
		if (this.runtime.loop_stack_index < 0)
			return;		// no loop currently running
		this.runtime.getCurrentLoop().stopped = true;
	};
	SysActs.prototype.GoToLayoutByName = function (layoutname)
	{
		if (this.runtime.isloading)
			return;		// cannot change layout while loading on loader layout
		if (this.runtime.changelayout)
			return;		// already changing to different layout
;
		var l;
		for (l in this.runtime.layouts)
		{
			if (this.runtime.layouts.hasOwnProperty(l) && cr.equals_nocase(l, layoutname))
			{
				this.runtime.changelayout = this.runtime.layouts[l];
				return;
			}
		}
	};
	SysActs.prototype.RestartLayout = function (layoutname)
	{
		if (this.runtime.isloading)
			return;		// cannot restart loader layouts
		if (this.runtime.changelayout)
			return;		// already changing to a different layout
;
		if (!this.runtime.running_layout)
			return;
		this.runtime.changelayout = this.runtime.running_layout;
		var i, len, g;
		for (i = 0, len = this.runtime.allGroups.length; i < len; i++)
		{
			g = this.runtime.allGroups[i];
			g.setGroupActive(g.initially_activated);
		}
	};
	SysActs.prototype.SnapshotCanvas = function (format_, quality_)
	{
		this.runtime.snapshotCanvas = [format_ === 0 ? "image/png" : "image/jpeg", quality_ / 100];
		this.runtime.redraw = true;		// force redraw so snapshot is always taken
	};
	SysActs.prototype.SetCanvasSize = function (w, h)
	{
		if (w <= 0 || h <= 0)
			return;
		var mode = this.runtime.fullscreen_mode;
		var isfullscreen = (document["mozFullScreen"] || document["webkitIsFullScreen"] || !!document["msFullscreenElement"] || document["fullScreen"] || this.runtime.isNodeFullscreen);
		if (isfullscreen && this.runtime.fullscreen_scaling > 0)
			mode = this.runtime.fullscreen_scaling;
		if (mode === 0)
		{
			this.runtime["setSize"](w, h, true);
		}
		else
		{
			this.runtime.original_width = w;
			this.runtime.original_height = h;
			this.runtime["setSize"](this.runtime.lastWindowWidth, this.runtime.lastWindowHeight, true);
		}
	};
	SysActs.prototype.SetLayoutEffectEnabled = function (enable_, effectname_)
	{
		if (!this.runtime.running_layout || !this.runtime.glwrap)
			return;
		var et = this.runtime.running_layout.getEffectByName(effectname_);
		if (!et)
			return;		// effect name not found
		var enable = (enable_ === 1);
		if (et.active == enable)
			return;		// no change
		et.active = enable;
		this.runtime.running_layout.updateActiveEffects();
		this.runtime.redraw = true;
	};
	SysActs.prototype.SetLayerEffectEnabled = function (layer, enable_, effectname_)
	{
		if (!layer || !this.runtime.glwrap)
			return;
		var et = layer.getEffectByName(effectname_);
		if (!et)
			return;		// effect name not found
		var enable = (enable_ === 1);
		if (et.active == enable)
			return;		// no change
		et.active = enable;
		layer.updateActiveEffects();
		this.runtime.redraw = true;
	};
	SysActs.prototype.SetLayoutEffectParam = function (effectname_, index_, value_)
	{
		if (!this.runtime.running_layout || !this.runtime.glwrap)
			return;
		var et = this.runtime.running_layout.getEffectByName(effectname_);
		if (!et)
			return;		// effect name not found
		var params = this.runtime.running_layout.effect_params[et.index];
		index_ = Math.floor(index_);
		if (index_ < 0 || index_ >= params.length)
			return;		// effect index out of bounds
		if (this.runtime.glwrap.getProgramParameterType(et.shaderindex, index_) === 1)
			value_ /= 100.0;
		if (params[index_] === value_)
			return;		// no change
		params[index_] = value_;
		if (et.active)
			this.runtime.redraw = true;
	};
	SysActs.prototype.SetLayerEffectParam = function (layer, effectname_, index_, value_)
	{
		if (!layer || !this.runtime.glwrap)
			return;
		var et = layer.getEffectByName(effectname_);
		if (!et)
			return;		// effect name not found
		var params = layer.effect_params[et.index];
		index_ = Math.floor(index_);
		if (index_ < 0 || index_ >= params.length)
			return;		// effect index out of bounds
		if (this.runtime.glwrap.getProgramParameterType(et.shaderindex, index_) === 1)
			value_ /= 100.0;
		if (params[index_] === value_)
			return;		// no change
		params[index_] = value_;
		if (et.active)
			this.runtime.redraw = true;
	};
	SysActs.prototype.SaveState = function (slot_)
	{
		this.runtime.saveToSlot = slot_;
	};
	SysActs.prototype.LoadState = function (slot_)
	{
		this.runtime.loadFromSlot = slot_;
	};
	SysActs.prototype.LoadStateJSON = function (jsonstr_)
	{
		this.runtime.loadFromJson = jsonstr_;
	};
	SysActs.prototype.SetHalfFramerateMode = function (set_)
	{
		this.runtime.halfFramerateMode = (set_ !== 0);
	};
	SysActs.prototype.SetFullscreenQuality = function (q)
	{
		var isfullscreen = (document["mozFullScreen"] || document["webkitIsFullScreen"] || !!document["msFullscreenElement"] || document["fullScreen"] || this.isNodeFullscreen);
		if (!isfullscreen && this.runtime.fullscreen_mode === 0)
			return;
		this.runtime.wantFullscreenScalingQuality = (q !== 0);
		this.runtime["setSize"](this.runtime.lastWindowWidth, this.runtime.lastWindowHeight, true);
	};
	sysProto.acts = new SysActs();
    function SysExps() {};
    SysExps.prototype["int"] = function(ret, x)
    {
        if (cr.is_string(x))
        {
            ret.set_int(parseInt(x, 10));
            if (isNaN(ret.data))
                ret.data = 0;
        }
        else
            ret.set_int(x);
    };
    SysExps.prototype["float"] = function(ret, x)
    {
        if (cr.is_string(x))
        {
            ret.set_float(parseFloat(x));
            if (isNaN(ret.data))
                ret.data = 0;
        }
        else
            ret.set_float(x);
    };
    SysExps.prototype.str = function(ret, x)
    {
        if (cr.is_string(x))
            ret.set_string(x);
        else
            ret.set_string(x.toString());
    };
    SysExps.prototype.len = function(ret, x)
    {
        ret.set_int(x.length || 0);
    };
    SysExps.prototype.random = function (ret, a, b)
    {
        if (b === undefined)
        {
            ret.set_float(Math.random() * a);
        }
        else
        {
            ret.set_float(Math.random() * (b - a) + a);
        }
    };
    SysExps.prototype.sqrt = function(ret, x)
    {
        ret.set_float(Math.sqrt(x));
    };
    SysExps.prototype.abs = function(ret, x)
    {
        ret.set_float(Math.abs(x));
    };
    SysExps.prototype.round = function(ret, x)
    {
        ret.set_int(Math.round(x));
    };
    SysExps.prototype.floor = function(ret, x)
    {
        ret.set_int(Math.floor(x));
    };
    SysExps.prototype.ceil = function(ret, x)
    {
        ret.set_int(Math.ceil(x));
    };
    SysExps.prototype.sin = function(ret, x)
    {
        ret.set_float(Math.sin(cr.to_radians(x)));
    };
    SysExps.prototype.cos = function(ret, x)
    {
        ret.set_float(Math.cos(cr.to_radians(x)));
    };
    SysExps.prototype.tan = function(ret, x)
    {
        ret.set_float(Math.tan(cr.to_radians(x)));
    };
    SysExps.prototype.asin = function(ret, x)
    {
        ret.set_float(cr.to_degrees(Math.asin(x)));
    };
    SysExps.prototype.acos = function(ret, x)
    {
        ret.set_float(cr.to_degrees(Math.acos(x)));
    };
    SysExps.prototype.atan = function(ret, x)
    {
        ret.set_float(cr.to_degrees(Math.atan(x)));
    };
    SysExps.prototype.exp = function(ret, x)
    {
        ret.set_float(Math.exp(x));
    };
    SysExps.prototype.ln = function(ret, x)
    {
        ret.set_float(Math.log(x));
    };
    SysExps.prototype.log10 = function(ret, x)
    {
        ret.set_float(Math.log(x) / Math.LN10);
    };
    SysExps.prototype.max = function(ret)
    {
		var max_ = arguments[1];
		if (typeof max_ !== "number")
			max_ = 0;
		var i, len, a;
		for (i = 2, len = arguments.length; i < len; i++)
		{
			a = arguments[i];
			if (typeof a !== "number")
				continue;		// ignore non-numeric types
			if (max_ < a)
				max_ = a;
		}
		ret.set_float(max_);
    };
    SysExps.prototype.min = function(ret)
    {
        var min_ = arguments[1];
		if (typeof min_ !== "number")
			min_ = 0;
		var i, len, a;
		for (i = 2, len = arguments.length; i < len; i++)
		{
			a = arguments[i];
			if (typeof a !== "number")
				continue;		// ignore non-numeric types
			if (min_ > a)
				min_ = a;
		}
		ret.set_float(min_);
    };
    SysExps.prototype.dt = function(ret)
    {
        ret.set_float(this.runtime.dt);
    };
    SysExps.prototype.timescale = function(ret)
    {
        ret.set_float(this.runtime.timescale);
    };
    SysExps.prototype.wallclocktime = function(ret)
    {
        ret.set_float((Date.now() - this.runtime.start_time) / 1000.0);
    };
    SysExps.prototype.time = function(ret)
    {
        ret.set_float(this.runtime.kahanTime.sum);
    };
    SysExps.prototype.tickcount = function(ret)
    {
        ret.set_int(this.runtime.tickcount);
    };
    SysExps.prototype.objectcount = function(ret)
    {
        ret.set_int(this.runtime.objectcount);
    };
    SysExps.prototype.fps = function(ret)
    {
        ret.set_int(this.runtime.fps);
    };
    SysExps.prototype.loopindex = function(ret, name_)
    {
		var loop, i, len;
        if (!this.runtime.loop_stack.length)
        {
            ret.set_int(0);
            return;
        }
        if (name_)
        {
            for (i = 0, len = this.runtime.loop_stack.length; i < len; i++)
            {
                loop = this.runtime.loop_stack[i];
                if (loop.name === name_)
                {
                    ret.set_int(loop.index);
                    return;
                }
            }
            ret.set_int(0);
        }
        else
        {
			loop = this.runtime.getCurrentLoop();
			ret.set_int(loop ? loop.index : -1);
        }
    };
    SysExps.prototype.distance = function(ret, x1, y1, x2, y2)
    {
        ret.set_float(cr.distanceTo(x1, y1, x2, y2));
    };
    SysExps.prototype.angle = function(ret, x1, y1, x2, y2)
    {
        ret.set_float(cr.to_degrees(cr.angleTo(x1, y1, x2, y2)));
    };
    SysExps.prototype.scrollx = function(ret)
    {
        ret.set_float(this.runtime.running_layout.scrollX);
    };
    SysExps.prototype.scrolly = function(ret)
    {
        ret.set_float(this.runtime.running_layout.scrollY);
    };
    SysExps.prototype.newline = function(ret)
    {
        ret.set_string("\n");
    };
    SysExps.prototype.lerp = function(ret, a, b, x)
    {
        ret.set_float(cr.lerp(a, b, x));
    };
	SysExps.prototype.qarp = function(ret, a, b, c, x)
    {
        ret.set_float(cr.qarp(a, b, c, x));
    };
	SysExps.prototype.cubic = function(ret, a, b, c, d, x)
    {
        ret.set_float(cr.cubic(a, b, c, d, x));
    };
	SysExps.prototype.cosp = function(ret, a, b, x)
    {
        ret.set_float(cr.cosp(a, b, x));
    };
    SysExps.prototype.windowwidth = function(ret)
    {
        ret.set_int(this.runtime.width);
    };
    SysExps.prototype.windowheight = function(ret)
    {
        ret.set_int(this.runtime.height);
    };
	SysExps.prototype.uppercase = function(ret, str)
	{
		ret.set_string(cr.is_string(str) ? str.toUpperCase() : "");
	};
	SysExps.prototype.lowercase = function(ret, str)
	{
		ret.set_string(cr.is_string(str) ? str.toLowerCase() : "");
	};
	SysExps.prototype.clamp = function(ret, x, l, u)
	{
		if (x < l)
			ret.set_float(l);
		else if (x > u)
			ret.set_float(u);
		else
			ret.set_float(x);
	};
	SysExps.prototype.layerscale = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		if (!layer)
			ret.set_float(0);
		else
			ret.set_float(layer.scale);
	};
	SysExps.prototype.layeropacity = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		if (!layer)
			ret.set_float(0);
		else
			ret.set_float(layer.opacity * 100);
	};
	SysExps.prototype.layerscalerate = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		if (!layer)
			ret.set_float(0);
		else
			ret.set_float(layer.zoomRate);
	};
	SysExps.prototype.layerparallaxx = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		if (!layer)
			ret.set_float(0);
		else
			ret.set_float(layer.parallaxX * 100);
	};
	SysExps.prototype.layerparallaxy = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		if (!layer)
			ret.set_float(0);
		else
			ret.set_float(layer.parallaxY * 100);
	};
	SysExps.prototype.layoutscale = function (ret)
	{
		if (this.runtime.running_layout)
			ret.set_float(this.runtime.running_layout.scale);
		else
			ret.set_float(0);
	};
	SysExps.prototype.layoutangle = function (ret)
	{
		ret.set_float(cr.to_degrees(this.runtime.running_layout.angle));
	};
	SysExps.prototype.layerangle = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		if (!layer)
			ret.set_float(0);
		else
			ret.set_float(cr.to_degrees(layer.angle));
	};
	SysExps.prototype.layoutwidth = function (ret)
	{
		ret.set_int(this.runtime.running_layout.width);
	};
	SysExps.prototype.layoutheight = function (ret)
	{
		ret.set_int(this.runtime.running_layout.height);
	};
	SysExps.prototype.find = function (ret, text, searchstr)
	{
		if (cr.is_string(text) && cr.is_string(searchstr))
			ret.set_int(text.search(new RegExp(cr.regexp_escape(searchstr), "i")));
		else
			ret.set_int(-1);
	};
	SysExps.prototype.left = function (ret, text, n)
	{
		ret.set_string(cr.is_string(text) ? text.substr(0, n) : "");
	};
	SysExps.prototype.right = function (ret, text, n)
	{
		ret.set_string(cr.is_string(text) ? text.substr(text.length - n) : "");
	};
	SysExps.prototype.mid = function (ret, text, index_, length_)
	{
		ret.set_string(cr.is_string(text) ? text.substr(index_, length_) : "");
	};
	SysExps.prototype.tokenat = function (ret, text, index_, sep)
	{
		if (cr.is_string(text) && cr.is_string(sep))
		{
			var arr = text.split(sep);
			var i = cr.floor(index_);
			if (i < 0 || i >= arr.length)
				ret.set_string("");
			else
				ret.set_string(arr[i]);
		}
		else
			ret.set_string("");
	};
	SysExps.prototype.tokencount = function (ret, text, sep)
	{
		if (cr.is_string(text) && text.length)
			ret.set_int(text.split(sep).length);
		else
			ret.set_int(0);
	};
	SysExps.prototype.replace = function (ret, text, find_, replace_)
	{
		if (cr.is_string(text) && cr.is_string(find_) && cr.is_string(replace_))
			ret.set_string(text.replace(new RegExp(cr.regexp_escape(find_), "gi"), replace_));
		else
			ret.set_string(cr.is_string(text) ? text : "");
	};
	SysExps.prototype.trim = function (ret, text)
	{
		ret.set_string(cr.is_string(text) ? text.trim() : "");
	};
	SysExps.prototype.pi = function (ret)
	{
		ret.set_float(cr.PI);
	};
	SysExps.prototype.layoutname = function (ret)
	{
		if (this.runtime.running_layout)
			ret.set_string(this.runtime.running_layout.name);
		else
			ret.set_string("");
	};
	SysExps.prototype.renderer = function (ret)
	{
		ret.set_string(this.runtime.gl ? "webgl" : "canvas2d");
	};
	SysExps.prototype.anglediff = function (ret, a, b)
	{
		ret.set_float(cr.to_degrees(cr.angleDiff(cr.to_radians(a), cr.to_radians(b))));
	};
	SysExps.prototype.choose = function (ret)
	{
		var index = cr.floor(Math.random() * (arguments.length - 1));
		ret.set_any(arguments[index + 1]);
	};
	SysExps.prototype.rgb = function (ret, r, g, b)
	{
		ret.set_int(cr.RGB(r, g, b));
	};
	SysExps.prototype.projectversion = function (ret)
	{
		ret.set_string(this.runtime.versionstr);
	};
	SysExps.prototype.anglelerp = function (ret, a, b, x)
	{
		a = cr.to_radians(a);
		b = cr.to_radians(b);
		var diff = cr.angleDiff(a, b);
		if (cr.angleClockwise(b, a))
		{
			ret.set_float(cr.to_clamped_degrees(a + diff * x));
		}
		else
		{
			ret.set_float(cr.to_clamped_degrees(a - diff * x));
		}
	};
	SysExps.prototype.anglerotate = function (ret, a, b, c)
	{
		a = cr.to_radians(a);
		b = cr.to_radians(b);
		c = cr.to_radians(c);
		ret.set_float(cr.to_clamped_degrees(cr.angleRotate(a, b, c)));
	};
	SysExps.prototype.zeropad = function (ret, n, d)
	{
		var s = (n < 0 ? "-" : "");
		if (n < 0) n = -n;
		var zeroes = d - n.toString().length;
		for (var i = 0; i < zeroes; i++)
			s += "0";
		ret.set_string(s + n.toString());
	};
	SysExps.prototype.cpuutilisation = function (ret)
	{
		ret.set_float(this.runtime.cpuutilisation / 1000);
	};
	SysExps.prototype.viewportleft = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.viewLeft : 0);
	};
	SysExps.prototype.viewporttop = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.viewTop : 0);
	};
	SysExps.prototype.viewportright = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.viewRight : 0);
	};
	SysExps.prototype.viewportbottom = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.viewBottom : 0);
	};
	SysExps.prototype.loadingprogress = function (ret)
	{
		ret.set_float(this.runtime.loadingprogress);
	};
	SysExps.prototype.unlerp = function(ret, a, b, y)
    {
        ret.set_float(cr.unlerp(a, b, y));
    };
	SysExps.prototype.canvassnapshot = function (ret)
	{
		ret.set_string(this.runtime.snapshotData);
	};
	SysExps.prototype.urlencode = function (ret, s)
	{
		ret.set_string(encodeURIComponent(s));
	};
	SysExps.prototype.urldecode = function (ret, s)
	{
		ret.set_string(decodeURIComponent(s));
	};
	SysExps.prototype.canvastolayerx = function (ret, layerparam, x, y)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.canvasToLayer(x, y, true) : 0);
	};
	SysExps.prototype.canvastolayery = function (ret, layerparam, x, y)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.canvasToLayer(x, y, false) : 0);
	};
	SysExps.prototype.layertocanvasx = function (ret, layerparam, x, y)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.layerToCanvas(x, y, true) : 0);
	};
	SysExps.prototype.layertocanvasy = function (ret, layerparam, x, y)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.layerToCanvas(x, y, false) : 0);
	};
	SysExps.prototype.savestatejson = function (ret)
	{
		ret.set_string(this.runtime.lastSaveJson);
	};
	SysExps.prototype.imagememoryusage = function (ret)
	{
		if (this.runtime.glwrap)
			ret.set_float(Math.round(100 * this.runtime.glwrap.estimateVRAM() / (1024 * 1024)) / 100);
		else
			ret.set_float(0);
	};
	SysExps.prototype.regexsearch = function (ret, str_, regex_, flags_)
	{
		var regex = getRegex(regex_, flags_);
		ret.set_int(str_ ? str_.search(regex) : -1);
	};
	SysExps.prototype.regexreplace = function (ret, str_, regex_, flags_, replace_)
	{
		var regex = getRegex(regex_, flags_);
		ret.set_string(str_ ? str_.replace(regex, replace_) : "");
	};
	var regexMatches = [];
	var lastMatchesStr = "";
	var lastMatchesRegex = "";
	var lastMatchesFlags = "";
	function updateRegexMatches(str_, regex_, flags_)
	{
		if (str_ === lastMatchesStr && regex_ === lastMatchesRegex && flags_ === lastMatchesFlags)
			return;
		var regex = getRegex(regex_, flags_);
		regexMatches = str_.match(regex);
		lastMatchesStr = str_;
		lastMatchesRegex = regex_;
		lastMatchesFlags = flags_;
	};
	SysExps.prototype.regexmatchcount = function (ret, str_, regex_, flags_)
	{
		var regex = getRegex(regex_, flags_);
		updateRegexMatches(str_, regex_, flags_);
		ret.set_int(regexMatches ? regexMatches.length : 0);
	};
	SysExps.prototype.regexmatchat = function (ret, str_, regex_, flags_, index_)
	{
		index_ = Math.floor(index_);
		var regex = getRegex(regex_, flags_);
		updateRegexMatches(str_, regex_, flags_);
		if (!regexMatches || index_ < 0 || index_ >= regexMatches.length)
			ret.set_string("");
		else
			ret.set_string(regexMatches[index_]);
	};
	SysExps.prototype.infinity = function (ret)
	{
		ret.set_float(Infinity);
	};
	SysExps.prototype.setbit = function (ret, n, b, v)
	{
		n = n | 0;
		b = b | 0;
		v = (v !== 0 ? 1 : 0);
		ret.set_int((n & ~(1 << b)) | (v << b));
	};
	SysExps.prototype.togglebit = function (ret, n, b)
	{
		n = n | 0;
		b = b | 0;
		ret.set_int(n ^ (1 << b));
	};
	SysExps.prototype.getbit = function (ret, n, b)
	{
		n = n | 0;
		b = b | 0;
		ret.set_int((n & (1 << b)) ? 1 : 0);
	};
	sysProto.exps = new SysExps();
	sysProto.runWaits = function ()
	{
		var i, j, len, w, k, s, ss;
		var evinfo = this.runtime.getCurrentEventStack();
		for (i = 0, len = this.waits.length; i < len; i++)
		{
			w = this.waits[i];
			if (w.time === -1)		// signalled wait
			{
				if (!w.signalled)
					continue;		// not yet signalled
			}
			else					// timer wait
			{
				if (w.time > this.runtime.kahanTime.sum)
					continue;		// timer not yet expired
			}
			evinfo.current_event = w.ev;
			evinfo.actindex = w.actindex;
			evinfo.cndindex = 0;
			for (k in w.sols)
			{
				if (w.sols.hasOwnProperty(k))
				{
					s = this.runtime.types_by_index[parseInt(k, 10)].getCurrentSol();
					ss = w.sols[k];
					s.select_all = ss.sa;
					cr.shallowAssignArray(s.instances, ss.insts);
					freeSolStateObject(ss);
				}
			}
			w.ev.resume_actions_and_subevents();
			this.runtime.clearSol(w.solModifiers);
			w.deleteme = true;
		}
		for (i = 0, j = 0, len = this.waits.length; i < len; i++)
		{
			w = this.waits[i];
			this.waits[j] = w;
			if (w.deleteme)
				freeWaitObject(w);
			else
				j++;
		}
		this.waits.length = j;
	};
}());
;
(function () {
	cr.add_common_aces = function (m)
	{
		var pluginProto = m[0].prototype;
		var singleglobal_ = m[1];
		var position_aces = m[3];
		var size_aces = m[4];
		var angle_aces = m[5];
		var appearance_aces = m[6];
		var zorder_aces = m[7];
		var effects_aces = m[8];
		if (!pluginProto.cnds)
			pluginProto.cnds = {};
		if (!pluginProto.acts)
			pluginProto.acts = {};
		if (!pluginProto.exps)
			pluginProto.exps = {};
		var cnds = pluginProto.cnds;
		var acts = pluginProto.acts;
		var exps = pluginProto.exps;
		if (position_aces)
		{
			cnds.CompareX = function (cmp, x)
			{
				return cr.do_cmp(this.x, cmp, x);
			};
			cnds.CompareY = function (cmp, y)
			{
				return cr.do_cmp(this.y, cmp, y);
			};
			cnds.IsOnScreen = function ()
			{
				var layer = this.layer;
				this.update_bbox();
				var bbox = this.bbox;
				return !(bbox.right < layer.viewLeft || bbox.bottom < layer.viewTop || bbox.left > layer.viewRight || bbox.top > layer.viewBottom);
			};
			cnds.IsOutsideLayout = function ()
			{
				this.update_bbox();
				var bbox = this.bbox;
				var layout = this.runtime.running_layout;
				return (bbox.right < 0 || bbox.bottom < 0 || bbox.left > layout.width || bbox.top > layout.height);
			};
			cnds.PickDistance = function (which, x, y)
			{
				var sol = this.getCurrentSol();
				var instances = sol.getObjects();
				if (!instances.length)
					return false;
				var inst = instances[0];
				var pickme = inst;
				var dist = cr.distanceTo(inst.x, inst.y, x, y);
				var i, len, d;
				for (i = 1, len = instances.length; i < len; i++)
				{
					inst = instances[i];
					d = cr.distanceTo(inst.x, inst.y, x, y);
					if ((which === 0 && d < dist) || (which === 1 && d > dist))
					{
						dist = d;
						pickme = inst;
					}
				}
				sol.pick_one(pickme);
				return true;
			};
			acts.SetX = function (x)
			{
				if (this.x !== x)
				{
					this.x = x;
					this.set_bbox_changed();
				}
			};
			acts.SetY = function (y)
			{
				if (this.y !== y)
				{
					this.y = y;
					this.set_bbox_changed();
				}
			};
			acts.SetPos = function (x, y)
			{
				if (this.x !== x || this.y !== y)
				{
					this.x = x;
					this.y = y;
					this.set_bbox_changed();
				}
			};
			acts.SetPosToObject = function (obj, imgpt)
			{
				var inst = obj.getPairedInstance(this);
				if (!inst)
					return;
				var newx, newy;
				if (inst.getImagePoint)
				{
					newx = inst.getImagePoint(imgpt, true);
					newy = inst.getImagePoint(imgpt, false);
				}
				else
				{
					newx = inst.x;
					newy = inst.y;
				}
				if (this.x !== newx || this.y !== newy)
				{
					this.x = newx;
					this.y = newy;
					this.set_bbox_changed();
				}
			};
			acts.MoveForward = function (dist)
			{
				if (dist !== 0)
				{
					this.x += Math.cos(this.angle) * dist;
					this.y += Math.sin(this.angle) * dist;
					this.set_bbox_changed();
				}
			};
			acts.MoveAtAngle = function (a, dist)
			{
				if (dist !== 0)
				{
					this.x += Math.cos(cr.to_radians(a)) * dist;
					this.y += Math.sin(cr.to_radians(a)) * dist;
					this.set_bbox_changed();
				}
			};
			exps.X = function (ret)
			{
				ret.set_float(this.x);
			};
			exps.Y = function (ret)
			{
				ret.set_float(this.y);
			};
			exps.dt = function (ret)
			{
				ret.set_float(this.runtime.getDt(this));
			};
		}
		if (size_aces)
		{
			cnds.CompareWidth = function (cmp, w)
			{
				return cr.do_cmp(this.width, cmp, w);
			};
			cnds.CompareHeight = function (cmp, h)
			{
				return cr.do_cmp(this.height, cmp, h);
			};
			acts.SetWidth = function (w)
			{
				if (this.width !== w)
				{
					this.width = w;
					this.set_bbox_changed();
				}
			};
			acts.SetHeight = function (h)
			{
				if (this.height !== h)
				{
					this.height = h;
					this.set_bbox_changed();
				}
			};
			acts.SetSize = function (w, h)
			{
				if (this.width !== w || this.height !== h)
				{
					this.width = w;
					this.height = h;
					this.set_bbox_changed();
				}
			};
			exps.Width = function (ret)
			{
				ret.set_float(this.width);
			};
			exps.Height = function (ret)
			{
				ret.set_float(this.height);
			};
			exps.BBoxLeft = function (ret)
			{
				this.update_bbox();
				ret.set_float(this.bbox.left);
			};
			exps.BBoxTop = function (ret)
			{
				this.update_bbox();
				ret.set_float(this.bbox.top);
			};
			exps.BBoxRight = function (ret)
			{
				this.update_bbox();
				ret.set_float(this.bbox.right);
			};
			exps.BBoxBottom = function (ret)
			{
				this.update_bbox();
				ret.set_float(this.bbox.bottom);
			};
		}
		if (angle_aces)
		{
			cnds.AngleWithin = function (within, a)
			{
				return cr.angleDiff(this.angle, cr.to_radians(a)) <= cr.to_radians(within);
			};
			cnds.IsClockwiseFrom = function (a)
			{
				return cr.angleClockwise(this.angle, cr.to_radians(a));
			};
			cnds.IsBetweenAngles = function (a, b)
			{
				var lower = cr.to_clamped_radians(a);
				var upper = cr.to_clamped_radians(b);
				var angle = cr.clamp_angle(this.angle);
				var obtuse = (!cr.angleClockwise(upper, lower));
				if (obtuse)
					return !(!cr.angleClockwise(angle, lower) && cr.angleClockwise(angle, upper));
				else
					return cr.angleClockwise(angle, lower) && !cr.angleClockwise(angle, upper);
			};
			acts.SetAngle = function (a)
			{
				var newangle = cr.to_radians(cr.clamp_angle_degrees(a));
				if (isNaN(newangle))
					return;
				if (this.angle !== newangle)
				{
					this.angle = newangle;
					this.set_bbox_changed();
				}
			};
			acts.RotateClockwise = function (a)
			{
				if (a !== 0 && !isNaN(a))
				{
					this.angle += cr.to_radians(a);
					this.angle = cr.clamp_angle(this.angle);
					this.set_bbox_changed();
				}
			};
			acts.RotateCounterclockwise = function (a)
			{
				if (a !== 0 && !isNaN(a))
				{
					this.angle -= cr.to_radians(a);
					this.angle = cr.clamp_angle(this.angle);
					this.set_bbox_changed();
				}
			};
			acts.RotateTowardAngle = function (amt, target)
			{
				var newangle = cr.angleRotate(this.angle, cr.to_radians(target), cr.to_radians(amt));
				if (isNaN(newangle))
					return;
				if (this.angle !== newangle)
				{
					this.angle = newangle;
					this.set_bbox_changed();
				}
			};
			acts.RotateTowardPosition = function (amt, x, y)
			{
				var dx = x - this.x;
				var dy = y - this.y;
				var target = Math.atan2(dy, dx);
				var newangle = cr.angleRotate(this.angle, target, cr.to_radians(amt));
				if (isNaN(newangle))
					return;
				if (this.angle !== newangle)
				{
					this.angle = newangle;
					this.set_bbox_changed();
				}
			};
			acts.SetTowardPosition = function (x, y)
			{
				var dx = x - this.x;
				var dy = y - this.y;
				var newangle = Math.atan2(dy, dx);
				if (isNaN(newangle))
					return;
				if (this.angle !== newangle)
				{
					this.angle = newangle;
					this.set_bbox_changed();
				}
			};
			exps.Angle = function (ret)
			{
				ret.set_float(cr.to_clamped_degrees(this.angle));
			};
		}
		if (!singleglobal_)
		{
			cnds.CompareInstanceVar = function (iv, cmp, val)
			{
				return cr.do_cmp(this.instance_vars[iv], cmp, val);
			};
			cnds.IsBoolInstanceVarSet = function (iv)
			{
				return this.instance_vars[iv];
			};
			cnds.PickInstVarHiLow = function (which, iv)
			{
				var sol = this.getCurrentSol();
				var instances = sol.getObjects();
				if (!instances.length)
					return false;
				var inst = instances[0];
				var pickme = inst;
				var val = inst.instance_vars[iv];
				var i, len, v;
				for (i = 1, len = instances.length; i < len; i++)
				{
					inst = instances[i];
					v = inst.instance_vars[iv];
					if ((which === 0 && v < val) || (which === 1 && v > val))
					{
						val = v;
						pickme = inst;
					}
				}
				sol.pick_one(pickme);
				return true;
			};
			cnds.PickByUID = function (u)
			{
				var i, len, j, inst, families, instances, sol;
				var cnd = this.runtime.getCurrentCondition();
				if (cnd.inverted)
				{
					sol = this.getCurrentSol();
					if (sol.select_all)
					{
						sol.select_all = false;
						sol.instances.length = 0;
						sol.else_instances.length = 0;
						instances = this.instances;
						for (i = 0, len = instances.length; i < len; i++)
						{
							inst = instances[i];
							if (inst.uid === u)
								sol.else_instances.push(inst);
							else
								sol.instances.push(inst);
						}
						this.applySolToContainer();
						return !!sol.instances.length;
					}
					else
					{
						for (i = 0, j = 0, len = sol.instances.length; i < len; i++)
						{
							inst = sol.instances[i];
							sol.instances[j] = inst;
							if (inst.uid === u)
							{
								sol.else_instances.push(inst);
							}
							else
								j++;
						}
						sol.instances.length = j;
						this.applySolToContainer();
						return !!sol.instances.length;
					}
				}
				else
				{
					inst = this.runtime.getObjectByUID(u);
					if (!inst)
						return false;
					sol = this.getCurrentSol();
					if (!sol.select_all && sol.instances.indexOf(inst) === -1)
						return false;		// not picked
					if (this.is_family)
					{
						families = inst.type.families;
						for (i = 0, len = families.length; i < len; i++)
						{
							if (families[i] === this)
							{
								sol.pick_one(inst);
								this.applySolToContainer();
								return true;
							}
						}
					}
					else if (inst.type === this)
					{
						sol.pick_one(inst);
						this.applySolToContainer();
						return true;
					}
					return false;
				}
			};
			cnds.OnCreated = function ()
			{
				return true;
			};
			cnds.OnDestroyed = function ()
			{
				return true;
			};
			acts.SetInstanceVar = function (iv, val)
			{
				var myinstvars = this.instance_vars;
				if (cr.is_number(myinstvars[iv]))
				{
					if (cr.is_number(val))
						myinstvars[iv] = val;
					else
						myinstvars[iv] = parseFloat(val);
				}
				else if (cr.is_string(myinstvars[iv]))
				{
					if (cr.is_string(val))
						myinstvars[iv] = val;
					else
						myinstvars[iv] = val.toString();
				}
				else
;
			};
			acts.AddInstanceVar = function (iv, val)
			{
				var myinstvars = this.instance_vars;
				if (cr.is_number(myinstvars[iv]))
				{
					if (cr.is_number(val))
						myinstvars[iv] += val;
					else
						myinstvars[iv] += parseFloat(val);
				}
				else if (cr.is_string(myinstvars[iv]))
				{
					if (cr.is_string(val))
						myinstvars[iv] += val;
					else
						myinstvars[iv] += val.toString();
				}
				else
;
			};
			acts.SubInstanceVar = function (iv, val)
			{
				var myinstvars = this.instance_vars;
				if (cr.is_number(myinstvars[iv]))
				{
					if (cr.is_number(val))
						myinstvars[iv] -= val;
					else
						myinstvars[iv] -= parseFloat(val);
				}
				else
;
			};
			acts.SetBoolInstanceVar = function (iv, val)
			{
				this.instance_vars[iv] = val ? 1 : 0;
			};
			acts.ToggleBoolInstanceVar = function (iv)
			{
				this.instance_vars[iv] = 1 - this.instance_vars[iv];
			};
			acts.Destroy = function ()
			{
				this.runtime.DestroyInstance(this);
			};
			if (!acts.LoadFromJsonString)
			{
				acts.LoadFromJsonString = function (str_)
				{
					var o, i, len, binst;
					try {
						o = JSON.parse(str_);
					}
					catch (e) {
						return;
					}
					this.runtime.loadInstanceFromJSON(this, o, true);
					if (this.afterLoad)
						this.afterLoad();
					if (this.behavior_insts)
					{
						for (i = 0, len = this.behavior_insts.length; i < len; ++i)
						{
							binst = this.behavior_insts[i];
							if (binst.afterLoad)
								binst.afterLoad();
						}
					}
				};
			}
			exps.Count = function (ret)
			{
				var count = ret.object_class.instances.length;
				var i, len, inst;
				for (i = 0, len = this.runtime.createRow.length; i < len; i++)
				{
					inst = this.runtime.createRow[i];
					if (ret.object_class.is_family)
					{
						if (inst.type.families.indexOf(ret.object_class) >= 0)
							count++;
					}
					else
					{
						if (inst.type === ret.object_class)
							count++;
					}
				}
				ret.set_int(count);
			};
			exps.PickedCount = function (ret)
			{
				ret.set_int(ret.object_class.getCurrentSol().getObjects().length);
			};
			exps.UID = function (ret)
			{
				ret.set_int(this.uid);
			};
			exps.IID = function (ret)
			{
				ret.set_int(this.get_iid());
			};
			if (!exps.AsJSON)
			{
				exps.AsJSON = function (ret)
				{
					ret.set_string(JSON.stringify(this.runtime.saveInstanceToJSON(this, true)));
				};
			}
		}
		if (appearance_aces)
		{
			cnds.IsVisible = function ()
			{
				return this.visible;
			};
			acts.SetVisible = function (v)
			{
				if (!v !== !this.visible)
				{
					this.visible = v;
					this.runtime.redraw = true;
				}
			};
			cnds.CompareOpacity = function (cmp, x)
			{
				return cr.do_cmp(cr.round6dp(this.opacity * 100), cmp, x);
			};
			acts.SetOpacity = function (x)
			{
				var new_opacity = x / 100.0;
				if (new_opacity < 0)
					new_opacity = 0;
				else if (new_opacity > 1)
					new_opacity = 1;
				if (new_opacity !== this.opacity)
				{
					this.opacity = new_opacity;
					this.runtime.redraw = true;
				}
			};
			exps.Opacity = function (ret)
			{
				ret.set_float(cr.round6dp(this.opacity * 100.0));
			};
		}
		if (zorder_aces)
		{
			cnds.IsOnLayer = function (layer_)
			{
				if (!layer_)
					return false;
				return this.layer === layer_;
			};
			cnds.PickTopBottom = function (which_)
			{
				var sol = this.getCurrentSol();
				var instances = sol.getObjects();
				if (!instances.length)
					return false;
				var inst = instances[0];
				var pickme = inst;
				var i, len;
				for (i = 1, len = instances.length; i < len; i++)
				{
					inst = instances[i];
					if (which_ === 0)
					{
						if (inst.layer.index > pickme.layer.index || (inst.layer.index === pickme.layer.index && inst.get_zindex() > pickme.get_zindex()))
						{
							pickme = inst;
						}
					}
					else
					{
						if (inst.layer.index < pickme.layer.index || (inst.layer.index === pickme.layer.index && inst.get_zindex() < pickme.get_zindex()))
						{
							pickme = inst;
						}
					}
				}
				sol.pick_one(pickme);
				return true;
			};
			acts.MoveToTop = function ()
			{
				var zindex = this.get_zindex();
				if (zindex === this.layer.instances.length - 1)
					return;
				cr.arrayRemove(this.layer.instances, zindex);
				this.layer.instances.push(this);
				this.runtime.redraw = true;
				this.layer.zindices_stale = true;
			};
			acts.MoveToBottom = function ()
			{
				var zindex = this.get_zindex();
				if (zindex === 0)
					return;
				cr.arrayRemove(this.layer.instances, zindex);
				this.layer.instances.unshift(this);
				this.runtime.redraw = true;
				this.layer.zindices_stale = true;
			};
			acts.MoveToLayer = function (layerMove)
			{
				if (!layerMove || layerMove == this.layer)
					return;
				cr.arrayRemove(this.layer.instances, this.get_zindex());
				this.layer.zindices_stale = true;
				this.layer = layerMove;
				this.zindex = layerMove.instances.length;
				layerMove.instances.push(this);
				this.runtime.redraw = true;
			};
			acts.ZMoveToObject = function (where_, obj_)
			{
				var isafter = (where_ === 0);
				if (!obj_)
					return;
				var other = obj_.getFirstPicked(this);
				if (!other || other.uid === this.uid)
					return;
				if (this.layer.index !== other.layer.index)
				{
					cr.arrayRemove(this.layer.instances, this.get_zindex());
					this.layer.zindices_stale = true;
					this.layer = other.layer;
					this.zindex = other.layer.instances.length;
					other.layer.instances.push(this);
				}
				var myZ = this.get_zindex();
				var insertZ = other.get_zindex();
				cr.arrayRemove(this.layer.instances, myZ);
				if (myZ < insertZ)
					insertZ--;
				if (isafter)
					insertZ++;
				if (insertZ === this.layer.instances.length)
					this.layer.instances.push(this);
				else
					this.layer.instances.splice(insertZ, 0, this);
				this.layer.zindices_stale = true;
				this.runtime.redraw = true;
			};
			exps.LayerNumber = function (ret)
			{
				ret.set_int(this.layer.number);
			};
			exps.LayerName = function (ret)
			{
				ret.set_string(this.layer.name);
			};
			exps.ZIndex = function (ret)
			{
				ret.set_int(this.get_zindex());
			};
		}
		if (effects_aces)
		{
			acts.SetEffectEnabled = function (enable_, effectname_)
			{
				if (!this.runtime.glwrap)
					return;
				var i = this.type.getEffectIndexByName(effectname_);
				if (i < 0)
					return;		// effect name not found
				var enable = (enable_ === 1);
				if (this.active_effect_flags[i] === enable)
					return;		// no change
				this.active_effect_flags[i] = enable;
				this.updateActiveEffects();
				this.runtime.redraw = true;
			};
			acts.SetEffectParam = function (effectname_, index_, value_)
			{
				if (!this.runtime.glwrap)
					return;
				var i = this.type.getEffectIndexByName(effectname_);
				if (i < 0)
					return;		// effect name not found
				var et = this.type.effect_types[i];
				var params = this.effect_params[i];
				index_ = Math.floor(index_);
				if (index_ < 0 || index_ >= params.length)
					return;		// effect index out of bounds
				if (this.runtime.glwrap.getProgramParameterType(et.shaderindex, index_) === 1)
					value_ /= 100.0;
				if (params[index_] === value_)
					return;		// no change
				params[index_] = value_;
				if (et.active)
					this.runtime.redraw = true;
			};
		}
	};
	cr.set_bbox_changed = function ()
	{
		this.bbox_changed = true;      		// will recreate next time box requested
		this.cell_changed = true;
		this.type.any_cell_changed = true;	// avoid unnecessary updateAllBBox() calls
		this.runtime.redraw = true;     	// assume runtime needs to redraw
		var i, len, callbacks = this.bbox_changed_callbacks;
		for (i = 0, len = callbacks.length; i < len; ++i)
		{
			callbacks[i](this);
		}
	};
	cr.add_bbox_changed_callback = function (f)
	{
		if (f)
		{
			this.bbox_changed_callbacks.push(f);
		}
	};
	cr.update_bbox = function ()
	{
		if (!this.bbox_changed)
			return;                 // bounding box not changed
		var bbox = this.bbox;
		var bquad = this.bquad;
		bbox.set(this.x, this.y, this.x + this.width, this.y + this.height);
		bbox.offset(-this.hotspotX * this.width, -this.hotspotY * this.height);
		if (!this.angle)
		{
			bquad.set_from_rect(bbox);    // make bounding quad from box
		}
		else
		{
			bbox.offset(-this.x, -this.y);       			// translate to origin
			bquad.set_from_rotated_rect(bbox, this.angle);	// rotate around origin
			bquad.offset(this.x, this.y);      				// translate back to original position
			bquad.bounding_box(bbox);
		}
		bbox.normalize();
		this.bbox_changed = false;  // bounding box up to date
	};
	var tmprc = new cr.rect(0, 0, 0, 0);
	cr.update_collision_cell = function ()
	{
		if (!this.cell_changed || !this.collisionsEnabled)
			return;
		this.update_bbox();
		var mygrid = this.type.collision_grid;
		var collcells = this.collcells;
		var bbox = this.bbox;
		tmprc.set(mygrid.XToCell(bbox.left), mygrid.YToCell(bbox.top), mygrid.XToCell(bbox.right), mygrid.YToCell(bbox.bottom));
		if (collcells.equals(tmprc))
			return;
		if (collcells.right < collcells.left)
			mygrid.update(this, null, tmprc);		// first insertion with invalid rect: don't provide old range
		else
			mygrid.update(this, collcells, tmprc);
		collcells.copy(tmprc);
		this.cell_changed = false;
	};
	cr.inst_contains_pt = function (x, y)
	{
		if (!this.bbox.contains_pt(x, y))
			return false;
		if (!this.bquad.contains_pt(x, y))
			return false;
		if (this.collision_poly && !this.collision_poly.is_empty())
		{
			this.collision_poly.cache_poly(this.width, this.height, this.angle);
			return this.collision_poly.contains_pt(x - this.x, y - this.y);
		}
		else
			return true;
	};
	cr.inst_get_iid = function ()
	{
		this.type.updateIIDs();
		return this.iid;
	};
	cr.inst_get_zindex = function ()
	{
		this.layer.updateZIndices();
		return this.zindex;
	};
	cr.inst_updateActiveEffects = function ()
	{
		this.active_effect_types.length = 0;
		var i, len, et, inst;
		for (i = 0, len = this.active_effect_flags.length; i < len; i++)
		{
			if (this.active_effect_flags[i])
				this.active_effect_types.push(this.type.effect_types[i]);
		}
		this.uses_shaders = !!this.active_effect_types.length;
	};
	cr.inst_toString = function ()
	{
		return "Inst" + this.puid;
	};
	cr.type_getFirstPicked = function (frominst)
	{
		if (frominst && frominst.is_contained && frominst.type != this)
		{
			var i, len, s;
			for (i = 0, len = frominst.siblings.length; i < len; i++)
			{
				s = frominst.siblings[i];
				if (s.type == this)
					return s;
			}
		}
		var instances = this.getCurrentSol().getObjects();
		if (instances.length)
			return instances[0];
		else
			return null;
	};
	cr.type_getPairedInstance = function (inst)
	{
		var instances = this.getCurrentSol().getObjects();
		if (instances.length)
			return instances[inst.get_iid() % instances.length];
		else
			return null;
	};
	cr.type_updateIIDs = function ()
	{
		if (!this.stale_iids || this.is_family)
			return;		// up to date or is family - don't want family to overwrite IIDs
		var i, len;
		for (i = 0, len = this.instances.length; i < len; i++)
			this.instances[i].iid = i;
		var next_iid = i;
		var createRow = this.runtime.createRow;
		for (i = 0, len = createRow.length; i < len; ++i)
		{
			if (createRow[i].type === this)
				createRow[i].iid = next_iid++;
		}
		this.stale_iids = false;
	};
	cr.type_getInstanceByIID = function (i)
	{
		if (i < this.instances.length)
			return this.instances[i];
		i -= this.instances.length;
		var createRow = this.runtime.createRow;
		var j, lenj;
		for (j = 0, lenj = createRow.length; j < lenj; ++j)
		{
			if (createRow[j].type === this)
			{
				if (i === 0)
					return createRow[j];
				--i;
			}
		}
;
		return null;
	};
	cr.type_getCurrentSol = function ()
	{
		return this.solstack[this.cur_sol];
	};
	cr.type_pushCleanSol = function ()
	{
		this.cur_sol++;
		if (this.cur_sol === this.solstack.length)
			this.solstack.push(new cr.selection(this));
		else
			this.solstack[this.cur_sol].select_all = true;  // else clear next SOL
	};
	cr.type_pushCopySol = function ()
	{
		this.cur_sol++;
		if (this.cur_sol === this.solstack.length)
			this.solstack.push(new cr.selection(this));
		var clonesol = this.solstack[this.cur_sol];
		var prevsol = this.solstack[this.cur_sol - 1];
		if (prevsol.select_all)
			clonesol.select_all = true;
		else
		{
			clonesol.select_all = false;
			cr.shallowAssignArray(clonesol.instances, prevsol.instances);
			cr.shallowAssignArray(clonesol.else_instances, prevsol.else_instances);
		}
	};
	cr.type_popSol = function ()
	{
;
		this.cur_sol--;
	};
	cr.type_getBehaviorByName = function (behname)
	{
		var i, len, j, lenj, f, index = 0;
		if (!this.is_family)
		{
			for (i = 0, len = this.families.length; i < len; i++)
			{
				f = this.families[i];
				for (j = 0, lenj = f.behaviors.length; j < lenj; j++)
				{
					if (behname === f.behaviors[j].name)
					{
						this.extra.lastBehIndex = index;
						return f.behaviors[j];
					}
					index++;
				}
			}
		}
		for (i = 0, len = this.behaviors.length; i < len; i++) {
			if (behname === this.behaviors[i].name)
			{
				this.extra.lastBehIndex = index;
				return this.behaviors[i];
			}
			index++;
		}
		return null;
	};
	cr.type_getBehaviorIndexByName = function (behname)
	{
		var b = this.getBehaviorByName(behname);
		if (b)
			return this.extra.lastBehIndex;
		else
			return -1;
	};
	cr.type_getEffectIndexByName = function (name_)
	{
		var i, len;
		for (i = 0, len = this.effect_types.length; i < len; i++)
		{
			if (this.effect_types[i].name === name_)
				return i;
		}
		return -1;
	};
	cr.type_applySolToContainer = function ()
	{
		if (!this.is_contained || this.is_family)
			return;
		var i, len, j, lenj, t, sol, sol2;
		this.updateIIDs();
		sol = this.getCurrentSol();
		var select_all = sol.select_all;
		var es = this.runtime.getCurrentEventStack();
		var orblock = es && es.current_event && es.current_event.orblock;
		for (i = 0, len = this.container.length; i < len; i++)
		{
			t = this.container[i];
			if (t === this)
				continue;
			t.updateIIDs();
			sol2 = t.getCurrentSol();
			sol2.select_all = select_all;
			if (!select_all)
			{
				sol2.instances.length = sol.instances.length;
				for (j = 0, lenj = sol.instances.length; j < lenj; j++)
					sol2.instances[j] = t.getInstanceByIID(sol.instances[j].iid);
				if (orblock)
				{
					sol2.else_instances.length = sol.else_instances.length;
					for (j = 0, lenj = sol.else_instances.length; j < lenj; j++)
						sol2.else_instances[j] = t.getInstanceByIID(sol.else_instances[j].iid);
				}
			}
		}
	};
	cr.type_toString = function ()
	{
		return "Type" + this.sid;
	};
	cr.do_cmp = function (x, cmp, y)
	{
		if (typeof x === "undefined" || typeof y === "undefined")
			return false;
		switch (cmp)
		{
			case 0:     // equal
				return x === y;
			case 1:     // not equal
				return x !== y;
			case 2:     // less
				return x < y;
			case 3:     // less/equal
				return x <= y;
			case 4:     // greater
				return x > y;
			case 5:     // greater/equal
				return x >= y;
			default:
;
				return false;
		}
	};
})();
cr.shaders = {};
;
;
cr.plugins_.AJAX = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var isNodeWebkit = false;
	var path = null;
	var fs = null;
	var nw_appfolder = "";
	var pluginProto = cr.plugins_.AJAX.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
		this.lastData = "";
		this.curTag = "";
		this.progress = 0;
		this.timeout = -1;
		isNodeWebkit = this.runtime.isNodeWebkit;
		if (isNodeWebkit)
		{
			path = require("path");
			fs = require("fs");
			nw_appfolder = path["dirname"](process["execPath"]) + "\\";
		}
	};
	var instanceProto = pluginProto.Instance.prototype;
	var theInstance = null;
	window["C2_AJAX_DCSide"] = function (event_, tag_, param_)
	{
		if (!theInstance)
			return;
		if (event_ === "success")
		{
			theInstance.curTag = tag_;
			theInstance.lastData = param_;
			theInstance.runtime.trigger(cr.plugins_.AJAX.prototype.cnds.OnComplete, theInstance);
		}
		else if (event_ === "error")
		{
			theInstance.curTag = tag_;
			theInstance.runtime.trigger(cr.plugins_.AJAX.prototype.cnds.OnError, theInstance);
		}
		else if (event_ === "progress")
		{
			theInstance.progress = param_;
			theInstance.curTag = tag_;
			theInstance.runtime.trigger(cr.plugins_.AJAX.prototype.cnds.OnProgress, theInstance);
		}
	};
	instanceProto.onCreate = function()
	{
		theInstance = this;
	};
	instanceProto.saveToJSON = function ()
	{
		return { "lastData": this.lastData };
	};
	instanceProto.loadFromJSON = function (o)
	{
		this.lastData = o["lastData"];
		this.curTag = "";
		this.progress = 0;
	};
	var next_request_headers = {};
	instanceProto.doRequest = function (tag_, url_, method_, data_)
	{
		if (this.runtime.isDirectCanvas)
		{
			AppMobi["webview"]["execute"]('C2_AJAX_WebSide("' + tag_ + '", "' + url_ + '", "' + method_ + '", ' + (data_ ? '"' + data_ + '"' : "null") + ');');
			return;
		}
		var self = this;
		var request = null;
		var doErrorFunc = function ()
		{
			self.curTag = tag_;
			self.runtime.trigger(cr.plugins_.AJAX.prototype.cnds.OnError, self);
		};
		var errorFunc = function ()
		{
			if (isNodeWebkit)
			{
				var filepath = nw_appfolder + url_;
				if (fs["existsSync"](filepath))
				{
					fs["readFile"](filepath, {"encoding": "utf8"}, function (err, data) {
						if (err)
						{
							doErrorFunc();
							return;
						}
						self.lastData = data.replace(/\r\n/g, "\n")
						self.runtime.trigger(cr.plugins_.AJAX.prototype.cnds.OnComplete, self);
					});
				}
				else
					doErrorFunc();
			}
			else
				doErrorFunc();
		};
		var progressFunc = function (e)
		{
			if (!e["lengthComputable"])
				return;
			self.progress = e.loaded / e.total;
			self.curTag = tag_;
			self.runtime.trigger(cr.plugins_.AJAX.prototype.cnds.OnProgress, self);
		};
		try
		{
			if (this.runtime.isWindowsPhone8)
				request = new ActiveXObject("Microsoft.XMLHTTP");
			else
				request = new XMLHttpRequest();
			request.onreadystatechange = function()
			{
				if (request.readyState === 4)
				{
					self.curTag = tag_;
					if (request.responseText)
						self.lastData = request.responseText.replace(/\r\n/g, "\n");		// fix windows style line endings
					else
						self.lastData = "";
					if (request.status >= 400)
						self.runtime.trigger(cr.plugins_.AJAX.prototype.cnds.OnError, self);
					else
					{
						if (!isNodeWebkit || self.lastData.length)
							self.runtime.trigger(cr.plugins_.AJAX.prototype.cnds.OnComplete, self);
					}
				}
			};
			if (!this.runtime.isWindowsPhone8)
			{
				request.onerror = errorFunc;
				request.ontimeout = errorFunc;
				request.onabort = errorFunc;
				request["onprogress"] = progressFunc;
			}
			request.open(method_, url_);
			if (!this.runtime.isWindowsPhone8)
			{
				if (this.timeout >= 0 && typeof request["timeout"] !== "undefined")
					request["timeout"] = this.timeout;
			}
			try {
				request.responseType = "text";
			} catch (e) {}
			if (data_)
			{
				if (request["setRequestHeader"])
				{
					request["setRequestHeader"]("Content-Type", "application/x-www-form-urlencoded");
				}
			}
			if (request["setRequestHeader"])
			{
				var p;
				for (p in next_request_headers)
				{
					if (next_request_headers.hasOwnProperty(p))
					{
						try {
							request["setRequestHeader"](p, next_request_headers[p]);
						}
						catch (e) {}
					}
				}
				next_request_headers = {};
			}
			if (data_)
				request.send(data_);
			else
				request.send();
		}
		catch (e)
		{
			errorFunc();
		}
	};
	function Cnds() {};
	Cnds.prototype.OnComplete = function (tag)
	{
		return cr.equals_nocase(tag, this.curTag);
	};
	Cnds.prototype.OnError = function (tag)
	{
		return cr.equals_nocase(tag, this.curTag);
	};
	Cnds.prototype.OnProgress = function (tag)
	{
		return cr.equals_nocase(tag, this.curTag);
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.Request = function (tag_, url_)
	{
		this.doRequest(tag_, url_, "GET");
	};
	Acts.prototype.RequestFile = function (tag_, file_)
	{
		this.doRequest(tag_, file_, "GET");
	};
	Acts.prototype.Post = function (tag_, url_, data_, method_)
	{
		this.doRequest(tag_, url_, method_, data_);
	};
	Acts.prototype.SetTimeout = function (t)
	{
		this.timeout = t * 1000;
	};
	Acts.prototype.SetHeader = function (n, v)
	{
		next_request_headers[n] = v;
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.LastData = function (ret)
	{
		ret.set_string(this.lastData);
	};
	Exps.prototype.Progress = function (ret)
	{
		ret.set_float(this.progress);
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.Audio = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Audio.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	var audRuntime = null;
	var audInst = null;
	var audTag = "";
	var appPath = "";			// for PhoneGap only
	var API_HTML5 = 0;
	var API_WEBAUDIO = 1;
	var API_PHONEGAP = 2;
	var API_APPMOBI = 3;
	var api = API_HTML5;
	var context = null;
	var audioBuffers = [];		// cache of buffers
	var audioInstances = [];	// cache of instances
	var lastAudio = null;
	var useOgg = false;			// determined at create time
	var timescale_mode = 0;
	var silent = false;
	var masterVolume = 1;
	var listenerX = 0;
	var listenerY = 0;
	var panningModel = 1;		// HRTF
	var distanceModel = 1;		// Inverse
	var refDistance = 10;
	var maxDistance = 10000;
	var rolloffFactor = 1;
	var micSource = null;
	var micTag = "";
	var isMusicWorkaround = false;
	var musicPlayNextTouch = [];
	function dbToLinear(x)
	{
		var v = dbToLinear_nocap(x);
		if (v < 0)
			v = 0;
		if (v > 1)
			v = 1;
		return v;
	};
	function linearToDb(x)
	{
		if (x < 0)
			x = 0;
		if (x > 1)
			x = 1;
		return linearToDb_nocap(x);
	};
	function dbToLinear_nocap(x)
	{
		return Math.pow(10, x / 20);
	};
	function linearToDb_nocap(x)
	{
		return (Math.log(x) / Math.log(10)) * 20;
	};
	var effects = {};
	function getDestinationForTag(tag)
	{
		tag = tag.toLowerCase();
		if (effects.hasOwnProperty(tag))
		{
			if (effects[tag].length)
				return effects[tag][0].getInputNode();
		}
		return context["destination"];
	};
	function createGain()
	{
		if (context["createGain"])
			return context["createGain"]();
		else
			return context["createGainNode"]();
	};
	function createDelay(d)
	{
		if (context["createDelay"])
			return context["createDelay"](d);
		else
			return context["createDelayNode"](d);
	};
	function startSource(s)
	{
		if (s["start"])
			s["start"](0);
		else
			s["noteOn"](0);
	};
	function startSourceAt(s, x, d)
	{
		if (s["start"])
			s["start"](0, x);
		else
			s["noteGrainOn"](0, x, d - x);
	};
	function stopSource(s)
	{
		try {
			if (s["stop"])
				s["stop"](0);
			else
				s["noteOff"](0);
		}
		catch (e) {}
	};
	function setAudioParam(ap, value, ramp, time)
	{
		if (!ap)
			return;		// iOS is missing some parameters
		ap["cancelScheduledValues"](0);
		if (time === 0)
		{
			ap["value"] = value;
			return;
		}
		var curTime = context["currentTime"];
		time += curTime;
		switch (ramp) {
		case 0:		// step
			ap["setValueAtTime"](value, time);
			break;
		case 1:		// linear
			ap["setValueAtTime"](ap["value"], curTime);		// to set what to ramp from
			ap["linearRampToValueAtTime"](value, time);
			break;
		case 2:		// exponential
			ap["setValueAtTime"](ap["value"], curTime);		// to set what to ramp from
			ap["exponentialRampToValueAtTime"](value, time);
			break;
		}
	};
	var filterTypes = ["lowpass", "highpass", "bandpass", "lowshelf", "highshelf", "peaking", "notch", "allpass"];
	function FilterEffect(type, freq, detune, q, gain, mix)
	{
		this.type = "filter";
		this.params = [type, freq, detune, q, gain, mix];
		this.inputNode = createGain();
		this.wetNode = createGain();
		this.wetNode["gain"]["value"] = mix;
		this.dryNode = createGain();
		this.dryNode["gain"]["value"] = 1 - mix;
		this.filterNode = context["createBiquadFilter"]();
		if (typeof this.filterNode["type"] === "number")
			this.filterNode["type"] = type;
		else
			this.filterNode["type"] = filterTypes[type];
		this.filterNode["frequency"]["value"] = freq;
		if (this.filterNode["detune"])		// iOS 6 doesn't have detune yet
			this.filterNode["detune"]["value"] = detune;
		this.filterNode["Q"]["value"] = q;
		this.filterNode["gain"]["value"] = gain;
		this.inputNode["connect"](this.filterNode);
		this.inputNode["connect"](this.dryNode);
		this.filterNode["connect"](this.wetNode);
	};
	FilterEffect.prototype.connectTo = function (node)
	{
		this.wetNode["disconnect"]();
		this.wetNode["connect"](node);
		this.dryNode["disconnect"]();
		this.dryNode["connect"](node);
	};
	FilterEffect.prototype.remove = function ()
	{
		this.inputNode["disconnect"]();
		this.filterNode["disconnect"]();
		this.wetNode["disconnect"]();
		this.dryNode["disconnect"]();
	};
	FilterEffect.prototype.getInputNode = function ()
	{
		return this.inputNode;
	};
	FilterEffect.prototype.setParam = function(param, value, ramp, time)
	{
		switch (param) {
		case 0:		// mix
			value = value / 100;
			if (value < 0) value = 0;
			if (value > 1) value = 1;
			this.params[5] = value;
			setAudioParam(this.wetNode["gain"], value, ramp, time);
			setAudioParam(this.dryNode["gain"], 1 - value, ramp, time);
			break;
		case 1:		// filter frequency
			this.params[1] = value;
			setAudioParam(this.filterNode["frequency"], value, ramp, time);
			break;
		case 2:		// filter detune
			this.params[2] = value;
			setAudioParam(this.filterNode["detune"], value, ramp, time);
			break;
		case 3:		// filter Q
			this.params[3] = value;
			setAudioParam(this.filterNode["Q"], value, ramp, time);
			break;
		case 4:		// filter/delay gain (note value is in dB here)
			this.params[4] = value;
			setAudioParam(this.filterNode["gain"], value, ramp, time);
			break;
		}
	};
	function DelayEffect(delayTime, delayGain, mix)
	{
		this.type = "delay";
		this.params = [delayTime, delayGain, mix];
		this.inputNode = createGain();
		this.wetNode = createGain();
		this.wetNode["gain"]["value"] = mix;
		this.dryNode = createGain();
		this.dryNode["gain"]["value"] = 1 - mix;
		this.mainNode = createGain();
		this.delayNode = createDelay(delayTime);
		this.delayNode["delayTime"]["value"] = delayTime;
		this.delayGainNode = createGain();
		this.delayGainNode["gain"]["value"] = delayGain;
		this.inputNode["connect"](this.mainNode);
		this.inputNode["connect"](this.dryNode);
		this.mainNode["connect"](this.wetNode);
		this.mainNode["connect"](this.delayNode);
		this.delayNode["connect"](this.delayGainNode);
		this.delayGainNode["connect"](this.mainNode);
	};
	DelayEffect.prototype.connectTo = function (node)
	{
		this.wetNode["disconnect"]();
		this.wetNode["connect"](node);
		this.dryNode["disconnect"]();
		this.dryNode["connect"](node);
	};
	DelayEffect.prototype.remove = function ()
	{
		this.inputNode["disconnect"]();
		this.mainNode["disconnect"]();
		this.delayNode["disconnect"]();
		this.delayGainNode["disconnect"]();
		this.wetNode["disconnect"]();
		this.dryNode["disconnect"]();
	};
	DelayEffect.prototype.getInputNode = function ()
	{
		return this.inputNode;
	};
	DelayEffect.prototype.setParam = function(param, value, ramp, time)
	{
		switch (param) {
		case 0:		// mix
			value = value / 100;
			if (value < 0) value = 0;
			if (value > 1) value = 1;
			this.params[2] = value;
			setAudioParam(this.wetNode["gain"], value, ramp, time);
			setAudioParam(this.dryNode["gain"], 1 - value, ramp, time);
			break;
		case 4:		// filter/delay gain (note value is passed in dB but needs to be linear here)
			this.params[1] = dbToLinear(value);
			setAudioParam(this.delayGainNode["gain"], dbToLinear(value), ramp, time);
			break;
		case 5:		// delay time
			this.params[0] = value;
			setAudioParam(this.delayNode["delayTime"], value, ramp, time);
			break;
		}
	};
	function ConvolveEffect(buffer, normalize, mix, src)
	{
		this.type = "convolve";
		this.params = [normalize, mix, src];
		this.inputNode = createGain();
		this.wetNode = createGain();
		this.wetNode["gain"]["value"] = mix;
		this.dryNode = createGain();
		this.dryNode["gain"]["value"] = 1 - mix;
		this.convolveNode = context["createConvolver"]();
		if (buffer)
		{
			this.convolveNode["normalize"] = normalize;
			this.convolveNode["buffer"] = buffer;
		}
		this.inputNode["connect"](this.convolveNode);
		this.inputNode["connect"](this.dryNode);
		this.convolveNode["connect"](this.wetNode);
	};
	ConvolveEffect.prototype.connectTo = function (node)
	{
		this.wetNode["disconnect"]();
		this.wetNode["connect"](node);
		this.dryNode["disconnect"]();
		this.dryNode["connect"](node);
	};
	ConvolveEffect.prototype.remove = function ()
	{
		this.inputNode["disconnect"]();
		this.convolveNode["disconnect"]();
		this.wetNode["disconnect"]();
		this.dryNode["disconnect"]();
	};
	ConvolveEffect.prototype.getInputNode = function ()
	{
		return this.inputNode;
	};
	ConvolveEffect.prototype.setParam = function(param, value, ramp, time)
	{
		switch (param) {
		case 0:		// mix
			value = value / 100;
			if (value < 0) value = 0;
			if (value > 1) value = 1;
			this.params[1] = value;
			setAudioParam(this.wetNode["gain"], value, ramp, time);
			setAudioParam(this.dryNode["gain"], 1 - value, ramp, time);
			break;
		}
	};
	function FlangerEffect(delay, modulation, freq, feedback, mix)
	{
		this.type = "flanger";
		this.params = [delay, modulation, freq, feedback, mix];
		this.inputNode = createGain();
		this.dryNode = createGain();
		this.dryNode["gain"]["value"] = 1 - (mix / 2);
		this.wetNode = createGain();
		this.wetNode["gain"]["value"] = mix / 2;
		this.feedbackNode = createGain();
		this.feedbackNode["gain"]["value"] = feedback;
		this.delayNode = createDelay(delay + modulation);
		this.delayNode["delayTime"]["value"] = delay;
		this.oscNode = context["createOscillator"]();
		this.oscNode["frequency"]["value"] = freq;
		this.oscGainNode = createGain();
		this.oscGainNode["gain"]["value"] = modulation;
		this.inputNode["connect"](this.delayNode);
		this.inputNode["connect"](this.dryNode);
		this.delayNode["connect"](this.wetNode);
		this.delayNode["connect"](this.feedbackNode);
		this.feedbackNode["connect"](this.delayNode);
		this.oscNode["connect"](this.oscGainNode);
		this.oscGainNode["connect"](this.delayNode["delayTime"]);
		startSource(this.oscNode);
	};
	FlangerEffect.prototype.connectTo = function (node)
	{
		this.dryNode["disconnect"]();
		this.dryNode["connect"](node);
		this.wetNode["disconnect"]();
		this.wetNode["connect"](node);
	};
	FlangerEffect.prototype.remove = function ()
	{
		this.inputNode["disconnect"]();
		this.delayNode["disconnect"]();
		this.oscNode["disconnect"]();
		this.oscGainNode["disconnect"]();
		this.dryNode["disconnect"]();
		this.wetNode["disconnect"]();
		this.feedbackNode["disconnect"]();
	};
	FlangerEffect.prototype.getInputNode = function ()
	{
		return this.inputNode;
	};
	FlangerEffect.prototype.setParam = function(param, value, ramp, time)
	{
		switch (param) {
		case 0:		// mix
			value = value / 100;
			if (value < 0) value = 0;
			if (value > 1) value = 1;
			this.params[4] = value;
			setAudioParam(this.wetNode["gain"], value / 2, ramp, time);
			setAudioParam(this.dryNode["gain"], 1 - (value / 2), ramp, time);
			break;
		case 6:		// modulation
			this.params[1] = value / 1000;
			setAudioParam(this.oscGainNode["gain"], value / 1000, ramp, time);
			break;
		case 7:		// modulation frequency
			this.params[2] = value;
			setAudioParam(this.oscNode["frequency"], value, ramp, time);
			break;
		case 8:		// feedback
			this.params[3] = value / 100;
			setAudioParam(this.feedbackNode["gain"], value / 100, ramp, time);
			break;
		}
	};
	function PhaserEffect(freq, detune, q, modulation, modfreq, mix)
	{
		this.type = "phaser";
		this.params = [freq, detune, q, modulation, modfreq, mix];
		this.inputNode = createGain();
		this.dryNode = createGain();
		this.dryNode["gain"]["value"] = 1 - (mix / 2);
		this.wetNode = createGain();
		this.wetNode["gain"]["value"] = mix / 2;
		this.filterNode = context["createBiquadFilter"]();
		if (typeof this.filterNode["type"] === "number")
			this.filterNode["type"] = 7;	// all-pass
		else
			this.filterNode["type"] = "allpass";
		this.filterNode["frequency"]["value"] = freq;
		if (this.filterNode["detune"])		// iOS 6 doesn't have detune yet
			this.filterNode["detune"]["value"] = detune;
		this.filterNode["Q"]["value"] = q;
		this.oscNode = context["createOscillator"]();
		this.oscNode["frequency"]["value"] = modfreq;
		this.oscGainNode = createGain();
		this.oscGainNode["gain"]["value"] = modulation;
		this.inputNode["connect"](this.filterNode);
		this.inputNode["connect"](this.dryNode);
		this.filterNode["connect"](this.wetNode);
		this.oscNode["connect"](this.oscGainNode);
		this.oscGainNode["connect"](this.filterNode["frequency"]);
		startSource(this.oscNode);
	};
	PhaserEffect.prototype.connectTo = function (node)
	{
		this.dryNode["disconnect"]();
		this.dryNode["connect"](node);
		this.wetNode["disconnect"]();
		this.wetNode["connect"](node);
	};
	PhaserEffect.prototype.remove = function ()
	{
		this.inputNode["disconnect"]();
		this.filterNode["disconnect"]();
		this.oscNode["disconnect"]();
		this.oscGainNode["disconnect"]();
		this.dryNode["disconnect"]();
		this.wetNode["disconnect"]();
	};
	PhaserEffect.prototype.getInputNode = function ()
	{
		return this.inputNode;
	};
	PhaserEffect.prototype.setParam = function(param, value, ramp, time)
	{
		switch (param) {
		case 0:		// mix
			value = value / 100;
			if (value < 0) value = 0;
			if (value > 1) value = 1;
			this.params[5] = value;
			setAudioParam(this.wetNode["gain"], value / 2, ramp, time);
			setAudioParam(this.dryNode["gain"], 1 - (value / 2), ramp, time);
			break;
		case 1:		// filter frequency
			this.params[0] = value;
			setAudioParam(this.filterNode["frequency"], value, ramp, time);
			break;
		case 2:		// filter detune
			this.params[1] = value;
			setAudioParam(this.filterNode["detune"], value, ramp, time);
			break;
		case 3:		// filter Q
			this.params[2] = value;
			setAudioParam(this.filterNode["Q"], value, ramp, time);
			break;
		case 6:		// modulation
			this.params[3] = value;
			setAudioParam(this.oscGainNode["gain"], value, ramp, time);
			break;
		case 7:		// modulation frequency
			this.params[4] = value;
			setAudioParam(this.oscNode["frequency"], value, ramp, time);
			break;
		}
	};
	function GainEffect(g)
	{
		this.type = "gain";
		this.params = [g];
		this.node = createGain();
		this.node["gain"]["value"] = g;
	};
	GainEffect.prototype.connectTo = function (node_)
	{
		this.node["disconnect"]();
		this.node["connect"](node_);
	};
	GainEffect.prototype.remove = function ()
	{
		this.node["disconnect"]();
	};
	GainEffect.prototype.getInputNode = function ()
	{
		return this.node;
	};
	GainEffect.prototype.setParam = function(param, value, ramp, time)
	{
		switch (param) {
		case 4:		// gain
			this.params[0] = dbToLinear(value);
			setAudioParam(this.node["gain"], dbToLinear(value), ramp, time);
			break;
		}
	};
	function TremoloEffect(freq, mix)
	{
		this.type = "tremolo";
		this.params = [freq, mix];
		this.node = createGain();
		this.node["gain"]["value"] = 1 - (mix / 2);
		this.oscNode = context["createOscillator"]();
		this.oscNode["frequency"]["value"] = freq;
		this.oscGainNode = createGain();
		this.oscGainNode["gain"]["value"] = mix / 2;
		this.oscNode["connect"](this.oscGainNode);
		this.oscGainNode["connect"](this.node["gain"]);
		startSource(this.oscNode);
	};
	TremoloEffect.prototype.connectTo = function (node_)
	{
		this.node["disconnect"]();
		this.node["connect"](node_);
	};
	TremoloEffect.prototype.remove = function ()
	{
		this.oscNode["disconnect"]();
		this.oscGainNode["disconnect"]();
		this.node["disconnect"]();
	};
	TremoloEffect.prototype.getInputNode = function ()
	{
		return this.node;
	};
	TremoloEffect.prototype.setParam = function(param, value, ramp, time)
	{
		switch (param) {
		case 0:		// mix
			value = value / 100;
			if (value < 0) value = 0;
			if (value > 1) value = 1;
			this.params[1] = value;
			setAudioParam(this.node["gain"]["value"], 1 - (value / 2), ramp, time);
			setAudioParam(this.oscGainNode["gain"]["value"], value / 2, ramp, time);
			break;
		case 7:		// modulation frequency
			this.params[0] = value;
			setAudioParam(this.oscNode["frequency"], value, ramp, time);
			break;
		}
	};
	function RingModulatorEffect(freq, mix)
	{
		this.type = "ringmod";
		this.params = [freq, mix];
		this.inputNode = createGain();
		this.wetNode = createGain();
		this.wetNode["gain"]["value"] = mix;
		this.dryNode = createGain();
		this.dryNode["gain"]["value"] = 1 - mix;
		this.ringNode = createGain();
		this.ringNode["gain"]["value"] = 0;
		this.oscNode = context["createOscillator"]();
		this.oscNode["frequency"]["value"] = freq;
		this.oscNode["connect"](this.ringNode["gain"]);
		startSource(this.oscNode);
		this.inputNode["connect"](this.ringNode);
		this.inputNode["connect"](this.dryNode);
		this.ringNode["connect"](this.wetNode);
	};
	RingModulatorEffect.prototype.connectTo = function (node_)
	{
		this.wetNode["disconnect"]();
		this.wetNode["connect"](node_);
		this.dryNode["disconnect"]();
		this.dryNode["connect"](node_);
	};
	RingModulatorEffect.prototype.remove = function ()
	{
		this.oscNode["disconnect"]();
		this.ringNode["disconnect"]();
		this.inputNode["disconnect"]();
		this.wetNode["disconnect"]();
		this.dryNode["disconnect"]();
	};
	RingModulatorEffect.prototype.getInputNode = function ()
	{
		return this.inputNode;
	};
	RingModulatorEffect.prototype.setParam = function(param, value, ramp, time)
	{
		switch (param) {
		case 0:		// mix
			value = value / 100;
			if (value < 0) value = 0;
			if (value > 1) value = 1;
			this.params[1] = value;
			setAudioParam(this.wetNode["gain"], value, ramp, time);
			setAudioParam(this.dryNode["gain"], 1 - value, ramp, time);
			break;
		case 7:		// modulation frequency
			this.params[0] = value;
			setAudioParam(this.oscNode["frequency"], value, ramp, time);
			break;
		}
	};
	function DistortionEffect(threshold, headroom, drive, makeupgain, mix)
	{
		this.type = "distortion";
		this.params = [threshold, headroom, drive, makeupgain, mix];
		this.inputNode = createGain();
		this.preGain = createGain();
		this.postGain = createGain();
		this.setDrive(drive, dbToLinear_nocap(makeupgain));
		this.wetNode = createGain();
		this.wetNode["gain"]["value"] = mix;
		this.dryNode = createGain();
		this.dryNode["gain"]["value"] = 1 - mix;
		this.waveShaper = context["createWaveShaper"]();
		this.curve = new Float32Array(65536);
		this.generateColortouchCurve(threshold, headroom);
		this.waveShaper.curve = this.curve;
		this.inputNode["connect"](this.preGain);
		this.inputNode["connect"](this.dryNode);
		this.preGain["connect"](this.waveShaper);
		this.waveShaper["connect"](this.postGain);
		this.postGain["connect"](this.wetNode);
	};
	DistortionEffect.prototype.setDrive = function (drive, makeupgain)
	{
		if (drive < 0.01)
			drive = 0.01;
		this.preGain["gain"]["value"] = drive;
		this.postGain["gain"]["value"] = Math.pow(1 / drive, 0.6) * makeupgain;
	};
	function e4(x, k)
	{
		return 1.0 - Math.exp(-k * x);
	}
	DistortionEffect.prototype.shape = function (x, linearThreshold, linearHeadroom)
	{
		var maximum = 1.05 * linearHeadroom * linearThreshold;
		var kk = (maximum - linearThreshold);
		var sign = x < 0 ? -1 : +1;
		var absx = x < 0 ? -x : x;
		var shapedInput = absx < linearThreshold ? absx : linearThreshold + kk * e4(absx - linearThreshold, 1.0 / kk);
		shapedInput *= sign;
		return shapedInput;
	};
	DistortionEffect.prototype.generateColortouchCurve = function (threshold, headroom)
	{
		var linearThreshold = dbToLinear_nocap(threshold);
		var linearHeadroom = dbToLinear_nocap(headroom);
		var n = 65536;
		var n2 = n / 2;
		var x = 0;
		for (var i = 0; i < n2; ++i) {
			x = i / n2;
			x = this.shape(x, linearThreshold, linearHeadroom);
			this.curve[n2 + i] = x;
			this.curve[n2 - i - 1] = -x;
		}
	};
	DistortionEffect.prototype.connectTo = function (node)
	{
		this.wetNode["disconnect"]();
		this.wetNode["connect"](node);
		this.dryNode["disconnect"]();
		this.dryNode["connect"](node);
	};
	DistortionEffect.prototype.remove = function ()
	{
		this.inputNode["disconnect"]();
		this.preGain["disconnect"]();
		this.waveShaper["disconnect"]();
		this.postGain["disconnect"]();
		this.wetNode["disconnect"]();
		this.dryNode["disconnect"]();
	};
	DistortionEffect.prototype.getInputNode = function ()
	{
		return this.inputNode;
	};
	DistortionEffect.prototype.setParam = function(param, value, ramp, time)
	{
		switch (param) {
		case 0:		// mix
			value = value / 100;
			if (value < 0) value = 0;
			if (value > 1) value = 1;
			this.params[4] = value;
			setAudioParam(this.wetNode["gain"], value, ramp, time);
			setAudioParam(this.dryNode["gain"], 1 - value, ramp, time);
			break;
		}
	};
	function CompressorEffect(threshold, knee, ratio, attack, release)
	{
		this.type = "compressor";
		this.params = [threshold, knee, ratio, attack, release];
		this.node = context["createDynamicsCompressor"]();
		try {
			this.node["threshold"]["value"] = threshold;
			this.node["knee"]["value"] = knee;
			this.node["ratio"]["value"] = ratio;
			this.node["attack"]["value"] = attack;
			this.node["release"]["value"] = release;
		}
		catch (e) {}
	};
	CompressorEffect.prototype.connectTo = function (node_)
	{
		this.node["disconnect"]();
		this.node["connect"](node_);
	};
	CompressorEffect.prototype.remove = function ()
	{
		this.node["disconnect"]();
	};
	CompressorEffect.prototype.getInputNode = function ()
	{
		return this.node;
	};
	CompressorEffect.prototype.setParam = function(param, value, ramp, time)
	{
	};
	function AnalyserEffect(fftSize, smoothing)
	{
		this.type = "analyser";
		this.params = [fftSize, smoothing];
		this.node = context["createAnalyser"]();
		this.node["fftSize"] = fftSize;
		this.node["smoothingTimeConstant"] = smoothing;
		this.freqBins = new Float32Array(this.node["frequencyBinCount"]);
		this.signal = new Uint8Array(fftSize);
		this.peak = 0;
		this.rms = 0;
	};
	AnalyserEffect.prototype.tick = function ()
	{
		this.node["getFloatFrequencyData"](this.freqBins);
		this.node["getByteTimeDomainData"](this.signal);
		var fftSize = this.node["fftSize"];
		var i = 0;
		this.peak = 0;
		var rmsSquaredSum = 0;
		var s = 0;
		for ( ; i < fftSize; i++)
		{
			s = (this.signal[i] - 128) / 128;
			if (s < 0)
				s = -s;
			if (this.peak < s)
				this.peak = s;
			rmsSquaredSum += s * s;
		}
		this.peak = linearToDb(this.peak);
		this.rms = linearToDb(Math.sqrt(rmsSquaredSum / fftSize));
	};
	AnalyserEffect.prototype.connectTo = function (node_)
	{
		this.node["disconnect"]();
		this.node["connect"](node_);
	};
	AnalyserEffect.prototype.remove = function ()
	{
		this.node["disconnect"]();
	};
	AnalyserEffect.prototype.getInputNode = function ()
	{
		return this.node;
	};
	AnalyserEffect.prototype.setParam = function(param, value, ramp, time)
	{
	};
	var OT_POS_SAMPLES = 4;
	function ObjectTracker()
	{
		this.obj = null;
		this.loadUid = 0;
		this.speeds = [];
		this.lastX = 0;
		this.lastY = 0;
		this.moveAngle = 0;
	};
	ObjectTracker.prototype.setObject = function (obj_)
	{
		this.obj = obj_;
		if (this.obj)
		{
			this.lastX = this.obj.x;
			this.lastY = this.obj.y;
		}
		this.speeds.length = 0;
	};
	ObjectTracker.prototype.hasObject = function ()
	{
		return !!this.obj;
	};
	ObjectTracker.prototype.tick = function (dt)
	{
		if (!this.obj || dt === 0)
			return;
		this.moveAngle = cr.angleTo(this.lastX, this.lastY, this.obj.x, this.obj.y);
		var s = cr.distanceTo(this.lastX, this.lastY, this.obj.x, this.obj.y) / dt;
		if (this.speeds.length < OT_POS_SAMPLES)
			this.speeds.push(s);
		else
		{
			this.speeds.shift();
			this.speeds.push(s);
		}
		this.lastX = this.obj.x;
		this.lastY = this.obj.y;
	};
	ObjectTracker.prototype.getSpeed = function ()
	{
		if (!this.speeds.length)
			return 0;
		var i, len, sum = 0;
		for (i = 0, len = this.speeds.length; i < len; i++)
		{
			sum += this.speeds[i];
		}
		return sum / this.speeds.length;
	};
	ObjectTracker.prototype.getVelocityX = function ()
	{
		return Math.cos(this.moveAngle) * this.getSpeed();
	};
	ObjectTracker.prototype.getVelocityY = function ()
	{
		return Math.sin(this.moveAngle) * this.getSpeed();
	};
	var iOShadtouch = false;	// has had touch input on iOS to work around web audio API muting
	function C2AudioBuffer(src_, is_music)
	{
		this.src = src_;
		this.myapi = api;
		this.is_music = is_music;
		this.added_end_listener = false;
		var self = this;
		this.outNode = null;
		this.mediaSourceNode = null;
		this.panWhenReady = [];		// for web audio API positioned sounds
		this.seekWhenReady = 0;
		this.pauseWhenReady = false;
		this.supportWebAudioAPI = false;
		this.failedToLoad = false;
		if (api === API_WEBAUDIO && is_music)
		{
			this.myapi = API_HTML5;
			this.outNode = createGain();
		}
		this.bufferObject = null;			// actual audio object
		this.audioData = null;				// web audio api: ajax request result (compressed audio that needs decoding)
		var request;
		switch (this.myapi) {
		case API_HTML5:
			this.bufferObject = new Audio();
			if (api === API_WEBAUDIO && context["createMediaElementSource"] && !audRuntime.isFirefox && !/wiiu/i.test(navigator.userAgent))
			{
				this.supportWebAudioAPI = true;		// can be routed through web audio api
				this.bufferObject.addEventListener("canplay", function ()
				{
					if (!self.mediaSourceNode)		// protect against this event firing twice
					{
						self.mediaSourceNode = context["createMediaElementSource"](self.bufferObject);
						self.mediaSourceNode["connect"](self.outNode);
					}
				});
			}
			this.bufferObject.autoplay = false;	// this is only a source buffer, not an instance
			this.bufferObject.preload = "auto";
			this.bufferObject.src = src_;
			break;
		case API_WEBAUDIO:
			request = new XMLHttpRequest();
			request.open("GET", src_, true);
			request.responseType = "arraybuffer";
			request.onload = function () {
				self.audioData = request.response;
				self.decodeAudioBuffer();
			};
			request.onerror = function () {
				self.failedToLoad = true;
			};
			request.send();
			break;
		case API_PHONEGAP:
			this.bufferObject = true;
			break;
		case API_APPMOBI:
			this.bufferObject = true;
			break;
		}
	};
	C2AudioBuffer.prototype.decodeAudioBuffer = function ()
	{
		if (this.bufferObject || !this.audioData)
			return;		// audio already decoded or AJAX request not yet complete
		var self = this;
		if (context["decodeAudioData"])
		{
			context["decodeAudioData"](this.audioData, function (buffer) {
					self.bufferObject = buffer;
					var p, i, len, a;
					if (!cr.is_undefined(self.playTagWhenReady) && !silent)
					{
						if (self.panWhenReady.length)
						{
							for (i = 0, len = self.panWhenReady.length; i < len; i++)
							{
								p = self.panWhenReady[i];
								a = new C2AudioInstance(self, p.thistag);
								a.setPannerEnabled(true);
								if (typeof p.objUid !== "undefined")
								{
									p.obj = audRuntime.getObjectByUID(p.objUid);
									if (!p.obj)
										continue;
								}
								if (p.obj)
								{
									var px = cr.rotatePtAround(p.obj.x, p.obj.y, -p.obj.layer.getAngle(), listenerX, listenerY, true);
									var py = cr.rotatePtAround(p.obj.x, p.obj.y, -p.obj.layer.getAngle(), listenerX, listenerY, false);
									a.setPan(px, py, cr.to_degrees(p.obj.angle - p.obj.layer.getAngle()), p.ia, p.oa, p.og);
									a.setObject(p.obj);
								}
								else
								{
									a.setPan(p.x, p.y, p.a, p.ia, p.oa, p.og);
								}
								a.play(self.loopWhenReady, self.volumeWhenReady, self.seekWhenReady);
								if (self.pauseWhenReady)
									a.pause();
								audioInstances.push(a);
							}
							self.panWhenReady.length = 0;
						}
						else
						{
							a = new C2AudioInstance(self, self.playTagWhenReady);
							a.play(self.loopWhenReady, self.volumeWhenReady, self.seekWhenReady);
							if (self.pauseWhenReady)
								a.pause();
							audioInstances.push(a);
						}
					}
					else if (!cr.is_undefined(self.convolveWhenReady))
					{
						var convolveNode = self.convolveWhenReady.convolveNode;
						convolveNode["normalize"] = self.normalizeWhenReady;
						convolveNode["buffer"] = buffer;
					}
			}, function (e) {
				self.failedToLoad = true;
			});
		}
		else
		{
			this.bufferObject = context["createBuffer"](this.audioData, false);
			if (!cr.is_undefined(this.playTagWhenReady) && !silent)
			{
				var a = new C2AudioInstance(this, this.playTagWhenReady);
				a.play(this.loopWhenReady, this.volumeWhenReady, this.seekWhenReady);
				if (this.pauseWhenReady)
					a.pause();
				audioInstances.push(a);
			}
			else if (!cr.is_undefined(this.convolveWhenReady))
			{
				var convolveNode = this.convolveWhenReady.convolveNode;
				convolveNode["normalize"] = this.normalizeWhenReady;
				convolveNode["buffer"] = this.bufferObject;
			}
		}
	};
	C2AudioBuffer.prototype.isLoaded = function ()
	{
		switch (this.myapi) {
		case API_HTML5:
			return this.bufferObject["readyState"] >= 4;	// HAVE_ENOUGH_DATA
		case API_WEBAUDIO:
			return !!this.audioData;			// null until AJAX request completes
		case API_PHONEGAP:
			return true;
		case API_APPMOBI:
			return true;
		}
		return false;
	};
	C2AudioBuffer.prototype.isLoadedAndDecoded = function ()
	{
		switch (this.myapi) {
		case API_HTML5:
			return this.bufferObject["readyState"] >= 4;	// HAVE_ENOUGH_DATA
		case API_WEBAUDIO:
			return !!this.audioData && !!this.bufferObject;
		case API_PHONEGAP:
			return true;
		case API_APPMOBI:
			return true;
		}
		return false;
	};
	C2AudioBuffer.prototype.hasFailedToLoad = function ()
	{
		switch (this.myapi) {
		case API_HTML5:
			return !!this.bufferObject["error"];
		case API_WEBAUDIO:
			return this.failedToLoad;
		}
		return false;
	};
	function C2AudioInstance(buffer_, tag_)
	{
		var self = this;
		this.tag = tag_;
		this.fresh = true;
		this.stopped = true;
		this.src = buffer_.src;
		this.buffer = buffer_;
		this.myapi = api;
		this.is_music = buffer_.is_music;
		this.playbackRate = 1;
		this.pgended = true;			// for PhoneGap only: ended flag
		this.resume_me = false;			// make sure resumes when leaving suspend
		this.is_paused = false;
		this.resume_position = 0;		// for web audio api to resume from correct playback position
		this.looping = false;
		this.is_muted = false;
		this.is_silent = false;
		this.volume = 1;
		this.mutevol = 1;
		this.startTime = audRuntime.kahanTime.sum;
		this.gainNode = null;
		this.pannerNode = null;
		this.pannerEnabled = false;
		this.objectTracker = null;
		this.panX = 0;
		this.panY = 0;
		this.panAngle = 0;
		this.panConeInner = 0;
		this.panConeOuter = 0;
		this.panConeOuterGain = 0;
		this.instanceObject = null;
		var add_end_listener = false;
		if (this.myapi === API_WEBAUDIO && this.buffer.myapi === API_HTML5 && !this.buffer.supportWebAudioAPI)
			this.myapi = API_HTML5;
		switch (this.myapi) {
		case API_HTML5:
			if (this.is_music)
			{
				this.instanceObject = buffer_.bufferObject;
				add_end_listener = !buffer_.added_end_listener;
				buffer_.added_end_listener = true;
			}
			else
			{
				this.instanceObject = new Audio();
				this.instanceObject.autoplay = false;
				this.instanceObject.src = buffer_.bufferObject.src;
				add_end_listener = true;
			}
			if (add_end_listener)
			{
				this.instanceObject.addEventListener('ended', function () {
						audTag = self.tag;
						self.stopped = true;
						audRuntime.trigger(cr.plugins_.Audio.prototype.cnds.OnEnded, audInst);
				});
			}
			break;
		case API_WEBAUDIO:
			this.gainNode = createGain();
			this.gainNode["connect"](getDestinationForTag(tag_));
			if (this.buffer.myapi === API_WEBAUDIO)
			{
				if (buffer_.bufferObject)
				{
					this.instanceObject = context["createBufferSource"]();
					this.instanceObject["buffer"] = buffer_.bufferObject;
					this.instanceObject["connect"](this.gainNode);
				}
			}
			else
			{
				this.instanceObject = this.buffer.bufferObject;		// reference the audio element
				this.buffer.outNode["connect"](this.gainNode);
			}
			break;
		case API_PHONEGAP:
			this.instanceObject = new window["Media"](appPath + this.src, null, null, function (status) {
					if (status === window["Media"]["MEDIA_STOPPED"])
					{
						self.pgended = true;
						self.stopped = true;
						audTag = self.tag;
						audRuntime.trigger(cr.plugins_.Audio.prototype.cnds.OnEnded, audInst);
					}
			});
			break;
		case API_APPMOBI:
			this.instanceObject = true;
			break;
		}
	};
	C2AudioInstance.prototype.hasEnded = function ()
	{
		switch (this.myapi) {
		case API_HTML5:
			return this.instanceObject.ended;
		case API_WEBAUDIO:
			if (this.buffer.myapi === API_WEBAUDIO)
			{
				if (!this.fresh && !this.stopped && this.instanceObject["loop"])
					return false;
				if (this.is_paused)
					return false;
				return (audRuntime.kahanTime.sum - this.startTime) > this.buffer.bufferObject["duration"];
			}
			else
				return this.instanceObject.ended;
		case API_PHONEGAP:
			return this.pgended;
		case API_APPMOBI:
			true;	// recycling an AppMobi sound does not matter because it will just do another throwaway playSound
		}
		return true;
	};
	C2AudioInstance.prototype.canBeRecycled = function ()
	{
		if (this.fresh || this.stopped)
			return true;		// not yet used or is not playing
		return this.hasEnded();
	};
	C2AudioInstance.prototype.setPannerEnabled = function (enable_)
	{
		if (api !== API_WEBAUDIO)
			return;
		if (!this.pannerEnabled && enable_)
		{
			if (!this.gainNode)
				return;
			if (!this.pannerNode)
			{
				this.pannerNode = context["createPanner"]();
				if (typeof this.pannerNode["panningModel"] === "number")
					this.pannerNode["panningModel"] = panningModel;
				else
					this.pannerNode["panningModel"] = ["equalpower", "HRTF", "soundfield"][panningModel];
				if (typeof this.pannerNode["distanceModel"] === "number")
					this.pannerNode["distanceModel"] = distanceModel;
				else
					this.pannerNode["distanceModel"] = ["linear", "inverse", "exponential"][distanceModel];
				this.pannerNode["refDistance"] = refDistance;
				this.pannerNode["maxDistance"] = maxDistance;
				this.pannerNode["rolloffFactor"] = rolloffFactor;
			}
			this.gainNode["disconnect"]();
			this.gainNode["connect"](this.pannerNode);
			this.pannerNode["connect"](getDestinationForTag(this.tag));
			this.pannerEnabled = true;
		}
		else if (this.pannerEnabled && !enable_)
		{
			if (!this.gainNode)
				return;
			this.pannerNode["disconnect"]();
			this.gainNode["disconnect"]();
			this.gainNode["connect"](getDestinationForTag(this.tag));
			this.pannerEnabled = false;
		}
	};
	C2AudioInstance.prototype.setPan = function (x, y, angle, innerangle, outerangle, outergain)
	{
		if (!this.pannerEnabled || api !== API_WEBAUDIO)
			return;
		this.pannerNode["setPosition"](x, y, 0);
		this.pannerNode["setOrientation"](Math.cos(cr.to_radians(angle)), Math.sin(cr.to_radians(angle)), 0);
		this.pannerNode["coneInnerAngle"] = innerangle;
		this.pannerNode["coneOuterAngle"] = outerangle;
		this.pannerNode["coneOuterGain"] = outergain;
		this.panX = x;
		this.panY = y;
		this.panAngle = angle;
		this.panConeInner = innerangle;
		this.panConeOuter = outerangle;
		this.panConeOuterGain = outergain;
	};
	C2AudioInstance.prototype.setObject = function (o)
	{
		if (!this.pannerEnabled || api !== API_WEBAUDIO)
			return;
		if (!this.objectTracker)
			this.objectTracker = new ObjectTracker();
		this.objectTracker.setObject(o);
	};
	C2AudioInstance.prototype.tick = function (dt)
	{
		if (!this.pannerEnabled || api !== API_WEBAUDIO || !this.objectTracker || !this.objectTracker.hasObject() || !this.isPlaying())
		{
			return;
		}
		this.objectTracker.tick(dt);
		var inst = this.objectTracker.obj;
		var px = cr.rotatePtAround(inst.x, inst.y, -inst.layer.getAngle(), listenerX, listenerY, true);
		var py = cr.rotatePtAround(inst.x, inst.y, -inst.layer.getAngle(), listenerX, listenerY, false);
		this.pannerNode["setPosition"](px, py, 0);
		var a = 0;
		if (typeof this.objectTracker.obj.angle !== "undefined")
		{
			a = inst.angle - inst.layer.getAngle();
			this.pannerNode["setOrientation"](Math.cos(a), Math.sin(a), 0);
		}
		px = cr.rotatePtAround(this.objectTracker.getVelocityX(), this.objectTracker.getVelocityY(), -inst.layer.getAngle(), 0, 0, true);
		py = cr.rotatePtAround(this.objectTracker.getVelocityX(), this.objectTracker.getVelocityY(), -inst.layer.getAngle(), 0, 0, false);
		this.pannerNode["setVelocity"](px, py, 0);
	};
	C2AudioInstance.prototype.play = function (looping, vol, fromPosition)
	{
		var instobj = this.instanceObject;
		this.looping = looping;
		this.volume = vol;
		var seekPos = fromPosition || 0;
		switch (this.myapi) {
		case API_HTML5:
			if (instobj.playbackRate !== 1.0)
				instobj.playbackRate = 1.0;
			if (instobj.volume !== vol * masterVolume)
				instobj.volume = vol * masterVolume;
			if (instobj.loop !== looping)
				instobj.loop = looping;
			if (instobj.muted)
				instobj.muted = false;
			if (instobj.currentTime !== seekPos)
			{
				try {
					instobj.currentTime = seekPos;
				}
				catch (err)
				{
;
				}
			}
			if (this.is_music && isMusicWorkaround && !audRuntime.isInUserInputEvent)
				musicPlayNextTouch.push(this);
			else
			{
				try {
					this.instanceObject.play();
				}
				catch (e) {}	// sometimes throws on WP8.1... try not to kill the app
			}
			break;
		case API_WEBAUDIO:
			this.muted = false;
			this.mutevol = 1;
			if (this.buffer.myapi === API_WEBAUDIO)
			{
				if (!this.fresh)
				{
					this.instanceObject = context["createBufferSource"]();
					this.instanceObject["buffer"] = this.buffer.bufferObject;
					this.instanceObject["connect"](this.gainNode);
				}
				this.instanceObject.loop = looping;
				this.gainNode["gain"]["value"] = vol * masterVolume;
				if (seekPos === 0)
					startSource(this.instanceObject);
				else
					startSourceAt(this.instanceObject, seekPos, this.getDuration());
			}
			else
			{
				if (instobj.playbackRate !== 1.0)
					instobj.playbackRate = 1.0;
				if (instobj.loop !== looping)
					instobj.loop = looping;
				this.gainNode["gain"]["value"] = vol * masterVolume;
				if (instobj.currentTime !== seekPos)
				{
					try {
						instobj.currentTime = seekPos;
					}
					catch (err)
					{
;
					}
				}
				if (this.is_music && isMusicWorkaround && !audRuntime.isInUserInputEvent)
					musicPlayNextTouch.push(this);
				else
					instobj.play();
			}
			break;
		case API_PHONEGAP:
			if ((!this.fresh && this.stopped) || seekPos !== 0)
				instobj["seekTo"](seekPos);
			instobj["play"]();
			this.pgended = false;
			break;
		case API_APPMOBI:
			if (audRuntime.isDirectCanvas)
				AppMobi["context"]["playSound"](this.src, looping);
			else
				AppMobi["player"]["playSound"](this.src, looping);
			break;
		}
		this.playbackRate = 1;
		this.startTime = audRuntime.kahanTime.sum - seekPos;
		this.fresh = false;
		this.stopped = false;
		this.is_paused = false;
	};
	C2AudioInstance.prototype.stop = function ()
	{
		switch (this.myapi) {
		case API_HTML5:
			if (!this.instanceObject.paused)
				this.instanceObject.pause();
			break;
		case API_WEBAUDIO:
			if (this.buffer.myapi === API_WEBAUDIO)
				stopSource(this.instanceObject);
			else
			{
				if (!this.instanceObject.paused)
					this.instanceObject.pause();
			}
			break;
		case API_PHONEGAP:
			this.instanceObject["stop"]();
			break;
		case API_APPMOBI:
			if (audRuntime.isDirectCanvas)
				AppMobi["context"]["stopSound"](this.src);
			break;
		}
		this.stopped = true;
		this.is_paused = false;
	};
	C2AudioInstance.prototype.pause = function ()
	{
		if (this.fresh || this.stopped || this.hasEnded() || this.is_paused)
			return;
		switch (this.myapi) {
		case API_HTML5:
			if (!this.instanceObject.paused)
				this.instanceObject.pause();
			break;
		case API_WEBAUDIO:
			if (this.buffer.myapi === API_WEBAUDIO)
			{
				this.resume_position = this.getPlaybackTime();
				if (this.looping)
					this.resume_position = this.resume_position % this.getDuration();
				stopSource(this.instanceObject);
			}
			else
			{
				if (!this.instanceObject.paused)
					this.instanceObject.pause();
			}
			break;
		case API_PHONEGAP:
			this.instanceObject["pause"]();
			break;
		case API_APPMOBI:
			if (audRuntime.isDirectCanvas)
				AppMobi["context"]["stopSound"](this.src);
			break;
		}
		this.is_paused = true;
	};
	C2AudioInstance.prototype.resume = function ()
	{
		if (this.fresh || this.stopped || this.hasEnded() || !this.is_paused)
			return;
		switch (this.myapi) {
		case API_HTML5:
			this.instanceObject.play();
			break;
		case API_WEBAUDIO:
			if (this.buffer.myapi === API_WEBAUDIO)
			{
				this.instanceObject = context["createBufferSource"]();
				this.instanceObject["buffer"] = this.buffer.bufferObject;
				this.instanceObject["connect"](this.gainNode);
				this.instanceObject.loop = this.looping;
				this.gainNode["gain"]["value"] = masterVolume * this.volume * this.mutevol;
				this.startTime = audRuntime.kahanTime.sum - this.resume_position;
				startSourceAt(this.instanceObject, this.resume_position, this.getDuration());
			}
			else
			{
				this.instanceObject.play();
			}
			break;
		case API_PHONEGAP:
			this.instanceObject["play"]();
			break;
		case API_APPMOBI:
			if (audRuntime.isDirectCanvas)
				AppMobi["context"]["resumeSound"](this.src);
			break;
		}
		this.is_paused = false;
	};
	C2AudioInstance.prototype.seek = function (pos)
	{
		if (this.fresh || this.stopped || this.hasEnded())
			return;
		switch (this.myapi) {
		case API_HTML5:
			try {
				this.instanceObject.currentTime = pos;
			}
			catch (e) {}
			break;
		case API_WEBAUDIO:
			if (this.buffer.myapi === API_WEBAUDIO)
			{
				if (this.is_paused)
					this.resume_position = pos;
				else
				{
					this.pause();
					this.resume_position = pos;
					this.resume();
				}
			}
			else
			{
				try {
					this.instanceObject.currentTime = pos;
				}
				catch (e) {}
			}
			break;
		case API_PHONEGAP:
			break;
		case API_APPMOBI:
			if (audRuntime.isDirectCanvas)
				AppMobi["context"]["seekSound"](this.src, pos);
			break;
		}
	};
	C2AudioInstance.prototype.reconnect = function (toNode)
	{
		if (this.myapi !== API_WEBAUDIO)
			return;
		if (this.pannerEnabled)
		{
			this.pannerNode["disconnect"]();
			this.pannerNode["connect"](toNode);
		}
		else
		{
			this.gainNode["disconnect"]();
			this.gainNode["connect"](toNode);
		}
	};
	C2AudioInstance.prototype.getDuration = function ()
	{
		switch (this.myapi) {
		case API_HTML5:
			if (typeof this.instanceObject.duration !== "undefined")
				return this.instanceObject.duration;
			else
				return 0;
		case API_WEBAUDIO:
			return this.buffer.bufferObject["duration"];
		case API_PHONEGAP:
			return this.instanceObject["getDuration"]();
		case API_APPMOBI:
			if (audRuntime.isDirectCanvas)
				return AppMobi["context"]["getDurationSound"](this.src);
			else
				return 0;
		}
		return 0;
	};
	C2AudioInstance.prototype.getPlaybackTime = function ()
	{
		var duration = this.getDuration();
		var ret = 0;
		switch (this.myapi) {
		case API_HTML5:
			if (typeof this.instanceObject.currentTime !== "undefined")
				ret = this.instanceObject.currentTime;
			break;
		case API_WEBAUDIO:
			if (this.buffer.myapi === API_WEBAUDIO)
			{
				if (this.is_paused)
					return this.resume_position;
				else
					ret = audRuntime.kahanTime.sum - this.startTime;
			}
			else if (typeof this.instanceObject.currentTime !== "undefined")
				ret = this.instanceObject.currentTime;
			break;
		case API_PHONEGAP:
			break;
		case API_APPMOBI:
			if (audRuntime.isDirectCanvas)
				ret = AppMobi["context"]["getPlaybackTimeSound"](this.src);
			break;
		}
		if (!this.looping && ret > duration)
			ret = duration;
		return ret;
	};
	C2AudioInstance.prototype.isPlaying = function ()
	{
		return !this.is_paused && !this.fresh && !this.stopped && !this.hasEnded();
	};
	C2AudioInstance.prototype.setVolume = function (v)
	{
		this.volume = v;
		this.updateVolume();
	};
	C2AudioInstance.prototype.updateVolume = function ()
	{
		var volToSet = this.volume * masterVolume;
		switch (this.myapi) {
		case API_HTML5:
			if (this.instanceObject.volume && this.instanceObject.volume !== volToSet)
				this.instanceObject.volume = volToSet;
			break;
		case API_WEBAUDIO:
			this.gainNode["gain"]["value"] = volToSet * this.mutevol;
			break;
		case API_PHONEGAP:
			break;
		case API_APPMOBI:
			break;
		}
	};
	C2AudioInstance.prototype.getVolume = function ()
	{
		return this.volume;
	};
	C2AudioInstance.prototype.doSetMuted = function (m)
	{
		switch (this.myapi) {
		case API_HTML5:
			if (this.instanceObject.muted !== !!m)
				this.instanceObject.muted = !!m;
			break;
		case API_WEBAUDIO:
			this.mutevol = (m ? 0 : 1);
			this.gainNode["gain"]["value"] = masterVolume * this.volume * this.mutevol;
			break;
		case API_PHONEGAP:
			break;
		case API_APPMOBI:
			break;
		}
	};
	C2AudioInstance.prototype.setMuted = function (m)
	{
		this.is_muted = !!m;
		this.doSetMuted(this.is_muted || this.is_silent);
	};
	C2AudioInstance.prototype.setSilent = function (m)
	{
		this.is_silent = !!m;
		this.doSetMuted(this.is_muted || this.is_silent);
	};
	C2AudioInstance.prototype.setLooping = function (l)
	{
		this.looping = l;
		switch (this.myapi) {
		case API_HTML5:
			if (this.instanceObject.loop !== !!l)
				this.instanceObject.loop = !!l;
			break;
		case API_WEBAUDIO:
			if (this.instanceObject.loop !== !!l)
				this.instanceObject.loop = !!l;
			break;
		case API_PHONEGAP:
			break;
		case API_APPMOBI:
			if (audRuntime.isDirectCanvas)
				AppMobi["context"]["setLoopingSound"](this.src, l);
			break;
		}
	};
	C2AudioInstance.prototype.setPlaybackRate = function (r)
	{
		this.playbackRate = r;
		this.updatePlaybackRate();
	};
	C2AudioInstance.prototype.updatePlaybackRate = function ()
	{
		var r = this.playbackRate;
		if ((timescale_mode === 1 && !this.is_music) || timescale_mode === 2)
			r *= audRuntime.timescale;
		switch (this.myapi) {
		case API_HTML5:
			if (this.instanceObject.playbackRate !== r)
				this.instanceObject.playbackRate = r;
			break;
		case API_WEBAUDIO:
			if (this.buffer.myapi === API_WEBAUDIO)
			{
				if (this.instanceObject["playbackRate"]["value"] !== r)
					this.instanceObject["playbackRate"]["value"] = r;
			}
			else
			{
				if (this.instanceObject.playbackRate !== r)
					this.instanceObject.playbackRate = r;
			}
			break;
		case API_PHONEGAP:
			break;
		case API_APPMOBI:
			break;
		}
	};
	C2AudioInstance.prototype.setSuspended = function (s)
	{
		switch (this.myapi) {
		case API_HTML5:
			if (s)
			{
				if (this.isPlaying())
				{
					this.instanceObject["pause"]();
					this.resume_me = true;
				}
				else
					this.resume_me = false;
			}
			else
			{
				if (this.resume_me)
					this.instanceObject["play"]();
			}
			break;
		case API_WEBAUDIO:
			if (s)
			{
				if (this.isPlaying())
				{
					if (this.buffer.myapi === API_WEBAUDIO)
					{
						this.resume_position = this.getPlaybackTime();
						if (this.looping)
							this.resume_position = this.resume_position % this.getDuration();
						stopSource(this.instanceObject);
					}
					else
						this.instanceObject["pause"]();
					this.resume_me = true;
				}
				else
					this.resume_me = false;
			}
			else
			{
				if (this.resume_me)
				{
					if (this.buffer.myapi === API_WEBAUDIO)
					{
						this.instanceObject = context["createBufferSource"]();
						this.instanceObject["buffer"] = this.buffer.bufferObject;
						this.instanceObject["connect"](this.gainNode);
						this.instanceObject.loop = this.looping;
						this.gainNode["gain"]["value"] = masterVolume * this.volume * this.mutevol;
						this.startTime = audRuntime.kahanTime.sum - this.resume_position;
						startSourceAt(this.instanceObject, this.resume_position, this.getDuration());
					}
					else
					{
						this.instanceObject["play"]();
					}
				}
			}
			break;
		case API_PHONEGAP:
			if (s)
			{
				if (this.isPlaying())
				{
					this.instanceObject["pause"]();
					this.resume_me = true;
				}
				else
					this.resume_me = false;
			}
			else
			{
				if (this.resume_me)
					this.instanceObject["play"]();
			}
			break;
		case API_APPMOBI:
			break;
		}
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
		audRuntime = this.runtime;
		audInst = this;
		this.listenerTracker = null;
		this.listenerZ = -600;
		if ((this.runtime.isiOS || (this.runtime.isAndroid && (this.runtime.isChrome || this.runtime.isAndroidStockBrowser))) && !this.runtime.isCrosswalk && !this.runtime.isDomFree)
		{
			isMusicWorkaround = true;
		}
		context = null;
		if (typeof AudioContext !== "undefined")
		{
			api = API_WEBAUDIO;
			context = new AudioContext();
		}
		else if (typeof webkitAudioContext !== "undefined")
		{
			api = API_WEBAUDIO;
			context = new webkitAudioContext();
		}
		if ((this.runtime.isiOS && api === API_WEBAUDIO) || isMusicWorkaround)
		{
			document.addEventListener("touchstart", function ()
			{
				var i, len, m;
				if (!iOShadtouch && context)
				{
					var buffer = context["createBuffer"](1, 1, 22050);
					var source = context["createBufferSource"]();
					source["buffer"] = buffer;
					source["connect"](context["destination"]);
					startSource(source);
					iOShadtouch = true;
				}
				if (isMusicWorkaround)
				{
					if (!silent)
					{
						for (i = 0, len = musicPlayNextTouch.length; i < len; ++i)
						{
							m = musicPlayNextTouch[i];
							if (!m.stopped && !m.is_paused)
								m.instanceObject.play();
						}
					}
					musicPlayNextTouch.length = 0;
				}
			}, true);
		}
		if (api !== API_WEBAUDIO)
		{
			if (this.runtime.isPhoneGap && typeof window["Media"] !== "undefined")
				api = API_PHONEGAP;
			else if (this.runtime.isAppMobi)
				api = API_APPMOBI;
		}
		if (api === API_PHONEGAP)
		{
			appPath = location.href;
			var i = appPath.lastIndexOf("/");
			if (i > -1)
				appPath = appPath.substr(0, i + 1);
			appPath = appPath.replace("file://", "");
		}
		if (this.runtime.isSafari && this.runtime.isWindows && typeof Audio === "undefined")
		{
			alert("It looks like you're using Safari for Windows without Quicktime.  Audio cannot be played until Quicktime is installed.");
			this.runtime.DestroyInstance(this);
		}
		else
		{
			if (this.runtime.isDirectCanvas)
				useOgg = this.runtime.isAndroid;		// AAC on iOS, OGG on Android
			else
			{
				try {
					useOgg = !!(new Audio().canPlayType('audio/ogg; codecs="vorbis"'));
				}
				catch (e)
				{
					useOgg = false;
				}
			}
			switch (api) {
			case API_HTML5:
;
				break;
			case API_WEBAUDIO:
;
				break;
			case API_PHONEGAP:
;
				break;
			case API_APPMOBI:
;
				break;
			default:
;
			}
			this.runtime.tickMe(this);
		}
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function ()
	{
		this.runtime.audioInstance = this;
		timescale_mode = this.properties[0];	// 0 = off, 1 = sounds only, 2 = all
		this.saveload = this.properties[1];		// 0 = all, 1 = sounds only, 2 = music only, 3 = none
		panningModel = this.properties[2];		// 0 = equalpower, 1 = hrtf, 3 = soundfield
		distanceModel = this.properties[3];		// 0 = linear, 1 = inverse, 2 = exponential
		this.listenerZ = -this.properties[4];
		refDistance = this.properties[5];
		maxDistance = this.properties[6];
		rolloffFactor = this.properties[7];
		this.listenerTracker = new ObjectTracker();
		if (api === API_WEBAUDIO)
		{
			context["listener"]["speedOfSound"] = this.properties[8];
			context["listener"]["dopplerFactor"] = this.properties[9];
			context["listener"]["setPosition"](this.runtime.draw_width / 2, this.runtime.draw_height / 2, this.listenerZ);
			context["listener"]["setOrientation"](0, 0, 1, 0, -1, 0);
			window["c2OnAudioMicStream"] = function (localMediaStream, tag)
			{
				if (micSource)
					micSource["disconnect"]();
				micTag = tag.toLowerCase();
				micSource = context["createMediaStreamSource"](localMediaStream);
				micSource["connect"](getDestinationForTag(micTag));
			};
		}
		this.runtime.addSuspendCallback(function(s)
		{
			audInst.onSuspend(s);
		});
		var self = this;
		this.runtime.addDestroyCallback(function (inst)
		{
			self.onInstanceDestroyed(inst);
		});
	};
	instanceProto.onInstanceDestroyed = function (inst)
	{
		var i, len, a;
		for (i = 0, len = audioInstances.length; i < len; i++)
		{
			a = audioInstances[i];
			if (a.objectTracker)
			{
				if (a.objectTracker.obj === inst)
				{
					a.objectTracker.obj = null;
					if (a.pannerEnabled && a.isPlaying() && a.looping)
						a.stop();
				}
			}
		}
		if (this.listenerTracker.obj === inst)
			this.listenerTracker.obj = null;
	};
	instanceProto.saveToJSON = function ()
	{
		var o = {
			"silent": silent,
			"masterVolume": masterVolume,
			"listenerZ": this.listenerZ,
			"listenerUid": this.listenerTracker.hasObject() ? this.listenerTracker.obj.uid : -1,
			"playing": [],
			"effects": {}
		};
		var playingarr = o["playing"];
		var i, len, a, d, p, panobj, playbackTime;
		for (i = 0, len = audioInstances.length; i < len; i++)
		{
			a = audioInstances[i];
			if (!a.isPlaying())
				continue;				// no need to save stopped sounds
			if (this.saveload === 3)	// not saving/loading any sounds/music
				continue;
			if (a.is_music && this.saveload === 1)	// not saving/loading music
				continue;
			if (!a.is_music && this.saveload === 2)	// not saving/loading sound
				continue;
			playbackTime = a.getPlaybackTime();
			if (a.looping)
				playbackTime = playbackTime % a.getDuration();
			d = {
				"tag": a.tag,
				"buffersrc": a.buffer.src,
				"is_music": a.is_music,
				"playbackTime": playbackTime,
				"volume": a.volume,
				"looping": a.looping,
				"muted": a.is_muted,
				"playbackRate": a.playbackRate,
				"paused": a.is_paused,
				"resume_position": a.resume_position
			};
			if (a.pannerEnabled)
			{
				d["pan"] = {};
				panobj = d["pan"];
				if (a.objectTracker && a.objectTracker.hasObject())
				{
					panobj["objUid"] = a.objectTracker.obj.uid;
				}
				else
				{
					panobj["x"] = a.panX;
					panobj["y"] = a.panY;
					panobj["a"] = a.panAngle;
				}
				panobj["ia"] = a.panConeInner;
				panobj["oa"] = a.panConeOuter;
				panobj["og"] = a.panConeOuterGain;
			}
			playingarr.push(d);
		}
		var fxobj = o["effects"];
		var fxarr;
		for (p in effects)
		{
			if (effects.hasOwnProperty(p))
			{
				fxarr = [];
				for (i = 0, len = effects[p].length; i < len; i++)
				{
					fxarr.push({ "type": effects[p][i].type, "params": effects[p][i].params });
				}
				fxobj[p] = fxarr;
			}
		}
		return o;
	};
	var objectTrackerUidsToLoad = [];
	instanceProto.loadFromJSON = function (o)
	{
		var setSilent = o["silent"];
		masterVolume = o["masterVolume"];
		this.listenerZ = o["listenerZ"];
		this.listenerTracker.setObject(null);
		var listenerUid = o["listenerUid"];
		if (listenerUid !== -1)
		{
			this.listenerTracker.loadUid = listenerUid;
			objectTrackerUidsToLoad.push(this.listenerTracker);
		}
		var playingarr = o["playing"];
		var i, len, d, src, is_music, tag, playbackTime, looping, vol, b, a, p, pan, panObjUid;
		if (this.saveload !== 3)
		{
			for (i = 0, len = audioInstances.length; i < len; i++)
			{
				a = audioInstances[i];
				if (a.is_music && this.saveload === 1)
					continue;		// only saving/loading sound: leave music playing
				if (!a.is_music && this.saveload === 2)
					continue;		// only saving/loading music: leave sound playing
				a.stop();
			}
		}
		var fxarr, fxtype, fxparams, fx;
		for (p in effects)
		{
			if (effects.hasOwnProperty(p))
			{
				for (i = 0, len = effects[p].length; i < len; i++)
					effects[p][i].remove();
			}
		}
		cr.wipe(effects);
		for (p in o["effects"])
		{
			if (o["effects"].hasOwnProperty(p))
			{
				fxarr = o["effects"][p];
				for (i = 0, len = fxarr.length; i < len; i++)
				{
					fxtype = fxarr[i]["type"];
					fxparams = fxarr[i]["params"];
					switch (fxtype) {
					case "filter":
						addEffectForTag(p, new FilterEffect(fxparams[0], fxparams[1], fxparams[2], fxparams[3], fxparams[4], fxparams[5]));
						break;
					case "delay":
						addEffectForTag(p, new DelayEffect(fxparams[0], fxparams[1], fxparams[2]));
						break;
					case "convolve":
						src = fxparams[2];
						b = this.getAudioBuffer(src, false);
						if (b.bufferObject)
						{
							fx = new ConvolveEffect(b.bufferObject, fxparams[0], fxparams[1], src);
						}
						else
						{
							fx = new ConvolveEffect(null, fxparams[0], fxparams[1], src);
							b.normalizeWhenReady = fxparams[0];
							b.convolveWhenReady = fx;
						}
						addEffectForTag(p, fx);
						break;
					case "flanger":
						addEffectForTag(p, new FlangerEffect(fxparams[0], fxparams[1], fxparams[2], fxparams[3], fxparams[4]));
						break;
					case "phaser":
						addEffectForTag(p, new PhaserEffect(fxparams[0], fxparams[1], fxparams[2], fxparams[3], fxparams[4], fxparams[5]));
						break;
					case "gain":
						addEffectForTag(p, new GainEffect(fxparams[0]));
						break;
					case "tremolo":
						addEffectForTag(p, new TremoloEffect(fxparams[0], fxparams[1]));
						break;
					case "ringmod":
						addEffectForTag(p, new RingModulatorEffect(fxparams[0], fxparams[1]));
						break;
					case "distortion":
						addEffectForTag(p, new DistortionEffect(fxparams[0], fxparams[1], fxparams[2], fxparams[3], fxparams[4]));
						break;
					case "compressor":
						addEffectForTag(p, new CompressorEffect(fxparams[0], fxparams[1], fxparams[2], fxparams[3], fxparams[4]));
						break;
					case "analyser":
						addEffectForTag(p, new AnalyserEffect(fxparams[0], fxparams[1]));
						break;
					}
				}
			}
		}
		for (i = 0, len = playingarr.length; i < len; i++)
		{
			if (this.saveload === 3)	// not saving/loading any sounds/music
				continue;
			d = playingarr[i];
			src = d["buffersrc"];
			is_music = d["is_music"];
			tag = d["tag"];
			playbackTime = d["playbackTime"];
			looping = d["looping"];
			vol = d["volume"];
			pan = d["pan"];
			panObjUid = (pan && pan.hasOwnProperty("objUid")) ? pan["objUid"] : -1;
			if (is_music && this.saveload === 1)	// not saving/loading music
				continue;
			if (!is_music && this.saveload === 2)	// not saving/loading sound
				continue;
			a = this.getAudioInstance(src, tag, is_music, looping, vol);
			if (!a)
			{
				b = this.getAudioBuffer(src, is_music);
				b.seekWhenReady = playbackTime;
				b.pauseWhenReady = d["paused"];
				if (pan)
				{
					if (panObjUid !== -1)
					{
						b.panWhenReady.push({ objUid: panObjUid, ia: pan["ia"], oa: pan["oa"], og: pan["og"], thistag: tag });
					}
					else
					{
						b.panWhenReady.push({ x: pan["x"], y: pan["y"], a: pan["a"], ia: pan["ia"], oa: pan["oa"], og: pan["og"], thistag: tag });
					}
				}
				continue;
			}
			a.resume_position = d["resume_position"];
			a.setPannerEnabled(!!pan);
			a.play(looping, vol, playbackTime);
			a.updatePlaybackRate();
			a.updateVolume();
			a.doSetMuted(a.is_muted || a.is_silent);
			if (d["paused"])
				a.pause();
			if (d["muted"])
				a.setMuted(true);
			a.doSetMuted(a.is_muted || a.is_silent);
			if (pan)
			{
				if (panObjUid !== -1)
				{
					a.objectTracker = a.objectTracker || new ObjectTracker();
					a.objectTracker.loadUid = panObjUid;
					objectTrackerUidsToLoad.push(a.objectTracker);
				}
				else
				{
					a.setPan(pan["x"], pan["y"], pan["a"], pan["ia"], pan["oa"], pan["og"]);
				}
			}
		}
		if (setSilent && !silent)			// setting silent
		{
			for (i = 0, len = audioInstances.length; i < len; i++)
				audioInstances[i].setSilent(true);
			silent = true;
		}
		else if (!setSilent && silent)		// setting not silent
		{
			for (i = 0, len = audioInstances.length; i < len; i++)
				audioInstances[i].setSilent(false);
			silent = false;
		}
	};
	instanceProto.afterLoad = function ()
	{
		var i, len, ot, inst;
		for (i = 0, len = objectTrackerUidsToLoad.length; i < len; i++)
		{
			ot = objectTrackerUidsToLoad[i];
			inst = this.runtime.getObjectByUID(ot.loadUid);
			ot.setObject(inst);
			ot.loadUid = -1;
			if (inst)
			{
				listenerX = inst.x;
				listenerY = inst.y;
			}
		}
		objectTrackerUidsToLoad.length = 0;
	};
	instanceProto.onSuspend = function (s)
	{
		var i, len;
		for (i = 0, len = audioInstances.length; i < len; i++)
			audioInstances[i].setSuspended(s);
	};
	instanceProto.tick = function ()
	{
		var dt = this.runtime.dt;
		var i, len, a;
		for (i = 0, len = audioInstances.length; i < len; i++)
		{
			a = audioInstances[i];
			a.tick(dt);
			if (a.myapi !== API_HTML5 && a.myapi !== API_APPMOBI)
			{
				if (!a.fresh && !a.stopped && a.hasEnded())
				{
					a.stopped = true;
					audTag = a.tag;
					audRuntime.trigger(cr.plugins_.Audio.prototype.cnds.OnEnded, audInst);
				}
			}
			if (timescale_mode !== 0)
				a.updatePlaybackRate();
		}
		var p, arr, f;
		for (p in effects)
		{
			if (effects.hasOwnProperty(p))
			{
				arr = effects[p];
				for (i = 0, len = arr.length; i < len; i++)
				{
					f = arr[i];
					if (f.tick)
						f.tick();
				}
			}
		}
		if (api === API_WEBAUDIO && this.listenerTracker.hasObject())
		{
			this.listenerTracker.tick(dt);
			listenerX = this.listenerTracker.obj.x;
			listenerY = this.listenerTracker.obj.y;
			context["listener"]["setPosition"](this.listenerTracker.obj.x, this.listenerTracker.obj.y, this.listenerZ);
			context["listener"]["setVelocity"](this.listenerTracker.getVelocityX(), this.listenerTracker.getVelocityY(), 0);
		}
	};
	var preload_list = [];
	instanceProto.setPreloadList = function (arr)
	{
		var i, len, p, filename, size, isOgg;
		var total_size = 0;
		for (i = 0, len = arr.length; i < len; ++i)
		{
			p = arr[i];
			filename = p[0];
			size = p[1] * 2;
			isOgg = (filename.length > 4 && filename.substr(filename.length - 4) === ".ogg");
			if ((isOgg && useOgg) || (!isOgg && !useOgg))
			{
				preload_list.push({
					filename: filename,
					size: size,
					obj: null
				});
				total_size += size;
			}
		}
		return total_size;
	};
	instanceProto.startPreloads = function ()
	{
		var i, len, p, src;
		for (i = 0, len = preload_list.length; i < len; ++i)
		{
			p = preload_list[i];
			src = this.runtime.files_subfolder + p.filename;
			p.obj = this.getAudioBuffer(src, false);
		}
	};
	instanceProto.getPreloadedSize = function ()
	{
		var completed = 0;
		var i, len, p;
		for (i = 0, len = preload_list.length; i < len; ++i)
		{
			p = preload_list[i];
			if (p.obj.isLoadedAndDecoded() || p.obj.hasFailedToLoad())
				completed += p.size;
			else if (p.obj.isLoaded())	// downloaded but not decoded: only happens in Web Audio API, count as half-way progress
				completed += Math.floor(p.size / 2);
		};
		return completed;
	};
	instanceProto.getAudioBuffer = function (src_, is_music)
	{
		var i, len, a, ret = null, j, k, lenj, ai;
		for (i = 0, len = audioBuffers.length; i < len; i++)
		{
			a = audioBuffers[i];
			if (a.src === src_)
			{
				ret = a;
				break;
			}
		}
		if (!ret)
		{
			ret = new C2AudioBuffer(src_, is_music);
			audioBuffers.push(ret);
		}
		return ret;
	};
	instanceProto.getAudioInstance = function (src_, tag, is_music, looping, vol)
	{
		var i, len, a;
		for (i = 0, len = audioInstances.length; i < len; i++)
		{
			a = audioInstances[i];
			if (a.src === src_ && (a.canBeRecycled() || is_music))
			{
				a.tag = tag;
				return a;
			}
		}
		var b = this.getAudioBuffer(src_, is_music);
		if (!b.bufferObject)
		{
			if (tag !== "<preload>")
			{
				b.playTagWhenReady = tag;
				b.loopWhenReady = looping;
				b.volumeWhenReady = vol;
			}
			return null;
		}
		a = new C2AudioInstance(b, tag);
		audioInstances.push(a);
		return a;
	};
	var taggedAudio = [];
	function getAudioByTag(tag)
	{
		taggedAudio.length = 0;
		if (!tag.length)
		{
			if (!lastAudio || lastAudio.hasEnded())
				return;
			else
			{
				taggedAudio.length = 1;
				taggedAudio[0] = lastAudio;
				return;
			}
		}
		var i, len, a;
		for (i = 0, len = audioInstances.length; i < len; i++)
		{
			a = audioInstances[i];
			if (cr.equals_nocase(tag, a.tag))
				taggedAudio.push(a);
		}
	};
	function reconnectEffects(tag)
	{
		var i, len, arr, n, toNode = context["destination"];
		if (effects.hasOwnProperty(tag))
		{
			arr = effects[tag];
			if (arr.length)
			{
				toNode = arr[0].getInputNode();
				for (i = 0, len = arr.length; i < len; i++)
				{
					n = arr[i];
					if (i + 1 === len)
						n.connectTo(context["destination"]);
					else
						n.connectTo(arr[i + 1].getInputNode());
				}
			}
		}
		getAudioByTag(tag);
		for (i = 0, len = taggedAudio.length; i < len; i++)
			taggedAudio[i].reconnect(toNode);
		if (micSource && micTag === tag)
		{
			micSource["disconnect"]();
			micSource["connect"](toNode);
		}
	};
	function addEffectForTag(tag, fx)
	{
		if (!effects.hasOwnProperty(tag))
			effects[tag] = [fx];
		else
			effects[tag].push(fx);
		reconnectEffects(tag);
	};
	function Cnds() {};
	Cnds.prototype.OnEnded = function (t)
	{
		return cr.equals_nocase(audTag, t);
	};
	Cnds.prototype.PreloadsComplete = function ()
	{
		var i, len;
		for (i = 0, len = audioBuffers.length; i < len; i++)
		{
			if (!audioBuffers[i].isLoaded())
				return false;
		}
		return true;
	};
	Cnds.prototype.AdvancedAudioSupported = function ()
	{
		return api === API_WEBAUDIO;
	};
	Cnds.prototype.IsSilent = function ()
	{
		return silent;
	};
	Cnds.prototype.IsAnyPlaying = function ()
	{
		var i, len;
		for (i = 0, len = audioInstances.length; i < len; i++)
		{
			if (audioInstances[i].isPlaying())
				return true;
		}
		return false;
	};
	Cnds.prototype.IsTagPlaying = function (tag)
	{
		getAudioByTag(tag);
		var i, len;
		for (i = 0, len = taggedAudio.length; i < len; i++)
		{
			if (taggedAudio[i].isPlaying())
				return true;
		}
		return false;
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.Play = function (file, looping, vol, tag)
	{
		if (silent)
			return;
		var v = dbToLinear(vol);
		var is_music = file[1];
		var src = this.runtime.files_subfolder + file[0] + (useOgg ? ".ogg" : ".m4a");
		lastAudio = this.getAudioInstance(src, tag, is_music, looping!==0, v);
		if (!lastAudio)
			return;
		lastAudio.setPannerEnabled(false);
		lastAudio.play(looping!==0, v);
	};
	Acts.prototype.PlayAtPosition = function (file, looping, vol, x_, y_, angle_, innerangle_, outerangle_, outergain_, tag)
	{
		if (silent)
			return;
		var v = dbToLinear(vol);
		var is_music = file[1];
		var src = this.runtime.files_subfolder + file[0] + (useOgg ? ".ogg" : ".m4a");
		lastAudio = this.getAudioInstance(src, tag, is_music, looping!==0, v);
		if (!lastAudio)
		{
			var b = this.getAudioBuffer(src, is_music);
			b.panWhenReady.push({ x: x_, y: y_, a: angle_, ia: innerangle_, oa: outerangle_, og: dbToLinear(outergain_), thistag: tag });
			return;
		}
		lastAudio.setPannerEnabled(true);
		lastAudio.setPan(x_, y_, angle_, innerangle_, outerangle_, dbToLinear(outergain_));
		lastAudio.play(looping!==0, v);
	};
	Acts.prototype.PlayAtObject = function (file, looping, vol, obj, innerangle, outerangle, outergain, tag)
	{
		if (silent || !obj)
			return;
		var inst = obj.getFirstPicked();
		if (!inst)
			return;
		var v = dbToLinear(vol);
		var is_music = file[1];
		var src = this.runtime.files_subfolder + file[0] + (useOgg ? ".ogg" : ".m4a");
		lastAudio = this.getAudioInstance(src, tag, is_music, looping!==0, v);
		if (!lastAudio)
		{
			var b = this.getAudioBuffer(src, is_music);
			b.panWhenReady.push({ obj: inst, ia: innerangle, oa: outerangle, og: dbToLinear(outergain), thistag: tag });
			return;
		}
		lastAudio.setPannerEnabled(true);
		var px = cr.rotatePtAround(inst.x, inst.y, -inst.layer.getAngle(), listenerX, listenerY, true);
		var py = cr.rotatePtAround(inst.x, inst.y, -inst.layer.getAngle(), listenerX, listenerY, false);
		lastAudio.setPan(px, py, cr.to_degrees(inst.angle - inst.layer.getAngle()), innerangle, outerangle, dbToLinear(outergain));
		lastAudio.setObject(inst);
		lastAudio.play(looping!==0, v);
	};
	Acts.prototype.PlayByName = function (folder, filename, looping, vol, tag)
	{
		if (silent)
			return;
		var v = dbToLinear(vol);
		var is_music = (folder === 1);
		var src = this.runtime.files_subfolder + filename.toLowerCase() + (useOgg ? ".ogg" : ".m4a");
		lastAudio = this.getAudioInstance(src, tag, is_music, looping!==0, v);
		if (!lastAudio)
			return;
		lastAudio.setPannerEnabled(false);
		lastAudio.play(looping!==0, v);
	};
	Acts.prototype.PlayAtPositionByName = function (folder, filename, looping, vol, x_, y_, angle_, innerangle_, outerangle_, outergain_, tag)
	{
		if (silent)
			return;
		var v = dbToLinear(vol);
		var is_music = (folder === 1);
		var src = this.runtime.files_subfolder + filename.toLowerCase() + (useOgg ? ".ogg" : ".m4a");
		lastAudio = this.getAudioInstance(src, tag, is_music, looping!==0, v);
		if (!lastAudio)
		{
			var b = this.getAudioBuffer(src, is_music);
			b.panWhenReady.push({ x: x_, y: y_, a: angle_, ia: innerangle_, oa: outerangle_, og: dbToLinear(outergain_), thistag: tag });
			return;
		}
		lastAudio.setPannerEnabled(true);
		lastAudio.setPan(x_, y_, angle_, innerangle_, outerangle_, dbToLinear(outergain_));
		lastAudio.play(looping!==0, v);
	};
	Acts.prototype.PlayAtObjectByName = function (folder, filename, looping, vol, obj, innerangle, outerangle, outergain, tag)
	{
		if (silent || !obj)
			return;
		var inst = obj.getFirstPicked();
		if (!inst)
			return;
		var v = dbToLinear(vol);
		var is_music = (folder === 1);
		var src = this.runtime.files_subfolder + filename.toLowerCase() + (useOgg ? ".ogg" : ".m4a");
		lastAudio = this.getAudioInstance(src, tag, is_music, looping!==0, v);
		if (!lastAudio)
		{
			var b = this.getAudioBuffer(src, is_music);
			b.panWhenReady.push({ obj: inst, ia: innerangle, oa: outerangle, og: dbToLinear(outergain), thistag: tag });
			return;
		}
		lastAudio.setPannerEnabled(true);
		var px = cr.rotatePtAround(inst.x, inst.y, -inst.layer.getAngle(), listenerX, listenerY, true);
		var py = cr.rotatePtAround(inst.x, inst.y, -inst.layer.getAngle(), listenerX, listenerY, false);
		lastAudio.setPan(px, py, cr.to_degrees(inst.angle - inst.layer.getAngle()), innerangle, outerangle, dbToLinear(outergain));
		lastAudio.setObject(inst);
		lastAudio.play(looping!==0, v);
	};
	Acts.prototype.SetLooping = function (tag, looping)
	{
		getAudioByTag(tag);
		var i, len;
		for (i = 0, len = taggedAudio.length; i < len; i++)
			taggedAudio[i].setLooping(looping === 0);
	};
	Acts.prototype.SetMuted = function (tag, muted)
	{
		getAudioByTag(tag);
		var i, len;
		for (i = 0, len = taggedAudio.length; i < len; i++)
			taggedAudio[i].setMuted(muted === 0);
	};
	Acts.prototype.SetVolume = function (tag, vol)
	{
		getAudioByTag(tag);
		var v = dbToLinear(vol);
		var i, len;
		for (i = 0, len = taggedAudio.length; i < len; i++)
			taggedAudio[i].setVolume(v);
	};
	Acts.prototype.Preload = function (file)
	{
		if (silent)
			return;
		var is_music = file[1];
		var src = this.runtime.files_subfolder + file[0] + (useOgg ? ".ogg" : ".m4a");
		if (api === API_APPMOBI)
		{
			if (this.runtime.isDirectCanvas)
				AppMobi["context"]["loadSound"](src);
			else
				AppMobi["player"]["loadSound"](src);
			return;
		}
		else if (api === API_PHONEGAP)
		{
			return;
		}
		this.getAudioInstance(src, "<preload>", is_music, false);
	};
	Acts.prototype.PreloadByName = function (folder, filename)
	{
		if (silent)
			return;
		var is_music = (folder === 1);
		var src = this.runtime.files_subfolder + filename.toLowerCase() + (useOgg ? ".ogg" : ".m4a");
		if (api === API_APPMOBI)
		{
			if (this.runtime.isDirectCanvas)
				AppMobi["context"]["loadSound"](src);
			else
				AppMobi["player"]["loadSound"](src);
			return;
		}
		else if (api === API_PHONEGAP)
		{
			return;
		}
		this.getAudioInstance(src, "<preload>", is_music, false);
	};
	Acts.prototype.SetPlaybackRate = function (tag, rate)
	{
		getAudioByTag(tag);
		if (rate < 0.0)
			rate = 0;
		var i, len;
		for (i = 0, len = taggedAudio.length; i < len; i++)
			taggedAudio[i].setPlaybackRate(rate);
	};
	Acts.prototype.Stop = function (tag)
	{
		getAudioByTag(tag);
		var i, len;
		for (i = 0, len = taggedAudio.length; i < len; i++)
			taggedAudio[i].stop();
	};
	Acts.prototype.StopAll = function ()
	{
		var i, len;
		for (i = 0, len = audioInstances.length; i < len; i++)
			audioInstances[i].stop();
	};
	Acts.prototype.SetPaused = function (tag, state)
	{
		getAudioByTag(tag);
		var i, len;
		for (i = 0, len = taggedAudio.length; i < len; i++)
		{
			if (state === 0)
				taggedAudio[i].pause();
			else
				taggedAudio[i].resume();
		}
	};
	Acts.prototype.Seek = function (tag, pos)
	{
		getAudioByTag(tag);
		var i, len;
		for (i = 0, len = taggedAudio.length; i < len; i++)
		{
			taggedAudio[i].seek(pos);
		}
	};
	Acts.prototype.SetSilent = function (s)
	{
		var i, len;
		if (s === 2)					// toggling
			s = (silent ? 1 : 0);		// choose opposite state
		if (s === 0 && !silent)			// setting silent
		{
			for (i = 0, len = audioInstances.length; i < len; i++)
				audioInstances[i].setSilent(true);
			silent = true;
		}
		else if (s === 1 && silent)		// setting not silent
		{
			for (i = 0, len = audioInstances.length; i < len; i++)
				audioInstances[i].setSilent(false);
			silent = false;
		}
	};
	Acts.prototype.SetMasterVolume = function (vol)
	{
		masterVolume = dbToLinear(vol);
		var i, len;
		for (i = 0, len = audioInstances.length; i < len; i++)
			audioInstances[i].updateVolume();
	};
	Acts.prototype.AddFilterEffect = function (tag, type, freq, detune, q, gain, mix)
	{
		if (api !== API_WEBAUDIO || type < 0 || type >= filterTypes.length || !context["createBiquadFilter"])
			return;
		tag = tag.toLowerCase();
		mix = mix / 100;
		if (mix < 0) mix = 0;
		if (mix > 1) mix = 1;
		addEffectForTag(tag, new FilterEffect(type, freq, detune, q, gain, mix));
	};
	Acts.prototype.AddDelayEffect = function (tag, delay, gain, mix)
	{
		if (api !== API_WEBAUDIO)
			return;
		tag = tag.toLowerCase();
		mix = mix / 100;
		if (mix < 0) mix = 0;
		if (mix > 1) mix = 1;
		addEffectForTag(tag, new DelayEffect(delay, dbToLinear(gain), mix));
	};
	Acts.prototype.AddFlangerEffect = function (tag, delay, modulation, freq, feedback, mix)
	{
		if (api !== API_WEBAUDIO || !context["createOscillator"])
			return;
		tag = tag.toLowerCase();
		mix = mix / 100;
		if (mix < 0) mix = 0;
		if (mix > 1) mix = 1;
		addEffectForTag(tag, new FlangerEffect(delay / 1000, modulation / 1000, freq, feedback / 100, mix));
	};
	Acts.prototype.AddPhaserEffect = function (tag, freq, detune, q, mod, modfreq, mix)
	{
		if (api !== API_WEBAUDIO || !context["createOscillator"])
			return;
		tag = tag.toLowerCase();
		mix = mix / 100;
		if (mix < 0) mix = 0;
		if (mix > 1) mix = 1;
		addEffectForTag(tag, new PhaserEffect(freq, detune, q, mod, modfreq, mix));
	};
	Acts.prototype.AddConvolutionEffect = function (tag, file, norm, mix)
	{
		if (api !== API_WEBAUDIO || !context["createConvolver"])
			return;
		var doNormalize = (norm === 0);
		var src = this.runtime.files_subfolder + file[0] + (useOgg ? ".ogg" : ".m4a");
		var b = this.getAudioBuffer(src, false);
		tag = tag.toLowerCase();
		mix = mix / 100;
		if (mix < 0) mix = 0;
		if (mix > 1) mix = 1;
		var fx;
		if (b.bufferObject)
		{
			fx = new ConvolveEffect(b.bufferObject, doNormalize, mix, src);
		}
		else
		{
			fx = new ConvolveEffect(null, doNormalize, mix, src);
			b.normalizeWhenReady = doNormalize;
			b.convolveWhenReady = fx;
		}
		addEffectForTag(tag, fx);
	};
	Acts.prototype.AddGainEffect = function (tag, g)
	{
		if (api !== API_WEBAUDIO)
			return;
		tag = tag.toLowerCase();
		addEffectForTag(tag, new GainEffect(dbToLinear(g)));
	};
	Acts.prototype.AddMuteEffect = function (tag)
	{
		if (api !== API_WEBAUDIO)
			return;
		tag = tag.toLowerCase();
		addEffectForTag(tag, new GainEffect(0));	// re-use gain effect with 0 gain
	};
	Acts.prototype.AddTremoloEffect = function (tag, freq, mix)
	{
		if (api !== API_WEBAUDIO || !context["createOscillator"])
			return;
		tag = tag.toLowerCase();
		mix = mix / 100;
		if (mix < 0) mix = 0;
		if (mix > 1) mix = 1;
		addEffectForTag(tag, new TremoloEffect(freq, mix));
	};
	Acts.prototype.AddRingModEffect = function (tag, freq, mix)
	{
		if (api !== API_WEBAUDIO || !context["createOscillator"])
			return;
		tag = tag.toLowerCase();
		mix = mix / 100;
		if (mix < 0) mix = 0;
		if (mix > 1) mix = 1;
		addEffectForTag(tag, new RingModulatorEffect(freq, mix));
	};
	Acts.prototype.AddDistortionEffect = function (tag, threshold, headroom, drive, makeupgain, mix)
	{
		if (api !== API_WEBAUDIO || !context["createWaveShaper"])
			return;
		tag = tag.toLowerCase();
		mix = mix / 100;
		if (mix < 0) mix = 0;
		if (mix > 1) mix = 1;
		addEffectForTag(tag, new DistortionEffect(threshold, headroom, drive, makeupgain, mix));
	};
	Acts.prototype.AddCompressorEffect = function (tag, threshold, knee, ratio, attack, release)
	{
		if (api !== API_WEBAUDIO || !context["createDynamicsCompressor"])
			return;
		tag = tag.toLowerCase();
		addEffectForTag(tag, new CompressorEffect(threshold, knee, ratio, attack / 1000, release / 1000));
	};
	Acts.prototype.AddAnalyserEffect = function (tag, fftSize, smoothing)
	{
		if (api !== API_WEBAUDIO)
			return;
		tag = tag.toLowerCase();
		addEffectForTag(tag, new AnalyserEffect(fftSize, smoothing));
	};
	Acts.prototype.RemoveEffects = function (tag)
	{
		if (api !== API_WEBAUDIO)
			return;
		tag = tag.toLowerCase();
		var i, len, arr;
		if (effects.hasOwnProperty(tag))
		{
			arr = effects[tag];
			if (arr.length)
			{
				for (i = 0, len = arr.length; i < len; i++)
					arr[i].remove();
				arr.length = 0;
				reconnectEffects(tag);
			}
		}
	};
	Acts.prototype.SetEffectParameter = function (tag, index, param, value, ramp, time)
	{
		if (api !== API_WEBAUDIO)
			return;
		tag = tag.toLowerCase();
		index = Math.floor(index);
		var arr;
		if (!effects.hasOwnProperty(tag))
			return;
		arr = effects[tag];
		if (index < 0 || index >= arr.length)
			return;
		arr[index].setParam(param, value, ramp, time);
	};
	Acts.prototype.SetListenerObject = function (obj_)
	{
		if (!obj_ || api !== API_WEBAUDIO)
			return;
		var inst = obj_.getFirstPicked();
		if (!inst)
			return;
		this.listenerTracker.setObject(inst);
		listenerX = inst.x;
		listenerY = inst.y;
	};
	Acts.prototype.SetListenerZ = function (z)
	{
		this.listenerZ = z;
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.Duration = function (ret, tag)
	{
		getAudioByTag(tag);
		if (taggedAudio.length)
			ret.set_float(taggedAudio[0].getDuration());
		else
			ret.set_float(0);
	};
	Exps.prototype.PlaybackTime = function (ret, tag)
	{
		getAudioByTag(tag);
		if (taggedAudio.length)
			ret.set_float(taggedAudio[0].getPlaybackTime());
		else
			ret.set_float(0);
	};
	Exps.prototype.Volume = function (ret, tag)
	{
		getAudioByTag(tag);
		if (taggedAudio.length)
		{
			var v = taggedAudio[0].getVolume();
			ret.set_float(linearToDb(v));
		}
		else
			ret.set_float(0);
	};
	Exps.prototype.MasterVolume = function (ret)
	{
		ret.set_float(masterVolume);
	};
	Exps.prototype.EffectCount = function (ret, tag)
	{
		tag = tag.toLowerCase();
		var arr = null;
		if (effects.hasOwnProperty(tag))
			arr = effects[tag];
		ret.set_int(arr ? arr.length : 0);
	};
	function getAnalyser(tag, index)
	{
		var arr = null;
		if (effects.hasOwnProperty(tag))
			arr = effects[tag];
		if (arr && index >= 0 && index < arr.length && arr[index].freqBins)
			return arr[index];
		else
			return null;
	};
	Exps.prototype.AnalyserFreqBinCount = function (ret, tag, index)
	{
		tag = tag.toLowerCase();
		index = Math.floor(index);
		var analyser = getAnalyser(tag, index);
		ret.set_int(analyser ? analyser.node["frequencyBinCount"] : 0);
	};
	Exps.prototype.AnalyserFreqBinAt = function (ret, tag, index, bin)
	{
		tag = tag.toLowerCase();
		index = Math.floor(index);
		bin = Math.floor(bin);
		var analyser = getAnalyser(tag, index);
		if (!analyser)
			ret.set_float(0);
		else if (bin < 0 || bin >= analyser.node["frequencyBinCount"])
			ret.set_float(0);
		else
			ret.set_float(analyser.freqBins[bin]);
	};
	Exps.prototype.AnalyserPeakLevel = function (ret, tag, index)
	{
		tag = tag.toLowerCase();
		index = Math.floor(index);
		var analyser = getAnalyser(tag, index);
		if (analyser)
			ret.set_float(analyser.peak);
		else
			ret.set_float(0);
	};
	Exps.prototype.AnalyserRMSLevel = function (ret, tag, index)
	{
		tag = tag.toLowerCase();
		index = Math.floor(index);
		var analyser = getAnalyser(tag, index);
		if (analyser)
			ret.set_float(analyser.rms);
		else
			ret.set_float(0);
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.Browser = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Browser.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
		var self = this;
		window.addEventListener("resize", function () {
			self.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnResize, self);
		});
		if (typeof navigator.onLine !== "undefined")
		{
			window.addEventListener("online", function() {
				self.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnOnline, self);
			});
			window.addEventListener("offline", function() {
				self.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnOffline, self);
			});
		}
		if (typeof window.applicationCache !== "undefined")
		{
			window.applicationCache.addEventListener('updateready', function() {
				self.runtime.loadingprogress = 1;
				self.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnUpdateReady, self);
			});
			window.applicationCache.addEventListener('progress', function(e) {
				self.runtime.loadingprogress = e["loaded"] / e["total"];
			});
		}
		if (!this.runtime.isDirectCanvas)
		{
			document.addEventListener("appMobi.device.update.available", function() {
				self.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnUpdateReady, self);
			});
			document.addEventListener("backbutton", function() {
				self.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnBackButton, self);
			});
			document.addEventListener("menubutton", function() {
				self.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnMenuButton, self);
			});
			document.addEventListener("searchbutton", function() {
				self.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnSearchButton, self);
			});
			document.addEventListener("tizenhwkey", function (e) {
				var ret;
				switch (e["keyName"]) {
				case "back":
					ret = self.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnBackButton, self);
					if (!ret)
					{
						if (window["tizen"])
							window["tizen"]["application"]["getCurrentApplication"]()["exit"]();
					}
					break;
				case "menu":
					ret = self.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnMenuButton, self);
					if (!ret)
						e.preventDefault();
					break;
				}
			});
		}
		if (this.runtime.isWindowsPhone81)
		{
			WinJS["Application"]["onbackclick"] = function (e)
			{
				return !!self.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnBackButton, self);
			};
		}
		this.runtime.addSuspendCallback(function(s) {
			if (s)
			{
				self.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnPageHidden, self);
			}
			else
			{
				self.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnPageVisible, self);
			}
		});
		this.is_arcade = (typeof window["is_scirra_arcade"] !== "undefined");
	};
	function Cnds() {};
	Cnds.prototype.CookiesEnabled = function()
	{
		return navigator ? navigator.cookieEnabled : false;
	};
	Cnds.prototype.IsOnline = function()
	{
		return navigator ? navigator.onLine : false;
	};
	Cnds.prototype.HasJava = function()
	{
		return navigator ? navigator.javaEnabled() : false;
	};
	Cnds.prototype.OnOnline = function()
	{
		return true;
	};
	Cnds.prototype.OnOffline = function()
	{
		return true;
	};
	Cnds.prototype.IsDownloadingUpdate = function ()
	{
		if (typeof window["applicationCache"] === "undefined")
			return false;
		else
			return window["applicationCache"]["status"] === window["applicationCache"]["DOWNLOADING"];
	};
	Cnds.prototype.OnUpdateReady = function ()
	{
		return true;
	};
	Cnds.prototype.PageVisible = function ()
	{
		return !this.runtime.isSuspended;
	};
	Cnds.prototype.OnPageVisible = function ()
	{
		return true;
	};
	Cnds.prototype.OnPageHidden = function ()
	{
		return true;
	};
	Cnds.prototype.OnResize = function ()
	{
		return true;
	};
	Cnds.prototype.IsFullscreen = function ()
	{
		return !!(document["mozFullScreen"] || document["webkitIsFullScreen"] || document["fullScreen"] || this.runtime.isNodeFullscreen);
	};
	Cnds.prototype.OnBackButton = function ()
	{
		return true;
	};
	Cnds.prototype.OnMenuButton = function ()
	{
		return true;
	};
	Cnds.prototype.OnSearchButton = function ()
	{
		return true;
	};
	Cnds.prototype.IsMetered = function ()
	{
		var connection = navigator["connection"] || navigator["mozConnection"] || navigator["webkitConnection"];
		if (!connection)
			return false;
		return connection["metered"];
	};
	Cnds.prototype.IsCharging = function ()
	{
		var battery = navigator["battery"] || navigator["mozBattery"] || navigator["webkitBattery"];
		if (!battery)
			return true;
		return battery["charging"];
	};
	Cnds.prototype.IsPortraitLandscape = function (p)
	{
		var current = (window.innerWidth <= window.innerHeight ? 0 : 1);
		return current === p;
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.Alert = function (msg)
	{
		if (!this.runtime.isDomFree)
			alert(msg.toString());
	};
	Acts.prototype.Close = function ()
	{
		if (this.runtime.isCocoonJs)
			CocoonJS["App"]["forceToFinish"]();
		else if (window["tizen"])
			window["tizen"]["application"]["getCurrentApplication"]()["exit"]();
		else if (navigator["app"] && navigator["app"]["exitApp"])
			navigator["app"]["exitApp"]();
		else if (navigator["device"] && navigator["device"]["exitApp"])
			navigator["device"]["exitApp"]();
		else if (!this.is_arcade && !this.runtime.isDomFree)
			window.close();
	};
	Acts.prototype.Focus = function ()
	{
		if (this.runtime.isNodeWebkit)
		{
			var win = window["nwgui"]["Window"]["get"]();
			win["focus"]();
		}
		else if (!this.is_arcade && !this.runtime.isDomFree)
			window.focus();
	};
	Acts.prototype.Blur = function ()
	{
		if (this.runtime.isNodeWebkit)
		{
			var win = window["nwgui"]["Window"]["get"]();
			win["blur"]();
		}
		else if (!this.is_arcade && !this.runtime.isDomFree)
			window.blur();
	};
	Acts.prototype.GoBack = function ()
	{
		if (navigator["app"] && navigator["app"]["backHistory"])
			navigator["app"]["backHistory"]();
		else if (!this.is_arcade && !this.runtime.isDomFree && window.back)
			window.back();
	};
	Acts.prototype.GoForward = function ()
	{
		if (!this.is_arcade && !this.runtime.isDomFree && window.forward)
			window.forward();
	};
	Acts.prototype.GoHome = function ()
	{
		if (!this.is_arcade && !this.runtime.isDomFree && window.home)
			window.home();
	};
	Acts.prototype.GoToURL = function (url, target)
	{
		if (this.runtime.isCocoonJs)
			CocoonJS["App"]["openURL"](url);
		else if (this.runtime.isEjecta)
			ejecta["openURL"](url);
		else if (this.runtime.isWinJS)
			Windows["System"]["Launcher"]["launchUriAsync"](new Windows["Foundation"]["Uri"](url));
		else if (navigator["app"] && navigator["app"]["loadUrl"])
			navigator["app"]["loadUrl"](url, { "openExternal": true });
		else if (!this.is_arcade && !this.runtime.isDomFree)
		{
			if (target === 2 && !this.is_arcade)		// top
				window.top.location = url;
			else if (target === 1 && !this.is_arcade)	// parent
				window.parent.location = url;
			else					// self
				window.location = url;
		}
	};
	Acts.prototype.GoToURLWindow = function (url, tag)
	{
		if (this.runtime.isCocoonJs)
			CocoonJS["App"]["openURL"](url);
		else if (this.runtime.isEjecta)
			ejecta["openURL"](url);
		else if (this.runtime.isWinJS)
			Windows["System"]["Launcher"]["launchUriAsync"](new Windows["Foundation"]["Uri"](url));
		else if (navigator["app"] && navigator["app"]["loadUrl"])
			navigator["app"]["loadUrl"](url, { "openExternal": true });
		else if (!this.is_arcade && !this.runtime.isDomFree)
			window.open(url, tag);
	};
	Acts.prototype.Reload = function ()
	{
		if (!this.is_arcade && !this.runtime.isDomFree)
			window.location.reload();
	};
	var firstRequestFullscreen = true;
	var crruntime = null;
	function onFullscreenError()
	{
		if (typeof jQuery !== "undefined")
		{
			crruntime["setSize"](jQuery(window).width(), jQuery(window).height());
		}
	};
	Acts.prototype.RequestFullScreen = function (stretchmode)
	{
		if (this.runtime.isDomFree)
		{
			cr.logexport("[Construct 2] Requesting fullscreen is not supported on this platform - the request has been ignored");
			return;
		}
		if (stretchmode >= 2)
			stretchmode += 1;
		if (stretchmode === 6)
			stretchmode = 2;
		if (this.runtime.isNodeWebkit)
		{
			if (!this.runtime.isNodeFullscreen)
			{
				window["nwgui"]["Window"]["get"]()["enterFullscreen"]();
				this.runtime.isNodeFullscreen = true;
				this.runtime.fullscreen_scaling = (stretchmode >= 2 ? stretchmode : 0);
			}
		}
		else
		{
			if (document["mozFullScreen"] || document["webkitIsFullScreen"] || !!document["msFullscreenElement"] || document["fullScreen"])
			{
				return;
			}
			this.runtime.fullscreen_scaling = (stretchmode >= 2 ? stretchmode : 0);
			var elem = this.runtime.canvasdiv || this.runtime.canvas;
			if (firstRequestFullscreen)
			{
				firstRequestFullscreen = false;
				crruntime = this.runtime;
				elem.addEventListener("mozfullscreenerror", onFullscreenError);
				elem.addEventListener("webkitfullscreenerror", onFullscreenError);
				elem.addEventListener("msfullscreenerror", onFullscreenError);
				elem.addEventListener("fullscreenerror", onFullscreenError);
			}
			if (!cr.is_undefined(elem["requestFullscreen"]))
				elem["requestFullscreen"]();
			else if (!cr.is_undefined(elem["webkitRequestFullScreen"]))
			{
				if (typeof Element !== "undefined" && typeof Element["ALLOW_KEYBOARD_INPUT"] !== "undefined")
					elem["webkitRequestFullScreen"](Element["ALLOW_KEYBOARD_INPUT"]);
				else
					elem["webkitRequestFullScreen"]();
			}
			else if (!cr.is_undefined(elem["mozRequestFullScreen"]))
				elem["mozRequestFullScreen"]();
			else if (!cr.is_undefined(elem["msRequestFullscreen"]))
				elem["msRequestFullscreen"]();
		}
	};
	Acts.prototype.CancelFullScreen = function ()
	{
		if (this.runtime.isDomFree)
		{
			cr.logexport("[Construct 2] Exiting fullscreen is not supported on this platform - the request has been ignored");
			return;
		}
		if (this.runtime.isNodeWebkit)
		{
			if (this.runtime.isNodeFullscreen)
			{
				window["nwgui"]["Window"]["get"]()["leaveFullscreen"]();
				this.runtime.isNodeFullscreen = false;
			}
		}
		else
		{
			if (!cr.is_undefined(document["exitFullscreen"]))
				document["exitFullscreen"]();
			else if (!cr.is_undefined(document["webkitCancelFullScreen"]))
				document["webkitCancelFullScreen"]();
			else if (!cr.is_undefined(document["mozCancelFullScreen"]))
				document["mozCancelFullScreen"]();
			else if (!cr.is_undefined(document["msExitFullscreen"]))
				document["msExitFullscreen"]();
		}
	};
	Acts.prototype.Vibrate = function (pattern_)
	{
		try {
			var arr = pattern_.split(",");
			var i, len;
			for (i = 0, len = arr.length; i < len; i++)
			{
				arr[i] = parseInt(arr[i], 10);
			}
			if (navigator["vibrate"])
				navigator["vibrate"](arr);
			else if (navigator["mozVibrate"])
				navigator["mozVibrate"](arr);
			else if (navigator["webkitVibrate"])
				navigator["webkitVibrate"](arr);
			else if (navigator["msVibrate"])
				navigator["msVibrate"](arr);
		}
		catch (e) {}
	};
	Acts.prototype.InvokeDownload = function (url_, filename_)
	{
		var a = document.createElement("a");
		if (typeof a["download"] === "undefined")
		{
			window.open(url_);
		}
		else
		{
			var body = document.getElementsByTagName("body")[0];
			a.textContent = filename_;
			a.href = url_;
			a["download"] = filename_;
			body.appendChild(a);
			var clickEvent = document.createEvent("MouseEvent");
			clickEvent.initMouseEvent("click", true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);
			a.dispatchEvent(clickEvent);
			body.removeChild(a);
		}
	};
	Acts.prototype.InvokeDownloadString = function (str_, mimetype_, filename_)
	{
		var datauri = "data:" + mimetype_ + "," + encodeURIComponent(str_);
		var a = document.createElement("a");
		if (typeof a["download"] === "undefined")
		{
			window.open(datauri);
		}
		else
		{
			var body = document.getElementsByTagName("body")[0];
			a.textContent = filename_;
			a.href = datauri;
			a["download"] = filename_;
			body.appendChild(a);
			var clickEvent = document.createEvent("MouseEvent");
			clickEvent.initMouseEvent("click", true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);
			a.dispatchEvent(clickEvent);
			body.removeChild(a);
		}
	};
	Acts.prototype.ConsoleLog = function (type_, msg_)
	{
		if (typeof console === "undefined")
			return;
		if (type_ === 0 && console.log)
			console.log(msg_.toString());
		if (type_ === 1 && console.warn)
			console.warn(msg_.toString());
		if (type_ === 2 && console.error)
			console.error(msg_.toString());
	};
	Acts.prototype.ConsoleGroup = function (name_)
	{
		if (console && console.group)
			console.group(name_);
	};
	Acts.prototype.ConsoleGroupEnd = function ()
	{
		if (console && console.groupEnd)
			console.groupEnd();
	};
	Acts.prototype.ExecJs = function (js_)
	{
		try {
			if (eval)
				eval(js_);
		}
		catch (e)
		{
			if (console && console.error)
				console.error("Error executing Javascript: ", e);
		}
	};
	var orientations = [
		"portrait",
		"landscape",
		"portrait-primary",
		"portrait-secondary",
		"landscape-primary",
		"landscape-secondary"
	];
	Acts.prototype.LockOrientation = function (o)
	{
		o = Math.floor(o);
		if (o < 0 || o >= orientations.length)
			return;
		this.runtime.autoLockOrientation = false;
		var orientation = orientations[o];
		if (screen["lockOrientation"])
			screen["lockOrientation"](orientation);
		else if (screen["webkitLockOrientation"])
			screen["webkitLockOrientation"](orientation);
		else if (screen["mozLockOrientation"])
			screen["mozLockOrientation"](orientation);
		else if (screen["msLockOrientation"])
			screen["msLockOrientation"](orientation);
	};
	Acts.prototype.UnlockOrientation = function ()
	{
		this.runtime.autoLockOrientation = false;
		if (screen["unlockOrientation"])
			screen["unlockOrientation"]();
		else if (screen["webkitUnlockOrientation"])
			screen["webkitUnlockOrientation"]();
		else if (screen["mozUnlockOrientation"])
			screen["mozUnlockOrientation"]();
		else if (screen["msUnlockOrientation"])
			screen["msUnlockOrientation"]();
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.URL = function (ret)
	{
		ret.set_string(this.runtime.isDomFree ? "" : window.location.toString());
	};
	Exps.prototype.Protocol = function (ret)
	{
		ret.set_string(this.runtime.isDomFree ? "" : window.location.protocol);
	};
	Exps.prototype.Domain = function (ret)
	{
		ret.set_string(this.runtime.isDomFree ? "" : window.location.hostname);
	};
	Exps.prototype.PathName = function (ret)
	{
		ret.set_string(this.runtime.isDomFree ? "" : window.location.pathname);
	};
	Exps.prototype.Hash = function (ret)
	{
		ret.set_string(this.runtime.isDomFree ? "" : window.location.hash);
	};
	Exps.prototype.Referrer = function (ret)
	{
		ret.set_string(this.runtime.isDomFree ? "" : document.referrer);
	};
	Exps.prototype.Title = function (ret)
	{
		ret.set_string(this.runtime.isDomFree ? "" : document.title);
	};
	Exps.prototype.Name = function (ret)
	{
		ret.set_string(this.runtime.isDomFree ? "" : navigator.appName);
	};
	Exps.prototype.Version = function (ret)
	{
		ret.set_string(this.runtime.isDomFree ? "" : navigator.appVersion);
	};
	Exps.prototype.Language = function (ret)
	{
		if (navigator && navigator.language)
			ret.set_string(navigator.language);
		else
			ret.set_string("");
	};
	Exps.prototype.Platform = function (ret)
	{
		ret.set_string(this.runtime.isDomFree ? "" : navigator.platform);
	};
	Exps.prototype.Product = function (ret)
	{
		if (navigator && navigator.product)
			ret.set_string(navigator.product);
		else
			ret.set_string("");
	};
	Exps.prototype.Vendor = function (ret)
	{
		if (navigator && navigator.vendor)
			ret.set_string(navigator.vendor);
		else
			ret.set_string("");
	};
	Exps.prototype.UserAgent = function (ret)
	{
		ret.set_string(this.runtime.isDomFree ? "" : navigator.userAgent);
	};
	Exps.prototype.QueryString = function (ret)
	{
		ret.set_string(this.runtime.isDomFree ? "" : window.location.search);
	};
	Exps.prototype.QueryParam = function (ret, paramname)
	{
		if (this.runtime.isDomFree)
		{
			ret.set_string("");
			return;
		}
		var match = RegExp('[?&]' + paramname + '=([^&]*)').exec(window.location.search);
		if (match)
			ret.set_string(decodeURIComponent(match[1].replace(/\+/g, ' ')));
		else
			ret.set_string("");
	};
	Exps.prototype.Bandwidth = function (ret)
	{
		var connection = navigator["connection"] || navigator["mozConnection"] || navigator["webkitConnection"];
		if (!connection)
			ret.set_float(Number.POSITIVE_INFINITY);
		else
			ret.set_float(connection["bandwidth"]);
	};
	Exps.prototype.BatteryLevel = function (ret)
	{
		var battery = navigator["battery"] || navigator["mozBattery"] || navigator["webkitBattery"];
		if (!battery)
			ret.set_float(1);
		else
			ret.set_float(battery["level"]);
	};
	Exps.prototype.BatteryTimeLeft = function (ret)
	{
		var battery = navigator["battery"] || navigator["mozBattery"] || navigator["webkitBattery"];
		if (!battery)
			ret.set_float(Number.POSITIVE_INFINITY);
		else
			ret.set_float(battery["dischargingTime"]);
	};
	Exps.prototype.ExecJS = function (ret, js_)
	{
		if (!eval)
		{
			ret.set_any(0);
			return;
		}
		var result = 0;
		try {
			result = eval(js_);
		}
		catch (e)
		{
			if (console && console.error)
				console.error("Error executing Javascript: ", e);
		}
		if (typeof result === "number")
			ret.set_any(result);
		else if (typeof result === "string")
			ret.set_any(result);
		else if (typeof result === "boolean")
			ret.set_any(result ? 1 : 0);
		else
			ret.set_any(0);
	};
	Exps.prototype.ScreenWidth = function (ret)
	{
		ret.set_int(screen.width);
	};
	Exps.prototype.ScreenHeight = function (ret)
	{
		ret.set_int(screen.height);
	};
	Exps.prototype.DevicePixelRatio = function (ret)
	{
		ret.set_float(this.runtime.devicePixelRatio);
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.Button = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Button.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
		if (this.runtime.isDomFree)
		{
			cr.logexport("[Construct 2] Button plugin not supported on this platform - the object will not be created");
			return;
		}
		this.isCheckbox = (this.properties[0] === 1);
		this.inputElem = document.createElement("input");
		if (this.isCheckbox)
			this.elem = document.createElement("label");
		else
			this.elem = this.inputElem;
		this.labelText = null;
		this.inputElem.type = (this.isCheckbox ? "checkbox" : "button");
		this.inputElem.id = this.properties[6];
		jQuery(this.elem).appendTo(this.runtime.canvasdiv ? this.runtime.canvasdiv : "body");
		if (this.isCheckbox)
		{
			jQuery(this.inputElem).appendTo(this.elem);
			this.labelText = document.createTextNode(this.properties[1]);
			jQuery(this.elem).append(this.labelText);
			this.inputElem.checked = (this.properties[7] !== 0);
			jQuery(this.elem).css("font-family", "sans-serif");
			jQuery(this.elem).css("display", "inline-block");
			jQuery(this.elem).css("color", "black");
		}
		else
			this.inputElem.value = this.properties[1];
		this.elem.title = this.properties[2];
		this.inputElem.disabled = (this.properties[4] === 0);
		this.autoFontSize = (this.properties[5] !== 0);
		this.element_hidden = false;
		if (this.properties[3] === 0)
		{
			jQuery(this.elem).hide();
			this.visible = false;
			this.element_hidden = true;
		}
		this.inputElem.onclick = (function (self) {
			return function(e) {
				e.stopPropagation();
				self.runtime.isInUserInputEvent = true;
				self.runtime.trigger(cr.plugins_.Button.prototype.cnds.OnClicked, self);
				self.runtime.isInUserInputEvent = false;
			};
		})(this);
		this.elem.addEventListener("touchstart", function (e) {
			e.stopPropagation();
		}, false);
		this.elem.addEventListener("touchmove", function (e) {
			e.stopPropagation();
		}, false);
		this.elem.addEventListener("touchend", function (e) {
			e.stopPropagation();
		}, false);
		jQuery(this.elem).mousedown(function (e) {
			e.stopPropagation();
		});
		jQuery(this.elem).mouseup(function (e) {
			e.stopPropagation();
		});
		jQuery(this.elem).keydown(function (e) {
			e.stopPropagation();
		});
		jQuery(this.elem).keyup(function (e) {
			e.stopPropagation();
		});
		this.lastLeft = 0;
		this.lastTop = 0;
		this.lastRight = 0;
		this.lastBottom = 0;
		this.lastWinWidth = 0;
		this.lastWinHeight = 0;
		this.updatePosition(true);
		this.runtime.tickMe(this);
	};
	instanceProto.saveToJSON = function ()
	{
		var o = {
			"tooltip": this.elem.title,
			"disabled": !!this.inputElem.disabled
		};
		if (this.isCheckbox)
		{
			o["checked"] = !!this.inputElem.checked;
			o["text"] = this.labelText.nodeValue;
		}
		else
		{
			o["text"] = this.elem.value;
		}
		return o;
	};
	instanceProto.loadFromJSON = function (o)
	{
		this.elem.title = o["tooltip"];
		this.inputElem.disabled = o["disabled"];
		if (this.isCheckbox)
		{
			this.inputElem.checked = o["checked"];
			this.labelText.nodeValue = o["text"];
		}
		else
		{
			this.elem.value = o["text"];
		}
	};
	instanceProto.onDestroy = function ()
	{
		if (this.runtime.isDomFree)
			return;
		jQuery(this.elem).remove();
		this.elem = null;
	};
	instanceProto.tick = function ()
	{
		this.updatePosition();
	};
	var last_canvas_offset = null;
	var last_checked_tick = -1;
	instanceProto.updatePosition = function (first)
	{
		if (this.runtime.isDomFree)
			return;
		var left = this.layer.layerToCanvas(this.x, this.y, true);
		var top = this.layer.layerToCanvas(this.x, this.y, false);
		var right = this.layer.layerToCanvas(this.x + this.width, this.y + this.height, true);
		var bottom = this.layer.layerToCanvas(this.x + this.width, this.y + this.height, false);
		if (!this.visible || !this.layer.visible || right <= 0 || bottom <= 0 || left >= this.runtime.width || top >= this.runtime.height)
		{
			if (!this.element_hidden)
				jQuery(this.elem).hide();
			this.element_hidden = true;
			return;
		}
		if (left < 1)
			left = 1;
		if (top < 1)
			top = 1;
		if (right >= this.runtime.width)
			right = this.runtime.width - 1;
		if (bottom >= this.runtime.height)
			bottom = this.runtime.height - 1;
		var curWinWidth = window.innerWidth;
		var curWinHeight = window.innerHeight;
		if (!first && this.lastLeft === left && this.lastTop === top && this.lastRight === right && this.lastBottom === bottom && this.lastWinWidth === curWinWidth && this.lastWinHeight === curWinHeight)
		{
			if (this.element_hidden)
			{
				jQuery(this.elem).show();
				this.element_hidden = false;
			}
			return;
		}
		this.lastLeft = left;
		this.lastTop = top;
		this.lastRight = right;
		this.lastBottom = bottom;
		this.lastWinWidth = curWinWidth;
		this.lastWinHeight = curWinHeight;
		if (this.element_hidden)
		{
			jQuery(this.elem).show();
			this.element_hidden = false;
		}
		var offx = Math.round(left) + jQuery(this.runtime.canvas).offset().left;
		var offy = Math.round(top) + jQuery(this.runtime.canvas).offset().top;
		jQuery(this.elem).css("position", "absolute");
		jQuery(this.elem).offset({left: offx, top: offy});
		jQuery(this.elem).width(Math.round(right - left));
		jQuery(this.elem).height(Math.round(bottom - top));
		if (this.autoFontSize)
			jQuery(this.elem).css("font-size", ((this.layer.getScale(true) / this.runtime.devicePixelRatio) - 0.2) + "em");
	};
	instanceProto.draw = function(ctx)
	{
	};
	instanceProto.drawGL = function(glw)
	{
	};
	function Cnds() {};
	Cnds.prototype.OnClicked = function ()
	{
		return true;
	};
	Cnds.prototype.IsChecked = function ()
	{
		return this.isCheckbox && this.inputElem.checked;
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.SetText = function (text)
	{
		if (this.runtime.isDomFree)
			return;
		if (this.isCheckbox)
			this.labelText.nodeValue = text;
		else
			this.elem.value = text;
	};
	Acts.prototype.SetTooltip = function (text)
	{
		if (this.runtime.isDomFree)
			return;
		this.elem.title = text;
	};
	Acts.prototype.SetVisible = function (vis)
	{
		if (this.runtime.isDomFree)
			return;
		this.visible = (vis !== 0);
	};
	Acts.prototype.SetEnabled = function (en)
	{
		if (this.runtime.isDomFree)
			return;
		this.inputElem.disabled = (en === 0);
	};
	Acts.prototype.SetFocus = function ()
	{
		if (this.runtime.isDomFree)
			return;
		this.inputElem.focus();
	};
	Acts.prototype.SetBlur = function ()
	{
		if (this.runtime.isDomFree)
			return;
		this.inputElem.blur();
	};
	Acts.prototype.SetCSSStyle = function (p, v)
	{
		if (this.runtime.isDomFree)
			return;
		jQuery(this.elem).css(p, v);
	};
	Acts.prototype.SetChecked = function (c)
	{
		if (this.runtime.isDomFree || !this.isCheckbox)
			return;
		this.inputElem.checked = (c === 1);
	};
	Acts.prototype.ToggleChecked = function ()
	{
		if (this.runtime.isDomFree || !this.isCheckbox)
			return;
		this.inputElem.checked = !this.inputElem.checked;
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	pluginProto.exps = new Exps();
}());
;
;
var lastCSS = "";
var importList = [];
function importcssfile(filename){
	if (importList.indexOf(filename)==-1){ //Only imports if file of same name not already imported
		var fileref=document.createElement("link")
		fileref.setAttribute("rel", "stylesheet")
		fileref.setAttribute("type", "text/css")
		fileref.setAttribute("href", filename)
		document.getElementsByTagName("head")[0].appendChild(fileref)
		importList.push(filename)
	}
};
if(!Array.prototype.indexOf) {
    Array.prototype.indexOf = function(what, i) {
        i = i || 0;
        var L = this.length;
        while (i < L) {
            if(this[i] === what) return i;
            ++i;
        }
        return -1;
    };
};
function removecssfile(filename){
	var removeList=document.getElementsByTagName("link")
	for (var i=removeList.length; i>=0; i--){ //search backwards within nodelist for matching elements to remove
		if (removeList[i] && removeList[i].getAttribute("href")!=null && removeList[i].getAttribute("href").indexOf(filename)!=-1)
		removeList[i].parentNode.removeChild(removeList[i]) //remove element by calling parentNode.removeChild()
	}
	importList.splice(importList.indexOf(filename), 1);
};
cr.plugins_.CSS_import = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.CSS_import.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
		if (this.properties[0] != ""){
			importcssfile(this.properties[0]);
			lastCSS = this.properties[0];
		}
	};
	instanceProto.onDestroy = function ()
	{
	};
	instanceProto.draw = function(ctx)
	{
	};
	instanceProto.drawGL = function(glw)
	{
	};
	pluginProto.cnds = {};
	var cnds = pluginProto.cnds;
	cnds.CompareCSS = function (text, case_)
	{
			return this.properties[0] === text;
	};
	pluginProto.acts = {};
	var acts = pluginProto.acts;
	acts.SetCSS = function (setName)
	{
		importcssfile(setName);
		lastCSS = setName;
	};
	acts.RemCSS = function (remName)
	{
		removecssfile(remName);
	};
	pluginProto.exps = {};
	var exps = pluginProto.exps;
	exps.GetCSS = function (ret)
	{
		if (lastCSS != ""){
			ret.set_string(lastCSS);
		} else if (this.properties[0] != ""){
			ret.set_string(this.properties[0]);
		} else {
			ret.set_string("");
		}
	};
}());
var FB_Properties = {};
	var User  = {};
	var FB_API  = {};
	FB_API["initialize run"] = "No";
	FB_API["API READY"] = "No";
	FB_API["URL GRAPHAPI"] = "https://graph.facebook.com/";
        FB_API["URL GRAPH ME FIELDS"] = "?fields=website,work,third_party_id,verified,religion,significant_other,timezone,relationship_status,quotes,languages,last_name,link,locale,location,middle_name,name,name_format,political,installed,is_verified,id,about,age_range,bio,birthday,context,cover,currency,devices,education,email,favorite_athletes,favorite_teams,first_name,gender,hometown,inspirational_people&access_token=";
        FB_API["API Error Code"] = "Not Ready";
                   FB_API["API Error Message"] = "Not Ready";
                   FB_API["API Error Type"] = "Not Ready";
	FB_API["APP TOKEN"] = "Unsecure";
	FB_API["GRAPH API DATA"] = "None";
User_Reset_Vars();
;
;
cr.plugins_.Facebook2_1 = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Facebook2_1.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
	 if(FB_API["initialize run"] != "Yes")
	 {
	  FB_API["initialize run"] = "Yes";
	  if(this.properties[47] == 1)
	  {
	  if(this.properties[0] == 0){FB_Properties["API Type"] = "Web";console.log("Web API Chosen.");}
	   else if(this.properties[0] == 1){FB_Properties["API Type"] = "PhoneGap";console.log("PhoneGap API Chosen.");}
	   else if(this.properties[0] == 2){FB_Properties["API Type"] = "CocoonJS";console.log("CocoonJS API Chosen.");}
	  }
	  else if(this.properties[47] == 0)
	  {
	  if (document.location.protocol == 'file:') {FB_Properties["API Type"] = "PhoneGap";console.log("PhoneGap API Chosen.");}
	  else{FB_Properties["API Type"] = "Web";console.log("Web API Chosen.");}
	  }
	  if (FB_Properties["API Type"] == "Web")
	  {
	   FB_API["Runtime"] = this.runtime;
	   FB_API["Instance"] = this;
	   FB_API["API Layer"] = this.layer;
	   if (this.properties[1] != "" && this.properties[2] != "")
	   {
	    console.log("API -- (App Token) Finished loading App Access Token. Reminder, this better be a secure app(mobile or you know and trust all of the users.");
	    jQuery.ajax( {url: 'https://graph.facebook.com/oauth/access_token?client_id='+this.properties[1]+'&client_secret='+this.properties[2]+'&grant_type=client_credentials', dataType: 'text', crossDomain: true
            , success: function( datapic )
            {datapic = datapic.split("=");
	     FB_API["APP TOKEN"] = datapic[1];
		console.log("API -- (App Token) "+datapic[1]);}
            , error: function( datapic ) {
	     FB_API["API Error Code"] = "API";
             FB_API["API Error Message"] = datapic;
             FB_API["API Error Type"] = "App Token";
	     console.log("API -- (App Token) Error "+datapic);
	     }
            });
	    }
	   Web_Language_Set(this.properties[3]);//Load the language to use from the Edit Time settings.
	   Web_Permission_Set(this.properties);//Load the permissions to request from the Edit Time settings.
	   Web_API_Set(this.properties);//Load the SDK properties from the Edit Time settings.
	   Web_Load_API();//Load the SDK asynchronously
	   this.elem = document.createElement("div");
	   this.elem.innerHTML = '';
           this.elem.id = this.uid;
	   jQuery(this.elem).appendTo("body");
	  }
	  else if (FB_Properties["API Type"] == "PhoneGap")
	  {
	   FB_API["Runtime"] = this.runtime;
	   FB_API["Instance"] = this;
	   FB_API["API Layer"] = this.layer;
	   FB_Properties["App ID"] =   this.properties[1];
	   FB_Properties["App Secret"] =  this.properties[2];
	   Web_Permission_Set(this.properties);//Load the permissions to request from the Edit Time settings.
	   Web_API_Set(this.properties);//Load the SDK properties from the Edit Time settings.
	   if (this.properties[1] != "" && this.properties[2] != "")
	   {
	    console.log("API -- (App Token) Finished loading App Access Token. Reminder, this better be a secure app(mobile or you know and trust all of the users.");
	    jQuery.ajax( {url: 'https://graph.facebook.com/oauth/access_token?client_id='+this.properties[1]+'&client_secret='+this.properties[2]+'&grant_type=client_credentials', dataType: 'text', crossDomain: true
            , success: function( datapic )
            {datapic = datapic.split("=");
	     FB_API["APP TOKEN"] = datapic[1];
		console.log("API -- (App Token) "+datapic[1]);}
            , error: function( datapic ) {
	     FB_API["API Error Code"] = "API";
             FB_API["API Error Message"] = datapic;
             FB_API["API Error Type"] = "App Token";
	     console.log("API -- (App Token) Error "+datapic);
	     }
            });
	    }
	   FB_API["Runtime"].trigger(cr.plugins_.Facebook2_1.prototype.cnds.CON_API_ON_LOAD, FB_API["Instance"]);
	  }
	  else if (FB_Properties["API Type"] == "CocoonJS")
	  {
	  }
	 }
	};
	instanceProto.onDestroy = function ()
	{
	};
	instanceProto.saveToJSON = function ()
	{
		return {
		};
	};
	instanceProto.loadFromJSON = function (o)
	{
	};
	instanceProto.tick = function ()
	{
	 this.updatePosition();
	};
	var last_canvas_offset = null;
	var last_checked_tick = -1;
	instanceProto.updatePosition = function (first)
	{
		if (this.runtime.isDomFree)
			return;
		var left = this.layer.layerToCanvas(this.x, this.y, true);
		var top = this.layer.layerToCanvas(this.x, this.y, false);
		var right = this.layer.layerToCanvas(this.x + this.width, this.y + this.height, true);
		var bottom = this.layer.layerToCanvas(this.x + this.width, this.y + this.height, false);
		var widthfactor = this.width > 0 ? 1 : -1;
		var heightfactor = this.height > 0 ? 1 : -1;
		var curWinWidth = window.innerWidth;
		var curWinHeight = window.innerHeight;
		if (!first && this.lastLeft === left && this.lastTop === top && this.lastRight === right && this.lastBottom === bottom && this.lastWinWidth === curWinWidth && this.lastWinHeight === curWinHeight)
		{
			return;
		}
		this.rotation2D = "-webkit-transform:rotate("+ 0
										+"deg);-webkit-transform-origin:0% 0%;"+
									"-moz-transform:rotate("+ 0
										+"deg);-moz-transform-origin:0% 0%;"+
									"-o-transform:rotate("+ 0
										+"deg);-o-transform-origin:0% 0%;";
		this.elem.style.cssText += ";"+/*this.CSSstyle +";"+*/ this.rotation2D/* + this.perspectiveValue + this.rotation3D*/;
		this.lastLeft = left;
		this.lastTop = top;
		this.lastRight = right;
		this.lastBottom = bottom;
		this.lastWinWidth = curWinWidth;
		this.lastWinHeight = curWinHeight;
		var offx = Math.round(left) + jQuery(this.runtime.canvas).offset().left;
		var offy = Math.round(top) + jQuery(this.runtime.canvas).offset().top;
		jQuery(this.elem).css("position", "absolute");
		jQuery(this.elem).offset({left: offx, top: offy});
		jQuery(this.elem).width(Math.round(right - left));
		jQuery(this.elem).height(Math.round(bottom - top));
		this.rotation2D = "-webkit-transform:rotate("+ this.angle * widthfactor * heightfactor*180/3.1416
										+"deg);-webkit-transform-origin:0% 0%;"+
									"-moz-transform:rotate("+ this.angle * widthfactor * heightfactor*180/3.1416
										+"deg);-moz-transform-origin:0% 0%;"+
									"-o-transform:rotate("+ this.angle * widthfactor * heightfactor*180/3.1416
										+"deg);-o-transform-origin:0% 0%;";
		this.elem.style.cssText += ";"+/*this.CSSstyle +";"+*/ this.rotation2D/* + this.perspectiveValue + this.rotation3D*/;
		if (this.autoFontSize)
			jQuery(this.elem).css("font-size", ((this.layer.getScale(true) / this.runtime.devicePixelRatio) - 0.2) + "em");
	};
	instanceProto.draw = function(ctx)
	{
	};
	instanceProto.drawGL = function (glw)
	{
	};
	function Cnds() {};
	Cnds.prototype.CON_API_ON_LOAD = function (){if(FB_API["Instance"].uid != this.uid){return false;}else {return true;}};
	Cnds.prototype.CON_USER_SUCCESS = function (){if(FB_API["Instance"].uid != this.uid){return false;}else {return true;}};
	Cnds.prototype.CON_USER_FAIL = function (){if(FB_API["Instance"].uid != this.uid){return false;}else {return true;}};
	Cnds.prototype.CON_USER_LOGIN = function (){if(FB_API["Instance"].uid != this.uid){return false;}else {return true;}};
	Cnds.prototype.CON_USER_LOGOUT = function (){if(FB_API["Instance"].uid != this.uid){return false;}else {return true;}};
	Cnds.prototype.Con_Phonegap_Login = function (){if(FB_API["Instance"].uid != this.uid){return false;}else {return true;}};
	Cnds.prototype.Con_Phonegap_Login_Fail = function (){if(FB_API["Instance"].uid != this.uid){return false;}else {return true;}};
	Cnds.prototype.Con_Social_Box_Fail = function (){if(FB_API["Instance"].uid != this.uid){return false;}else {return true;}};
	Cnds.prototype.Con_Login_Error = function (){if(FB_API["Instance"].uid != this.uid){return false;}else {return true;}};
	Cnds.prototype.Con_Story_Success = function (){if(FB_API["Instance"].uid != this.uid){return false;}else {return true;}};
	Cnds.prototype.Con_Story_Error = function (){if(FB_API["Instance"].uid != this.uid){return false;}else {return true;}};
	Cnds.prototype.Con_Dialog_App_Share = function (){if(FB_API["Instance"].uid != this.uid){return false;}else {return true;}};
	Cnds.prototype.Con_Dialog_App_Share_Error = function (){if(FB_API["Instance"].uid != this.uid){return false;}else {return true;}};
	Cnds.prototype.Con_Dialog_Mess_Share = function (){if(FB_API["Instance"].uid != this.uid){return false;}else {return true;}};
	Cnds.prototype.Con_Dialog_Mess_Share_Error = function (){if(FB_API["Instance"].uid != this.uid){return false;}else {return true;}};
	Cnds.prototype.Onpurchsuccess = function (){if(FB_API["Instance"].uid != this.uid){return false;}else {return true;}};
	Cnds.prototype.Onpurchfail = function (){if(FB_API["Instance"].uid != this.uid){return false;}else {return true;}};
	Cnds.prototype.fail_api_generic = function (){if(FB_API["Instance"].uid != this.uid){return false;}else {return true;}};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.Paydialog = function (quan,qmin,qmax,rid,pid,tc,purl)
	{
	 if (check_app_Type("Paydialog","Web") == false) {return;}
	 FB.ui(
         {
          method: 'pay',
	  action: 'purchaseitem',
            product: purl,
	    quantity: quan,
	    quantity_min: qmin,
	    quantity_max: qmax,
	    request_id: rid,
	    pricepoint_id: pid,
	    test_currency: tc
         },
         function(response) {
         if (response && !response.error_code)
	 {
	  pay_id = response.payment_id;
	  pay_amt = response.amount;
	  pay_curr = response.currency;
	  pay_quant = response.quantity;
	  pay_rid = response.request_id;
	  pay_stat = response.status;
          FB_API["Runtime"].trigger(cr.plugins_.Facebook2_1.prototype.cnds.Onpurchsuccess, FB_API["Instance"]);
         } else
	 {
          FB_API["API Error Code"] = "Actions";
          FB_API["API Error Message"] = "Paydialog has failed or been cancelled.";
          FB_API["API Error Type"] = "Paydialog";
	  FB_API["Runtime"].trigger(cr.plugins_.Facebook2_1.prototype.cnds.Onpurchfail, FB_API["Instance"]);
	  console.log("ACTS -- (Paydialog) Error using Pay Dialog");
         }
         });
	};
	Acts.prototype.Sendmessageurl = function (url)
	{
	if (check_app_Type("Sendmessageurl","Web") == false) {return;}
	FB.ui({method: 'send',
	         display: 'popup',
                 link: url,
              }, function(response)
	      {
		if (response && !response.error)
	          {
	           FB_API["Runtime"].trigger(cr.plugins_.Facebook2_1.prototype.cnds.Con_Dialog_Mess_Share_Error, FB_API["Instance"]);
	           console.log("ACTS -- (Sendmessageurl) Link shared successfully");
	          }
	       else
	          {
	           FB_API["API Error Code"] = "Actions";
                   FB_API["API Error Message"] = "User cancelled share request or an error occured.";
                   FB_API["API Error Type"] = "Sendshareurl";
		   FB_API["Runtime"].trigger(cr.plugins_.Facebook2_1.prototype.cnds.Con_Dialog_Mess_Share_Error, FB_API["Instance"]);
	           console.log("ACTS -- (Sendmessageurl) Error sharing Link");
	          }
	      });
	};
	Acts.prototype.Page_Share_App = function ()
	{
	if (check_app_Type("Page_Share_App","Web") == false) {return;}
	FB.ui({method: 'pagetab',
	         display: 'popup',
              }, function(response)
	      {
		if (response && !response.error)
	          {
	           FB_API["Runtime"].trigger(cr.plugins_.Facebook2_1.prototype.cnds.Con_Dialog_App_Share, FB_API["Instance"]);
	           console.log("ACTS -- (Page_Share_App) App shared successfully");
	          }
	       else
	          {
	           FB_API["API Error Code"] = "Actions";
                   FB_API["API Error Message"] = "User cancelled share request or an error occured.";
                   FB_API["API Error Type"] = "Sendshareurl";
		   FB_API["Runtime"].trigger(cr.plugins_.Facebook2_1.prototype.cnds.Con_Dialog_App_Share_Error, FB_API["Instance"]);
	           console.log("ACTS -- (Page_Share_App) Error sharing App");
	          }
	      });
	};
	Acts.prototype.Sendshareurl = function (ss_url)
	{
	if (check_app_Type("Sendshareurl","Web") == false) {return;}
	FB.ui({method: 'share',
	         display: 'popup',
                 href: ss_url,
              }, function(response)
	      {
		if (response && !response.error)
	          {
	           FB_API["Runtime"].trigger(cr.plugins_.Facebook2_1.prototype.cnds.Con_Story_Success, FB_API["Instance"]);
	           console.log("ACTS -- (Sendshareurl) URL shared successfully");
	          }
	       else
	          {
	           FB_API["API Error Code"] = "Actions";
                   FB_API["API Error Message"] = "User cancelled share request or an error occured.";
                   FB_API["API Error Type"] = "Sendshareurl";
		   FB_API["Runtime"].trigger(cr.plugins_.Facebook2_1.prototype.cnds.Con_Story_Error, FB_API["Instance"]);
	           console.log("ACTS -- (Sendshareurl) Error sharing URL");
	          }
	      });
	};
	Acts.prototype.Sendogstory = function (ss_title,ss_url)
	{
	 if (check_app_Type("Sendogstory","Web") == false) {return;}
	FB.ui({
		   display: 'popup',
                   method: 'share_open_graph',
              action_type: ss_title,
        action_properties: JSON.stringify({
            object:ss_url,
              })
              }, function(response)
	      {
		if (response && !response.error)
	          {
	           FB_API["Runtime"].trigger(cr.plugins_.Facebook2_1.prototype.cnds.Con_Story_Success, FB_API["Instance"]);
	           console.log("ACTS -- (Sendogstory) Open Graph shared successfully");
	          }
	       else
	          {
	           FB_API["API Error Code"] = "Actions";
                   FB_API["API Error Message"] = "User cancelled share request or an error occured.";
                   FB_API["API Error Type"] = "Sendogstory";
		   FB_API["Runtime"].trigger(cr.plugins_.Facebook2_1.prototype.cnds.Con_Story_Error, FB_API["Instance"]);
	           console.log("ACTS -- (Sendogstory) Error sharing Open Graph Story");
	          }
	      });
	};
	Acts.prototype.UI_Login = function ()
	{
	 if (check_app_Type("UI_Login","Web") == false) {return;}
	 FB.ui({
         method: 'oauth',
         scope: FB_API["scope"],
        },
        function(response) {
         if (response && !response.code) {
         console.log("ACTS -- (UI_Login) User has logged in");
        } else {
         console.log("ACTS -- (UI_Login) User login failed");
	 FB_API["API Error Code"] = "Actions";
         FB_API["API Error Message"] = "UI_Login been cancelled or an error occured.";
         FB_API["API Error Type"] = "UI_Login";
	 FB_API["Runtime"].trigger(cr.plugins_.Facebook2_1.prototype.cnds.Con_Login_Error, FB_API["Instance"]);
        }
        }
        );
	};
	Acts.prototype.Create_Login_Button = function (cr_logout,pic_rows,def_audience,pic_s)
	{
	if (check_app_Type("Create_Login_Button","Web") == false) {return;}
	if(cr_logout == 0){cr_logout = 'true';}else{cr_logout = 'false';}
	if(def_audience == 0){def_audience = 'everyone';}else if(def_audience == 1){def_audience = 'friends';}else{def_audience = 'only_me';}
	if(pic_s == 0){pic_s = 'small';}else if(pic_s == 1){pic_s = 'medium';}else if(pic_s == 2){pic_s = 'large';}else{pic_s = 'xlarge';}
	var faces_yes = false;
	if (pic_rows >=1) {faces_yes = true;}
	jQuery(this.elem).remove();
		this.elem = null;
	this.elem = document.createElement("div");
		 this.elem.style.overflowY = "auto";
		 jQuery(this.elem).css("position", "absolute");
		 this.elem.innerHTML = '<fb:login-button scope="'+FB_API["scope"]+'" default_audience="'+def_audience+'" max_rows="'+pic_rows+'" size="'+pic_s+'" show_faces="'+faces_yes+'" auto_logout_link="'+cr_logout+'"></fb:login-button>';
                 this.elem.id = this.uid;
		 jQuery(this.elem).appendTo("body");
		 var left = this.layer.layerToCanvas(this.x, this.y, true);
		var top = this.layer.layerToCanvas(this.x, this.y, false);
		var right = this.layer.layerToCanvas(this.x + this.width, this.y + this.height, true);
		var bottom = this.layer.layerToCanvas(this.x + this.width, this.y + this.height, false);
		var offx = Math.round(left) + jQuery(this.runtime.canvas).offset().left;
		var offy = Math.round(top) + jQuery(this.runtime.canvas).offset().top;
		var widthfactor = this.width > 0 ? 1 : -1;
		var heightfactor = this.height > 0 ? 1 : -1;
		jQuery(this.elem).css("position", "absolute");
		jQuery(this.elem).offset({left: offx, top: offy});
		jQuery(this.elem).width(Math.round(right - left));
		jQuery(this.elem).height(Math.round(bottom - top));
		this.rotation2D = "-webkit-transform:rotate("+ this.angle * widthfactor * heightfactor*180/3.1416
										+"deg);-webkit-transform-origin:0% 0%;"+
									"-moz-transform:rotate("+ this.angle * widthfactor * heightfactor*180/3.1416
										+"deg);-moz-transform-origin:0% 0%;"+
									"-o-transform:rotate("+ this.angle * widthfactor * heightfactor*180/3.1416
										+"deg);-o-transform-origin:0% 0%;";
		this.elem.style.cssText += ";"+/*this.CSSstyle +";"+*/ this.rotation2D/* + this.perspectiveValue + this.rotation3D*/;
		this.lastLeft = 0;
		 this.lastTop = 0;
		 this.lastRight = 0;
		 this.lastBottom = 0;
		 this.lastWinWidth = 0;
		 this.lastWinHeight = 0;
			this.runtime.tickMe(this);
	};
	Acts.prototype.Phonegap_Login = function (url_S,state)
	{if (check_app_Type("Phonegap_Login","PhoneGap") == false) {FB_API["Runtime"].trigger(cr.plugins_.Facebook2_1.prototype.cnds.Con_Phonegap_Login_Fail, FB_API["Instance"]);return;}
	 	ios_url = window.open("https://www.facebook.com/dialog/oauth?client_id="+FB_Properties["App ID"]+"&auth_type=rerequest&scope="+FB_API["scope"]+"&state="+state+"&response_type=token&redirect_uri="+url_S, '_blank', 'location=no,toolbar=no');
		ios_url.addEventListener('loadstart', function(e)
                { var url = e.url;
		var fburl = url.indexOf("facebook.com/login");
                var err = url.indexOf("error");
	        if (err >= 0 && fburl < 0)
                {console.log(url);ios_url.close();
                }
                var n = url.indexOf("#access_token=");
	        if (n >= 1){
                var tokensplit = url.split("#");
                var token_two = tokensplit[1].split("&");
                var accessToken1 = token_two[0].split("=");
                User["User AccessToken"] = accessToken1[1];
                console.log('InAppBrowser: loadstart event has fired with url: ' + User["User AccessToken"]);
		Fetch_User("me",User["User AccessToken"],function(FU_Status)
		     {if (FU_Status == "success") {FB_API["Runtime"].trigger(cr.plugins_.Facebook2_1.prototype.cnds.CON_USER_SUCCESS, FB_API["Instance"]);}
		      else{FB_API["Runtime"].trigger(cr.plugins_.Facebook2_1.prototype.cnds.CON_USER_FAIL, FB_API["Instance"]);}
		  });FB_API["Runtime"].trigger(cr.plugins_.Facebook2_1.prototype.cnds.CON_USER_LOGIN, FB_API["Instance"]);
                ios_url.close();
		}});
	};
	Acts.prototype.create_comment = function (color1,url1,num1,sort1)
	{if (check_app_Type("create_comment","Web") == false) {return;}
	 FB_API["Instance Layer"] = this.layer;
	 FB_API["Instance"] = this;
	 FB_API["Instance Runtime"] = this.runtime;
	 boxes_create_comment_box(color1,url1,num1,sort1);
	};
	Acts.prototype.Like_Button = function (action1,color1,url1,under1,layout1,tracking1,share1,show1)
	{if (check_app_Type("create_comment","Web") == false) {return;}
	 FB_API["Instance Layer"] = this.layer;
	 FB_API["Instance"] = this;
	 FB_API["Instance Runtime"] = this.runtime;
	 if (action1 == 0) {action1="like";}else{action1="recommend";}
	 if (color1 == 0) {color1="light";}else{color1="dark";}
	 if (under1 == 0) {under1=true;}else{under1=false;}
	 if (layout1 == 0) {layout1="standard";}
	 else if(layout1 == 1) {layout1="button_count";}
	 else if(layout1 == 2) {layout1="button";}
	 else if(layout1 == 3) {layout1="box__count";}
	 if (share1 == 0) {share1=true;}else{share1=false;}
	 if (show1 == 0) {show1=true;}else{show1=false;}
	 boxes_create_like_box(action1,color1,url1,under1,layout1,tracking1,share1,show1);
	};
	Acts.prototype.graphapi_call = function (url_get,check_type,apitoken)
	{web_call_Graphapi(url_get,check_type,apitoken);};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.UserVerified = function (ret){ret.set_string(              User["User Verified"]);};
	Exps.prototype.UserIDThirdParty = function (ret){ret.set_string(          User["User Third Party ID"]);};
	Exps.prototype.UserTimezone = function (ret){ret.set_string(              User["User timezone"]);};
	Exps.prototype.UserSignificantOtherName = function (ret){ret.set_string(  User["User Significant Other Name"]);};
	Exps.prototype.UserSignificantOtherID = function (ret){ret.set_string(    User["User Significant Other ID"]);};
	Exps.prototype.UserReligion = function (ret){ret.set_string(              User["User Religion"]);};
	Exps.prototype.UserRelationshipStatus = function (ret){ret.set_string(    User["User Relationship Status"]);};
	Exps.prototype.UserQuotes = function (ret){ret.set_string(                User["User Quotes"]);};
	Exps.prototype.UserAgeMax = function (ret){ret.set_string(                User["User Maximum Age Range"]);};
	Exps.prototype.UserAgeMin = function (ret){ret.set_string(                User["User Minimum Age Range"]);};
	Exps.prototype.UserIDUser = function (ret){ret.set_string(                User["User ID"]);};
	Exps.prototype.UserAccessToken = function (ret){ret.set_string(           User["User AccessToken"]);};
	Exps.prototype.UserAccessTokenExpires = function (ret){ret.set_string(    User["User AccessToken Expires"]);};
	Exps.prototype.UserLoginStatus = function (ret){ret.set_string(           User["User Login Status"]);};
	Exps.prototype.APIErrorCode = function (ret){ret.set_string(FB_API["API Error Code"]);};
	Exps.prototype.APIErrorMessage = function (ret){ret.set_string(FB_API["API Error Type"]);};
	Exps.prototype.APIErrorType = function (ret){ret.set_string(FB_API["API Error Message"]);};
	Exps.prototype.UserLink = function (ret){ret.set_string(                  User["User Link"]);};
	Exps.prototype.UserNameLast = function (ret){ret.set_string(              User["User Last Name"]);};
	Exps.prototype.UserLocale = function (ret){ret.set_string(                User["User Locale"]);};
	Exps.prototype.UserNameFormat = function (ret){ret.set_string(            User["User Name Format"]);};
	Exps.prototype.UserNameFull = function (ret){ret.set_string(              User["User Full Name"]);};
	Exps.prototype.UserPoliticsViews = function (ret){ret.set_string(         User["User Political Views"]);};
	Exps.prototype.UserIsVerified = function (ret){ret.set_string(            User["User Is Verified"]);};
	Exps.prototype.UserAppInstalled = function (ret){ret.set_string(          User["User App Installed"]);};
	Exps.prototype.UserBirthday = function (ret){ret.set_string(              User["User Birthday"]);};
	Exps.prototype.UserBio = function (ret){ret.set_string(                   User["User Bio"]);};
	Exps.prototype.UserCoverPicYOff = function (ret){ret.set_string(          User["User Cover Photo Y Offset"]);};
	Exps.prototype.UserCoverPicURL = function (ret){ret.set_string           (User["User Cover Photo URL"]);};
	Exps.prototype.UserCoverPicID = function (ret){ret.set_string(            User["User Cover Photo ID"]);};
	Exps.prototype.UserCurrencyOffset = function (ret){ret.set_string(        User["User Currency Offset"]);};
	Exps.prototype.UserUSDExchangeRateInverse = function (ret){ret.set_string(User["User Currency US Exchange Rate Inverse"]);};
	Exps.prototype.UserUSDExchangeRate = function (ret){ret.set_string(       User["User Currency US Exchange Rate"]);};
	Exps.prototype.UserCurrency = function (ret){ret.set_string(              User["User Currency"]);};
	Exps.prototype.UserGender = function (ret){ret.set_string(                User["User Gender"]);};
	Exps.prototype.UserNameFirst = function (ret){ret.set_string(             User["User First Name"]);};
	Exps.prototype.UserEmail = function (ret){ret.set_string(                 User["User Email"]);};
	Exps.prototype.UserAbout = function (ret){ret.set_string(                 User["User About Me"]);};
	Exps.prototype.UserNameMiddle = function (ret){ret.set_string(            User["User Middle Name"]);};
	Exps.prototype.UserPictureProfile = function (ret){ret.set_string(        User["User Profile Picture"]);};
	Exps.prototype.UserDevicesSize = function (ret){ret.set_int(           User["User Devices Size"]);};
	Exps.prototype.UserDevicesCurrHardware = function (ret){ret.set_string(   User["User Devices Current Hardware"]);};
	Exps.prototype.UserDevicesCurrOS = function (ret){ret.set_string(         User["User Devices Current OS"]);};
	Exps.prototype.UserEducationSize = function (ret){ret.set_int(         User["User Education Size"]);};
	Exps.prototype.UserEducationCurrentType = function (ret){ret.set_string(  User["User Education Current Type"]);};
	Exps.prototype.UserEducationCurrentName = function (ret){ret.set_string(  User["User Education Current Name"]);};
	Exps.prototype.UserEducationCurrentID = function (ret){ret.set_string    (User["User Education Current ID"]);};
	Exps.prototype.UserAthleteFavSize = function (ret){ret.set_int(        User["User Favorite Athletes Size"]);};
	Exps.prototype.UserAthleteFavCurrentID = function (ret){ret.set_string(   User["User Favorite Athletes Current ID"]);};
	Exps.prototype.UserAthleteFavCurrentName = function (ret){ret.set_string( User["User Favorite Athletes Current Name"]);};
	Exps.prototype.UserWebsite = function (ret){ret.set_string(               User["User Website"]);};
	Exps.prototype.UserHometownName = function (ret){ret.set_string(          User["User Hometown Name"]);};
	Exps.prototype.UserHometownID = function (ret){ret.set_string(            User["User Hometown ID"]);};
	Exps.prototype.UserPermissionsGranted = function (ret){ret.set_string(            User["User Granted Permissions"]);};
	Exps.prototype.AppAccessToken = function (ret){ret.set_string(            FB_API["APP TOKEN"]);};
	Exps.prototype.GraphAPICallData = function (ret){ret.set_string(            FB_API["GRAPH API DATA"]);};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.FacebookMod = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.FacebookMod.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	var fbAppID = "";
	var fbAppSecret = "";
	var fbReady = false;
	var fbLoggedIn = false;
	var fbUserID = "";
	var fbFullName = "";
	var fbEmail = "";
	var fbFirstName = "";
	var fbLastName = "";
	var fbRuntime = null;
	var fbInst = null;
	var fbScore = 0;
	var fbHiscoreName = "";
	var fbHiscoreUserID = 0;
	var fbRank = 0;
	var fbCanPublishStream = false;
	var fbCanPublishAction = false;
	var fbPerms = "";
	function onFBLogin()
	{
		if (!fbLoggedIn)
		{
			fbLoggedIn = true;
			fbRuntime.trigger(cr.plugins_.FacebookMod.prototype.cnds.OnLogIn, fbInst);
			FB.api('/me', function(response) {
							fbFullName = response["name"];
							fbFirstName = response["first_name"];
							fbLastName = response["last_name"];
							fbEmail = ""+response["email"];
							fbRuntime.trigger(cr.plugins_.FacebookMod.prototype.cnds.OnNameAvailable, fbInst);
						});
		}
	};
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
		if (this.runtime.isDomFree)
		{
			cr.logexport("[Construct 2] FacebookMod plugin not supported on this platform - the object will not be created");
			return;
		}
		fbAppID = this.properties[0];
		fbAppSecret = this.properties[1];
		fbRuntime = this.runtime;
		fbInst = this;
		window.fbAsyncInit = function() {
			var channelfile = '//' + location.hostname;
			var pname = location.pathname;
			if (pname.substr(pname.length - 1) !== '/')
				pname = pname.substr(0, pname.lastIndexOf('/') + 1);
			FB.init({
			  "appId"      : fbAppID,
			  "channelURL" : '//' + location.hostname + pname + 'channel.html',
			  "status"     : true,
			  "cookie"     : true,
			  "oauth"      : true,
			  "xfbml"      : false
			});
			fbReady = true;
			FB.Event.subscribe('auth.login', function(response) {
				fbUserID = response["authResponse"]["userID"];
;
				onFBLogin();
			});
			FB.Event.subscribe('auth.logout', function(response) {
				if (fbLoggedIn)
				{
					fbLoggedIn = false;
					fbFullName = "";
					fbFirstName = "";
					fbLastName = "";
					fbEmail = "";
					fbRuntime.trigger(cr.plugins_.FacebookMod.prototype.cnds.OnLogOut, fbInst);
				}
			});
			FB.getLoginStatus(function(response) {
				if (response["authResponse"])
				{
					fbUserID = response["authResponse"]["userID"];
;
					onFBLogin();
				}
			});
		};
		if (fbAppID.length)
		{
			(function(d){
				var js, id = 'facebook-jssdk'; if (d.getElementById(id)) {return;}
				js = d.createElement('script'); js.id = id; js.async = true;
				js.src = "//connect.facebook.net/en_US/all.js";
				d.getElementsByTagName('head')[0].appendChild(js);
			}(document));
		}
		else
;
	};
	instanceProto.onLayoutChange = function ()
	{
		if (this.runtime.isDomFree)
			return;
		if (fbLoggedIn)
			fbRuntime.trigger(cr.plugins_.FacebookMod.prototype.cnds.OnLogIn, fbInst);
		if (fbFullName.length)
			fbRuntime.trigger(cr.plugins_.FacebookMod.prototype.cnds.OnNameAvailable, fbInst);
	};
	function Cnds() {};
	Cnds.prototype.IsReady = function ()
	{
		return fbReady;
	};
	Cnds.prototype.IsLoggedIn = function ()
	{
		return fbLoggedIn;
	};
	Cnds.prototype.OnLogIn = function ()
	{
		return true;
	};
	Cnds.prototype.OnLogOut = function ()
	{
		return true;
	};
	Cnds.prototype.OnNameAvailable = function ()
	{
		return true;
	};
	Cnds.prototype.OnUserTopScoreAvailable = function ()
	{
		return true;
	};
	Cnds.prototype.OnHiscore = function ()
	{
		return true;
	};
	Cnds.prototype.OnScoreSubmitted = function ()
	{
		return true;
	};
	Cnds.prototype.OnFriendsInfoReceived = function () {
	    return true;
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.LogIn = function (perm_stream, perm_action)
	{
		if (this.runtime.isDomFree)
			return;
		fbCanPublishStream = (perm_stream === 1);
		fbCanPublishAction = (perm_action === 1);
		var perms = [];
		perms.push("email");
		if (fbCanPublishStream)
			perms.push("publish_stream");
		if (fbCanPublishAction)
			perms.push("publish_actions");
		var newperms = perms.join();
			fbPerms = newperms;
			FB.login(function(response) {
					if (response["authResponse"])
						onFBLogin();
				}, {scope: fbPerms});
	};
	Acts.prototype.LogOut = function ()
	{
		if (this.runtime.isDomFree)
			return;
		if (fbLoggedIn)
			FB.logout(function(response) {});
	};
	Acts.prototype.PromptWallPost = function ()
	{
		if (this.runtime.isDomFree)
			return;
		FB.ui({ "method": "feed" }, function(response) {
				if (!response || response.error)
					  console.error(response);
			});
	};
	Acts.prototype.PromptToShareApp = function (name_, caption_, description_, picture_)
	{
		if (this.runtime.isDomFree)
			return;
		FB.ui({
				"method": "feed",
				"link": "http://apps.facebook.com/" + fbAppID + "/",
				"picture": picture_,
				"name": name_,
				"caption": caption_,
				"description": description_
			  }, function(response) {
				  if (!response || response.error)
						  console.error(response);
			});
	};
	Acts.prototype.PromptToShareLink = function (url_, name_, caption_, description_, picture_)
	{
		if (this.runtime.isDomFree)
			return;
		FB.ui({
				"method": "feed",
				"link": url_,
				"picture": picture_,
				"name": name_,
				"caption": caption_,
				"description": description_
			  }, function(response) {
					if (!response || response.error)
						console.error(response);
			});
	};
	Acts.prototype.PublishToWall = function (message_)
	{
		if (this.runtime.isDomFree)
			return;
		var publish = {
			"method": 'stream.publish',
			"message": message_
		};
		FB.api('/me/feed', 'POST', publish, function(response) {
				if (!response || response.error)
					console.error(response);
			});
	};
	Acts.prototype.PublishLink = function (message_, url_, name_, caption_, description_, picture_)
	{
		if (this.runtime.isDomFree)
			return;
		var publish = {
				"method": 'stream.publish',
				"message": message_,
				"link": url_,
				"name": name_,
				"caption": caption_,
				"description": description_
			};
		if (picture_.length)
			publish["picture"] = picture_;
		FB.api('/me/feed', 'POST', publish, function(response) {
				if (!response || response.error)
					console.error(response);
			});
	};
	Acts.prototype.PublishScore = function (score_)
	{
		if (this.runtime.isDomFree)
			return;
		FB.api('/' + fbUserID + '/scores', 'POST', { "score": Math.floor(score_), "access_token": fbAppID + "|" + fbAppSecret }, function(response) {
			fbRuntime.trigger(cr.plugins_.FacebookMod.prototype.cnds.OnScoreSubmitted, fbInst);
			if (!response || response.error)
				console.error(response);
	   });
	};
	Acts.prototype.RequestUserHiscore = function ()
	{
		if (this.runtime.isDomFree)
			return;
		FB.api('/me/scores', 'GET', {}, function(response) {
			fbScore = 0;
			var arr = response["data"];
			if (!arr)
			{
				console.error("Request for user hi-score failed: " + response);
				return;
			}
			var i, len;
			for (i = 0, len = arr.length; i < len; i++)
			{
				if (arr[i]["score"] > fbScore)
					fbScore = arr[i]["score"];
			}
			fbRuntime.trigger(cr.plugins_.FacebookMod.prototype.cnds.OnUserTopScoreAvailable, fbInst);
			if (!response || response.error) {
			  console.error(response);
		    } else {
;
		    }
		});
	};
	Acts.prototype.RequestHiscores = function (n)
	{
		if (this.runtime.isDomFree)
			return;
		FB.api('/' + fbAppID + '/scores', 'GET', {}, function(response) {
			var arr = response["data"];
			if (!arr)
			{
				console.error("Hi-scores request failed: " + response);
				return;
			}
			arr.sort(function(a, b) {
				return b["score"] - a["score"];
			});
			var i = 0, len = Math.min(arr.length, n);
			for ( ; i < len; i++)
			{
				fbScore = arr[i]["score"];
				fbHiscoreName = arr[i]["user"]["name"];
				fbHiscoreUserID = arr[i]["user"]["id"];
				fbRank = i + 1;
				fbRuntime.trigger(cr.plugins_.FacebookMod.prototype.cnds.OnHiscore, fbInst);
			}
			if (!response || response.error) {
			  console.error(response);
		    } else {
;
		    }
		});
	};
	Acts.prototype.RequestUserFriendsInfo = function (randomize_results_param) {
	    var randomize_results = (randomize_results_param === 1);
	    var query = FB.Data.query("SELECT uid, name, pic FROM user " +
" where uid IN (" +
"  SELECT uid2 FROM friend WHERE uid1 = {0}) order by name ",
fbUserID);
	    query.wait(function (rows) {
	        FB.Array.forEach(rows, function (row) {
	            fbFriendsInfo.push([row.name, row.pic]);
	        });
	        if (randomize_results) {
	            fbFriendsInfo.sort(
                    function () {
	                return (Math.round(Math.random()) - 0.5);
	            });
	        }
	        fbRuntime.trigger(cr.plugins_.FacebookMod.prototype.cnds.OnFriendsInfoReceived, fbInst);
	    });
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.Email = function (ret)
	{
		ret.set_string(fbEmail);
	};
	Exps.prototype.FullName = function (ret)
	{
		ret.set_string(fbFullName);
	};
	Exps.prototype.FirstName = function (ret)
	{
		ret.set_string(fbFirstName);
	};
	Exps.prototype.LastName = function (ret)
	{
		ret.set_string(fbLastName);
	};
	Exps.prototype.Score = function (ret)
	{
		ret.set_int(fbScore);
	};
	Exps.prototype.HiscoreName = function (ret)
	{
		ret.set_string(fbHiscoreName);
	};
	Exps.prototype.HiscoreUserID = function (ret)
	{
		ret.set_int(fbHiscoreUserID);
	};
	Exps.prototype.HiscoreRank = function (ret)
	{
		ret.set_int(fbRank);
	};
	Exps.prototype.UserID = function (ret)
	{
		ret.set_float(parseFloat(fbUserID));
	};
	Exps.prototype.MyPic = function (ret)
	{
		ret.set_string("https://graph.facebook.com/" + fbUserID + "/picture?type=large");
	};
	Exps.prototype.FriendName = function (ret, friend_index)
	{
	    var name = "NO FRIEND IN THAT INDEX";
	    if (friend_index < fbFriendsInfo.length) {
	        name = fbFriendsInfo[friend_index][0];
	    }
	    ret.set_string(name);
	};
	Exps.prototype.FriendPicureURL = function (ret, friend_index) {
	    console.log("FriendPicure");
	    var pic_url = "NO FRIEND IN THAT INDEX";
	    console.log("fbFriendsInfo.length " + fbFriendsInfo.length);
	    if (friend_index < fbFriendsInfo.length) {
	        pic_url = fbFriendsInfo[friend_index][1];
	        console.log("fbFriendsInfo.length " + pic_url);
	    }
	    ret.set_string(pic_url);
	};
	Exps.prototype.NumberOfFriends = function (ret) {
	    ret.set_int(fbFriendsInfo.length);
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.Geolocation = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Geolocation.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	var geoSupported = ("geolocation" in navigator);
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
		this.watchId = -1;
		this.errorMsg = "";
		this.timestamp = 0;
		this.latitude = 0;
		this.longitude = 0;
		this.altitude = 0;
		this.accuracy = 0;
		this.altitudeaccuracy = 0;
		this.heading = 0;
		this.speed = 0;
		var self = this;
		this.updateFunction = function (pos)
		{
			self.timestamp = pos.timestamp;
			var coords = pos.coords;
			self.latitude = coords.latitude || 0;
			self.longitude = coords.longitude || 0;
			self.altitude = coords.altitude || 0;
			self.accuracy = coords.accuracy || 0;
			self.altitudeaccuracy = coords.altitudeAccuracy || 0;
			self.heading = coords.heading || 0;
			self.speed = coords.speed || 0;
			self.runtime.trigger(cr.plugins_.Geolocation.prototype.cnds.OnUpdate, self);
		};
		this.errorFunction = function (err)
		{
			self.errorMsg = err["message"] || "Unknown error";
			self.runtime.trigger(cr.plugins_.Geolocation.prototype.cnds.OnError, self);
		};
	};
	instanceProto.onDestroy = function ()
	{
	};
	instanceProto.saveToJSON = function ()
	{
		return {
		};
	};
	instanceProto.loadFromJSON = function (o)
	{
	};
	function Cnds() {};
	Cnds.prototype.IsSupported = function ()
	{
		return geoSupported;
	};
	Cnds.prototype.IsWatching = function ()
	{
		return this.watchId > -1;
	};
	Cnds.prototype.OnUpdate = function ()
	{
		return true;
	};
	Cnds.prototype.OnError = function ()
	{
		return true;
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.RequestLocation = function (accuracy_, timeout_, maxage_)
	{
		if (!geoSupported)
			return;
		navigator.geolocation.getCurrentPosition(this.updateFunction, this.errorFunction, {
			"enableHighAccuracy": (accuracy_ !== 0),
			"timeout": timeout_ * 1000,		// seconds to milliseconds
			"maximumAge": maxage_ * 1000
		});
	};
	Acts.prototype.WatchLocation = function (accuracy_, timeout_, maxage_)
	{
		if (!geoSupported)
			return;
		if (this.watchId > -1)
			navigator.geolocation.clearWatch(this.watchId);
		this.watchId = navigator.geolocation.watchPosition(this.updateFunction, this.errorFunction, {
			"enableHighAccuracy": (accuracy_ !== 0),
			"timeout": timeout_ * 1000,		// seconds to milliseconds
			"maximumAge": maxage_ * 1000
		});
	};
	Acts.prototype.StopWatching = function ()
	{
		if (this.watchId > -1)
			navigator.geolocation.clearWatch(this.watchId);
		this.watchId = -1;
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.ErrorMessage = function (ret)
	{
		ret.set_string(this.errorMsg);
	};
	Exps.prototype.Timestamp = function (ret)
	{
		ret.set_float(this.timestamp);
	};
	Exps.prototype.Latitude = function (ret)
	{
		ret.set_float(this.latitude);
	};
	Exps.prototype.Longitude = function (ret)
	{
		ret.set_float(this.longitude);
	};
	Exps.prototype.Altitude = function (ret)
	{
		ret.set_float(this.altitude);
	};
	Exps.prototype.Accuracy = function (ret)
	{
		ret.set_float(this.accuracy);
	};
	Exps.prototype.AltitudeAccuracy = function (ret)
	{
		ret.set_float(this.altitudeaccuracy);
	};
	Exps.prototype.Heading = function (ret)
	{
		ret.set_float(this.heading);
	};
	Exps.prototype.Speed = function (ret)
	{
		ret.set_float(this.speed);
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.HTML_Div = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.HTML_Div.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
		this.divloaded=0;
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
		this.elem = document.createElement("div");
		this.elem.innerHTML=this.properties[1];
		this.elem.style.cssText=this.properties[2];
		jQuery(this.elem).appendTo("body");
		if (this.properties[0] === 0)
		{
			jQuery(this.elem).hide();
			this.visible = false;
		}
		this.updatePosition();
		this.runtime.tickMe(this);
	};
	instanceProto.onDestroy = function ()
	{
		jQuery(this.elem).remove();
		this.elem = null;
	};
	instanceProto.tick = function ()
	{
		this.updatePosition();
	};
	instanceProto.updatePosition = function ()
	{
		var left = this.layer.layerToCanvas(this.x, this.y, true);
		var top = this.layer.layerToCanvas(this.x, this.y, false);
		var right = this.layer.layerToCanvas(this.x + this.width, this.y + this.height, true);
		var bottom = this.layer.layerToCanvas(this.x + this.width, this.y + this.height, false);
		if (!this.visible || !this.layer.visible || right <= 0 || bottom <= 0 || left >= this.runtime.width || top >= this.runtime.height)
		{
			jQuery(this.elem).hide();
			return;
		}
		if (left < 1)
			left = 1;
		if (top < 1)
			top = 1;
		if (right >= this.runtime.width)
			right = this.runtime.width - 1;
		if (bottom >= this.runtime.height)
			bottom = this.runtime.height - 1;
		jQuery(this.elem).show();
		var offx = left + jQuery(this.runtime.canvas).offset().left;
		var offy = top + jQuery(this.runtime.canvas).offset().top;
		jQuery(this.elem).offset({left: offx, top: offy});
		jQuery(this.elem).width(right - left);
		jQuery(this.elem).height(bottom - top);
	};
	instanceProto.draw = function(ctx)
	{
	};
	instanceProto.drawGL = function(glw)
	{
	};
	pluginProto.cnds = {};
	var cnds = pluginProto.cnds;
	cnds.CompareinnerHTML = function (text, case_)
	{
			return this.elem.innerHTML === text;
	};
	cnds.CompareStyle = function (text, case_)
	{
			return this.elem.style.cssText === text;
	};
	cnds.OnComplete = function (hmm)
	{
		return true;
	};
	cnds.OnError = function ()
	{
		return true;
	};
	pluginProto.acts = {};
	var acts = pluginProto.acts;
	acts.SetInnerHTML = function (text)
	{
		this.elem.innerHTML = text;
	};
	acts.LoadDiv = function (url_,postdata_)
	{
		if(postdata_.length){
				jQuery.ajax({
					context: this,
					dataType: "text",
					type: "POST",
					url: url_,
					data: postdata_,
					success: function(data) {
						this.elem.innerHTML=data;
						this.runtime.trigger(cr.plugins_.HTML_Div.prototype.cnds.OnComplete, this);
					},
					error: function() {
						this.runtime.trigger(cr.plugins_.HTML_Div.prototype.cnds.OnError, this);
					}
				});
			} else {
				jQuery.ajax({
					context: this,
					dataType: "text",
					type: "GET",
					url: url_,
					success: function(data) {
						this.elem.innerHTML=data;
						this.runtime.trigger(cr.plugins_.HTML_Div.prototype.cnds.OnComplete, this);
					},
					error: function() {
						this.runtime.trigger(cr.plugins_.HTML_Div.prototype.cnds.OnError, this);
					}
				});
			};
	};
	acts.SetStyle = function (text)
	{
		this.elem.style.cssText = text;
	};
	acts.SetVisible = function (vis)
	{
		this.visible = (vis !== 0);
	};
	pluginProto.exps = {};
	var exps = pluginProto.exps;
	exps.GetInnerHTML = function (ret)
	{
		ret.set_string(this.elem.innerHTML);
	};
	exps.GetStyle = function (ret)
	{
		ret.set_string(this.elem.style.cssText);
	};
}());
;
;
cr.plugins_.HTML_Img = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.HTML_Img.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
		this.elem = document.createElement("img");
		this.elem.style.cssText=this.properties[2];
		this.elem.onload = (function(self) {
			return function() {
				self.runtime.trigger(cr.plugins_.HTML_Img.prototype.cnds.OnComplete, self);
			};
		})(this);
		this.elem.onclick = (function (self) {
			return function() {
				self.runtime.trigger(cr.plugins_.TextBox.prototype.cnds.OnClicked, self);
			};
		})(this);
		this.elem.ondblclick = (function (self) {
			return function() {
				self.runtime.trigger(cr.plugins_.TextBox.prototype.cnds.OnDoubleClicked, self);
			};
		})(this);
		this.elem.src=this.properties[1];
		jQuery(this.elem).appendTo("body");
		if (this.properties[0] === 0)
		{
			jQuery(this.elem).hide();
			this.visible = false;
		}
		this.updatePosition();
		this.runtime.tickMe(this);
	};
	instanceProto.onDestroy = function ()
	{
		jQuery(this.elem).remove();
		this.elem = null;
	};
	instanceProto.tick = function ()
	{
		this.updatePosition();
	};
	instanceProto.updatePosition = function ()
	{
		var left = this.layer.layerToCanvas(this.x, this.y, true);
		var top = this.layer.layerToCanvas(this.x, this.y, false);
		var right = this.layer.layerToCanvas(this.x + this.width, this.y + this.height, true);
		var bottom = this.layer.layerToCanvas(this.x + this.width, this.y + this.height, false);
		if (!this.visible || !this.layer.visible || right <= 0 || bottom <= 0 || left >= this.runtime.width || top >= this.runtime.height)
		{
			jQuery(this.elem).hide();
			return;
		}
		if (left < 1)
			left = 1;
		if (top < 1)
			top = 1;
		if (right >= this.runtime.width)
			right = this.runtime.width - 1;
		if (bottom >= this.runtime.height)
			bottom = this.runtime.height - 1;
		jQuery(this.elem).show();
		var offx = left + jQuery(this.runtime.canvas).offset().left;
		var offy = top + jQuery(this.runtime.canvas).offset().top;
		jQuery(this.elem).offset({left: offx, top: offy});
		jQuery(this.elem).width(right - left);
		jQuery(this.elem).height(bottom - top);
	};
	instanceProto.draw = function(ctx)
	{
	};
	instanceProto.drawGL = function(glw)
	{
	};
	pluginProto.cnds = {};
	var cnds = pluginProto.cnds;
	cnds.CompareURL = function (text, case_)
	{
			return this.elem.src === text;
	};
	cnds.CompareStyle = function (text, case_)
	{
			return this.elem.style.cssText === text;
	};
	cnds.OnComplete = function (foo)
	{
		return true;
	};
	cnds.OnChange = function (foo)
	{
		return true;
	};
	cnds.OnClicked = function (foo)
	{
		return true;
	};
	cnds.OnDoubleClicked = function (foo)
	{
		return true;
	};
	pluginProto.acts = {};
	var acts = pluginProto.acts;
	acts.SetURL = function (text)
	{
		this.elem.src = text;
		this.runtime.trigger(cr.plugins_.HTML_Img.prototype.cnds.OnChange, this);
	};
	acts.SetStyle = function (text)
	{
		this.elem.style.cssText = text;
	};
	acts.SetVisible = function (vis)
	{
		this.visible = (vis !== 0);
	};
	pluginProto.exps = {};
	var exps = pluginProto.exps;
	exps.GetURL = function (ret)
	{
		ret.set_string(this.elem.src);
	};
	exps.GetStyle = function (ret)
	{
		ret.set_string(this.elem.style.cssText);
	};
}());
;
;
cr.plugins_.HTML_iFrame = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var manuallyChanged = false;
	var pluginProto = cr.plugins_.HTML_iFrame.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
		this.elem = document.createElement("iframe");
		this.elem.src=this.properties[1];
		this.elem.id=this.uid;
		this.elem.border="0";
		this.elem.frameBorder="no";
		this.elem.scrolling="no";
		jQuery(this.elem).appendTo("body");
		if (this.properties[0] === 0)
		{
			jQuery(this.elem).hide();
			this.visible = false;
		}
		var onchangetrigger = (function (self) {
			return function() {
				self.runtime.trigger(cr.plugins_.HTML_iFrame.prototype.cnds.OnTextChanged, self);
			};
		})(this);
		this.elem.onclick = (function (self) {
			return function() {
				self.runtime.trigger(cr.plugins_.HTML_iFrame.prototype.cnds.OnClicked, self);
			};
		})(this);
		this.elem.ondblclick = (function (self) {
			return function() {
				self.runtime.trigger(cr.plugins_.HTML_iFrame.prototype.cnds.OnDoubleClicked, self);
			};
		})(this);
		this.elem.onload = (function (self) {
			return function() {
					self.runtime.trigger(cr.plugins_.HTML_iFrame.prototype.cnds.OnLoaded, self);
			};
		})(this);
		/**/
		this.updatePosition();
		this.runtime.tickMe(this);
	};
	instanceProto.onDestroy = function ()
	{
		jQuery(this.elem).remove();
		this.elem = null;
	};
	instanceProto.tick = function ()
	{
		this.updatePosition();
	};
	instanceProto.updatePosition = function ()
	{
		var left = this.layer.layerToCanvas(this.x, this.y, true);
		var top = this.layer.layerToCanvas(this.x, this.y, false);
		var right = this.layer.layerToCanvas(this.x + this.width, this.y + this.height, true);
		var bottom = this.layer.layerToCanvas(this.x + this.width, this.y + this.height, false);
		if (!this.visible || !this.layer.visible || right <= 0 || bottom <= 0 || left >= this.runtime.width || top >= this.runtime.height)
		{
			jQuery(this.elem).hide();
			return;
		}
		if (left < 1)
			left = 1;
		if (top < 1)
			top = 1;
		if (right >= this.runtime.width)
			right = this.runtime.width - 1;
		if (bottom >= this.runtime.height)
			bottom = this.runtime.height - 1;
		jQuery(this.elem).show();
		var offx = left + jQuery(this.runtime.canvas).offset().left;
		var offy = top + jQuery(this.runtime.canvas).offset().top;
		jQuery(this.elem).offset({left: offx, top: offy});
		jQuery(this.elem).width(right - left);
		jQuery(this.elem).height(bottom - top);
	};
	instanceProto.draw = function(ctx)
	{
	};
	instanceProto.drawGL = function(glw)
	{
	};
	pluginProto.cnds = {};
	var cnds = pluginProto.cnds;
	cnds.CompareURL = function (text, case_)
	{
			return this.elem.value === text;
	};
	cnds.CompareinnerHTML = function (text, case_)
	{
			return this.elem.document.body.innerHTML === text;
	};
	cnds.OnClicked = function ()
	{
		return true;
	};
	cnds.OnDoubleClicked = function ()
	{
		return true;
	};
	cnds.OnLoaded = function ()
	{
		return true;
	};
	pluginProto.acts = {};
	var acts = pluginProto.acts;
	acts.SetURL = function (text)
	{
		manuallyChanged = true;
		this.elem.src = text;
	};
	acts.SetVisible = function (vis)
	{
		this.visible = (vis !== 0);
	};
	acts.SetStyle = function (text)
	{
		this.elem.style.cssText = text;
	};
	acts.GoForward = function ()
	{
		manuallyChanged = true;
		this.elem.contentWindow.history.forward();
	};
	acts.GoBackward = function ()
	{
		manuallyChanged = true;
		this.elem.contentWindow.history.back();
	};
	acts.Refresh = function ()
	{
		manuallyChanged = true;
		this.elem.src=this.elem.src+" ";
	};
	pluginProto.exps = {};
	var exps = pluginProto.exps;
	exps.innerHTML = function (ret)
	{
		ret.set_string(jQuery(this.elem).contents().find("*").html());
	};
	exps.CurrentURL = function (ret)
	{
		ret.set_string(this.elem.contentWindow.location.href);
	};
	exps.GetStyle = function (ret)
	{
		ret.set_string(this.elem.style.cssText);
	};
}());
;
;
cr.plugins_.Keyboard = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Keyboard.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
		this.keyMap = new Array(256);	// stores key up/down state
		this.usedKeys = new Array(256);
		this.triggerKey = 0;
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
		var self = this;
		if (!this.runtime.isDomFree)
		{
			jQuery(document).keydown(
				function(info) {
					self.onKeyDown(info);
				}
			);
			jQuery(document).keyup(
				function(info) {
					self.onKeyUp(info);
				}
			);
		}
	};
	var keysToBlockWhenFramed = [32, 33, 34, 35, 36, 37, 38, 39, 40, 44];
	instanceProto.onKeyDown = function (info)
	{
		var alreadyPreventedDefault = false;
		if (window != window.top && keysToBlockWhenFramed.indexOf(info.which) > -1)
		{
			info.preventDefault();
			alreadyPreventedDefault = true;
			info.stopPropagation();
		}
		if (this.keyMap[info.which])
		{
			if (this.usedKeys[info.which] && !alreadyPreventedDefault)
				info.preventDefault();
			return;
		}
		this.keyMap[info.which] = true;
		this.triggerKey = info.which;
		this.runtime.isInUserInputEvent = true;
		this.runtime.trigger(cr.plugins_.Keyboard.prototype.cnds.OnAnyKey, this);
		var eventRan = this.runtime.trigger(cr.plugins_.Keyboard.prototype.cnds.OnKey, this);
		var eventRan2 = this.runtime.trigger(cr.plugins_.Keyboard.prototype.cnds.OnKeyCode, this);
		this.runtime.isInUserInputEvent = false;
		if (eventRan || eventRan2)
		{
			this.usedKeys[info.which] = true;
			if (!alreadyPreventedDefault)
				info.preventDefault();
		}
	};
	instanceProto.onKeyUp = function (info)
	{
		this.keyMap[info.which] = false;
		this.triggerKey = info.which;
		this.runtime.isInUserInputEvent = true;
		this.runtime.trigger(cr.plugins_.Keyboard.prototype.cnds.OnAnyKeyReleased, this);
		var eventRan = this.runtime.trigger(cr.plugins_.Keyboard.prototype.cnds.OnKeyReleased, this);
		var eventRan2 = this.runtime.trigger(cr.plugins_.Keyboard.prototype.cnds.OnKeyCodeReleased, this);
		this.runtime.isInUserInputEvent = false;
		if (eventRan || eventRan2 || this.usedKeys[info.which])
		{
			this.usedKeys[info.which] = true;
			info.preventDefault();
		}
	};
	instanceProto.saveToJSON = function ()
	{
		return { "triggerKey": this.triggerKey };
	};
	instanceProto.loadFromJSON = function (o)
	{
		this.triggerKey = o["triggerKey"];
	};
	function Cnds() {};
	Cnds.prototype.IsKeyDown = function(key)
	{
		return this.keyMap[key];
	};
	Cnds.prototype.OnKey = function(key)
	{
		return (key === this.triggerKey);
	};
	Cnds.prototype.OnAnyKey = function(key)
	{
		return true;
	};
	Cnds.prototype.OnAnyKeyReleased = function(key)
	{
		return true;
	};
	Cnds.prototype.OnKeyReleased = function(key)
	{
		return (key === this.triggerKey);
	};
	Cnds.prototype.IsKeyCodeDown = function(key)
	{
		key = Math.floor(key);
		if (key < 0 || key >= this.keyMap.length)
			return false;
		return this.keyMap[key];
	};
	Cnds.prototype.OnKeyCode = function(key)
	{
		return (key === this.triggerKey);
	};
	Cnds.prototype.OnKeyCodeReleased = function(key)
	{
		return (key === this.triggerKey);
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.LastKeyCode = function (ret)
	{
		ret.set_int(this.triggerKey);
	};
	function fixedStringFromCharCode(kc)
	{
		kc = Math.floor(kc);
		switch (kc) {
		case 8:		return "backspace";
		case 9:		return "tab";
		case 13:	return "enter";
		case 16:	return "shift";
		case 17:	return "control";
		case 18:	return "alt";
		case 19:	return "pause";
		case 20:	return "capslock";
		case 27:	return "esc";
		case 33:	return "pageup";
		case 34:	return "pagedown";
		case 35:	return "end";
		case 36:	return "home";
		case 37:	return "←";
		case 38:	return "↑";
		case 39:	return "→";
		case 40:	return "↓";
		case 45:	return "insert";
		case 46:	return "del";
		case 91:	return "left window key";
		case 92:	return "right window key";
		case 93:	return "select";
		case 96:	return "numpad 0";
		case 97:	return "numpad 1";
		case 98:	return "numpad 2";
		case 99:	return "numpad 3";
		case 100:	return "numpad 4";
		case 101:	return "numpad 5";
		case 102:	return "numpad 6";
		case 103:	return "numpad 7";
		case 104:	return "numpad 8";
		case 105:	return "numpad 9";
		case 106:	return "numpad *";
		case 107:	return "numpad +";
		case 109:	return "numpad -";
		case 110:	return "numpad .";
		case 111:	return "numpad /";
		case 112:	return "F1";
		case 113:	return "F2";
		case 114:	return "F3";
		case 115:	return "F4";
		case 116:	return "F5";
		case 117:	return "F6";
		case 118:	return "F7";
		case 119:	return "F8";
		case 120:	return "F9";
		case 121:	return "F10";
		case 122:	return "F11";
		case 123:	return "F12";
		case 144:	return "numlock";
		case 145:	return "scroll lock";
		case 186:	return ";";
		case 187:	return "=";
		case 188:	return ",";
		case 189:	return "-";
		case 190:	return ".";
		case 191:	return "/";
		case 192:	return "'";
		case 219:	return "[";
		case 220:	return "\\";
		case 221:	return "]";
		case 222:	return "#";
		case 223:	return "`";
		default:	return String.fromCharCode(kc);
		}
	};
	Exps.prototype.StringFromKeyCode = function (ret, kc)
	{
		ret.set_string(fixedStringFromCharCode(kc));
	};
	pluginProto.exps = new Exps();
}());
;
;
/*
cr.plugins_.Phonegap = function(runtime)
{
	this.runtime = runtime;
	Type
		onCreate
	Instance
		onCreate
		draw
		drawGL
	cnds
	acts
	exps
};
*/
cr.plugins_.Phonegap = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Phonegap.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
/*
		var newScriptTag=document.createElement('script');
		newScriptTag.setAttribute("type","text/javascript");
		newScriptTag.setAttribute("src", "mylib.js");
		document.getElementsByTagName("head")[0].appendChild(newScriptTag);
		var scripts=document.getElementsByTagName("script");
		var exist=false;
		for(var i=0;i<scripts.length;i++){
			if(scripts[i].src.indexOf("cordova.js")!=-1||scripts[i].src.indexOf("phonegap.js")!=-1){
				exist=true;
				break;
			}
		}
		if(!exist){
			var newScriptTag=document.createElement("script");
			newScriptTag.setAttribute("type","text/javascript");
			newScriptTag.setAttribute("src", "cordova.js");
			document.getElementsByTagName("head")[0].appendChild(newScriptTag);
		}
*/
		if(this.runtime.isBlackberry10 || this.runtime.isWindows8App || this.runtime.isWindowsPhone8 || this.runtime.isWindowsPhone81){
			var scripts=document.getElementsByTagName("script");
			var exist=false;
			for(var i=0;i<scripts.length;i++){
				if(scripts[i].src.indexOf("cordova.js")!=-1||scripts[i].src.indexOf("phonegap.js")!=-1){
					exist=true;
					break;
				}
			}
			if(!exist){
				var newScriptTag=document.createElement("script");
				newScriptTag.setAttribute("type","text/javascript");
				newScriptTag.setAttribute("src", "cordova.js");
				document.getElementsByTagName("head")[0].appendChild(newScriptTag);
			}
		}
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
/*
		var self=this;
		window.addEventListener("resize", function () {//cranberrygame
			self.runtime.trigger(cr.plugins_.Phonegap.prototype.cnds.TriggerCondition, self);
		});
*/
		this.menu="";
		var self=this;
		document.addEventListener("backbutton",
		function() {
			self.runtime.trigger(pluginProto.cnds.OnBack, self);
		}, false);
		document.addEventListener("menubutton",
		function() {
			self.runtime.trigger(pluginProto.cnds.OnMenu, self);
		}, false);
		document.addEventListener("onMenuSelected",
		function(info) {
			self.menu=info["menu"];
			self.runtime.trigger(pluginProto.cnds.OnMenuSelected, self);
		}, false);
	};
	instanceProto.draw = function(ctx)
	{
	};
	instanceProto.drawGL = function (glw)
	{
	};
/*
	instanceProto.at = function (x)
	{
		return this.arr[x];
	};
	instanceProto.set = function (x, val)
	{
		this.arr[x] = val;
	};
*/
	function Cnds() {};
/*
	Cnds.prototype.MyCondition = function (myparam)
	{
		return myparam >= 0;
	};
	Cnds.prototype.TriggerCondition = function ()
	{
		return true;
	};
*/
	Cnds.prototype.OnBack = function ()
	{
		return true;
	};
	Cnds.prototype.OnMenu = function ()
	{
		return true;
	};
	Cnds.prototype.OnMenuSelected = function ()
	{
		return true;
	};
	Cnds.prototype.SelectedMenuIs = function (_menu)
	{
		return this.menu == _menu;
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
/*
	Acts.prototype.MyAction = function (myparam)
	{
		alert(myparam);
	};
	Acts.prototype.TriggerAction = function ()
	{
		var self=this;
		self.runtime.trigger(cr.plugins_.Phonegap.prototype.cnds.TriggerCondition, self);
	};
*/
	Acts.prototype.Close = function (myparam)
	{
		navigator["app"]["exitApp"]();
	};
	Acts.prototype.CloseIfTwice = function (myparam)
	{
		if(this.runtime.isAndroid || this.runtime.isWindowsPhone8 || this.runtime.isWindowsPhone81){
			window["exitappiftwice"]["exitAppIfTwice"]();
		}
		else{
			navigator["app"]["exitApp"]();
		}
	};
	Acts.prototype.SetMenus = function (menus)
	{
		window["optionsmenu"]["setMenus"](
		function(info) {
		},
		function(error) {
		}, menus);
	};
	Acts.prototype.ShowMenus = function ()
	{
		window["optionsmenu"]["showMenus"](
		function(info) {
		},
		function(error) {
		});
	};
	pluginProto.acts = new Acts();
	function Exps() {};
/*
	Exps.prototype.MyExpression = function (ret)	// 'ret' must always be the first parameter - always return the expression's result through it!
	{
		ret.set_int(1337);				// return our value
	};
	Exps.prototype.Text = function (ret, param) //cranberrygame
	{
		ret.set_string("Hello");		// for ef_return_string
	};
*/
	Exps.prototype.Menu = function (ret)	// 'ret' must always be the first parameter - always return the expression's result through it!
	{
		ret.set_string(this.menu);		// for ef_return_string
	};
	pluginProto.exps = new Exps();
}());
;
;
/*
cr.plugins_.PhonegapDialog = function(runtime)
{
	this.runtime = runtime;
	Type
		onCreate
	Instance
		onCreate
		draw
		drawGL
	cnds
	acts
	exps
};
*/
cr.plugins_.PhonegapDialog = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.PhonegapDialog.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
/*
		var newScriptTag=document.createElement('script');
		newScriptTag.setAttribute("type","text/javascript");
		newScriptTag.setAttribute("src", "mylib.js");
		document.getElementsByTagName("head")[0].appendChild(newScriptTag);
		var scripts=document.getElementsByTagName("script");
		var scriptExist=false;
		for(var i=0;i<scripts.length;i++){
			if(scripts[i].src.indexOf("cordova.js")!=-1||scripts[i].src.indexOf("phonegap.js")!=-1){
				scriptExist=true;
				break;
			}
		}
		if(!scriptExist){
			var newScriptTag=document.createElement("script");
			newScriptTag.setAttribute("type","text/javascript");
			newScriptTag.setAttribute("src", "cordova.js");
			document.getElementsByTagName("head")[0].appendChild(newScriptTag);
		}
*/
		if(this.runtime.isBlackberry10 || this.runtime.isWindows8App || this.runtime.isWindowsPhone8 || this.runtime.isWindowsPhone81){
			var scripts=document.getElementsByTagName("script");
			var scriptExist=false;
			for(var i=0;i<scripts.length;i++){
				if(scripts[i].src.indexOf("cordova.js")!=-1||scripts[i].src.indexOf("phonegap.js")!=-1){
					scriptExist=true;
					break;
				}
			}
			if(!scriptExist){
				var newScriptTag=document.createElement("script");
				newScriptTag.setAttribute("type","text/javascript");
				newScriptTag.setAttribute("src", "cordova.js");
				document.getElementsByTagName("head")[0].appendChild(newScriptTag);
			}
		}
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
/*
		var self=this;
		window.addEventListener("resize", function () {//cranberrygame
			self.runtime.trigger(cr.plugins_.PhonegapDialog.prototype.cnds.TriggerCondition, self);
		});
*/
		if (!(this.runtime.isAndroid || this.runtime.isBlackberry10 || this.runtime.isiOS || this.runtime.isWindows8App || this.runtime.isWindowsPhone8 || this.runtime.isWindowsPhone81))
			return;
		if (this.runtime.isAndroid && navigator.platform == 'Win32')//crosswalk emulator
			return;
		this.title = null;
		this.PromptInput = null;
	};
	instanceProto.draw = function(ctx)
	{
	};
	instanceProto.drawGL = function (glw)
	{
	};
/*
	instanceProto.at = function (x)
	{
		return this.arr[x];
	};
	instanceProto.set = function (x, val)
	{
		this.arr[x] = val;
	};
*/
	function Cnds() {};
/*
	Cnds.prototype.MyCondition = function (myparam)
	{
		return myparam >= 0;
	};
	Cnds.prototype.TriggerCondition = function ()
	{
		return true;
	};
*/
	Cnds.prototype.ConfirmYesClicked = function ()
	{
		return true;
	};
	Cnds.prototype.ConfirmNoClicked = function ()
	{
		return true;
	};
	Cnds.prototype.PromptOkClicked = function ()
	{
		return true;
	};
	Cnds.prototype.PromptCancelClicked = function ()
	{
		return true;
	};
	Cnds.prototype.TitleIs = function (title_)
	{
		return this.title == title_;
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.Confirm = function (title, message)
	{
		if (!(this.runtime.isAndroid || this.runtime.isBlackberry10 || this.runtime.isiOS || this.runtime.isWindows8App || this.runtime.isWindowsPhone8 || this.runtime.isWindowsPhone81))
			return;
		if (this.runtime.isAndroid && navigator.platform == 'Win32')//crosswalk emulator
			return;
		var self=this;
		navigator["notification"]["confirm"](
			message,
			function (buttonIndex){
				if (buttonIndex==1)
				{
					self.title = title;
					self.runtime.trigger(cr.plugins_.PhonegapDialog.prototype.cnds.ConfirmYesClicked, self);
				}
				else if (buttonIndex==2) {
					self.title = title;
					self.runtime.trigger(cr.plugins_.PhonegapDialog.prototype.cnds.ConfirmNoClicked, self);
				};
			},
			title,
			['Yes','No']
		);
	};
	Acts.prototype.Prompt = function (title,message)
	{
		if (!(this.runtime.isAndroid || this.runtime.isBlackberry10 || this.runtime.isiOS || this.runtime.isWindows8App || this.runtime.isWindowsPhone8 || this.runtime.isWindowsPhone81))
			return;
		if (this.runtime.isAndroid && navigator.platform == 'Win32')//crosswalk emulator
			return;
		var self=this;
		function onPrompt(results) {
			alert("You selected button number " + results.buttonIndex + " and entered " + results.input1);
			if (results.buttonIndex==1){
				self.title = title;
				self.PromptInput=results.input1;
				self.runtime.trigger(cr.plugins_.PhonegapDialog.prototype.cnds.PromptOkClicked, self);
			}
			else if (results.buttonIndex==2){
				self.title = title;
				self.runtime.trigger(cr.plugins_.PhonegapDialog.prototype.cnds.PromptCancelClicked, self);
			}
		}
		navigator["notification"]["prompt"](
			message,  // message
			onPrompt,                  // callback to invoke
			title,            // title
			['Ok','Cancel'],             // buttonLabels
			''                 // defaultText
		);
	}
	Acts.prototype.Beep = function (count)
	{
		if (!(this.runtime.isAndroid || this.runtime.isBlackberry10 || this.runtime.isiOS || this.runtime.isWindows8App || this.runtime.isWindowsPhone8 || this.runtime.isWindowsPhone81))
			return;
		if (this.runtime.isAndroid && navigator.platform == 'Win32')//crosswalk emulator
			return;
		navigator["notification"]["beep"](count);
	}
	Acts.prototype.Alert = function (title, message)
	{
		if (!(this.runtime.isAndroid || this.runtime.isBlackberry10 || this.runtime.isiOS || this.runtime.isWindows8App || this.runtime.isWindowsPhone8 || this.runtime.isWindowsPhone81))
			return;
		if (this.runtime.isAndroid && navigator.platform == 'Win32')//crosswalk emulator
			return;
		function alertDismissed() {
		}
		navigator["notification"]["alert"](
			message,  // message
			alertDismissed,         // callback
			title,            // title
			'OK'                  // buttonName
		);
	};
	pluginProto.acts = new Acts();
	function Exps() {};
/*
	Exps.prototype.MyExpression = function (ret)	// 'ret' must always be the first parameter - always return the expression's result through it!
	{
		ret.set_int(1337);				// return our value
	};
	Exps.prototype.Text = function (ret, param) //cranberrygame
	{
		ret.set_string("Hello");		// for ef_return_string
	};
*/
	Exps.prototype.PromptInput = function (ret)	// 'ret' must always be the first parameter - always return the expression's result through it!
	{
		ret.set_string(this.PromptInput);				// for ef_return_string
	};
	pluginProto.exps = new Exps();
}());
;
;
/*
cr.plugins_.PhonegapLocalNotification = function(runtime)
{
	this.runtime = runtime;
	Type
		onCreate
	Instance
		onCreate
		draw
		drawGL
	cnds
	acts
	exps
};
*/
cr.plugins_.PhonegapLocalNotification = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.PhonegapLocalNotification.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
/*
		var newScriptTag=document.createElement('script');
		newScriptTag.setAttribute("type","text/javascript");
		newScriptTag.setAttribute("src", "mylib.js");
		document.getElementsByTagName("head")[0].appendChild(newScriptTag);
		var scripts=document.getElementsByTagName("script");
		var scriptExist=false;
		for(var i=0;i<scripts.length;i++){
			if(scripts[i].src.indexOf("cordova.js")!=-1||scripts[i].src.indexOf("phonegap.js")!=-1){
				scriptExist=true;
				break;
			}
		}
		if(!scriptExist){
			var newScriptTag=document.createElement("script");
			newScriptTag.setAttribute("type","text/javascript");
			newScriptTag.setAttribute("src", "cordova.js");
			document.getElementsByTagName("head")[0].appendChild(newScriptTag);
		}
*/
		if(this.runtime.isBlackberry10 || this.runtime.isWindows8App || this.runtime.isWindowsPhone8 || this.runtime.isWindowsPhone81){
			var scripts=document.getElementsByTagName("script");
			var scriptExist=false;
			for(var i=0;i<scripts.length;i++){
				if(scripts[i].src.indexOf("cordova.js")!=-1||scripts[i].src.indexOf("phonegap.js")!=-1){
					scriptExist=true;
					break;
				}
			}
			if(!scriptExist){
				var newScriptTag=document.createElement("script");
				newScriptTag.setAttribute("type","text/javascript");
				newScriptTag.setAttribute("src", "cordova.js");
				document.getElementsByTagName("head")[0].appendChild(newScriptTag);
			}
		}
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
/*
		var self=this;
		window.addEventListener("resize", function () {//cranberrygame
			self.runtime.trigger(cr.plugins_.PhonegapLocalNotification.prototype.cnds.TriggerCondition, self);
		});
*/
		if (!(this.runtime.isAndroid || this.runtime.isiOS || this.runtime.isWindowsPhone8 || this.runtime.isWindowsPhone81))
			return;
		if (this.runtime.isAndroid && navigator.platform == 'Win32')//crosswalk emulator
			return;
		var self=this;
		window["plugin"]["notification"]["local"]["ontrigger"] = function (id, state, json) {
			self.runtime.trigger(cr.plugins_.PhonegapLocalNotification.prototype.cnds.OnLocalNotificationArrived, self);
		};
	};
	instanceProto.draw = function(ctx)
	{
	};
	instanceProto.drawGL = function (glw)
	{
	};
/*
	instanceProto.at = function (x)
	{
		return this.arr[x];
	};
	instanceProto.set = function (x, val)
	{
		this.arr[x] = val;
	};
*/
	function Cnds() {};
/*
	Cnds.prototype.MyCondition = function (myparam)
	{
		return myparam >= 0;
	};
	Cnds.prototype.TriggerCondition = function ()
	{
		return true;
	};
*/
	Cnds.prototype.OnLocalNotificationArrived = function ()
	{
		return true;
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
/*
	Acts.prototype.MyAction = function (myparam)
	{
		alert(myparam);
	};
	Acts.prototype.TriggerAction = function ()
	{
		var self=this;
		self.runtime.trigger(cr.plugins_.PhonegapLocalNotification.prototype.cnds.TriggerCondition, self);
	};
*/
	Acts.prototype.SendLocalNotification = function (ID, title, message, sound, delay, repeat)
	{
		if (!(this.runtime.isAndroid || this.runtime.isiOS || this.runtime.isWindowsPhone8 || this.runtime.isWindowsPhone81))
			return;
		if (this.runtime.isAndroid && navigator.platform == 'Win32')//crosswalk emulator
			return;
		var date=new Date();
		date=new Date(date.getTime() + 1000*delay);
		var options = {
			'id':      ID,
			'title':   title,
			'message': message,
			'date': date
		};
		if (repeat!=0){
			var repeatStr="secondly";// Either 'secondly', 'minutely', 'hourly', 'daily', 'weekly', 'monthly' or 'yearly'
			if (repeat==1){
				repeatStr="secondly";
			}
			else if (repeat==2){
				repeatStr="minutely";
			}
			else if (repeat==3){
				repeatStr="hourly";
			}
			else if (repeat==4){
				repeatStr="daily";
			}
			else if (repeat==5){
				repeatStr="weekly";
			}
			else if (repeat==6){
				repeatStr="monthly";
			}
			else if (repeat==7){
				repeatStr="yearly";
			}
			options["repeat"]=repeatStr;
		}
		if (sound==0){
			options["sound"]=null;
		}
		window["plugin"]["notification"]["local"]["add"](options);
	};
	Acts.prototype.CancelLocalNotification = function (ID)
	{
		if (!(this.runtime.isAndroid || this.runtime.isiOS || this.runtime.isWindowsPhone8 || this.runtime.isWindowsPhone81))
			return;
		if (this.runtime.isAndroid && navigator.platform == 'Win32')//crosswalk emulator
			return;
		window["plugin"]["notification"]["local"]["cancel"](ID, function () {
		});
	};
	Acts.prototype.CancelAllLocalNotifications = function ()
	{
		if (!(this.runtime.isAndroid || this.runtime.isiOS || this.runtime.isWindowsPhone8 || this.runtime.isWindowsPhone81))
			return;
		if (this.runtime.isAndroid && navigator.platform == 'Win32')//crosswalk emulator
			return;
		window["plugin"]["notification"]["local"]["cancelAll"](function () {
		});
	};
	pluginProto.acts = new Acts();
	function Exps() {};
/*
	Exps.prototype.MyExpression = function (ret)	// 'ret' must always be the first parameter - always return the expression's result through it!
	{
		ret.set_int(1337);				// return our value
	};
	Exps.prototype.Text = function (ret, param) //cranberrygame
	{
		ret.set_string("Hello");		// for ef_return_string
	};
*/
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.Sprite = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Sprite.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	function frame_getDataUri()
	{
		if (this.datauri.length === 0)
		{
			var tmpcanvas = document.createElement("canvas");
			tmpcanvas.width = this.width;
			tmpcanvas.height = this.height;
			var tmpctx = tmpcanvas.getContext("2d");
			if (this.spritesheeted)
			{
				tmpctx.drawImage(this.texture_img, this.offx, this.offy, this.width, this.height,
										 0, 0, this.width, this.height);
			}
			else
			{
				tmpctx.drawImage(this.texture_img, 0, 0, this.width, this.height);
			}
			this.datauri = tmpcanvas.toDataURL("image/png");
		}
		return this.datauri;
	};
	typeProto.onCreate = function()
	{
		if (this.is_family)
			return;
		var i, leni, j, lenj;
		var anim, frame, animobj, frameobj, wt, uv;
		this.all_frames = [];
		this.has_loaded_textures = false;
		for (i = 0, leni = this.animations.length; i < leni; i++)
		{
			anim = this.animations[i];
			animobj = {};
			animobj.name = anim[0];
			animobj.speed = anim[1];
			animobj.loop = anim[2];
			animobj.repeatcount = anim[3];
			animobj.repeatto = anim[4];
			animobj.pingpong = anim[5];
			animobj.sid = anim[6];
			animobj.frames = [];
			for (j = 0, lenj = anim[7].length; j < lenj; j++)
			{
				frame = anim[7][j];
				frameobj = {};
				frameobj.texture_file = frame[0];
				frameobj.texture_filesize = frame[1];
				frameobj.offx = frame[2];
				frameobj.offy = frame[3];
				frameobj.width = frame[4];
				frameobj.height = frame[5];
				frameobj.duration = frame[6];
				frameobj.hotspotX = frame[7];
				frameobj.hotspotY = frame[8];
				frameobj.image_points = frame[9];
				frameobj.poly_pts = frame[10];
				frameobj.pixelformat = frame[11];
				frameobj.spritesheeted = (frameobj.width !== 0);
				frameobj.datauri = "";		// generated on demand and cached
				frameobj.getDataUri = frame_getDataUri;
				uv = {};
				uv.left = 0;
				uv.top = 0;
				uv.right = 1;
				uv.bottom = 1;
				frameobj.sheetTex = uv;
				frameobj.webGL_texture = null;
				wt = this.runtime.findWaitingTexture(frame[0]);
				if (wt)
				{
					frameobj.texture_img = wt;
				}
				else
				{
					frameobj.texture_img = new Image();
					frameobj.texture_img["idtkLoadDisposed"] = true;
					frameobj.texture_img.src = frame[0];
					frameobj.texture_img.cr_src = frame[0];
					frameobj.texture_img.cr_filesize = frame[1];
					frameobj.texture_img.c2webGL_texture = null;
					this.runtime.waitForImageLoad(frameobj.texture_img);
				}
				cr.seal(frameobj);
				animobj.frames.push(frameobj);
				this.all_frames.push(frameobj);
			}
			cr.seal(animobj);
			this.animations[i] = animobj;		// swap array data for object
		}
	};
	typeProto.updateAllCurrentTexture = function ()
	{
		var i, len, inst;
		for (i = 0, len = this.instances.length; i < len; i++)
		{
			inst = this.instances[i];
			inst.curWebGLTexture = inst.curFrame.webGL_texture;
		}
	};
	typeProto.onLostWebGLContext = function ()
	{
		if (this.is_family)
			return;
		var i, len, frame;
		for (i = 0, len = this.all_frames.length; i < len; ++i)
		{
			frame = this.all_frames[i];
			frame.texture_img.c2webGL_texture = null;
			frame.webGL_texture = null;
		}
	};
	typeProto.onRestoreWebGLContext = function ()
	{
		if (this.is_family || !this.instances.length)
			return;
		var i, len, frame;
		for (i = 0, len = this.all_frames.length; i < len; ++i)
		{
			frame = this.all_frames[i];
			frame.webGL_texture = this.runtime.glwrap.loadTexture(frame.texture_img, false, this.runtime.linearSampling, frame.pixelformat);
		}
		this.updateAllCurrentTexture();
	};
	typeProto.loadTextures = function ()
	{
		if (this.is_family || this.has_loaded_textures || !this.runtime.glwrap)
			return;
		var i, len, frame;
		for (i = 0, len = this.all_frames.length; i < len; ++i)
		{
			frame = this.all_frames[i];
			frame.webGL_texture = this.runtime.glwrap.loadTexture(frame.texture_img, false, this.runtime.linearSampling, frame.pixelformat);
		}
		this.has_loaded_textures = true;
	};
	typeProto.unloadTextures = function ()
	{
		if (this.is_family || this.instances.length || !this.has_loaded_textures)
			return;
		var i, len, frame;
		for (i = 0, len = this.all_frames.length; i < len; ++i)
		{
			frame = this.all_frames[i];
			this.runtime.glwrap.deleteTexture(frame.webGL_texture);
			frame.webGL_texture = null;
		}
		this.has_loaded_textures = false;
	};
	var already_drawn_images = [];
	typeProto.preloadCanvas2D = function (ctx)
	{
		var i, len, frameimg;
		already_drawn_images.length = 0;
		for (i = 0, len = this.all_frames.length; i < len; ++i)
		{
			frameimg = this.all_frames[i].texture_img;
			if (already_drawn_images.indexOf(frameimg) !== -1)
					continue;
			ctx.drawImage(frameimg, 0, 0);
			already_drawn_images.push(frameimg);
		}
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
		var poly_pts = this.type.animations[0].frames[0].poly_pts;
		if (this.recycled)
			this.collision_poly.set_pts(poly_pts);
		else
			this.collision_poly = new cr.CollisionPoly(poly_pts);
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
		this.visible = (this.properties[0] === 0);	// 0=visible, 1=invisible
		this.isTicking = false;
		this.inAnimTrigger = false;
		this.collisionsEnabled = (this.properties[3] !== 0);
		if (!(this.type.animations.length === 1 && this.type.animations[0].frames.length === 1) && this.type.animations[0].speed !== 0)
		{
			this.runtime.tickMe(this);
			this.isTicking = true;
		}
		this.cur_animation = this.getAnimationByName(this.properties[1]) || this.type.animations[0];
		this.cur_frame = this.properties[2];
		if (this.cur_frame < 0)
			this.cur_frame = 0;
		if (this.cur_frame >= this.cur_animation.frames.length)
			this.cur_frame = this.cur_animation.frames.length - 1;
		var curanimframe = this.cur_animation.frames[this.cur_frame];
		this.collision_poly.set_pts(curanimframe.poly_pts);
		this.hotspotX = curanimframe.hotspotX;
		this.hotspotY = curanimframe.hotspotY;
		this.cur_anim_speed = this.cur_animation.speed;
		if (this.recycled)
			this.animTimer.reset();
		else
			this.animTimer = new cr.KahanAdder();
		this.frameStart = this.getNowTime();
		this.animPlaying = true;
		this.animRepeats = 0;
		this.animForwards = true;
		this.animTriggerName = "";
		this.changeAnimName = "";
		this.changeAnimFrom = 0;
		this.changeAnimFrame = -1;
		this.type.loadTextures();
		var i, leni, j, lenj;
		var anim, frame, uv, maintex;
		for (i = 0, leni = this.type.animations.length; i < leni; i++)
		{
			anim = this.type.animations[i];
			for (j = 0, lenj = anim.frames.length; j < lenj; j++)
			{
				frame = anim.frames[j];
				if (frame.width === 0)
				{
					frame.width = frame.texture_img.width;
					frame.height = frame.texture_img.height;
				}
				if (frame.spritesheeted)
				{
					maintex = frame.texture_img;
					uv = frame.sheetTex;
					uv.left = frame.offx / maintex.width;
					uv.top = frame.offy / maintex.height;
					uv.right = (frame.offx + frame.width) / maintex.width;
					uv.bottom = (frame.offy + frame.height) / maintex.height;
					if (frame.offx === 0 && frame.offy === 0 && frame.width === maintex.width && frame.height === maintex.height)
					{
						frame.spritesheeted = false;
					}
				}
			}
		}
		this.curFrame = this.cur_animation.frames[this.cur_frame];
		this.curWebGLTexture = this.curFrame.webGL_texture;
	};
	instanceProto.saveToJSON = function ()
	{
		var o = {
			"a": this.cur_animation.sid,
			"f": this.cur_frame,
			"cas": this.cur_anim_speed,
			"fs": this.frameStart,
			"ar": this.animRepeats,
			"at": this.animTimer.sum
		};
		if (!this.animPlaying)
			o["ap"] = this.animPlaying;
		if (!this.animForwards)
			o["af"] = this.animForwards;
		return o;
	};
	instanceProto.loadFromJSON = function (o)
	{
		var anim = this.getAnimationBySid(o["a"]);
		if (anim)
			this.cur_animation = anim;
		this.cur_frame = o["f"];
		if (this.cur_frame < 0)
			this.cur_frame = 0;
		if (this.cur_frame >= this.cur_animation.frames.length)
			this.cur_frame = this.cur_animation.frames.length - 1;
		this.cur_anim_speed = o["cas"];
		this.frameStart = o["fs"];
		this.animRepeats = o["ar"];
		this.animTimer.reset();
		this.animTimer.sum = o["at"];
		this.animPlaying = o.hasOwnProperty("ap") ? o["ap"] : true;
		this.animForwards = o.hasOwnProperty("af") ? o["af"] : true;
		this.curFrame = this.cur_animation.frames[this.cur_frame];
		this.curWebGLTexture = this.curFrame.webGL_texture;
		this.collision_poly.set_pts(this.curFrame.poly_pts);
		this.hotspotX = this.curFrame.hotspotX;
		this.hotspotY = this.curFrame.hotspotY;
	};
	instanceProto.animationFinish = function (reverse)
	{
		this.cur_frame = reverse ? 0 : this.cur_animation.frames.length - 1;
		this.animPlaying = false;
		this.animTriggerName = this.cur_animation.name;
		this.inAnimTrigger = true;
		this.runtime.trigger(cr.plugins_.Sprite.prototype.cnds.OnAnyAnimFinished, this);
		this.runtime.trigger(cr.plugins_.Sprite.prototype.cnds.OnAnimFinished, this);
		this.inAnimTrigger = false;
		this.animRepeats = 0;
	};
	instanceProto.getNowTime = function()
	{
		return this.animTimer.sum;
	};
	instanceProto.tick = function()
	{
		this.animTimer.add(this.runtime.getDt(this));
		if (this.changeAnimName.length)
			this.doChangeAnim();
		if (this.changeAnimFrame >= 0)
			this.doChangeAnimFrame();
		var now = this.getNowTime();
		var cur_animation = this.cur_animation;
		var prev_frame = cur_animation.frames[this.cur_frame];
		var next_frame;
		var cur_frame_time = prev_frame.duration / this.cur_anim_speed;
		if (this.animPlaying && now >= this.frameStart + cur_frame_time)
		{
			if (this.animForwards)
			{
				this.cur_frame++;
			}
			else
			{
				this.cur_frame--;
			}
			this.frameStart += cur_frame_time;
			if (this.cur_frame >= cur_animation.frames.length)
			{
				if (cur_animation.pingpong)
				{
					this.animForwards = false;
					this.cur_frame = cur_animation.frames.length - 2;
				}
				else if (cur_animation.loop)
				{
					this.cur_frame = cur_animation.repeatto;
				}
				else
				{
					this.animRepeats++;
					if (this.animRepeats >= cur_animation.repeatcount)
					{
						this.animationFinish(false);
					}
					else
					{
						this.cur_frame = cur_animation.repeatto;
					}
				}
			}
			if (this.cur_frame < 0)
			{
				if (cur_animation.pingpong)
				{
					this.cur_frame = 1;
					this.animForwards = true;
					if (!cur_animation.loop)
					{
						this.animRepeats++;
						if (this.animRepeats >= cur_animation.repeatcount)
						{
							this.animationFinish(true);
						}
					}
				}
				else
				{
					if (cur_animation.loop)
					{
						this.cur_frame = cur_animation.repeatto;
					}
					else
					{
						this.animRepeats++;
						if (this.animRepeats >= cur_animation.repeatcount)
						{
							this.animationFinish(true);
						}
						else
						{
							this.cur_frame = cur_animation.repeatto;
						}
					}
				}
			}
			if (this.cur_frame < 0)
				this.cur_frame = 0;
			else if (this.cur_frame >= cur_animation.frames.length)
				this.cur_frame = cur_animation.frames.length - 1;
			if (now > this.frameStart + (cur_animation.frames[this.cur_frame].duration / this.cur_anim_speed))
			{
				this.frameStart = now;
			}
			next_frame = cur_animation.frames[this.cur_frame];
			this.OnFrameChanged(prev_frame, next_frame);
			this.runtime.redraw = true;
		}
	};
	instanceProto.getAnimationByName = function (name_)
	{
		var i, len, a;
		for (i = 0, len = this.type.animations.length; i < len; i++)
		{
			a = this.type.animations[i];
			if (cr.equals_nocase(a.name, name_))
				return a;
		}
		return null;
	};
	instanceProto.getAnimationBySid = function (sid_)
	{
		var i, len, a;
		for (i = 0, len = this.type.animations.length; i < len; i++)
		{
			a = this.type.animations[i];
			if (a.sid === sid_)
				return a;
		}
		return null;
	};
	instanceProto.doChangeAnim = function ()
	{
		var prev_frame = this.cur_animation.frames[this.cur_frame];
		var anim = this.getAnimationByName(this.changeAnimName);
		this.changeAnimName = "";
		if (!anim)
			return;
		if (cr.equals_nocase(anim.name, this.cur_animation.name) && this.animPlaying)
			return;
		this.cur_animation = anim;
		this.cur_anim_speed = anim.speed;
		if (this.cur_frame < 0)
			this.cur_frame = 0;
		if (this.cur_frame >= this.cur_animation.frames.length)
			this.cur_frame = this.cur_animation.frames.length - 1;
		if (this.changeAnimFrom === 1)
			this.cur_frame = 0;
		this.animPlaying = true;
		this.frameStart = this.getNowTime();
		this.animForwards = true;
		this.OnFrameChanged(prev_frame, this.cur_animation.frames[this.cur_frame]);
		this.runtime.redraw = true;
	};
	instanceProto.doChangeAnimFrame = function ()
	{
		var prev_frame = this.cur_animation.frames[this.cur_frame];
		var prev_frame_number = this.cur_frame;
		this.cur_frame = cr.floor(this.changeAnimFrame);
		if (this.cur_frame < 0)
			this.cur_frame = 0;
		if (this.cur_frame >= this.cur_animation.frames.length)
			this.cur_frame = this.cur_animation.frames.length - 1;
		if (prev_frame_number !== this.cur_frame)
		{
			this.OnFrameChanged(prev_frame, this.cur_animation.frames[this.cur_frame]);
			this.frameStart = this.getNowTime();
			this.runtime.redraw = true;
		}
		this.changeAnimFrame = -1;
	};
	instanceProto.OnFrameChanged = function (prev_frame, next_frame)
	{
		var oldw = prev_frame.width;
		var oldh = prev_frame.height;
		var neww = next_frame.width;
		var newh = next_frame.height;
		if (oldw != neww)
			this.width *= (neww / oldw);
		if (oldh != newh)
			this.height *= (newh / oldh);
		this.hotspotX = next_frame.hotspotX;
		this.hotspotY = next_frame.hotspotY;
		this.collision_poly.set_pts(next_frame.poly_pts);
		this.set_bbox_changed();
		this.curFrame = next_frame;
		this.curWebGLTexture = next_frame.webGL_texture;
		var i, len, b;
		for (i = 0, len = this.behavior_insts.length; i < len; i++)
		{
			b = this.behavior_insts[i];
			if (b.onSpriteFrameChanged)
				b.onSpriteFrameChanged(prev_frame, next_frame);
		}
		this.runtime.trigger(cr.plugins_.Sprite.prototype.cnds.OnFrameChanged, this);
	};
	instanceProto.draw = function(ctx)
	{
		ctx.globalAlpha = this.opacity;
		var cur_frame = this.curFrame;
		var spritesheeted = cur_frame.spritesheeted;
		var cur_image = cur_frame.texture_img;
		var myx = this.x;
		var myy = this.y;
		var w = this.width;
		var h = this.height;
		if (this.angle === 0 && w >= 0 && h >= 0)
		{
			myx -= this.hotspotX * w;
			myy -= this.hotspotY * h;
			if (this.runtime.pixel_rounding)
			{
				myx = (myx + 0.5) | 0;
				myy = (myy + 0.5) | 0;
			}
			if (spritesheeted)
			{
				ctx.drawImage(cur_image, cur_frame.offx, cur_frame.offy, cur_frame.width, cur_frame.height,
										 myx, myy, w, h);
			}
			else
			{
				ctx.drawImage(cur_image, myx, myy, w, h);
			}
		}
		else
		{
			if (this.runtime.pixel_rounding)
			{
				myx = (myx + 0.5) | 0;
				myy = (myy + 0.5) | 0;
			}
			ctx.save();
			var widthfactor = w > 0 ? 1 : -1;
			var heightfactor = h > 0 ? 1 : -1;
			ctx.translate(myx, myy);
			if (widthfactor !== 1 || heightfactor !== 1)
				ctx.scale(widthfactor, heightfactor);
			ctx.rotate(this.angle * widthfactor * heightfactor);
			var drawx = 0 - (this.hotspotX * cr.abs(w))
			var drawy = 0 - (this.hotspotY * cr.abs(h));
			if (spritesheeted)
			{
				ctx.drawImage(cur_image, cur_frame.offx, cur_frame.offy, cur_frame.width, cur_frame.height,
										 drawx, drawy, cr.abs(w), cr.abs(h));
			}
			else
			{
				ctx.drawImage(cur_image, drawx, drawy, cr.abs(w), cr.abs(h));
			}
			ctx.restore();
		}
		/*
		ctx.strokeStyle = "#f00";
		ctx.lineWidth = 3;
		ctx.beginPath();
		this.collision_poly.cache_poly(this.width, this.height, this.angle);
		var i, len, ax, ay, bx, by;
		for (i = 0, len = this.collision_poly.pts_count; i < len; i++)
		{
			ax = this.collision_poly.pts_cache[i*2] + this.x;
			ay = this.collision_poly.pts_cache[i*2+1] + this.y;
			bx = this.collision_poly.pts_cache[((i+1)%len)*2] + this.x;
			by = this.collision_poly.pts_cache[((i+1)%len)*2+1] + this.y;
			ctx.moveTo(ax, ay);
			ctx.lineTo(bx, by);
		}
		ctx.stroke();
		ctx.closePath();
		*/
		/*
		if (this.behavior_insts.length >= 1 && this.behavior_insts[0].draw)
		{
			this.behavior_insts[0].draw(ctx);
		}
		*/
	};
	instanceProto.drawGL = function(glw)
	{
		glw.setTexture(this.curWebGLTexture);
		glw.setOpacity(this.opacity);
		var cur_frame = this.curFrame;
		var q = this.bquad;
		if (this.runtime.pixel_rounding)
		{
			var ox = ((this.x + 0.5) | 0) - this.x;
			var oy = ((this.y + 0.5) | 0) - this.y;
			if (cur_frame.spritesheeted)
				glw.quadTex(q.tlx + ox, q.tly + oy, q.trx + ox, q.try_ + oy, q.brx + ox, q.bry + oy, q.blx + ox, q.bly + oy, cur_frame.sheetTex);
			else
				glw.quad(q.tlx + ox, q.tly + oy, q.trx + ox, q.try_ + oy, q.brx + ox, q.bry + oy, q.blx + ox, q.bly + oy);
		}
		else
		{
			if (cur_frame.spritesheeted)
				glw.quadTex(q.tlx, q.tly, q.trx, q.try_, q.brx, q.bry, q.blx, q.bly, cur_frame.sheetTex);
			else
				glw.quad(q.tlx, q.tly, q.trx, q.try_, q.brx, q.bry, q.blx, q.bly);
		}
	};
	instanceProto.getImagePointIndexByName = function(name_)
	{
		var cur_frame = this.curFrame;
		var i, len;
		for (i = 0, len = cur_frame.image_points.length; i < len; i++)
		{
			if (cr.equals_nocase(name_, cur_frame.image_points[i][0]))
				return i;
		}
		return -1;
	};
	instanceProto.getImagePoint = function(imgpt, getX)
	{
		var cur_frame = this.curFrame;
		var image_points = cur_frame.image_points;
		var index;
		if (cr.is_string(imgpt))
			index = this.getImagePointIndexByName(imgpt);
		else
			index = imgpt - 1;	// 0 is origin
		index = cr.floor(index);
		if (index < 0 || index >= image_points.length)
			return getX ? this.x : this.y;	// return origin
		var x = (image_points[index][1] - cur_frame.hotspotX) * this.width;
		var y = image_points[index][2];
		y = (y - cur_frame.hotspotY) * this.height;
		var cosa = Math.cos(this.angle);
		var sina = Math.sin(this.angle);
		var x_temp = (x * cosa) - (y * sina);
		y = (y * cosa) + (x * sina);
		x = x_temp;
		x += this.x;
		y += this.y;
		return getX ? x : y;
	};
	function Cnds() {};
	var arrCache = [];
	function allocArr()
	{
		if (arrCache.length)
			return arrCache.pop();
		else
			return [0, 0, 0];
	};
	function freeArr(a)
	{
		a[0] = 0;
		a[1] = 0;
		a[2] = 0;
		arrCache.push(a);
	};
	function makeCollKey(a, b)
	{
		if (a < b)
			return "" + a + "," + b;
		else
			return "" + b + "," + a;
	};
	function collmemory_add(collmemory, a, b, tickcount)
	{
		var a_uid = a.uid;
		var b_uid = b.uid;
		var key = makeCollKey(a_uid, b_uid);
		if (collmemory.hasOwnProperty(key))
		{
			collmemory[key][2] = tickcount;
			return;
		}
		var arr = allocArr();
		arr[0] = a_uid;
		arr[1] = b_uid;
		arr[2] = tickcount;
		collmemory[key] = arr;
	};
	function collmemory_remove(collmemory, a, b)
	{
		var key = makeCollKey(a.uid, b.uid);
		if (collmemory.hasOwnProperty(key))
		{
			freeArr(collmemory[key]);
			delete collmemory[key];
		}
	};
	function collmemory_removeInstance(collmemory, inst)
	{
		var uid = inst.uid;
		var p, entry;
		for (p in collmemory)
		{
			if (collmemory.hasOwnProperty(p))
			{
				entry = collmemory[p];
				if (entry[0] === uid || entry[1] === uid)
				{
					freeArr(collmemory[p]);
					delete collmemory[p];
				}
			}
		}
	};
	var last_coll_tickcount = -2;
	function collmemory_has(collmemory, a, b)
	{
		var key = makeCollKey(a.uid, b.uid);
		if (collmemory.hasOwnProperty(key))
		{
			last_coll_tickcount = collmemory[key][2];
			return true;
		}
		else
		{
			last_coll_tickcount = -2;
			return false;
		}
	};
	var candidates1 = [];
	Cnds.prototype.OnCollision = function (rtype)
	{
		if (!rtype)
			return false;
		var runtime = this.runtime;
		var cnd = runtime.getCurrentCondition();
		var ltype = cnd.type;
		if (!cnd.extra.collmemory)
		{
			cnd.extra.collmemory = {};
			runtime.addDestroyCallback((function (collmemory) {
				return function(inst) {
					collmemory_removeInstance(collmemory, inst);
				};
			})(cnd.extra.collmemory));
		}
		var collmemory = cnd.extra.collmemory;
		var lsol = ltype.getCurrentSol();
		var rsol = rtype.getCurrentSol();
		var linstances = lsol.getObjects();
		var rinstances;
		var l, linst, r, rinst;
		var curlsol, currsol;
		var tickcount = this.runtime.tickcount;
		var lasttickcount = tickcount - 1;
		var exists, run;
		var current_event = runtime.getCurrentEventStack().current_event;
		var orblock = current_event.orblock;
		for (l = 0; l < linstances.length; l++)
		{
			linst = linstances[l];
			if (rsol.select_all)
			{
				linst.update_bbox();
				this.runtime.getCollisionCandidates(linst.layer, rtype, linst.bbox, candidates1);
				rinstances = candidates1;
			}
			else
				rinstances = rsol.getObjects();
			for (r = 0; r < rinstances.length; r++)
			{
				rinst = rinstances[r];
				if (runtime.testOverlap(linst, rinst) || runtime.checkRegisteredCollision(linst, rinst))
				{
					exists = collmemory_has(collmemory, linst, rinst);
					run = (!exists || (last_coll_tickcount < lasttickcount));
					collmemory_add(collmemory, linst, rinst, tickcount);
					if (run)
					{
						runtime.pushCopySol(current_event.solModifiers);
						curlsol = ltype.getCurrentSol();
						currsol = rtype.getCurrentSol();
						curlsol.select_all = false;
						currsol.select_all = false;
						if (ltype === rtype)
						{
							curlsol.instances.length = 2;	// just use lsol, is same reference as rsol
							curlsol.instances[0] = linst;
							curlsol.instances[1] = rinst;
							ltype.applySolToContainer();
						}
						else
						{
							curlsol.instances.length = 1;
							currsol.instances.length = 1;
							curlsol.instances[0] = linst;
							currsol.instances[0] = rinst;
							ltype.applySolToContainer();
							rtype.applySolToContainer();
						}
						current_event.retrigger();
						runtime.popSol(current_event.solModifiers);
					}
				}
				else
				{
					collmemory_remove(collmemory, linst, rinst);
				}
			}
			candidates1.length = 0;
		}
		return false;
	};
	var rpicktype = null;
	var rtopick = new cr.ObjectSet();
	var needscollisionfinish = false;
	var candidates2 = [];
	function DoOverlapCondition(rtype, offx, offy)
	{
		if (!rtype)
			return false;
		var do_offset = (offx !== 0 || offy !== 0);
		var oldx, oldy, ret = false, r, lenr, rinst;
		var cnd = this.runtime.getCurrentCondition();
		var ltype = cnd.type;
		var inverted = cnd.inverted;
		var rsol = rtype.getCurrentSol();
		var orblock = this.runtime.getCurrentEventStack().current_event.orblock;
		var rinstances;
		if (rsol.select_all)
		{
			this.update_bbox();
			this.runtime.getCollisionCandidates(this.layer, rtype, this.bbox, candidates2);
			rinstances = candidates2;
		}
		else if (orblock)
			rinstances = rsol.else_instances;
		else
			rinstances = rsol.instances;
		rpicktype = rtype;
		needscollisionfinish = (ltype !== rtype && !inverted);
		if (do_offset)
		{
			oldx = this.x;
			oldy = this.y;
			this.x += offx;
			this.y += offy;
			this.set_bbox_changed();
		}
		for (r = 0, lenr = rinstances.length; r < lenr; r++)
		{
			rinst = rinstances[r];
			if (this.runtime.testOverlap(this, rinst))
			{
				ret = true;
				if (inverted)
					break;
				if (ltype !== rtype)
					rtopick.add(rinst);
			}
		}
		if (do_offset)
		{
			this.x = oldx;
			this.y = oldy;
			this.set_bbox_changed();
		}
		candidates2.length = 0;
		return ret;
	};
	typeProto.finish = function (do_pick)
	{
		if (!needscollisionfinish)
			return;
		if (do_pick)
		{
			var orblock = this.runtime.getCurrentEventStack().current_event.orblock;
			var sol = rpicktype.getCurrentSol();
			var topick = rtopick.valuesRef();
			var i, len, inst;
			if (sol.select_all)
			{
				sol.select_all = false;
				sol.instances.length = topick.length;
				for (i = 0, len = topick.length; i < len; i++)
				{
					sol.instances[i] = topick[i];
				}
				if (orblock)
				{
					sol.else_instances.length = 0;
					for (i = 0, len = rpicktype.instances.length; i < len; i++)
					{
						inst = rpicktype.instances[i];
						if (!rtopick.contains(inst))
							sol.else_instances.push(inst);
					}
				}
			}
			else
			{
				if (orblock)
				{
					var initsize = sol.instances.length;
					sol.instances.length = initsize + topick.length;
					for (i = 0, len = topick.length; i < len; i++)
					{
						sol.instances[initsize + i] = topick[i];
						cr.arrayFindRemove(sol.else_instances, topick[i]);
					}
				}
				else
				{
					cr.shallowAssignArray(sol.instances, topick);
				}
			}
			rpicktype.applySolToContainer();
		}
		rtopick.clear();
		needscollisionfinish = false;
	};
	Cnds.prototype.IsOverlapping = function (rtype)
	{
		return DoOverlapCondition.call(this, rtype, 0, 0);
	};
	Cnds.prototype.IsOverlappingOffset = function (rtype, offx, offy)
	{
		return DoOverlapCondition.call(this, rtype, offx, offy);
	};
	Cnds.prototype.IsAnimPlaying = function (animname)
	{
		if (this.changeAnimName.length)
			return cr.equals_nocase(this.changeAnimName, animname);
		else
			return cr.equals_nocase(this.cur_animation.name, animname);
	};
	Cnds.prototype.CompareFrame = function (cmp, framenum)
	{
		return cr.do_cmp(this.cur_frame, cmp, framenum);
	};
	Cnds.prototype.CompareAnimSpeed = function (cmp, x)
	{
		var s = (this.animForwards ? this.cur_anim_speed : -this.cur_anim_speed);
		return cr.do_cmp(s, cmp, x);
	};
	Cnds.prototype.OnAnimFinished = function (animname)
	{
		return cr.equals_nocase(this.animTriggerName, animname);
	};
	Cnds.prototype.OnAnyAnimFinished = function ()
	{
		return true;
	};
	Cnds.prototype.OnFrameChanged = function ()
	{
		return true;
	};
	Cnds.prototype.IsMirrored = function ()
	{
		return this.width < 0;
	};
	Cnds.prototype.IsFlipped = function ()
	{
		return this.height < 0;
	};
	Cnds.prototype.OnURLLoaded = function ()
	{
		return true;
	};
	Cnds.prototype.IsCollisionEnabled = function ()
	{
		return this.collisionsEnabled;
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.Spawn = function (obj, layer, imgpt)
	{
		if (!obj || !layer)
			return;
		var inst = this.runtime.createInstance(obj, layer, this.getImagePoint(imgpt, true), this.getImagePoint(imgpt, false));
		if (!inst)
			return;
		if (typeof inst.angle !== "undefined")
		{
			inst.angle = this.angle;
			inst.set_bbox_changed();
		}
		this.runtime.isInOnDestroy++;
		var i, len, s;
		this.runtime.trigger(Object.getPrototypeOf(obj.plugin).cnds.OnCreated, inst);
		if (inst.is_contained)
		{
			for (i = 0, len = inst.siblings.length; i < len; i++)
			{
				s = inst.siblings[i];
				this.runtime.trigger(Object.getPrototypeOf(s.type.plugin).cnds.OnCreated, s);
			}
		}
		this.runtime.isInOnDestroy--;
		var cur_act = this.runtime.getCurrentAction();
		var reset_sol = false;
		if (cr.is_undefined(cur_act.extra.Spawn_LastExec) || cur_act.extra.Spawn_LastExec < this.runtime.execcount)
		{
			reset_sol = true;
			cur_act.extra.Spawn_LastExec = this.runtime.execcount;
		}
		var sol;
		if (obj != this.type)
		{
			sol = obj.getCurrentSol();
			sol.select_all = false;
			if (reset_sol)
			{
				sol.instances.length = 1;
				sol.instances[0] = inst;
			}
			else
				sol.instances.push(inst);
			if (inst.is_contained)
			{
				for (i = 0, len = inst.siblings.length; i < len; i++)
				{
					s = inst.siblings[i];
					sol = s.type.getCurrentSol();
					sol.select_all = false;
					if (reset_sol)
					{
						sol.instances.length = 1;
						sol.instances[0] = s;
					}
					else
						sol.instances.push(s);
				}
			}
		}
	};
	Acts.prototype.SetEffect = function (effect)
	{
		this.compositeOp = cr.effectToCompositeOp(effect);
		cr.setGLBlend(this, effect, this.runtime.gl);
		this.runtime.redraw = true;
	};
	Acts.prototype.StopAnim = function ()
	{
		this.animPlaying = false;
	};
	Acts.prototype.StartAnim = function (from)
	{
		this.animPlaying = true;
		this.frameStart = this.getNowTime();
		if (from === 1 && this.cur_frame !== 0)
		{
			this.changeAnimFrame = 0;
			if (!this.inAnimTrigger)
				this.doChangeAnimFrame();
		}
		if (!this.isTicking)
		{
			this.runtime.tickMe(this);
			this.isTicking = true;
		}
	};
	Acts.prototype.SetAnim = function (animname, from)
	{
		this.changeAnimName = animname;
		this.changeAnimFrom = from;
		if (!this.isTicking)
		{
			this.runtime.tickMe(this);
			this.isTicking = true;
		}
		if (!this.inAnimTrigger)
			this.doChangeAnim();
	};
	Acts.prototype.SetAnimFrame = function (framenumber)
	{
		this.changeAnimFrame = framenumber;
		if (!this.isTicking)
		{
			this.runtime.tickMe(this);
			this.isTicking = true;
		}
		if (!this.inAnimTrigger)
			this.doChangeAnimFrame();
	};
	Acts.prototype.SetAnimSpeed = function (s)
	{
		this.cur_anim_speed = cr.abs(s);
		this.animForwards = (s >= 0);
		if (!this.isTicking)
		{
			this.runtime.tickMe(this);
			this.isTicking = true;
		}
	};
	Acts.prototype.SetMirrored = function (m)
	{
		var neww = cr.abs(this.width) * (m === 0 ? -1 : 1);
		if (this.width === neww)
			return;
		this.width = neww;
		this.set_bbox_changed();
	};
	Acts.prototype.SetFlipped = function (f)
	{
		var newh = cr.abs(this.height) * (f === 0 ? -1 : 1);
		if (this.height === newh)
			return;
		this.height = newh;
		this.set_bbox_changed();
	};
	Acts.prototype.SetScale = function (s)
	{
		var cur_frame = this.curFrame;
		var mirror_factor = (this.width < 0 ? -1 : 1);
		var flip_factor = (this.height < 0 ? -1 : 1);
		var new_width = cur_frame.width * s * mirror_factor;
		var new_height = cur_frame.height * s * flip_factor;
		if (this.width !== new_width || this.height !== new_height)
		{
			this.width = new_width;
			this.height = new_height;
			this.set_bbox_changed();
		}
	};
	Acts.prototype.LoadURL = function (url_, resize_)
	{
		var img = new Image();
		var self = this;
		var curFrame_ = this.curFrame;
		img.onload = function ()
		{
			if (curFrame_.texture_img.src === img.src)
			{
				if (self.runtime.glwrap && self.curFrame === curFrame_)
					self.curWebGLTexture = curFrame_.webGL_texture;
				self.runtime.redraw = true;
				self.runtime.trigger(cr.plugins_.Sprite.prototype.cnds.OnURLLoaded, self);
				return;
			}
			curFrame_.texture_img = img;
			curFrame_.offx = 0;
			curFrame_.offy = 0;
			curFrame_.width = img.width;
			curFrame_.height = img.height;
			curFrame_.spritesheeted = false;
			curFrame_.datauri = "";
			if (self.runtime.glwrap)
			{
				if (curFrame_.webGL_texture)
					self.runtime.glwrap.deleteTexture(curFrame_.webGL_texture);
				curFrame_.webGL_texture = self.runtime.glwrap.loadTexture(img, false, self.runtime.linearSampling);
				if (self.curFrame === curFrame_)
					self.curWebGLTexture = curFrame_.webGL_texture;
				self.type.updateAllCurrentTexture();
			}
			if (resize_ === 0)		// resize to image size
			{
				self.width = img.width;
				self.height = img.height;
				self.set_bbox_changed();
			}
			self.runtime.redraw = true;
			self.runtime.trigger(cr.plugins_.Sprite.prototype.cnds.OnURLLoaded, self);
		};
		if (url_.substr(0, 5) !== "data:")
			img.crossOrigin = 'anonymous';
		img.src = url_;
	};
	Acts.prototype.SetCollisions = function (set_)
	{
		if (this.collisionsEnabled === (set_ !== 0))
			return;		// no change
		this.collisionsEnabled = (set_ !== 0);
		if (this.collisionsEnabled)
			this.set_bbox_changed();		// needs to be added back to cells
		else
		{
			if (this.collcells.right >= this.collcells.left)
				this.type.collision_grid.update(this, this.collcells, null);
			this.collcells.set(0, 0, -1, -1);
		}
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.AnimationFrame = function (ret)
	{
		ret.set_int(this.cur_frame);
	};
	Exps.prototype.AnimationFrameCount = function (ret)
	{
		ret.set_int(this.cur_animation.frames.length);
	};
	Exps.prototype.AnimationName = function (ret)
	{
		ret.set_string(this.cur_animation.name);
	};
	Exps.prototype.AnimationSpeed = function (ret)
	{
		ret.set_float(this.animForwards ? this.cur_anim_speed : -this.cur_anim_speed);
	};
	Exps.prototype.ImagePointX = function (ret, imgpt)
	{
		ret.set_float(this.getImagePoint(imgpt, true));
	};
	Exps.prototype.ImagePointY = function (ret, imgpt)
	{
		ret.set_float(this.getImagePoint(imgpt, false));
	};
	Exps.prototype.ImagePointCount = function (ret)
	{
		ret.set_int(this.curFrame.image_points.length);
	};
	Exps.prototype.ImageWidth = function (ret)
	{
		ret.set_float(this.curFrame.width);
	};
	Exps.prototype.ImageHeight = function (ret)
	{
		ret.set_float(this.curFrame.height);
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.Text = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Text.prototype;
	pluginProto.onCreate = function ()
	{
		pluginProto.acts.SetWidth = function (w)
		{
			if (this.width !== w)
			{
				this.width = w;
				this.text_changed = true;	// also recalculate text wrapping
				this.set_bbox_changed();
			}
		};
	};
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	typeProto.onLostWebGLContext = function ()
	{
		if (this.is_family)
			return;
		var i, len, inst;
		for (i = 0, len = this.instances.length; i < len; i++)
		{
			inst = this.instances[i];
			inst.mycanvas = null;
			inst.myctx = null;
			inst.mytex = null;
		}
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
		if (this.recycled)
			this.lines.length = 0;
		else
			this.lines = [];		// for word wrapping
		this.text_changed = true;
	};
	var instanceProto = pluginProto.Instance.prototype;
	var requestedWebFonts = {};		// already requested web fonts have an entry here
	instanceProto.onCreate = function()
	{
		this.text = this.properties[0];
		this.visible = (this.properties[1] === 0);		// 0=visible, 1=invisible
		this.font = this.properties[2];
		this.color = this.properties[3];
		this.halign = this.properties[4];				// 0=left, 1=center, 2=right
		this.valign = this.properties[5];				// 0=top, 1=center, 2=bottom
		this.wrapbyword = (this.properties[7] === 0);	// 0=word, 1=character
		this.lastwidth = this.width;
		this.lastwrapwidth = this.width;
		this.lastheight = this.height;
		this.line_height_offset = this.properties[8];
		this.facename = "";
		this.fontstyle = "";
		this.ptSize = 0;
		this.textWidth = 0;
		this.textHeight = 0;
		this.parseFont();
		this.mycanvas = null;
		this.myctx = null;
		this.mytex = null;
		this.need_text_redraw = false;
		this.last_render_tick = this.runtime.tickcount;
		if (this.recycled)
			this.rcTex.set(0, 0, 1, 1);
		else
			this.rcTex = new cr.rect(0, 0, 1, 1);
		if (this.runtime.glwrap)
			this.runtime.tickMe(this);
;
	};
	instanceProto.parseFont = function ()
	{
		var arr = this.font.split(" ");
		var i;
		for (i = 0; i < arr.length; i++)
		{
			if (arr[i].substr(arr[i].length - 2, 2) === "pt")
			{
				this.ptSize = parseInt(arr[i].substr(0, arr[i].length - 2));
				this.pxHeight = Math.ceil((this.ptSize / 72.0) * 96.0) + 4;	// assume 96dpi...
				if (i > 0)
					this.fontstyle = arr[i - 1];
				this.facename = arr[i + 1];
				for (i = i + 2; i < arr.length; i++)
					this.facename += " " + arr[i];
				break;
			}
		}
	};
	instanceProto.saveToJSON = function ()
	{
		return {
			"t": this.text,
			"f": this.font,
			"c": this.color,
			"ha": this.halign,
			"va": this.valign,
			"wr": this.wrapbyword,
			"lho": this.line_height_offset,
			"fn": this.facename,
			"fs": this.fontstyle,
			"ps": this.ptSize,
			"pxh": this.pxHeight,
			"tw": this.textWidth,
			"th": this.textHeight,
			"lrt": this.last_render_tick
		};
	};
	instanceProto.loadFromJSON = function (o)
	{
		this.text = o["t"];
		this.font = o["f"];
		this.color = o["c"];
		this.halign = o["ha"];
		this.valign = o["va"];
		this.wrapbyword = o["wr"];
		this.line_height_offset = o["lho"];
		this.facename = o["fn"];
		this.fontstyle = o["fs"];
		this.ptSize = o["ps"];
		this.pxHeight = o["pxh"];
		this.textWidth = o["tw"];
		this.textHeight = o["th"];
		this.last_render_tick = o["lrt"];
		this.text_changed = true;
		this.lastwidth = this.width;
		this.lastwrapwidth = this.width;
		this.lastheight = this.height;
	};
	instanceProto.tick = function ()
	{
		if (this.runtime.glwrap && this.mytex && (this.runtime.tickcount - this.last_render_tick >= 300))
		{
			var layer = this.layer;
            this.update_bbox();
            var bbox = this.bbox;
            if (bbox.right < layer.viewLeft || bbox.bottom < layer.viewTop || bbox.left > layer.viewRight || bbox.top > layer.viewBottom)
			{
				this.runtime.glwrap.deleteTexture(this.mytex);
				this.mytex = null;
				this.myctx = null;
				this.mycanvas = null;
			}
		}
	};
	instanceProto.onDestroy = function ()
	{
		this.myctx = null;
		this.mycanvas = null;
		if (this.runtime.glwrap && this.mytex)
			this.runtime.glwrap.deleteTexture(this.mytex);
		this.mytex = null;
	};
	instanceProto.updateFont = function ()
	{
		this.font = this.fontstyle + " " + this.ptSize.toString() + "pt " + this.facename;
		this.text_changed = true;
		this.runtime.redraw = true;
	};
	instanceProto.draw = function(ctx, glmode)
	{
		ctx.font = this.font;
		ctx.textBaseline = "top";
		ctx.fillStyle = this.color;
		ctx.globalAlpha = glmode ? 1 : this.opacity;
		var myscale = 1;
		if (glmode)
		{
			myscale = this.layer.getScale();
			ctx.save();
			ctx.scale(myscale, myscale);
		}
		if (this.text_changed || this.width !== this.lastwrapwidth)
		{
			this.type.plugin.WordWrap(this.text, this.lines, ctx, this.width, this.wrapbyword);
			this.text_changed = false;
			this.lastwrapwidth = this.width;
		}
		this.update_bbox();
		var penX = glmode ? 0 : this.bquad.tlx;
		var penY = glmode ? 0 : this.bquad.tly;
		if (this.runtime.pixel_rounding)
		{
			penX = (penX + 0.5) | 0;
			penY = (penY + 0.5) | 0;
		}
		if (this.angle !== 0 && !glmode)
		{
			ctx.save();
			ctx.translate(penX, penY);
			ctx.rotate(this.angle);
			penX = 0;
			penY = 0;
		}
		var endY = penY + this.height;
		var line_height = this.pxHeight;
		line_height += this.line_height_offset;
		var drawX;
		var i;
		if (this.valign === 1)		// center
			penY += Math.max(this.height / 2 - (this.lines.length * line_height) / 2, 0);
		else if (this.valign === 2)	// bottom
			penY += Math.max(this.height - (this.lines.length * line_height) - 2, 0);
		for (i = 0; i < this.lines.length; i++)
		{
			drawX = penX;
			if (this.halign === 1)		// center
				drawX = penX + (this.width - this.lines[i].width) / 2;
			else if (this.halign === 2)	// right
				drawX = penX + (this.width - this.lines[i].width);
			ctx.fillText(this.lines[i].text, drawX, penY);
			penY += line_height;
			if (penY >= endY - line_height)
				break;
		}
		if (this.angle !== 0 || glmode)
			ctx.restore();
		this.last_render_tick = this.runtime.tickcount;
	};
	instanceProto.drawGL = function(glw)
	{
		if (this.width < 1 || this.height < 1)
			return;
		var need_redraw = this.text_changed || this.need_text_redraw;
		this.need_text_redraw = false;
		var layer_scale = this.layer.getScale();
		var layer_angle = this.layer.getAngle();
		var rcTex = this.rcTex;
		var floatscaledwidth = layer_scale * this.width;
		var floatscaledheight = layer_scale * this.height;
		var scaledwidth = Math.ceil(floatscaledwidth);
		var scaledheight = Math.ceil(floatscaledheight);
		var halfw = this.runtime.draw_width / 2;
		var halfh = this.runtime.draw_height / 2;
		if (!this.myctx)
		{
			this.mycanvas = document.createElement("canvas");
			this.mycanvas.width = scaledwidth;
			this.mycanvas.height = scaledheight;
			this.lastwidth = scaledwidth;
			this.lastheight = scaledheight;
			need_redraw = true;
			this.myctx = this.mycanvas.getContext("2d");
		}
		if (scaledwidth !== this.lastwidth || scaledheight !== this.lastheight)
		{
			this.mycanvas.width = scaledwidth;
			this.mycanvas.height = scaledheight;
			if (this.mytex)
			{
				glw.deleteTexture(this.mytex);
				this.mytex = null;
			}
			need_redraw = true;
		}
		if (need_redraw)
		{
			this.myctx.clearRect(0, 0, scaledwidth, scaledheight);
			this.draw(this.myctx, true);
			if (!this.mytex)
				this.mytex = glw.createEmptyTexture(scaledwidth, scaledheight, this.runtime.linearSampling, this.runtime.isMobile);
			glw.videoToTexture(this.mycanvas, this.mytex, this.runtime.isMobile);
		}
		this.lastwidth = scaledwidth;
		this.lastheight = scaledheight;
		glw.setTexture(this.mytex);
		glw.setOpacity(this.opacity);
		glw.resetModelView();
		glw.translate(-halfw, -halfh);
		glw.updateModelView();
		var q = this.bquad;
		var tlx = this.layer.layerToCanvas(q.tlx, q.tly, true, true);
		var tly = this.layer.layerToCanvas(q.tlx, q.tly, false, true);
		var trx = this.layer.layerToCanvas(q.trx, q.try_, true, true);
		var try_ = this.layer.layerToCanvas(q.trx, q.try_, false, true);
		var brx = this.layer.layerToCanvas(q.brx, q.bry, true, true);
		var bry = this.layer.layerToCanvas(q.brx, q.bry, false, true);
		var blx = this.layer.layerToCanvas(q.blx, q.bly, true, true);
		var bly = this.layer.layerToCanvas(q.blx, q.bly, false, true);
		if (this.runtime.pixel_rounding || (this.angle === 0 && layer_angle === 0))
		{
			var ox = ((tlx + 0.5) | 0) - tlx;
			var oy = ((tly + 0.5) | 0) - tly
			tlx += ox;
			tly += oy;
			trx += ox;
			try_ += oy;
			brx += ox;
			bry += oy;
			blx += ox;
			bly += oy;
		}
		if (this.angle === 0 && layer_angle === 0)
		{
			trx = tlx + scaledwidth;
			try_ = tly;
			brx = trx;
			bry = tly + scaledheight;
			blx = tlx;
			bly = bry;
			rcTex.right = 1;
			rcTex.bottom = 1;
		}
		else
		{
			rcTex.right = floatscaledwidth / scaledwidth;
			rcTex.bottom = floatscaledheight / scaledheight;
		}
		glw.quadTex(tlx, tly, trx, try_, brx, bry, blx, bly, rcTex);
		glw.resetModelView();
		glw.scale(layer_scale, layer_scale);
		glw.rotateZ(-this.layer.getAngle());
		glw.translate((this.layer.viewLeft + this.layer.viewRight) / -2, (this.layer.viewTop + this.layer.viewBottom) / -2);
		glw.updateModelView();
		this.last_render_tick = this.runtime.tickcount;
	};
	var wordsCache = [];
	pluginProto.TokeniseWords = function (text)
	{
		wordsCache.length = 0;
		var cur_word = "";
		var ch;
		var i = 0;
		while (i < text.length)
		{
			ch = text.charAt(i);
			if (ch === "\n")
			{
				if (cur_word.length)
				{
					wordsCache.push(cur_word);
					cur_word = "";
				}
				wordsCache.push("\n");
				++i;
			}
			else if (ch === " " || ch === "\t" || ch === "-")
			{
				do {
					cur_word += text.charAt(i);
					i++;
				}
				while (i < text.length && (text.charAt(i) === " " || text.charAt(i) === "\t"));
				wordsCache.push(cur_word);
				cur_word = "";
			}
			else if (i < text.length)
			{
				cur_word += ch;
				i++;
			}
		}
		if (cur_word.length)
			wordsCache.push(cur_word);
	};
	var linesCache = [];
	function allocLine()
	{
		if (linesCache.length)
			return linesCache.pop();
		else
			return {};
	};
	function freeLine(l)
	{
		linesCache.push(l);
	};
	function freeAllLines(arr)
	{
		var i, len;
		for (i = 0, len = arr.length; i < len; i++)
		{
			freeLine(arr[i]);
		}
		arr.length = 0;
	};
	pluginProto.WordWrap = function (text, lines, ctx, width, wrapbyword)
	{
		if (!text || !text.length)
		{
			freeAllLines(lines);
			return;
		}
		if (width <= 2.0)
		{
			freeAllLines(lines);
			return;
		}
		if (text.length <= 100 && text.indexOf("\n") === -1)
		{
			var all_width = ctx.measureText(text).width;
			if (all_width <= width)
			{
				freeAllLines(lines);
				lines.push(allocLine());
				lines[0].text = text;
				lines[0].width = all_width;
				return;
			}
		}
		this.WrapText(text, lines, ctx, width, wrapbyword);
	};
	pluginProto.WrapText = function (text, lines, ctx, width, wrapbyword)
	{
		var wordArray;
		if (wrapbyword)
		{
			this.TokeniseWords(text);	// writes to wordsCache
			wordArray = wordsCache;
		}
		else
			wordArray = text;
		var cur_line = "";
		var prev_line;
		var line_width;
		var i;
		var lineIndex = 0;
		var line;
		for (i = 0; i < wordArray.length; i++)
		{
			if (wordArray[i] === "\n")
			{
				if (lineIndex >= lines.length)
					lines.push(allocLine());
				line = lines[lineIndex];
				line.text = cur_line;
				line.width = ctx.measureText(cur_line).width;
				lineIndex++;
				cur_line = "";
				continue;
			}
			prev_line = cur_line;
			cur_line += wordArray[i];
			line_width = ctx.measureText(cur_line).width;
			if (line_width >= width)
			{
				if (lineIndex >= lines.length)
					lines.push(allocLine());
				line = lines[lineIndex];
				line.text = prev_line;
				line.width = ctx.measureText(prev_line).width;
				lineIndex++;
				cur_line = wordArray[i];
				if (!wrapbyword && cur_line === " ")
					cur_line = "";
			}
		}
		if (cur_line.length)
		{
			if (lineIndex >= lines.length)
				lines.push(allocLine());
			line = lines[lineIndex];
			line.text = cur_line;
			line.width = ctx.measureText(cur_line).width;
			lineIndex++;
		}
		for (i = lineIndex; i < lines.length; i++)
			freeLine(lines[i]);
		lines.length = lineIndex;
	};
	function Cnds() {};
	Cnds.prototype.CompareText = function(text_to_compare, case_sensitive)
	{
		if (case_sensitive)
			return this.text == text_to_compare;
		else
			return cr.equals_nocase(this.text, text_to_compare);
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.SetText = function(param)
	{
		if (cr.is_number(param) && param < 1e9)
			param = Math.round(param * 1e10) / 1e10;	// round to nearest ten billionth - hides floating point errors
		var text_to_set = param.toString();
		if (this.text !== text_to_set)
		{
			this.text = text_to_set;
			this.text_changed = true;
			this.runtime.redraw = true;
		}
	};
	Acts.prototype.AppendText = function(param)
	{
		if (cr.is_number(param))
			param = Math.round(param * 1e10) / 1e10;	// round to nearest ten billionth - hides floating point errors
		var text_to_append = param.toString();
		if (text_to_append)	// not empty
		{
			this.text += text_to_append;
			this.text_changed = true;
			this.runtime.redraw = true;
		}
	};
	Acts.prototype.SetFontFace = function (face_, style_)
	{
		var newstyle = "";
		switch (style_) {
		case 1: newstyle = "bold"; break;
		case 2: newstyle = "italic"; break;
		case 3: newstyle = "bold italic"; break;
		}
		if (face_ === this.facename && newstyle === this.fontstyle)
			return;		// no change
		this.facename = face_;
		this.fontstyle = newstyle;
		this.updateFont();
	};
	Acts.prototype.SetFontSize = function (size_)
	{
		if (this.ptSize === size_)
			return;
		this.ptSize = size_;
		this.pxHeight = Math.ceil((this.ptSize / 72.0) * 96.0) + 4;	// assume 96dpi...
		this.updateFont();
	};
	Acts.prototype.SetFontColor = function (rgb)
	{
		var newcolor = "rgb(" + cr.GetRValue(rgb).toString() + "," + cr.GetGValue(rgb).toString() + "," + cr.GetBValue(rgb).toString() + ")";
		if (newcolor === this.color)
			return;
		this.color = newcolor;
		this.need_text_redraw = true;
		this.runtime.redraw = true;
	};
	Acts.prototype.SetWebFont = function (familyname_, cssurl_)
	{
		if (this.runtime.isDomFree)
		{
			cr.logexport("[Construct 2] Text plugin: 'Set web font' not supported on this platform - the action has been ignored");
			return;		// DC todo
		}
		var self = this;
		var refreshFunc = (function () {
							self.runtime.redraw = true;
							self.text_changed = true;
						});
		if (requestedWebFonts.hasOwnProperty(cssurl_))
		{
			var newfacename = "'" + familyname_ + "'";
			if (this.facename === newfacename)
				return;	// no change
			this.facename = newfacename;
			this.updateFont();
			for (var i = 1; i < 10; i++)
			{
				setTimeout(refreshFunc, i * 100);
				setTimeout(refreshFunc, i * 1000);
			}
			return;
		}
		var wf = document.createElement("link");
		wf.href = cssurl_;
		wf.rel = "stylesheet";
		wf.type = "text/css";
		wf.onload = refreshFunc;
		document.getElementsByTagName('head')[0].appendChild(wf);
		requestedWebFonts[cssurl_] = true;
		this.facename = "'" + familyname_ + "'";
		this.updateFont();
		for (var i = 1; i < 10; i++)
		{
			setTimeout(refreshFunc, i * 100);
			setTimeout(refreshFunc, i * 1000);
		}
;
	};
	Acts.prototype.SetEffect = function (effect)
	{
		this.compositeOp = cr.effectToCompositeOp(effect);
		cr.setGLBlend(this, effect, this.runtime.gl);
		this.runtime.redraw = true;
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.Text = function(ret)
	{
		ret.set_string(this.text);
	};
	Exps.prototype.FaceName = function (ret)
	{
		ret.set_string(this.facename);
	};
	Exps.prototype.FaceSize = function (ret)
	{
		ret.set_int(this.ptSize);
	};
	Exps.prototype.TextWidth = function (ret)
	{
		var w = 0;
		var i, len, x;
		for (i = 0, len = this.lines.length; i < len; i++)
		{
			x = this.lines[i].width;
			if (w < x)
				w = x;
		}
		ret.set_int(w);
	};
	Exps.prototype.TextHeight = function (ret)
	{
		ret.set_int(this.lines.length * (this.pxHeight + this.line_height_offset) - this.line_height_offset);
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.TextBox = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.TextBox.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	var elemTypes = ["text", "password", "email", "number", "tel", "url"];
	if (navigator.userAgent.indexOf("MSIE 9") > -1)
	{
		elemTypes[2] = "text";
		elemTypes[3] = "text";
		elemTypes[4] = "text";
		elemTypes[5] = "text";
	}
	instanceProto.onCreate = function()
	{
		if (this.runtime.isDomFree)
		{
			cr.logexport("[Construct 2] Textbox plugin not supported on this platform - the object will not be created");
			return;
		}
		if (this.properties[7] === 6)	// textarea
		{
			this.elem = document.createElement("textarea");
			jQuery(this.elem).css("resize", "none");
		}
		else
		{
			this.elem = document.createElement("input");
			this.elem.type = elemTypes[this.properties[7]];
		}
		this.elem.id = this.properties[9];
		jQuery(this.elem).appendTo(this.runtime.canvasdiv ? this.runtime.canvasdiv : "body");
		this.elem["autocomplete"] = "off";
		this.elem.value = this.properties[0];
		this.elem["placeholder"] = this.properties[1];
		this.elem.title = this.properties[2];
		this.elem.disabled = (this.properties[4] === 0);
		this.elem["readOnly"] = (this.properties[5] === 1);
		this.elem["spellcheck"] = (this.properties[6] === 1);
		this.autoFontSize = (this.properties[8] !== 0);
		this.element_hidden = false;
		if (this.properties[3] === 0)
		{
			jQuery(this.elem).hide();
			this.visible = false;
			this.element_hidden = true;
		}
		var onchangetrigger = (function (self) {
			return function() {
				self.runtime.trigger(cr.plugins_.TextBox.prototype.cnds.OnTextChanged, self);
			};
		})(this);
		this.elem["oninput"] = onchangetrigger;
		if (navigator.userAgent.indexOf("MSIE") !== -1)
			this.elem["oncut"] = onchangetrigger;
		this.elem.onclick = (function (self) {
			return function(e) {
				e.stopPropagation();
				self.runtime.isInUserInputEvent = true;
				self.runtime.trigger(cr.plugins_.TextBox.prototype.cnds.OnClicked, self);
				self.runtime.isInUserInputEvent = false;
			};
		})(this);
		this.elem.ondblclick = (function (self) {
			return function(e) {
				e.stopPropagation();
				self.runtime.isInUserInputEvent = true;
				self.runtime.trigger(cr.plugins_.TextBox.prototype.cnds.OnDoubleClicked, self);
				self.runtime.isInUserInputEvent = false;
			};
		})(this);
		this.elem.addEventListener("touchstart", function (e) {
			e.stopPropagation();
		}, false);
		this.elem.addEventListener("touchmove", function (e) {
			e.stopPropagation();
		}, false);
		this.elem.addEventListener("touchend", function (e) {
			e.stopPropagation();
		}, false);
		jQuery(this.elem).mousedown(function (e) {
			e.stopPropagation();
		});
		jQuery(this.elem).mouseup(function (e) {
			e.stopPropagation();
		});
		jQuery(this.elem).keydown(function (e) {
			if (e.which !== 13 && e.which != 27)	// allow enter and escape
				e.stopPropagation();
		});
		jQuery(this.elem).keyup(function (e) {
			if (e.which !== 13 && e.which != 27)	// allow enter and escape
				e.stopPropagation();
		});
		this.lastLeft = 0;
		this.lastTop = 0;
		this.lastRight = 0;
		this.lastBottom = 0;
		this.lastWinWidth = 0;
		this.lastWinHeight = 0;
		this.updatePosition(true);
		this.runtime.tickMe(this);
	};
	instanceProto.saveToJSON = function ()
	{
		return {
			"text": this.elem.value,
			"placeholder": this.elem.placeholder,
			"tooltip": this.elem.title,
			"disabled": !!this.elem.disabled,
			"readonly": !!this.elem.readOnly,
			"spellcheck": !!this.elem["spellcheck"]
		};
	};
	instanceProto.loadFromJSON = function (o)
	{
		this.elem.value = o["text"];
		this.elem.placeholder = o["placeholder"];
		this.elem.title = o["tooltip"];
		this.elem.disabled = o["disabled"];
		this.elem.readOnly = o["readonly"];
		this.elem["spellcheck"] = o["spellcheck"];
	};
	instanceProto.onDestroy = function ()
	{
		if (this.runtime.isDomFree)
				return;
		jQuery(this.elem).remove();
		this.elem = null;
	};
	instanceProto.tick = function ()
	{
		this.updatePosition();
	};
	instanceProto.updatePosition = function (first)
	{
		if (this.runtime.isDomFree)
			return;
		var left = this.layer.layerToCanvas(this.x, this.y, true);
		var top = this.layer.layerToCanvas(this.x, this.y, false);
		var right = this.layer.layerToCanvas(this.x + this.width, this.y + this.height, true);
		var bottom = this.layer.layerToCanvas(this.x + this.width, this.y + this.height, false);
		if (!this.visible || !this.layer.visible || right <= 0 || bottom <= 0 || left >= this.runtime.width || top >= this.runtime.height)
		{
			if (!this.element_hidden)
				jQuery(this.elem).hide();
			this.element_hidden = true;
			return;
		}
		if (left < 1)
			left = 1;
		if (top < 1)
			top = 1;
		if (right >= this.runtime.width)
			right = this.runtime.width - 1;
		if (bottom >= this.runtime.height)
			bottom = this.runtime.height - 1;
		var curWinWidth = window.innerWidth;
		var curWinHeight = window.innerHeight;
		if (!first && this.lastLeft === left && this.lastTop === top && this.lastRight === right && this.lastBottom === bottom && this.lastWinWidth === curWinWidth && this.lastWinHeight === curWinHeight)
		{
			if (this.element_hidden)
			{
				jQuery(this.elem).show();
				this.element_hidden = false;
			}
			return;
		}
		this.lastLeft = left;
		this.lastTop = top;
		this.lastRight = right;
		this.lastBottom = bottom;
		this.lastWinWidth = curWinWidth;
		this.lastWinHeight = curWinHeight;
		if (this.element_hidden)
		{
			jQuery(this.elem).show();
			this.element_hidden = false;
		}
		var offx = Math.round(left) + jQuery(this.runtime.canvas).offset().left;
		var offy = Math.round(top) + jQuery(this.runtime.canvas).offset().top;
		jQuery(this.elem).css("position", "absolute");
		jQuery(this.elem).offset({left: offx, top: offy});
		jQuery(this.elem).width(Math.round(right - left));
		jQuery(this.elem).height(Math.round(bottom - top));
		if (this.autoFontSize)
			jQuery(this.elem).css("font-size", ((this.layer.getScale(true) / this.runtime.devicePixelRatio) - 0.2) + "em");
	};
	instanceProto.draw = function(ctx)
	{
	};
	instanceProto.drawGL = function(glw)
	{
	};
	function Cnds() {};
	Cnds.prototype.CompareText = function (text, case_)
	{
		if (this.runtime.isDomFree)
			return false;
		if (case_ === 0)	// insensitive
			return cr.equals_nocase(this.elem.value, text);
		else
			return this.elem.value === text;
	};
	Cnds.prototype.OnTextChanged = function ()
	{
		return true;
	};
	Cnds.prototype.OnClicked = function ()
	{
		return true;
	};
	Cnds.prototype.OnDoubleClicked = function ()
	{
		return true;
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.SetText = function (text)
	{
		if (this.runtime.isDomFree)
			return;
		this.elem.value = text;
	};
	Acts.prototype.SetPlaceholder = function (text)
	{
		if (this.runtime.isDomFree)
			return;
		this.elem.placeholder = text;
	};
	Acts.prototype.SetTooltip = function (text)
	{
		if (this.runtime.isDomFree)
			return;
		this.elem.title = text;
	};
	Acts.prototype.SetVisible = function (vis)
	{
		if (this.runtime.isDomFree)
			return;
		this.visible = (vis !== 0);
	};
	Acts.prototype.SetEnabled = function (en)
	{
		if (this.runtime.isDomFree)
			return;
		this.elem.disabled = (en === 0);
	};
	Acts.prototype.SetReadOnly = function (ro)
	{
		if (this.runtime.isDomFree)
			return;
		this.elem.readOnly = (ro === 0);
	};
	Acts.prototype.SetFocus = function ()
	{
		if (this.runtime.isDomFree)
			return;
		this.elem.focus();
	};
	Acts.prototype.SetBlur = function ()
	{
		if (this.runtime.isDomFree)
			return;
		this.elem.blur();
	};
	Acts.prototype.SetCSSStyle = function (p, v)
	{
		if (this.runtime.isDomFree)
			return;
		jQuery(this.elem).css(p, v);
	};
	Acts.prototype.ScrollToBottom = function ()
	{
		if (this.runtime.isDomFree)
			return;
		this.elem.scrollTop = this.elem.scrollHeight;
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.Text = function (ret)
	{
		if (this.runtime.isDomFree)
		{
			ret.set_string("");
			return;
		}
		ret.set_string(this.elem.value);
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.Touch = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Touch.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
		this.touches = [];
		this.mouseDown = false;
	};
	var instanceProto = pluginProto.Instance.prototype;
	var dummyoffset = {left: 0, top: 0};
	instanceProto.findTouch = function (id)
	{
		var i, len;
		for (i = 0, len = this.touches.length; i < len; i++)
		{
			if (this.touches[i]["id"] === id)
				return i;
		}
		return -1;
	};
	var appmobi_accx = 0;
	var appmobi_accy = 0;
	var appmobi_accz = 0;
	function AppMobiGetAcceleration(evt)
	{
		appmobi_accx = evt.x;
		appmobi_accy = evt.y;
		appmobi_accz = evt.z;
	};
	var pg_accx = 0;
	var pg_accy = 0;
	var pg_accz = 0;
	function PhoneGapGetAcceleration(evt)
	{
		pg_accx = evt.x;
		pg_accy = evt.y;
		pg_accz = evt.z;
	};
	var theInstance = null;
	var touchinfo_cache = [];
	function AllocTouchInfo(x, y, id, index)
	{
		var ret;
		if (touchinfo_cache.length)
			ret = touchinfo_cache.pop();
		else
			ret = new TouchInfo();
		ret.init(x, y, id, index);
		return ret;
	};
	function ReleaseTouchInfo(ti)
	{
		if (touchinfo_cache.length < 100)
			touchinfo_cache.push(ti);
	};
	var GESTURE_HOLD_THRESHOLD = 15;		// max px motion for hold gesture to register
	var GESTURE_HOLD_TIMEOUT = 500;			// time for hold gesture to register
	var GESTURE_TAP_TIMEOUT = 333;			// time for tap gesture to register
	var GESTURE_DOUBLETAP_THRESHOLD = 25;	// max distance apart for taps to be
	function TouchInfo()
	{
		this.starttime = 0;
		this.time = 0;
		this.lasttime = 0;
		this.startx = 0;
		this.starty = 0;
		this.x = 0;
		this.y = 0;
		this.lastx = 0;
		this.lasty = 0;
		this["id"] = 0;
		this.startindex = 0;
		this.triggeredHold = false;
		this.tooFarForHold = false;
	};
	TouchInfo.prototype.init = function (x, y, id, index)
	{
		var nowtime = cr.performance_now();
		this.time = nowtime;
		this.lasttime = nowtime;
		this.starttime = nowtime;
		this.startx = x;
		this.starty = y;
		this.x = x;
		this.y = y;
		this.lastx = x;
		this.lasty = y;
		this["id"] = id;
		this.startindex = index;
		this.triggeredHold = false;
		this.tooFarForHold = false;
	};
	TouchInfo.prototype.update = function (nowtime, x, y)
	{
		this.lasttime = this.time;
		this.time = nowtime;
		this.lastx = this.x;
		this.lasty = this.y;
		this.x = x;
		this.y = y;
		if (!this.tooFarForHold && cr.distanceTo(this.startx, this.starty, this.x, this.y) >= GESTURE_HOLD_THRESHOLD)
		{
			this.tooFarForHold = true;
		}
	};
	TouchInfo.prototype.maybeTriggerHold = function (inst, index)
	{
		if (this.triggeredHold)
			return;		// already triggered this gesture
		var nowtime = cr.performance_now();
		if (nowtime - this.starttime >= GESTURE_HOLD_TIMEOUT && !this.tooFarForHold && cr.distanceTo(this.startx, this.starty, this.x, this.y) < GESTURE_HOLD_THRESHOLD)
		{
			this.triggeredHold = true;
			inst.trigger_index = this.startindex;
			inst.trigger_id = this["id"];
			inst.getTouchIndex = index;
			inst.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnHoldGesture, inst);
			inst.curTouchX = this.x;
			inst.curTouchY = this.y;
			inst.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnHoldGestureObject, inst);
			inst.getTouchIndex = 0;
		}
	};
	var lastTapX = -1000;
	var lastTapY = -1000;
	var lastTapTime = -10000;
	TouchInfo.prototype.maybeTriggerTap = function (inst, index)
	{
		if (this.triggeredHold)
			return;
		var nowtime = cr.performance_now();
		if (nowtime - this.starttime <= GESTURE_TAP_TIMEOUT && !this.tooFarForHold && cr.distanceTo(this.startx, this.starty, this.x, this.y) < GESTURE_HOLD_THRESHOLD)
		{
			inst.trigger_index = this.startindex;
			inst.trigger_id = this["id"];
			inst.getTouchIndex = index;
			if ((nowtime - lastTapTime <= GESTURE_TAP_TIMEOUT * 2) && cr.distanceTo(lastTapX, lastTapY, this.x, this.y) < GESTURE_DOUBLETAP_THRESHOLD)
			{
				inst.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnDoubleTapGesture, inst);
				inst.curTouchX = this.x;
				inst.curTouchY = this.y;
				inst.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnDoubleTapGestureObject, inst);
				lastTapX = -1000;
				lastTapY = -1000;
				lastTapTime = -10000;
			}
			else
			{
				inst.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnTapGesture, inst);
				inst.curTouchX = this.x;
				inst.curTouchY = this.y;
				inst.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnTapGestureObject, inst);
				lastTapX = this.x;
				lastTapY = this.y;
				lastTapTime = nowtime;
			}
			inst.getTouchIndex = 0;
		}
	};
	instanceProto.onCreate = function()
	{
		theInstance = this;
		this.isWindows8 = !!(typeof window["c2isWindows8"] !== "undefined" && window["c2isWindows8"]);
		this.orient_alpha = 0;
		this.orient_beta = 0;
		this.orient_gamma = 0;
		this.acc_g_x = 0;
		this.acc_g_y = 0;
		this.acc_g_z = 0;
		this.acc_x = 0;
		this.acc_y = 0;
		this.acc_z = 0;
		this.curTouchX = 0;
		this.curTouchY = 0;
		this.trigger_index = 0;
		this.trigger_id = 0;
		this.getTouchIndex = 0;
		this.useMouseInput = (this.properties[0] !== 0);
		var elem = (this.runtime.fullscreen_mode > 0) ? document : this.runtime.canvas;
		var elem2 = document;
		if (this.runtime.isDirectCanvas)
			elem2 = elem = window["Canvas"];
		else if (this.runtime.isCocoonJs)
			elem2 = elem = window;
		var self = this;
		if (window.navigator["pointerEnabled"])
		{
			elem.addEventListener("pointerdown",
				function(info) {
					self.onPointerStart(info);
				},
				false
			);
			elem.addEventListener("pointermove",
				function(info) {
					self.onPointerMove(info);
				},
				false
			);
			elem2.addEventListener("pointerup",
				function(info) {
					self.onPointerEnd(info, false);
				},
				false
			);
			elem2.addEventListener("pointercancel",
				function(info) {
					self.onPointerEnd(info, true);
				},
				false
			);
			if (this.runtime.canvas)
			{
				this.runtime.canvas.addEventListener("MSGestureHold", function(e) {
					e.preventDefault();
				}, false);
				document.addEventListener("MSGestureHold", function(e) {
					e.preventDefault();
				}, false);
				this.runtime.canvas.addEventListener("gesturehold", function(e) {
					e.preventDefault();
				}, false);
				document.addEventListener("gesturehold", function(e) {
					e.preventDefault();
				}, false);
			}
		}
		else if (window.navigator["msPointerEnabled"])
		{
			elem.addEventListener("MSPointerDown",
				function(info) {
					self.onPointerStart(info);
				},
				false
			);
			elem.addEventListener("MSPointerMove",
				function(info) {
					self.onPointerMove(info);
				},
				false
			);
			elem2.addEventListener("MSPointerUp",
				function(info) {
					self.onPointerEnd(info, false);
				},
				false
			);
			elem2.addEventListener("MSPointerCancel",
				function(info) {
					self.onPointerEnd(info, true);
				},
				false
			);
			if (this.runtime.canvas)
			{
				this.runtime.canvas.addEventListener("MSGestureHold", function(e) {
					e.preventDefault();
				}, false);
				document.addEventListener("MSGestureHold", function(e) {
					e.preventDefault();
				}, false);
			}
		}
		else
		{
			elem.addEventListener("touchstart",
				function(info) {
					self.onTouchStart(info);
				},
				false
			);
			elem.addEventListener("touchmove",
				function(info) {
					self.onTouchMove(info);
				},
				false
			);
			elem2.addEventListener("touchend",
				function(info) {
					self.onTouchEnd(info, false);
				},
				false
			);
			elem2.addEventListener("touchcancel",
				function(info) {
					self.onTouchEnd(info, true);
				},
				false
			);
		}
		if (this.isWindows8)
		{
			var win8accelerometerFn = function(e) {
					var reading = e["reading"];
					self.acc_x = reading["accelerationX"];
					self.acc_y = reading["accelerationY"];
					self.acc_z = reading["accelerationZ"];
				};
			var win8inclinometerFn = function(e) {
					var reading = e["reading"];
					self.orient_alpha = reading["yawDegrees"];
					self.orient_beta = reading["pitchDegrees"];
					self.orient_gamma = reading["rollDegrees"];
				};
			var accelerometer = Windows["Devices"]["Sensors"]["Accelerometer"]["getDefault"]();
            if (accelerometer)
			{
                accelerometer["reportInterval"] = Math.max(accelerometer["minimumReportInterval"], 16);
				accelerometer.addEventListener("readingchanged", win8accelerometerFn);
            }
			var inclinometer = Windows["Devices"]["Sensors"]["Inclinometer"]["getDefault"]();
			if (inclinometer)
			{
				inclinometer["reportInterval"] = Math.max(inclinometer["minimumReportInterval"], 16);
				inclinometer.addEventListener("readingchanged", win8inclinometerFn);
			}
			document.addEventListener("visibilitychange", function(e) {
				if (document["hidden"] || document["msHidden"])
				{
					if (accelerometer)
						accelerometer.removeEventListener("readingchanged", win8accelerometerFn);
					if (inclinometer)
						inclinometer.removeEventListener("readingchanged", win8inclinometerFn);
				}
				else
				{
					if (accelerometer)
						accelerometer.addEventListener("readingchanged", win8accelerometerFn);
					if (inclinometer)
						inclinometer.addEventListener("readingchanged", win8inclinometerFn);
				}
			}, false);
		}
		else
		{
			window.addEventListener("deviceorientation", function (eventData) {
				self.orient_alpha = eventData["alpha"] || 0;
				self.orient_beta = eventData["beta"] || 0;
				self.orient_gamma = eventData["gamma"] || 0;
			}, false);
			window.addEventListener("devicemotion", function (eventData) {
				if (eventData["accelerationIncludingGravity"])
				{
					self.acc_g_x = eventData["accelerationIncludingGravity"]["x"] || 0;
					self.acc_g_y = eventData["accelerationIncludingGravity"]["y"] || 0;
					self.acc_g_z = eventData["accelerationIncludingGravity"]["z"] || 0;
				}
				if (eventData["acceleration"])
				{
					self.acc_x = eventData["acceleration"]["x"] || 0;
					self.acc_y = eventData["acceleration"]["y"] || 0;
					self.acc_z = eventData["acceleration"]["z"] || 0;
				}
			}, false);
		}
		if (this.useMouseInput && !this.runtime.isDomFree)
		{
			jQuery(document).mousemove(
				function(info) {
					self.onMouseMove(info);
				}
			);
			jQuery(document).mousedown(
				function(info) {
					self.onMouseDown(info);
				}
			);
			jQuery(document).mouseup(
				function(info) {
					self.onMouseUp(info);
				}
			);
		}
		if (this.runtime.isAppMobi && !this.runtime.isDirectCanvas)
		{
			AppMobi["accelerometer"]["watchAcceleration"](AppMobiGetAcceleration, { "frequency": 40, "adjustForRotation": true });
		}
		if (this.runtime.isPhoneGap && navigator["accelerometer"] && navigator["accelerometer"]["watchAcceleration"])
		{
			navigator["accelerometer"]["watchAcceleration"](PhoneGapGetAcceleration, null, { "frequency": 40 });
		}
		this.runtime.tick2Me(this);
	};
	instanceProto.onPointerMove = function (info)
	{
		if (info["pointerType"] === info["MSPOINTER_TYPE_MOUSE"] || info["pointerType"] === "mouse")
			return;
		if (info.preventDefault)
			info.preventDefault();
		var i = this.findTouch(info["pointerId"]);
		var nowtime = cr.performance_now();
		if (i >= 0)
		{
			var offset = this.runtime.isDomFree ? dummyoffset : jQuery(this.runtime.canvas).offset();
			var t = this.touches[i];
			if (nowtime - t.time < 2)
				return;
			t.update(nowtime, info.pageX - offset.left, info.pageY - offset.top);
		}
	};
	instanceProto.onPointerStart = function (info)
	{
		if (info["pointerType"] === info["MSPOINTER_TYPE_MOUSE"] || info["pointerType"] === "mouse")
			return;
		if (info.preventDefault && cr.isCanvasInputEvent(info))
			info.preventDefault();
		var offset = this.runtime.isDomFree ? dummyoffset : jQuery(this.runtime.canvas).offset();
		var touchx = info.pageX - offset.left;
		var touchy = info.pageY - offset.top;
		var nowtime = cr.performance_now();
		this.trigger_index = this.touches.length;
		this.trigger_id = info["pointerId"];
		this.touches.push(AllocTouchInfo(touchx, touchy, info["pointerId"], this.trigger_index));
		this.runtime.isInUserInputEvent = true;
		this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnNthTouchStart, this);
		this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnTouchStart, this);
		this.curTouchX = touchx;
		this.curTouchY = touchy;
		this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnTouchObject, this);
		this.runtime.isInUserInputEvent = false;
	};
	instanceProto.onPointerEnd = function (info, isCancel)
	{
		if (info["pointerType"] === info["MSPOINTER_TYPE_MOUSE"] || info["pointerType"] === "mouse")
			return;
		if (info.preventDefault && cr.isCanvasInputEvent(info))
			info.preventDefault();
		var i = this.findTouch(info["pointerId"]);
		this.trigger_index = (i >= 0 ? this.touches[i].startindex : -1);
		this.trigger_id = (i >= 0 ? this.touches[i]["id"] : -1);
		this.runtime.isInUserInputEvent = true;
		this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnNthTouchEnd, this);
		this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnTouchEnd, this);
		if (i >= 0)
		{
			if (!isCancel)
				this.touches[i].maybeTriggerTap(this, i);
			ReleaseTouchInfo(this.touches[i]);
			this.touches.splice(i, 1);
		}
		this.runtime.isInUserInputEvent = false;
	};
	instanceProto.onTouchMove = function (info)
	{
		if (info.preventDefault)
			info.preventDefault();
		var nowtime = cr.performance_now();
		var i, len, t, u;
		for (i = 0, len = info.changedTouches.length; i < len; i++)
		{
			t = info.changedTouches[i];
			var j = this.findTouch(t["identifier"]);
			if (j >= 0)
			{
				var offset = this.runtime.isDomFree ? dummyoffset : jQuery(this.runtime.canvas).offset();
				u = this.touches[j];
				if (nowtime - u.time < 2)
					continue;
				u.update(nowtime, t.pageX - offset.left, t.pageY - offset.top);
			}
		}
	};
	instanceProto.onTouchStart = function (info)
	{
		if (info.preventDefault && cr.isCanvasInputEvent(info))
			info.preventDefault();
		var offset = this.runtime.isDomFree ? dummyoffset : jQuery(this.runtime.canvas).offset();
		var nowtime = cr.performance_now();
		this.runtime.isInUserInputEvent = true;
		var i, len, t, j;
		for (i = 0, len = info.changedTouches.length; i < len; i++)
		{
			t = info.changedTouches[i];
			j = this.findTouch(t["identifier"]);
			if (j !== -1)
				continue;
			var touchx = t.pageX - offset.left;
			var touchy = t.pageY - offset.top;
			this.trigger_index = this.touches.length;
			this.trigger_id = t["identifier"];
			this.touches.push(AllocTouchInfo(touchx, touchy, t["identifier"], this.trigger_index));
			this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnNthTouchStart, this);
			this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnTouchStart, this);
			this.curTouchX = touchx;
			this.curTouchY = touchy;
			this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnTouchObject, this);
		}
		this.runtime.isInUserInputEvent = false;
	};
	instanceProto.onTouchEnd = function (info, isCancel)
	{
		if (info.preventDefault && cr.isCanvasInputEvent(info))
			info.preventDefault();
		this.runtime.isInUserInputEvent = true;
		var i, len, t, j;
		for (i = 0, len = info.changedTouches.length; i < len; i++)
		{
			t = info.changedTouches[i];
			j = this.findTouch(t["identifier"]);
			if (j >= 0)
			{
				this.trigger_index = this.touches[j].startindex;
				this.trigger_id = this.touches[j]["id"];
				this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnNthTouchEnd, this);
				this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnTouchEnd, this);
				if (!isCancel)
					this.touches[j].maybeTriggerTap(this, j);
				ReleaseTouchInfo(this.touches[j]);
				this.touches.splice(j, 1);
			}
		}
		this.runtime.isInUserInputEvent = false;
	};
	instanceProto.getAlpha = function ()
	{
		if (this.runtime.isAppMobi && this.orient_alpha === 0 && appmobi_accz !== 0)
			return appmobi_accz * 90;
		else if (this.runtime.isPhoneGap  && this.orient_alpha === 0 && pg_accz !== 0)
			return pg_accz * 90;
		else
			return this.orient_alpha;
	};
	instanceProto.getBeta = function ()
	{
		if (this.runtime.isAppMobi && this.orient_beta === 0 && appmobi_accy !== 0)
			return appmobi_accy * -90;
		else if (this.runtime.isPhoneGap  && this.orient_beta === 0 && pg_accy !== 0)
			return pg_accy * -90;
		else
			return this.orient_beta;
	};
	instanceProto.getGamma = function ()
	{
		if (this.runtime.isAppMobi && this.orient_gamma === 0 && appmobi_accx !== 0)
			return appmobi_accx * 90;
		else if (this.runtime.isPhoneGap  && this.orient_gamma === 0 && pg_accx !== 0)
			return pg_accx * 90;
		else
			return this.orient_gamma;
	};
	var noop_func = function(){};
	instanceProto.onMouseDown = function(info)
	{
		if (info.preventDefault && this.runtime.had_a_click && !this.runtime.isMobile)
			info.preventDefault();
		var t = { pageX: info.pageX, pageY: info.pageY, "identifier": 0 };
		var fakeinfo = { changedTouches: [t] };
		this.onTouchStart(fakeinfo);
		this.mouseDown = true;
	};
	instanceProto.onMouseMove = function(info)
	{
		if (!this.mouseDown)
			return;
		var t = { pageX: info.pageX, pageY: info.pageY, "identifier": 0 };
		var fakeinfo = { changedTouches: [t] };
		this.onTouchMove(fakeinfo);
	};
	instanceProto.onMouseUp = function(info)
	{
		if (info.preventDefault && this.runtime.had_a_click && !this.runtime.isMobile)
			info.preventDefault();
		this.runtime.had_a_click = true;
		var t = { pageX: info.pageX, pageY: info.pageY, "identifier": 0 };
		var fakeinfo = { changedTouches: [t] };
		this.onTouchEnd(fakeinfo);
		this.mouseDown = false;
	};
	instanceProto.tick2 = function()
	{
		var i, len, t;
		var nowtime = cr.performance_now();
		for (i = 0, len = this.touches.length; i < len; ++i)
		{
			t = this.touches[i];
			if (t.time <= nowtime - 50)
				t.lasttime = nowtime;
			t.maybeTriggerHold(this, i);
		}
	};
	function Cnds() {};
	Cnds.prototype.OnTouchStart = function ()
	{
		return true;
	};
	Cnds.prototype.OnTouchEnd = function ()
	{
		return true;
	};
	Cnds.prototype.IsInTouch = function ()
	{
		return this.touches.length;
	};
	Cnds.prototype.OnTouchObject = function (type)
	{
		if (!type)
			return false;
		return this.runtime.testAndSelectCanvasPointOverlap(type, this.curTouchX, this.curTouchY, false);
	};
	var touching = [];
	Cnds.prototype.IsTouchingObject = function (type)
	{
		if (!type)
			return false;
		var sol = type.getCurrentSol();
		var instances = sol.getObjects();
		var px, py;
		var i, leni, j, lenj;
		for (i = 0, leni = instances.length; i < leni; i++)
		{
			var inst = instances[i];
			inst.update_bbox();
			for (j = 0, lenj = this.touches.length; j < lenj; j++)
			{
				var touch = this.touches[j];
				px = inst.layer.canvasToLayer(touch.x, touch.y, true);
				py = inst.layer.canvasToLayer(touch.x, touch.y, false);
				if (inst.contains_pt(px, py))
				{
					touching.push(inst);
					break;
				}
			}
		}
		if (touching.length)
		{
			sol.select_all = false;
			cr.shallowAssignArray(sol.instances, touching);
			type.applySolToContainer();
			touching.length = 0;
			return true;
		}
		else
			return false;
	};
	Cnds.prototype.CompareTouchSpeed = function (index, cmp, s)
	{
		index = Math.floor(index);
		if (index < 0 || index >= this.touches.length)
			return false;
		var t = this.touches[index];
		var dist = cr.distanceTo(t.x, t.y, t.lastx, t.lasty);
		var timediff = (t.time - t.lasttime) / 1000;
		var speed = 0;
		if (timediff > 0)
			speed = dist / timediff;
		return cr.do_cmp(speed, cmp, s);
	};
	Cnds.prototype.OrientationSupported = function ()
	{
		return typeof window["DeviceOrientationEvent"] !== "undefined";
	};
	Cnds.prototype.MotionSupported = function ()
	{
		return typeof window["DeviceMotionEvent"] !== "undefined";
	};
	Cnds.prototype.CompareOrientation = function (orientation_, cmp_, angle_)
	{
		var v = 0;
		if (orientation_ === 0)
			v = this.getAlpha();
		else if (orientation_ === 1)
			v = this.getBeta();
		else
			v = this.getGamma();
		return cr.do_cmp(v, cmp_, angle_);
	};
	Cnds.prototype.CompareAcceleration = function (acceleration_, cmp_, angle_)
	{
		var v = 0;
		if (acceleration_ === 0)
			v = this.acc_g_x;
		else if (acceleration_ === 1)
			v = this.acc_g_y;
		else if (acceleration_ === 2)
			v = this.acc_g_z;
		else if (acceleration_ === 3)
			v = this.acc_x;
		else if (acceleration_ === 4)
			v = this.acc_y;
		else if (acceleration_ === 5)
			v = this.acc_z;
		return cr.do_cmp(v, cmp_, angle_);
	};
	Cnds.prototype.OnNthTouchStart = function (touch_)
	{
		touch_ = Math.floor(touch_);
		return touch_ === this.trigger_index;
	};
	Cnds.prototype.OnNthTouchEnd = function (touch_)
	{
		touch_ = Math.floor(touch_);
		return touch_ === this.trigger_index;
	};
	Cnds.prototype.HasNthTouch = function (touch_)
	{
		touch_ = Math.floor(touch_);
		return this.touches.length >= touch_ + 1;
	};
	Cnds.prototype.OnHoldGesture = function ()
	{
		return true;
	};
	Cnds.prototype.OnTapGesture = function ()
	{
		return true;
	};
	Cnds.prototype.OnDoubleTapGesture = function ()
	{
		return true;
	};
	Cnds.prototype.OnHoldGestureObject = function (type)
	{
		if (!type)
			return false;
		return this.runtime.testAndSelectCanvasPointOverlap(type, this.curTouchX, this.curTouchY, false);
	};
	Cnds.prototype.OnTapGestureObject = function (type)
	{
		if (!type)
			return false;
		return this.runtime.testAndSelectCanvasPointOverlap(type, this.curTouchX, this.curTouchY, false);
	};
	Cnds.prototype.OnDoubleTapGestureObject = function (type)
	{
		if (!type)
			return false;
		return this.runtime.testAndSelectCanvasPointOverlap(type, this.curTouchX, this.curTouchY, false);
	};
	pluginProto.cnds = new Cnds();
	function Exps() {};
	Exps.prototype.TouchCount = function (ret)
	{
		ret.set_int(this.touches.length);
	};
	Exps.prototype.X = function (ret, layerparam)
	{
		var index = this.getTouchIndex;
		if (index < 0 || index >= this.touches.length)
		{
			ret.set_float(0);
			return;
		}
		var layer, oldScale, oldZoomRate, oldParallaxX, oldAngle;
		if (cr.is_undefined(layerparam))
		{
			layer = this.runtime.getLayerByNumber(0);
			oldScale = layer.scale;
			oldZoomRate = layer.zoomRate;
			oldParallaxX = layer.parallaxX;
			oldAngle = layer.angle;
			layer.scale = this.runtime.running_layout.scale;
			layer.zoomRate = 1.0;
			layer.parallaxX = 1.0;
			layer.angle = this.runtime.running_layout.angle;
			ret.set_float(layer.canvasToLayer(this.touches[index].x, this.touches[index].y, true));
			layer.scale = oldScale;
			layer.zoomRate = oldZoomRate;
			layer.parallaxX = oldParallaxX;
			layer.angle = oldAngle;
		}
		else
		{
			if (cr.is_number(layerparam))
				layer = this.runtime.getLayerByNumber(layerparam);
			else
				layer = this.runtime.getLayerByName(layerparam);
			if (layer)
				ret.set_float(layer.canvasToLayer(this.touches[index].x, this.touches[index].y, true));
			else
				ret.set_float(0);
		}
	};
	Exps.prototype.XAt = function (ret, index, layerparam)
	{
		index = Math.floor(index);
		if (index < 0 || index >= this.touches.length)
		{
			ret.set_float(0);
			return;
		}
		var layer, oldScale, oldZoomRate, oldParallaxX, oldAngle;
		if (cr.is_undefined(layerparam))
		{
			layer = this.runtime.getLayerByNumber(0);
			oldScale = layer.scale;
			oldZoomRate = layer.zoomRate;
			oldParallaxX = layer.parallaxX;
			oldAngle = layer.angle;
			layer.scale = this.runtime.running_layout.scale;
			layer.zoomRate = 1.0;
			layer.parallaxX = 1.0;
			layer.angle = this.runtime.running_layout.angle;
			ret.set_float(layer.canvasToLayer(this.touches[index].x, this.touches[index].y, true));
			layer.scale = oldScale;
			layer.zoomRate = oldZoomRate;
			layer.parallaxX = oldParallaxX;
			layer.angle = oldAngle;
		}
		else
		{
			if (cr.is_number(layerparam))
				layer = this.runtime.getLayerByNumber(layerparam);
			else
				layer = this.runtime.getLayerByName(layerparam);
			if (layer)
				ret.set_float(layer.canvasToLayer(this.touches[index].x, this.touches[index].y, true));
			else
				ret.set_float(0);
		}
	};
	Exps.prototype.XForID = function (ret, id, layerparam)
	{
		var index = this.findTouch(id);
		if (index < 0)
		{
			ret.set_float(0);
			return;
		}
		var touch = this.touches[index];
		var layer, oldScale, oldZoomRate, oldParallaxX, oldAngle;
		if (cr.is_undefined(layerparam))
		{
			layer = this.runtime.getLayerByNumber(0);
			oldScale = layer.scale;
			oldZoomRate = layer.zoomRate;
			oldParallaxX = layer.parallaxX;
			oldAngle = layer.angle;
			layer.scale = this.runtime.running_layout.scale;
			layer.zoomRate = 1.0;
			layer.parallaxX = 1.0;
			layer.angle = this.runtime.running_layout.angle;
			ret.set_float(layer.canvasToLayer(touch.x, touch.y, true));
			layer.scale = oldScale;
			layer.zoomRate = oldZoomRate;
			layer.parallaxX = oldParallaxX;
			layer.angle = oldAngle;
		}
		else
		{
			if (cr.is_number(layerparam))
				layer = this.runtime.getLayerByNumber(layerparam);
			else
				layer = this.runtime.getLayerByName(layerparam);
			if (layer)
				ret.set_float(layer.canvasToLayer(touch.x, touch.y, true));
			else
				ret.set_float(0);
		}
	};
	Exps.prototype.Y = function (ret, layerparam)
	{
		var index = this.getTouchIndex;
		if (index < 0 || index >= this.touches.length)
		{
			ret.set_float(0);
			return;
		}
		var layer, oldScale, oldZoomRate, oldParallaxY, oldAngle;
		if (cr.is_undefined(layerparam))
		{
			layer = this.runtime.getLayerByNumber(0);
			oldScale = layer.scale;
			oldZoomRate = layer.zoomRate;
			oldParallaxY = layer.parallaxY;
			oldAngle = layer.angle;
			layer.scale = this.runtime.running_layout.scale;
			layer.zoomRate = 1.0;
			layer.parallaxY = 1.0;
			layer.angle = this.runtime.running_layout.angle;
			ret.set_float(layer.canvasToLayer(this.touches[index].x, this.touches[index].y, false));
			layer.scale = oldScale;
			layer.zoomRate = oldZoomRate;
			layer.parallaxY = oldParallaxY;
			layer.angle = oldAngle;
		}
		else
		{
			if (cr.is_number(layerparam))
				layer = this.runtime.getLayerByNumber(layerparam);
			else
				layer = this.runtime.getLayerByName(layerparam);
			if (layer)
				ret.set_float(layer.canvasToLayer(this.touches[index].x, this.touches[index].y, false));
			else
				ret.set_float(0);
		}
	};
	Exps.prototype.YAt = function (ret, index, layerparam)
	{
		index = Math.floor(index);
		if (index < 0 || index >= this.touches.length)
		{
			ret.set_float(0);
			return;
		}
		var layer, oldScale, oldZoomRate, oldParallaxY, oldAngle;
		if (cr.is_undefined(layerparam))
		{
			layer = this.runtime.getLayerByNumber(0);
			oldScale = layer.scale;
			oldZoomRate = layer.zoomRate;
			oldParallaxY = layer.parallaxY;
			oldAngle = layer.angle;
			layer.scale = this.runtime.running_layout.scale;
			layer.zoomRate = 1.0;
			layer.parallaxY = 1.0;
			layer.angle = this.runtime.running_layout.angle;
			ret.set_float(layer.canvasToLayer(this.touches[index].x, this.touches[index].y, false));
			layer.scale = oldScale;
			layer.zoomRate = oldZoomRate;
			layer.parallaxY = oldParallaxY;
			layer.angle = oldAngle;
		}
		else
		{
			if (cr.is_number(layerparam))
				layer = this.runtime.getLayerByNumber(layerparam);
			else
				layer = this.runtime.getLayerByName(layerparam);
			if (layer)
				ret.set_float(layer.canvasToLayer(this.touches[index].x, this.touches[index].y, false));
			else
				ret.set_float(0);
		}
	};
	Exps.prototype.YForID = function (ret, id, layerparam)
	{
		var index = this.findTouch(id);
		if (index < 0)
		{
			ret.set_float(0);
			return;
		}
		var touch = this.touches[index];
		var layer, oldScale, oldZoomRate, oldParallaxY, oldAngle;
		if (cr.is_undefined(layerparam))
		{
			layer = this.runtime.getLayerByNumber(0);
			oldScale = layer.scale;
			oldZoomRate = layer.zoomRate;
			oldParallaxY = layer.parallaxY;
			oldAngle = layer.angle;
			layer.scale = this.runtime.running_layout.scale;
			layer.zoomRate = 1.0;
			layer.parallaxY = 1.0;
			layer.angle = this.runtime.running_layout.angle;
			ret.set_float(layer.canvasToLayer(touch.x, touch.y, false));
			layer.scale = oldScale;
			layer.zoomRate = oldZoomRate;
			layer.parallaxY = oldParallaxY;
			layer.angle = oldAngle;
		}
		else
		{
			if (cr.is_number(layerparam))
				layer = this.runtime.getLayerByNumber(layerparam);
			else
				layer = this.runtime.getLayerByName(layerparam);
			if (layer)
				ret.set_float(layer.canvasToLayer(touch.x, touch.y, false));
			else
				ret.set_float(0);
		}
	};
	Exps.prototype.AbsoluteX = function (ret)
	{
		if (this.touches.length)
			ret.set_float(this.touches[0].x);
		else
			ret.set_float(0);
	};
	Exps.prototype.AbsoluteXAt = function (ret, index)
	{
		index = Math.floor(index);
		if (index < 0 || index >= this.touches.length)
		{
			ret.set_float(0);
			return;
		}
		ret.set_float(this.touches[index].x);
	};
	Exps.prototype.AbsoluteXForID = function (ret, id)
	{
		var index = this.findTouch(id);
		if (index < 0)
		{
			ret.set_float(0);
			return;
		}
		var touch = this.touches[index];
		ret.set_float(touch.x);
	};
	Exps.prototype.AbsoluteY = function (ret)
	{
		if (this.touches.length)
			ret.set_float(this.touches[0].y);
		else
			ret.set_float(0);
	};
	Exps.prototype.AbsoluteYAt = function (ret, index)
	{
		index = Math.floor(index);
		if (index < 0 || index >= this.touches.length)
		{
			ret.set_float(0);
			return;
		}
		ret.set_float(this.touches[index].y);
	};
	Exps.prototype.AbsoluteYForID = function (ret, id)
	{
		var index = this.findTouch(id);
		if (index < 0)
		{
			ret.set_float(0);
			return;
		}
		var touch = this.touches[index];
		ret.set_float(touch.y);
	};
	Exps.prototype.SpeedAt = function (ret, index)
	{
		index = Math.floor(index);
		if (index < 0 || index >= this.touches.length)
		{
			ret.set_float(0);
			return;
		}
		var t = this.touches[index];
		var dist = cr.distanceTo(t.x, t.y, t.lastx, t.lasty);
		var timediff = (t.time - t.lasttime) / 1000;
		if (timediff === 0)
			ret.set_float(0);
		else
			ret.set_float(dist / timediff);
	};
	Exps.prototype.SpeedForID = function (ret, id)
	{
		var index = this.findTouch(id);
		if (index < 0)
		{
			ret.set_float(0);
			return;
		}
		var touch = this.touches[index];
		var dist = cr.distanceTo(touch.x, touch.y, touch.lastx, touch.lasty);
		var timediff = (touch.time - touch.lasttime) / 1000;
		if (timediff === 0)
			ret.set_float(0);
		else
			ret.set_float(dist / timediff);
	};
	Exps.prototype.AngleAt = function (ret, index)
	{
		index = Math.floor(index);
		if (index < 0 || index >= this.touches.length)
		{
			ret.set_float(0);
			return;
		}
		var t = this.touches[index];
		ret.set_float(cr.to_degrees(cr.angleTo(t.lastx, t.lasty, t.x, t.y)));
	};
	Exps.prototype.AngleForID = function (ret, id)
	{
		var index = this.findTouch(id);
		if (index < 0)
		{
			ret.set_float(0);
			return;
		}
		var touch = this.touches[index];
		ret.set_float(cr.to_degrees(cr.angleTo(touch.lastx, touch.lasty, touch.x, touch.y)));
	};
	Exps.prototype.Alpha = function (ret)
	{
		ret.set_float(this.getAlpha());
	};
	Exps.prototype.Beta = function (ret)
	{
		ret.set_float(this.getBeta());
	};
	Exps.prototype.Gamma = function (ret)
	{
		ret.set_float(this.getGamma());
	};
	Exps.prototype.AccelerationXWithG = function (ret)
	{
		ret.set_float(this.acc_g_x);
	};
	Exps.prototype.AccelerationYWithG = function (ret)
	{
		ret.set_float(this.acc_g_y);
	};
	Exps.prototype.AccelerationZWithG = function (ret)
	{
		ret.set_float(this.acc_g_z);
	};
	Exps.prototype.AccelerationX = function (ret)
	{
		ret.set_float(this.acc_x);
	};
	Exps.prototype.AccelerationY = function (ret)
	{
		ret.set_float(this.acc_y);
	};
	Exps.prototype.AccelerationZ = function (ret)
	{
		ret.set_float(this.acc_z);
	};
	Exps.prototype.TouchIndex = function (ret)
	{
		ret.set_int(this.trigger_index);
	};
	Exps.prototype.TouchID = function (ret)
	{
		ret.set_float(this.trigger_id);
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.UserMedia = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.UserMedia.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	typeProto.onRestoreWebGLContext = function ()
	{
		if (this.is_family || !this.instances.length)
			return;
		var i, len, inst;
		for (i = 0, len = this.instances.length; i < len; i++)
		{
			inst = this.instances[i];
			if (inst.video_active && inst.v.videoWidth >= 0 && inst.v.videoHeight >= 0)
			{
				inst.webGL_texture = this.runtime.glwrap.createEmptyTexture(inst.v.videoWidth, inst.v.videoHeight, this.runtime.linearSampling);
			}
		}
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	var c2getUserMedia = navigator["getUserMedia"] || navigator["webkitGetUserMedia"] ||
            navigator["mozGetUserMedia"] || navigator["msGetUserMedia"];
	var c2URL = window["URL"] || window["webkitURL"] || window["mozURL"] || window["msURL"];
	var audioSources = [];
	var videoSources = [];
	var isRequesting = false;
	var CJS_CAMWIDTH = 640;
	var CJS_CAMHEIGHT = 480;
	var supportsSpeechRecognition = !!(window["webkitSpeechRecognition"] || window["speechRecognition"]);
	var ambientlux = -1;
	var speechSynthesis = window["speechSynthesis"] || window["webkitSpeechSynthesis"] || window["mozSpeechSynthesis"] || window["msSpeechSynthesis"];
	var SpeechSynthesisUtterance = window["SpeechSynthesisUtterance"] || window["webkitSpeechSynthesisUtterance"] || window["mozSpeechSynthesisUtterance"] || window["msSpeechSynthesisUtterance"];
	var speechVoices = null;
	var requestedVoices = false;
	function lazyGetVoices()
	{
		if (requestedVoices || !speechSynthesis)
			return;
		speechVoices = speechSynthesis["getVoices"]();
		requestedVoices = true;
	};
	function getVoiceCount()
	{
		lazyGetVoices();
		return speechVoices ? speechVoices.length : 0;
	};
	function getVoiceAt(i)
	{
		lazyGetVoices();
		if (!speechVoices)
			return null;
		if (i < 0 || i >= speechVoices.length)
			return null;
		return speechVoices[i];
	};
	function getVoiceByURI(uri)
	{
		lazyGetVoices();
		if (!speechVoices)
			return null;
		var i, len, v;
		for (i = 0, len = speechVoices.length; i < len; ++i)
		{
			v = speechVoices[i];
			if (v["voiceURI"] === uri)
				return v;
		}
		return null;
	};
	instanceProto.onCreate = function()
	{
		var self = this;
		this.v = document.createElement("video");
		if (this.v)
		{
			this.v.autoplay = true;
			this.v.addEventListener("canplaythrough", function ()
			{
				if (self.video_active)
					self.video_ready = true;
			});
		}
		cr.setGLBlend(this, 0, this.runtime.gl);		// normal alpha blend
		this.video_active = false;
		this.audio_active = false;
		this.media_stream = null;
		this.runtime.tickMe(this);
		this.snapshot_data = "";
		this.webGL_texture = null;
		this.lastDecodedFrame = -1;
		this.video_ready = false;
		this.speechRecognition = null;
		this.finalTranscript = "";
		this.interimTranscript = "";
		this.isRecognisingSpeech = false;
		this.lastSpeechError = "";
		if (this.runtime.isWinJS && !this.runtime.isWindows8Capable)
		{
			var lightSensor = Windows["Devices"]["Sensors"]["LightSensor"]["getDefault"]();
			if (lightSensor)
			{
				var minInterval = lightSensor["minimumReportInterval"];
				lightSensor["reportInterval"] = (minInterval > 16 ? minInterval : 16);
				lightSensor.addEventListener("readingchanged", function (e)
				{
					ambientlux = e["reading"]["illuminanceInLux"];
					self.runtime.trigger(cr.plugins_.UserMedia.prototype.cnds.OnDeviceLight, self);
				});
			}
		}
		else
		{
			window.addEventListener("devicelight", function (e) {
				ambientlux = e["value"];
				self.runtime.trigger(cr.plugins_.UserMedia.prototype.cnds.OnDeviceLight, self);
			});
		}
	};
	instanceProto.onDestroy = function()
	{
		if (this.media_stream)
		{
			this.media_stream.stop();
			this.media_stream = null;
			this.video_active = false;
			this.video_ready = false;
			this.audio_active = false;
		}
		if (this.runtime.glwrap && this.webGL_texture)
		{
			this.runtime.glwrap.deleteTexture(this.webGL_texture);
			this.webGL_texture = null;
		}
	};
	instanceProto.tick = function ()
	{
		if (this.video_active && this.video_ready)
			this.runtime.redraw = true;
	};
	instanceProto.draw = function(ctx)
	{
		ctx.globalAlpha = this.opacity;
		ctx.save();
		ctx.fillStyle = "#000";
		ctx.fillRect(this.x, this.y, this.width, this.height);
		if (this.video_active && this.video_ready)
		{
			try {
				ctx.drawImage(this.v, this.x, this.y, this.width, this.height);
			}
			catch (e) {}
		}
		ctx.restore();
	};
	instanceProto.drawGL = function (glw)
	{
		glw.setBlend(this.srcBlend, this.destBlend);
		glw.setOpacity(this.opacity);
		var q = this.bquad;
		if (!this.video_active || !this.video_ready || this.v.videoWidth <= 0 || this.v.videoHeight <= 0)
		{
			glw.setTexture(null);
			glw.quad(q.tlx, q.tly, q.trx, q.try_, q.brx, q.bry, q.blx, q.bly);
			return;
		}
		if (!this.webGL_texture)
		{
			this.webGL_texture = glw.createEmptyTexture(this.v.videoWidth, this.v.videoHeight, this.runtime.linearSampling);
		}
		var framecount = this.v["webkitDecodedFrameCount"] || this.v["mozParsedFrames"];
		var updatetexture = false;
		if (!framecount)
			updatetexture = true;
		else if (framecount > this.lastDecodedFrame)
		{
			updatetexture = true;
			this.lastDecodedFrame = framecount;
		}
		if (updatetexture)
		{
			glw.videoToTexture(this.v, this.webGL_texture);
		}
		glw.setTexture(this.webGL_texture);
		glw.quad(q.tlx, q.tly, q.trx, q.try_, q.brx, q.bry, q.blx, q.bly);
	};
	function Cnds() {};
	Cnds.prototype.OnApproved = function ()
	{
		return true;
	};
	Cnds.prototype.OnDeclined = function ()
	{
		return true;
	};
	Cnds.prototype.SupportsUserMedia = function ()
	{
		return !!c2getUserMedia;
	};
	Cnds.prototype.SupportsSpeechRecognition = function ()
	{
		return supportsSpeechRecognition;
	};
	Cnds.prototype.OnSpeechRecognitionStart = function ()
	{
		return true;
	};
	Cnds.prototype.OnSpeechRecognitionEnd = function ()
	{
		return true;
	};
	Cnds.prototype.OnSpeechRecognitionError = function ()
	{
		return true;
	};
	Cnds.prototype.OnSpeechRecognitionResult = function ()
	{
		return true;
	};
	Cnds.prototype.IsRecognisingSpeech = function ()
	{
		return this.isRecognisingSpeech;
	};
	Cnds.prototype.OnDeviceLight = function ()
	{
		return true;
	};
	Cnds.prototype.SupportsSpeechSynthesis = function ()
	{
		return !!speechSynthesis && !!SpeechSynthesisUtterance;
	};
	Cnds.prototype.IsSpeaking = function ()
	{
		return speechSynthesis && speechSynthesis["speaking"];
	};
	Cnds.prototype.OnMediaSources = function ()
	{
		return true;
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.RequestCamera = function (source_index)
	{
		if (isRequesting || !c2getUserMedia)
			return;			// already has info bar up or user media not supported
		isRequesting = true;
		var self = this;
		source_index = Math.floor(source_index);
		var constraints = {};
		if (source_index < 0 || source_index >= videoSources.length)
		{
			constraints["video"] = true;
		}
		else
		{
			constraints["video"] = {
				"optional": [{
					"sourceId": videoSources[source_index]["id"]
				}]
			};
		}
		c2getUserMedia.call(navigator, constraints,
			function (localMediaStream)		// success
			{
				self.media_stream = localMediaStream;
				self.video_ready = false;		// wait for canplaythrough event before rendering
				self.v.src = c2URL.createObjectURL(localMediaStream);
				self.video_active = true;
				isRequesting = false;
				self.lastDecodedFrame = -1;
				if (self.runtime.glwrap && self.webGL_texture)
				{
					self.runtime.glwrap.deleteTexture(self.webGL_texture);
					self.webGL_texture = null;
				}
				self.runtime.trigger(cr.plugins_.UserMedia.prototype.cnds.OnApproved, self);
			},
			function (e)					// fail
			{
				isRequesting = false;
				self.runtime.trigger(cr.plugins_.UserMedia.prototype.cnds.OnDeclined, self);
			});
	};
	Acts.prototype.RequestMic = function (tag, source_index)
	{
		if (isRequesting || !c2getUserMedia)
			return;			// already has info bar up or user media not supported
		isRequesting = true;
		var self = this;
		source_index = Math.floor(source_index);
		var constraints = {};
		if (source_index < 0 || source_index >= audioSources.length)
		{
			constraints["audio"] = true;
		}
		else
		{
			constraints["audio"] = {
				"optional": [{
					"sourceId": audioSources[source_index]["id"]
				}]
			};
		}
		c2getUserMedia.call(navigator, constraints,
			function (localMediaStream)		// success
			{
				self.media_stream = localMediaStream;
				if (window["c2OnAudioMicStream"])
					window["c2OnAudioMicStream"](localMediaStream, tag);
				self.audio_active = true;
				isRequesting = false;
				self.runtime.trigger(cr.plugins_.UserMedia.prototype.cnds.OnApproved, self);
			},
			function ()						// fail
			{
				isRequesting = false;
				self.runtime.trigger(cr.plugins_.UserMedia.prototype.cnds.OnDeclined, self);
			});
	};
	Acts.prototype.Stop = function ()
	{
		if (this.media_stream)
		{
			this.media_stream.stop();
			this.media_stream = null;
			this.video_active = false;
			this.video_ready = false;
			this.audio_active = false;
		}
	};
	Acts.prototype.Snapshot = function (format_, quality_)
	{
		if (this.video_active && this.video_ready)
		{
			var tmpcanvas = document.createElement("canvas");
			tmpcanvas.width = this.v.videoWidth;
			tmpcanvas.height = this.v.videoHeight;
			var tmpctx = tmpcanvas.getContext("2d");
			tmpctx.drawImage(this.v, 0, 0, this.v.videoWidth, this.v.videoHeight);
			this.snapshot_data = tmpcanvas.toDataURL(format_ === 0 ? "image/png" : "image/jpeg", quality_ / 100);
		}
	};
	Acts.prototype.RequestSpeechRecognition = function (lang_, mode_, results_)
	{
		if (!supportsSpeechRecognition)
			return;
		if (window["webkitSpeechRecognition"])
			this.speechRecognition = new window["webkitSpeechRecognition"]();
		else if (window["speechRecognition"])
			this.speechRecognition = new window["speechRecognition"]();
		this.speechRecognition["lang"] = lang_;
		this.speechRecognition["continuous"] = (mode_ === 0);
		this.speechRecognition["interimResults"] = (results_ === 0);
		this.isRecognisingSpeech = false;		// reset until onstart fires
		this.interimTranscript = "";
		this.finalTranscript = "";
		var self = this;
		this.speechRecognition["onstart"] = function ()
		{
			self.isRecognisingSpeech = true;
			self.runtime.trigger(cr.plugins_.UserMedia.prototype.cnds.OnSpeechRecognitionStart, self);
		};
		this.speechRecognition["onend"] = function ()
		{
			self.isRecognisingSpeech = false;
			self.runtime.trigger(cr.plugins_.UserMedia.prototype.cnds.OnSpeechRecognitionEnd, self);
		};
		this.speechRecognition["onerror"] = function (e)
		{
			self.isRecognisingSpeech = false;
			self.lastSpeechError = e["error"] || "unknown";
			self.runtime.trigger(cr.plugins_.UserMedia.prototype.cnds.OnSpeechRecognitionError, self);
		};
		this.speechRecognition["onresult"] = function (e)
		{
			var i;
			self.interimTranscript = "";
			for (i = e["resultIndex"]; i < e["results"].length; ++i)
			{
				if (e["results"][i]["isFinal"])
					self.finalTranscript += e["results"][i][0]["transcript"];
				else
					self.interimTranscript += e["results"][i][0]["transcript"];
			}
			self.runtime.trigger(cr.plugins_.UserMedia.prototype.cnds.OnSpeechRecognitionResult, self);
		};
		this.speechRecognition["start"]();
	};
	Acts.prototype.StepSpeechRecognition = function ()
	{
		if (this.speechRecognition)
		{
			this.speechRecognition["stop"]();
			this.speechRecognition = null;
		}
	};
	function dbToLinear(x)
	{
		var v = Math.pow(10, x / 20);
		if (v < 0)
			v = 0;
		if (v > 1)
			v = 1;
		return v;
	};
	Acts.prototype.SpeakText = function (text, lang, uri, vol, rate, pitch)
	{
		if (!speechSynthesis || !SpeechSynthesisUtterance)
			return;
		var s = new SpeechSynthesisUtterance(text);
		if (lang)
			s["lang"] = lang;
		if (uri)
		{
			s["voice"] = getVoiceByURI(uri);	// not in the standard but seems to be used by Chrome
			s["voiceURI"] = uri;
		}
		s["volume"] = dbToLinear(vol);
		s["rate"] = rate;
		s["pitch"] = pitch;
		speechSynthesis["speak"](s);
	};
	Acts.prototype.StopSpeaking = function ()
	{
		if (!speechSynthesis)
			return;
		speechSynthesis["cancel"]();
	};
	Acts.prototype.PauseSpeaking = function ()
	{
		if (!speechSynthesis)
			return;
		speechSynthesis["pause"]();
	};
	Acts.prototype.ResumeSpeaking = function ()
	{
		if (!speechSynthesis)
			return;
		speechSynthesis["resume"]();
	};
	Acts.prototype.GetMediaSources = function ()
	{
		var self = this;
		if (!window["MediaStreamTrack"] || !window["MediaStreamTrack"]["getSources"])
			return;		// not supported
		audioSources.length = 0;
		videoSources.length = 0;
		window["MediaStreamTrack"]["getSources"](function (media_sources) {
			var i, len, source;
			for (i = 0, len = media_sources.length; i < len; ++i)
			{
				source = media_sources[i];
				if (source["kind"] === "audio")
				{
					audioSources.push(source);
				}
				else if (source["kind"] === "video")
				{
					videoSources.push(source);
				}
				self.runtime.trigger(cr.plugins_.UserMedia.prototype.cnds.OnMediaSources, self);
			}
		});
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.VideoWidth = function (ret)
	{
		ret.set_int(this.v ? this.v.videoWidth : 0);
	};
	Exps.prototype.VideoHeight = function (ret)
	{
		ret.set_int(this.v ? this.v.videoHeight : 0);
	};
	Exps.prototype.SnapshotURL = function (ret)
	{
		ret.set_string(this.snapshot_data);
	};
	Exps.prototype.FinalTranscript = function (ret)
	{
		ret.set_string(this.finalTranscript);
	};
	Exps.prototype.InterimTranscript = function (ret)
	{
		ret.set_string(this.interimTranscript);
	};
	Exps.prototype.SpeechError = function (ret)
	{
		ret.set_string(this.lastSpeechError);
	};
	Exps.prototype.AmbientLux = function (ret)
	{
		ret.set_float(ambientlux);
	};
	Exps.prototype.VoiceCount = function (ret)
	{
		ret.set_int(getVoiceCount());
	};
	Exps.prototype.VoiceNameAt = function (ret, i)
	{
		i = Math.floor(i);
		var v = getVoiceAt(i);
		ret.set_string(v ? v["name"] : "");
	};
	Exps.prototype.VoiceLangAt = function (ret, i)
	{
		i = Math.floor(i);
		var v = getVoiceAt(i);
		ret.set_string(v ? v["lang"] : "");
	};
	Exps.prototype.VoiceURIAt = function (ret, i)
	{
		i = Math.floor(i);
		var v = getVoiceAt(i);
		ret.set_string(v ? v["voiceURI"] : "");
	};
	Exps.prototype.AudioSourceCount = function (ret)
	{
		ret.set_int(audioSources.length);
	};
	Exps.prototype.AudioSourceLabelAt = function (ret, i)
	{
		i = Math.floor(i);
		if (i < 0 || i >= audioSources.length)
		{
			ret.set_string("");
			return;
		}
		ret.set_string(audioSources[i]["label"] || "");
	};
	Exps.prototype.CameraSourceCount = function (ret)
	{
		ret.set_int(videoSources.length);
	};
	Exps.prototype.CameraSourceLabelAt = function (ret, i)
	{
		i = Math.floor(i);
		if (i < 0 || i >= videoSources.length)
		{
			ret.set_string("");
			return;
		}
		ret.set_string(videoSources[i]["label"] || "");
	};
	Exps.prototype.CameraSourceFacingAt = function (ret, i)
	{
		i = Math.floor(i);
		if (i < 0 || i >= videoSources.length)
		{
			ret.set_string("");
			return;
		}
		ret.set_string(videoSources[i]["facing"] || "");
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.WebStorage = function(runtime)
{
	this.runtime = runtime;
};
(function()
{
	var pluginProto = cr.plugins_.WebStorage.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	var prefix = "";
	var is_arcade = (typeof window["is_scirra_arcade"] !== "undefined");
	if (is_arcade)
		prefix = "arcade" + window["scirra_arcade_id"];
	var logged_sessionnotsupported = false;
	function LogSessionNotSupported()
	{
		if (logged_sessionnotsupported)
			return;
		cr.logexport("[Construct 2] Webstorage plugin: session storage is not supported on this platform. Try using local storage or global variables instead.");
		logged_sessionnotsupported = true;
	};
	instanceProto.onCreate = function()
	{
	};
	function Cnds() {};
	Cnds.prototype.LocalStorageEnabled = function()
	{
		return true;
	};
	Cnds.prototype.SessionStorageEnabled = function()
	{
		return true;
	};
	Cnds.prototype.LocalStorageExists = function(key)
	{
		return localStorage.getItem(prefix + key) != null;
	};
	Cnds.prototype.SessionStorageExists = function(key)
	{
		if (this.runtime.isCocoonJs || !sessionStorage)
		{
			LogSessionNotSupported();
			return false;
		}
		return sessionStorage.getItem(prefix + key) != null;
	};
	Cnds.prototype.OnQuotaExceeded = function ()
	{
		return true;
	};
	Cnds.prototype.CompareKeyText = function (key, text_to_compare, case_sensitive)
	{
		var value = localStorage.getItem(prefix + key) || "";
		if (case_sensitive)
			return value == text_to_compare;
		else
			return cr.equals_nocase(value, text_to_compare);
	};
	Cnds.prototype.CompareKeyNumber = function (key, cmp, x)
	{
		var value = localStorage.getItem(prefix + key) || "";
		return cr.do_cmp(parseFloat(value), cmp, x);
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.StoreLocal = function(key, data)
	{
		try {
			localStorage.setItem(prefix + key, data);
		}
		catch (e)
		{
			this.runtime.trigger(cr.plugins_.WebStorage.prototype.cnds.OnQuotaExceeded, this);
		}
	};
	Acts.prototype.StoreSession = function(key,data)
	{
		if (this.runtime.isCocoonJs || !sessionStorage)
		{
			LogSessionNotSupported();
			return;
		}
		try {
			sessionStorage.setItem(prefix + key, data);
		}
		catch (e)
		{
			this.runtime.trigger(cr.plugins_.WebStorage.prototype.cnds.OnQuotaExceeded, this);
		}
	};
	Acts.prototype.RemoveLocal = function(key)
	{
		localStorage.removeItem(prefix + key);
	};
	Acts.prototype.RemoveSession = function(key)
	{
		if (this.runtime.isCocoonJs || !sessionStorage)
		{
			LogSessionNotSupported();
			return;
		}
		sessionStorage.removeItem(prefix + key);
	};
	Acts.prototype.ClearLocal = function()
	{
		if (!is_arcade)
			localStorage.clear();
	};
	Acts.prototype.ClearSession = function()
	{
		if (this.runtime.isCocoonJs || !sessionStorage)
		{
			LogSessionNotSupported();
			return;
		}
		if (!is_arcade)
			sessionStorage.clear();
	};
	Acts.prototype.JSONLoad = function (json_, mode_)
	{
		var d;
		try {
			d = JSON.parse(json_);
		}
		catch(e) { return; }
		if (!d["c2dictionary"])			// presumably not a c2dictionary object
			return;
		var o = d["data"];
		if (mode_ === 0 && !is_arcade)	// 'set' mode: must clear webstorage first
			localStorage.clear();
		var p;
		for (p in o)
		{
			if (o.hasOwnProperty(p))
			{
				try {
					localStorage.setItem(prefix + p, o[p]);
				}
				catch (e)
				{
					this.runtime.trigger(cr.plugins_.WebStorage.prototype.cnds.OnQuotaExceeded, this);
					return;
				}
			}
		}
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.LocalValue = function(ret,key)
	{
		ret.set_string(localStorage.getItem(prefix + key) || "");
	};
	Exps.prototype.SessionValue = function(ret,key)
	{
		if (this.runtime.isCocoonJs || !sessionStorage)
		{
			LogSessionNotSupported();
			ret.set_string("");
			return;
		}
		ret.set_string(sessionStorage.getItem(prefix + key) || "");
	};
	Exps.prototype.LocalCount = function(ret)
	{
		ret.set_int(is_arcade ? 0 : localStorage.length);
	};
	Exps.prototype.SessionCount = function(ret)
	{
		if (this.runtime.isCocoonJs || !sessionStorage)
		{
			LogSessionNotSupported();
			ret.set_int(0);
			return;
		}
		ret.set_int(is_arcade ? 0 : sessionStorage.length);
	};
	Exps.prototype.LocalAt = function(ret,n)
	{
		if (is_arcade)
			ret.set_string("");
		else
			ret.set_string(localStorage.getItem(localStorage.key(n)) || "");
	};
	Exps.prototype.SessionAt = function(ret,n)
	{
		if (this.runtime.isCocoonJs || !sessionStorage)
		{
			LogSessionNotSupported();
			ret.set_string("");
			return;
		}
		if (is_arcade)
			ret.set_string("");
		else
			ret.set_string(sessionStorage.getItem(sessionStorage.key(n)) || "");
	};
	Exps.prototype.LocalKeyAt = function(ret,n)
	{
		if (is_arcade)
			ret.set_string("");
		else
			ret.set_string(localStorage.key(n) || "");
	};
	Exps.prototype.SessionKeyAt = function(ret,n)
	{
		if (this.runtime.isCocoonJs || !sessionStorage)
		{
			LogSessionNotSupported();
			ret.set_string("");
			return;
		}
		if (is_arcade)
			ret.set_string("");
		else
			ret.set_string(sessionStorage.key(n) || "");
	};
	Exps.prototype.AsJSON = function (ret)
	{
		var o = {}, i, len, k;
		for (i = 0, len = localStorage.length; i < len; i++)
		{
			k = localStorage.key(i);
			if (is_arcade)
			{
				if (k.substr(0, prefix.length) === prefix)
				{
					o[k.substr(prefix.length)] = localStorage.getItem(k);
				}
			}
			else
				o[k] = localStorage.getItem(k);
		}
		ret.set_string(JSON.stringify({
			"c2dictionary": true,
			"data": o
		}));
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.appMobi = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.appMobi.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	var appMobiEnabled=false;
	var appMobiObj={};
	var evtRemoteDataResponse='';
	var evtBarCodeResponse='';
	var evtConnection='';
	var evtRemoteStatus='idle';
	var accelerometer={x:0,y:0,z:0};
	var appMobiRuntime = null;
	var appMobiInst = null;
	var awex = null;
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var amev = {};
	var isDC = false;
	amev.getRemoteDataEvent = function(event)
	{
		try {
			if(event.success)
			{
				evtRemoteDataResponse=event.response;
				appMobiRuntime.trigger(cr.plugins_.appMobi.prototype.cnds.OnRemoteData, appMobiInst);
			}
		} catch(e){}
	};
	amev.barcodeScanned = function(event)
	{
		try {
			if(event.success)
			{
				evtBarCodeResponse=event.codedata;
				appMobiRuntime.trigger(cr.plugins_.appMobi.prototype.cnds.OnBarcodeScanned, appMobiInst);
			}
		} catch(e){}
	};
	amev.connectionUpdate = function(event)
	{
		try {
			if(event.success)
			{
				evtConnection=event.connection;
			}
		} catch(e){}
	};
	amev.remoteClosed = function(event)
	{
		try {
			if(event.success)
			{
				evtRemoteStatus='closed';
				appMobiRuntime.trigger(cr.plugins_.appMobi.prototype.cnds.OnRemoteSiteClosed, appMobiInst);
			}
		} catch(e){}
	};
	amev.onBack = function(event)
	{
		appMobiRuntime.trigger(cr.plugins_.appMobi.prototype.cnds.OnBack, appMobiInst);
	};
	amev.barcodeScanned = function(event){ try{ if(event.success){ evtBarCodeResponse=event.codedata; } }catch(e){} }
	amev.connectionUpdate = function(event){ try{ if(event.success){ evtConnection=event.connection; } }catch(e){} }
	amev.remoteClosed = function(event){ try{ evtRemoteStatus='closed'; }catch(e){} }
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
		appMobiRuntime = this.runtime;
		appMobiInst = this;
		isDC = this.runtime.isDirectCanvas;
		if (isDC)
			awex = AppMobi["webview"]["execute"];
		if (typeof window["AppMobi"] !== "undefined" && !isDC)
		{
			appMobiObj = window["AppMobi"];
			appMobiEnabled = true;
			document.addEventListener("appMobi.device.remote.data", amev.getRemoteDataEvent,false);
			document.addEventListener("appMobi.device.barcode.scan", amev.barcodeScanned, false);
			document.addEventListener("appMobi.device.connection.update", amev.connectionUpdate, false);
			document.addEventListener("appMobi.device.remote.close", amev.remoteClosed, false);
			document.addEventListener("appMobi.device.hardware.back", amev.onBack, false);
		}
	};
	instanceProto.onLayoutChange = function ()
	{
	};
	function Cnds() {};
	/*********************************************************
		DEVICE
	*********************************************************/
	Cnds.prototype.deviceHasCaching = function ()
	{
		if (!appMobiEnabled || isDC)
			return false;
		return appMobiObj['device']['hasCaching'];
	};
	Cnds.prototype.deviceHasPush = function ()
	{
		if (!appMobiEnabled || isDC)
			return false;
		return appMobiObj['device']['hasPush'];
	};
	Cnds.prototype.deviceHasStreaming = function ()
	{
		if (!appMobiEnabled || isDC)
			return false;
		return appMobiObj['device']['hasStreaming'];
	};
	Cnds.prototype.deviceHasUpdates = function ()
	{
		if (!appMobiEnabled || isDC)
			return false;
		return appMobiObj['device']['hasUpdates'];
	};
	Cnds.prototype.isInAppMobi = function ()
	{
		return appMobiEnabled || isDC;
	};
	var orients_array = [0, -90, 90, 180];
	Cnds.prototype.compareOrientation = function (o)
	{
		if (!appMobiEnabled || isDC)
			return (o === 0);	// assume portrait when not in appMobi
		return orients_array[o] === parseInt(appMobiObj['device']['orientation']);
	};
	Cnds.prototype.compareInitialOrientation = function (o)
	{
		if (!appMobiEnabled || isDC)
			return (o === 0);	// assume was in portrait when not in appMobi
		return orients_array[o] === parseInt(appMobiObj['device']['initialOrientation']);
	};
	Cnds.prototype.OnBarcodeScanned = function ()
	{
		return true;
	};
	Cnds.prototype.OnRemoteSiteClosed = function ()
	{
		return true;
	};
	Cnds.prototype.OnRemoteData = function ()
	{
		return true;
	};
	Cnds.prototype.OnBack = function ()
	{
		return true;
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.deviceCloseRemoteSite = function ()
	{
		try {
			if (isDC)
				awex("AppMobi['device']['closeRemoteSite']();");
			else
				appMobiObj['device']['closeRemoteSite']();
		} catch(e) {}
	};
	Acts.prototype.deviceGetRemoteData = function (method, url, body, id)
	{
		if (isDC)
			return;
		try {
			evtRemoteDataResponse='';
			var parameters = new appMobiObj['Device']['RemoteDataParameters']();
			parameters.url = url;
			parameters.id = id;
			parameters.method = method;
			parameters.body = body;
			appMobiObj['device']['getRemoteDataExt'](parameters);
		} catch(e) {}
	}
	Acts.prototype.deviceHideSplashScreen = function ()
	{
		try {
			if (isDC)
				awex("AppMobi['device']['hideSplashScreen']();");
			else
				appMobiObj['device']['hideSplashScreen']();
		} catch(e) {}
	};
	Acts.prototype.deviceInstallUpdate = function ()
	{
		try {
			if (isDC)
				awex("AppMobi['device']['installUpdate']();");
			else
				appMobiObj['device']['installUpdate']();
		} catch(e) {}
	};
	Acts.prototype.deviceLaunchExternal = function (url)
	{
		try {
			if (isDC)
				awex("AppMobi['device']['launchExternal']('" + url + "');");
			else
				appMobiObj['device']['launchExternal'](url);
		} catch(e) {}
	};
	Acts.prototype.deviceMainViewExecute = function (cmd)
	{
		try {
			appMobiObj['device']['mainViewExecute'](cmd);
		} catch(e) {}
	};
	Acts.prototype.deviceScanBarcode = function ()
	{
		if (isDC)
			return;
		try {
			evtBarCodeResponse=''; appMobiObj['device']['scanBarcode']();
		} catch(e) {}
	};
	Acts.prototype.deviceUpdateConnection = function ()
	{
		if (isDC)
			return;
		try {
			evtConnection=''; appMobiObj['device']['updateConnection']();
		} catch(e) {}
	};
	Acts.prototype.deviceShowRemoteSite = function (url, w, h, px, py, lx, ly)
	{
		if (isDC)
			return;
		try {
			evtRemoteStatus='open'; appMobiObj['device']['showRemoteSiteExt'](url, px, py, lx, ly, w, h);
		} catch(e) {}
	};
	Acts.prototype.deviceSetAutoRotate = function (allow)
	{
		if (!appMobiEnabled && !isDC)
			return;
		if (isDC)
			awex("AppMobi['device']['setAutoRotate'](" + (allow ? "true" : "false") + ");");
		else
			appMobiObj['device']['setAutoRotate'](allow !== 0);
	};
	Acts.prototype.deviceSetRotateOrientation = function (orientation)
	{
		if (!appMobiEnabled && !isDC)
			return;
		if (isDC)
			awex("AppMobi['device']['setRotateOrientation'](" + (orientation === 0 ? "'portrait'" : "'landscape'") + ");");
		else
			appMobiObj['device']['setRotateOrientation'](orientation === 0 ? "portrait" : "landscape");
	};
	/*********************************************************
		ANALYTICS
	*********************************************************/
	Acts.prototype.analyticsLogEvent=function(event, qs){
		try{
			event="/application/" + event + ".event";
			if (isDC)
				awex("AppMobi['analytics']['logPageEvent']('" + event + "', '" + qs + "', 200, 'GET', 0, 'index.html');");
			else
				appMobiObj['analytics']['logPageEvent'](event, qs, 200, 'GET', 0, 'index.html');
		}catch(e){ console.log(e); }
	};
	/*********************************************************
		CACHE
	*********************************************************/
	Acts.prototype.cacheAddToMediaCache=function(url)
	{
		if (isDC)
			return;
		try{
			appMobiObj['cache']['addToMediaCache'](url);
		}catch(e){ console.log(e); }
	}
	Acts.prototype.cacheClearAllCookies=function()
	{
		if (isDC)
			return;
		try{
			appMobiObj['cache']['clearAllCookies']();
		}catch(e){ console.log(e); }
	}
	Acts.prototype.cacheClearMediaCache=function()
	{
		if (isDC)
			return;
		try{
			appMobiObj['cache']['clearMediaCache']();
		}catch(e){ console.log(e); }
	}
	Acts.prototype.cacheRemoveCookie=function(v)
	{
		if (isDC)
			return;
		try{
			appMobiObj['cache']['removeCookie'](v);
		}catch(e){ console.log(e); }
	}
	Acts.prototype.cacheRemoveFromMediaCache=function(v)
	{
		if (isDC)
			return;
		try{
			appMobiObj['cache']['removeFromMediaCache'](v);
		}catch(e){ console.log(e); }
	}
	Acts.prototype.cacheSetCookie=function(name, value, expires)
	{
		if (isDC)
			return;
		try{
			appMobiObj['cache']['setCookie'](name, value, expires);
		}catch(e){ console.log(e); }
	}
	Acts.prototype.AddVirtualPage = function ()
	{
		if (!appMobiEnabled && !isDC)
			return;
		if (isDC)
			awex("AppMobi['device']['addVirtualPage']();");
		else
			appMobiObj['device']['addVirtualPage']();
	};
	Acts.prototype.RemoveVirtualPage = function ()
	{
		if (!appMobiEnabled && !isDC)
			return;
		if (isDC)
			awex("AppMobi['device']['removeVirtualPage']();");
		else
			appMobiObj['device']['removeVirtualPage']();
	};
	Acts.prototype.HideStatusBar = function ()
	{
		try {
			if (isDC)
				awex("AppMobi['device']['hideStatusBar']();");
			else
				appMobiObj['device']['hideStatusBar']();
		} catch(e) {}
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	/*********************************************************
		DEVICE
	*********************************************************/
	Exps.prototype.AppMobiVersion = function(ret){ try{ret.set_string(appMobiObj['device']['appmobiversion']);}catch(e){ret.set_string('');}	}
	Exps.prototype.DeviceConnection = function(ret){ try{ret.set_string(appMobiObj['device']['connection']);}catch(e){ret.set_string('');}	}
	Exps.prototype.InitialOrientation = function(ret){ try{ret.set_int(parseInt(appMobiObj['device']['initialOrientation']));}catch(e){ret.set_int(0);}	}
	Exps.prototype.DeviceLastStation = function(ret){ try{ret.set_string(appMobiObj['device']['lastStation']);}catch(e){ret.set_string('');}	}
	Exps.prototype.DeviceModel = function(ret){ try{ret.set_string(appMobiObj['device']['model']);}catch(e){ret.set_string('');}	}
	Exps.prototype.Orientation = function(ret){ try{ret.set_int(parseInt(appMobiObj['device']['orientation']));}catch(e){ret.set_int(0);}	}
	Exps.prototype.DeviceOSVersion = function(ret){ try{ret.set_string(appMobiObj['device']['osversion']);}catch(e){ret.set_string('');}	}
	Exps.prototype.DevicePhonegapVersion = function(ret){ try{ret.set_string(appMobiObj['device']['phonegapversion']);}catch(e){ret.set_string('');}	}
	Exps.prototype.DevicePlatform = function(ret){ try{ret.set_string(appMobiObj['device']['platform']);}catch(e){ret.set_string('');}	}
	Exps.prototype.DeviceQueryString = function(ret){ try{ret.set_string(appMobiObj['device']['queryString']);}catch(e){ret.set_string('');}	}
	Exps.prototype.DeviceUUID = function(ret){ try{ret.set_string(appMobiObj['device']['uuid']);}catch(e){ret.set_string('');}	}
	Exps.prototype.DeviceRemoteData = function(ret){ try{ret.set_string(evtRemoteDataResponse);}catch(e){ret.set_string('');}	}
	Exps.prototype.DeviceBarcodeData = function(ret){ try{ret.set_string(evtBarCodeResponse);}catch(e){ret.set_string('');} }
	Exps.prototype.DeviceRemoteStatus = function(ret){ try{ret.set_string(evtRemoteStatus);}catch(e){ret.set_string('');} }
	/*********************************************************
		CACHE
	*********************************************************/
	Exps.prototype.Cookie = function(ret, p){
		try{
			ret.set_string(appMobiObj['cache']['getCookie'](p));
		}catch(e){ ret.set_string(''); }
	}
	Exps.prototype.LocalMediaCacheURL = function(ret, p){
		try{
			ret.set_string(appMobiObj['cache']['getMediaCacheLocalURL'](p));
		}catch(e){ ret.set_string(''); }
	}
	pluginProto.exps = new Exps();
}());
var toggle_iosFive = "<style type=\"text/css\"> .switch { background-color: #fff; float: right; height: 28px; width: 77px; border-radius: 20px; margin-top: -5px; box-shadow: inset 0 1px 3px #BABABA, inset -5px 13px 0.5px 0px rgba(232, 232, 232, 0.6), inset -1px 1px 2px rgba(0, 0, 0, 0.7), inset 1px 2px 1px 0px rgba(0, 0, 0, 1); overflow: hidden; } .switch input[type=checkbox] { display: none; } .switch::before { content: \"\"; display: block; height: 28px; 	width: 0px; position: absolute; border-radius: 20px; -webkit-box-shadow: inset 0 1px 2px #0059ac, inset 4px 11px 0.5px 2px rgba(0, 101, 189, 0.5), inset -1px 1px 2px rgba(0, 0, 0, 0.7), inset 0px 1px 1px rgba(0, 0, 0, 1.0); box-shadow: inset 0 1px 2px #0059ac, inset 4px 11px 0.5px 2px rgba(0, 101, 189, 0.5), inset -1px 1px 2px rgba(0, 0, 0, 0.7), inset 0px 1px 1px rgba(0, 0, 0, 1.0);	background-color: #2a94ec; } .switch.on::before { width: 77px; } .switch > .thumb { display: block; width: 25px; height: 25px; position: relative; top: 0.5; left: 1; 	z-index: 3; border: solid 1px #818181; border-radius: 28px; box-shadow: inset 0 1px 1px white, inset 0 -1px 1px white, 0 0px 1px rgba(0, 0, 0, 0.8); background-color: #CECECE; background-image: -webkit-linear-gradient(#CECECE, #FBFBFB); background-image: -moz-linear-gradient(#CECECE, #FBFBFB); background-image: -o-linear-gradient(#CECECE, #FBFBFB); -o-transition: all 0.125s ease-in-out; -webkit-transition: all 0.125s ease-in-out; -moz-transition: all 0.125s ease-in-out; -o-transform: translateX(0px); -webkit-transform: translate3d(0,0,0); -moz-transform: translateX(0px); } .switch.on > .thumb { -webkit-transform: translate3d(49px,0,0); -o-transform: translateX(49px); -moz-transform: translateX(49px); } .switch > .thumb::before { content: \"\"; display: block; height: 14px; width: 2px; background-color: white; box-shadow: 0px -0.5px 0.5px #000; border: none; position: absolute; top: 6px; left: -24px; } .switch > .thumb::after { content: \"\"; display: block; height: 10px; width: 10px; border-radius: 10px; border: solid 2px #777;	position: absolute; right: -32px; top: 6px; } </style>";
var toggle_iosFour = "<style type=\"text/css\"> .switch { background-color: #fff; float: right; height: 28px; width: 90px; border-radius: 4px; margin-top: -5px; box-shadow: inset 0 1px 3px #BABABA, inset 4px 13px 0.5px 0px rgba(232, 232, 232, 0.6), inset 1px 2px 1px 0px rgba(0, 0, 0, 1); overflow: hidden; } .switch input[type=checkbox] { display: none; } .switch::before { content: \"\"; display: block; height: 28px; width: 0px; position: absolute; border-radius: 4px; -webkit-box-shadow: inset 0 1px 4px #0059ac, inset -5px 10px 4px 3px rgba(0, 101, 189, 0.6), inset -30px 1px 2px rgba(0, 0, 0, 0.4), inset 0px 1px 1px rgba(0, 0, 0, 1.0); box-shadow:  inset 0 1px 4px #0059ac, inset -5px 10px 4px 3px rgba(0, 101, 189, 0.6), inset -30px 1px 2px rgba(0, 0, 0, 0.4), inset 0px 1px 1px rgba(0, 0, 0, 1.0); background-color: #2a94ec; } .switch.on::before { width: 77px; } .switch > .thumb { display: block; 	width: 39px; height: 26px; position: relative; top: 0; left: 0; z-index: 3; border: solid 1px #818181; border-radius: 4px; box-shadow: inset 0 1px 1px white, inset 0 -1px 1px white, 0 0px 2px rgba(0, 0, 0, 0.6); background-color: #CECECE; background-image: -webkit-linear-gradient(#CECECE, #FBFBFB); background-image: -moz-linear-gradient(#CECECE, #FBFBFB); background-image: -o-linear-gradient(#CECECE, #FBFBFB); -o-transition: all 0.125s ease-in-out; -webkit-transition: all 0.125s ease-in-out; -moz-transition: all 0.125s ease-in-out; -o-transform: translateX(0px); -webkit-transform: translate3d(0,0,0); -moz-transform: translateX(0px); } .switch.on > .thumb { -webkit-transform: translate3d(49px,0,0); -o-transform: translateX(49px); -moz-transform: translateX(49px); left: -1; } .switch > .thumb::before { content: \"\"; display: block;	height: 14px; width: 2px; background-color: white;	 box-shadow: 0px -0.5px 0.5px #000; border: none; position: absolute; top: 6px; left: -24px; } .switch > .thumb::after { content: \"\"; display: block; height: 10px; width: 10px; border-radius: 10px; border: solid 2px #777; position: absolute; right: -32px; top: 6px; } </style>";
var toggle_t = 0; // prevent several adds.
;
;
cr.plugins_.iScroll = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.iScroll.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
		this.triggerID = null;
		this.triggerSwipe = null;
		this.triggerToggle = null;
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
		var wrapperID = "wrapper_"+this.uid;
		this.globalWidth = this.properties[11];
		this.truncate = [true,false][this.properties[24]];
		this.fakelink = [true,false][this.properties[9]];
		this.linkStyle = [this.properties[10]];
		this.isFullScreen = [true,false][this.properties[0]];
		this.vscrollbar = [true,false][this.properties[13]];
		this.vscrolling = [true,false][this.properties[12]];
		this.fixedScroll = [true,false][this.properties[14]];
		this.bounce = [true,false][this.properties[15]];
		this.backgroundD = [true,false][this.properties[22]];
		this.iOS_version = [true,false][this.properties[2]];
		var createHeader = [true,false][this.properties[16]];
		var createFooter = [true,false][this.properties[19]];
		var disablePhonelinks = "<meta name=\"format-detection\" content=\"telephone=no\" />"
		jQuery(disablePhonelinks).appendTo("head");
		this.elem = document.createElement("div");
		this.elem.id = wrapperID;
		this.elem.style.position = "absolute";
		this.elem.style.width = "100%";
		this.elem.style.overflow = "auto";
		this.elem.style.margin = "0";
		var Header = document.getElementById("header");
		var Footer = document.getElementById("footer");
		if (window.navigator.standalone) { this.elem.style.top = "20px"; this.elem.style.bottom = "0px"; this.elem.style.left = "0px"; }
			else { this.elem.style.top = "0px"; this.elem.style.bottom = "0px"; this.elem.style.left = "0px";} ;
		if (this.backgroundD == true) { this.elem.style.background = this.properties[23]; } else { this.elem.style.background = "none"; };
		if ( navigator.userAgent.indexOf('Opera') != -1 ) { this.elem.style.fontFamily = "arial"; } else { this.elem.style.fontFamily = "helvetica"; };
		this.elem.style.zIndex = this.properties[25];
		jQuery(this.elem).appendTo(this.runtime.canvasdiv ? this.runtime.canvasdiv : "body");
		var newScroller = document.createElement("div");
			newScroller.id = "scroller_"+this.uid;
			newScroller.style.WebkitTransform = "translate3d(0,0,0)"; // prevent scrolling bug
			newScroller.style.position = "absolute";
			newScroller.style.zIndex = this.properties[25];
			newScroller.style.width = "100%";
			newScroller.style.padding = "0";
			newScroller.style.margin = "0";
		var newUL = document.createElement("ul");
			newUL.id = "ul_id_"+this.uid;
			newUL.style.width = this.globalWidth+"%";
			newUL.style.paddingLeft = (100-this.globalWidth)/2+"%";
			newUL.style.paddingRight = (100-this.globalWidth)/2+"%";
			newUL.style.margin = "0";
			newUL.style.WebkitTextSizeAdjust = "none"; // prevent bug text scaling on orient change
		var ElementParent = document.getElementById(this.elem.id);
			ElementParent.appendChild(newScroller);
		var ElementParent2 = document.getElementById("scroller_"+this.uid);
			ElementParent2.appendChild(newUL);
		if(createHeader == true)
			{ this.createHeader(); };
		if(createFooter == true)
			{ this.createFooter(); };
		var myScroll = new window["iScroll"] (wrapperID, {"hScrollbar": false,
												"vScrollbar": this.vscrollbar,
												"vScroll": this.vscrolling,
												"fixedScrollbar": this.fixedScroll,
												"bounce": this.bounce,
												"onBeforeScrollStart": function (e) {
																		var target = e.target;
																		while (target.nodeType != 1) target = target.parentNode;
																		if (target.tagName != 'SELECT' && target.tagName != 'INPUT' && target.tagName != 'TEXTAREA')
																		e.preventDefault();
																	}
												}
									);
		this.myScroll = myScroll;
		document.addEventListener('touchmove', function (e) {e.preventDefault(); }, false); // use this for compatibility with iDevice & Android (prevents whole window scrolling)
		document.addEventListener('DOMContentLoaded', function () { setTimeout(loaded, 200); }, false);
		function loaded()
			{
				setTimeout(function () {
				myScroll.refresh();
				}, 100);
				jQuery('.fakeHighlightLink').on('click', function(e){ e.preventDefault(); });	// disable default click on link with class "fakeHighlightLink"
			};
		window.addEventListener('load', loaded, false);
		myScroll.options.onScrollMove = (function (self) {
			return function() {
				self.runtime.trigger(cr.plugins_.iScroll.prototype.cnds.onScrollMove, self);
			};
		})(this);
		myScroll.options.onScrollEnd = (function (self) {
			return function() {
				self.runtime.trigger(cr.plugins_.iScroll.prototype.cnds.onScrollEnd, self);
			};
		})(this);
		jQuery(".swipe").on('touchstart', (function(self) {
				return function() {
					var id_triggering = jQuery(this).attr("id");
					self.triggerSwipe = id_triggering;
				};
			})(this));
		jQuery(".swipe").on('touchend', (function(self) {
				return function() {
					var id_triggering = jQuery(this).attr("id");
					self.triggerSwipe = null;
				};
			})(this));
		jQuery(document).ready(( function(self) {
				return function() {
				jQuery('.swipe').swipe({
					"swipeLeft": function() {
							self.runtime.trigger(cr.plugins_.iScroll.prototype.cnds.isSwipingLeft, self);
							},
					"swipeRight": function() {
							self.runtime.trigger(cr.plugins_.iScroll.prototype.cnds.isSwipingRight, self);
							}
							});
					}})(this));
		this.updatePosition();
		this.runtime.tickMe(this);
	};
	instanceProto.createHeader = function()
	{
			var newHeader = document.createElement("header");
				newHeader.id = "header";
				newHeader.style.position = "absolute";
				if (window.navigator.standalone) { newHeader.style.top = "20px"; } else { newHeader.style.top = "0px";} ; // put the iscroll object under the status bar in an iphone webapp
				newHeader.style.left = "0";
				newHeader.style.height = this.properties[18]+"px";
				newHeader.style.lineHeight = this.properties[18]+"px";
				newHeader.style.width = "100%"
				newHeader.style.padding = "0";
				newHeader.style.background = "#6f85a3";
			var webfont = document.createElement("link");
				webfont.href = "http://fonts.googleapis.com/css?family=Frijole";
				webfont.rel = "stylesheet";
				webfont.type = "text/css";
			document.getElementsByTagName('head')[0].appendChild(webfont);
				newHeader.style.fontFamily = "Frijole";
				newHeader.style.fontSize = "20px";
				newHeader.style.fontWeight = "bold";
				newHeader.style.textShadow = "0 -1px 0 rgba(0,0,0,0.5)";
				newHeader.style.textAlign = "center";
				newHeader.style.color = "#ffffff";
				newHeader.style.zIndex = this.properties[25]+1;
				if (window.navigator.standalone) { this.elem.style.top = this.properties[18]+20+"px"; } else { this.elem.style.top = this.properties[17]+"px"; };
			var newText = document.createElement("span");
				newText.id = "text_header";
				newText.innerHTML = this.properties[17];
			newHeader.appendChild(newText);
			jQuery(newHeader).appendTo(this.runtime.canvasdiv ? this.runtime.canvasdiv : "body");
			if (newHeader.onmousedown)
				{ newHeader["style"]["MozUserSelect"] = "normal"; }
			else
				{ newHeader["style"]["MozUserSelect"] = "none"; };
	};
	instanceProto.createFooter = function()
	{
			var newFooter = document.createElement("footer");
				newFooter.id = "footer";
				newFooter.style.position = "absolute";
				newFooter.style.bottom = "0";
				newFooter.style.left = "0";
				newFooter.style.height = this.properties[21]+"px";
				newFooter.style.lineHeight = "45px";
				newFooter.style.width = "100%";
				newFooter.style.borderTop = "1px solid #444";
				newFooter.style.padding = "0";
				newFooter.style.background = "#171717";
				newFooter.style.fontFamily = "helvetica";
				newFooter.style.fontSize = "20px";
				newFooter.style.fontWeight = "bold";
				newFooter.style.textShadow = "0 -1px 0 rgba(0,0,0,0.5)";
				newFooter.style.textAlign = "center";
				newFooter.style.color = "#ffffff";
				newFooter.style.zIndex = this.properties[25]+1;
				this.elem.style.bottom = this.properties[21]+"px";
			var newText = document.createElement("span");
				newText.id = "text_footer";
				newText.innerHTML = this.properties[20];
			newFooter.appendChild(newText);
			jQuery(newFooter).appendTo(this.runtime.canvasdiv ? this.runtime.canvasdiv : "body");
			if (newFooter.onmousedown)
				{ newFooter["style"]["MozUserSelect"] = "normal"; }
			else
				{ newFooter["style"]["MozUserSelect"] = "none";};
	};
	instanceProto.fakeHighlightTap = function(link_anchor, highlight_bar, link_url) //click event on anchors is disabled - it's replaced by window.location
	{
		highlight_bar.style.display = "none";
		var timerA;
		var timerB;
			link_anchor.onclick = function()
			{
			timerA = setTimeout(function() { highlight_bar.style.display = "inline"; }, 200); // set link color after 200ms
			timerB = setTimeout(function() { window.location = link_url; }, 400); // fire the link after 400 ms (set link color + 200ms)
			setTimeout(function() { highlight_bar.style.display = "none"; }, 500); // the element is highlighted only 500ms ( 100ms after eventual the link was fired. Reduce the bug effect when onmousedown )
			};
			link_anchor.onmousemove = function()
			{
			clearTimeout(timerA); // reset Timeout
			clearTimeout(timerB); // reset Timeout
			highlight_bar.style.display = "none";
			};
			link_anchor.ontouchmove = function()
			{
			clearTimeout(timerA); // reset Timeout
			clearTimeout(timerB); // reset Timeout
			highlight_bar.style.display = "none";
			};
			link_anchor.ontouchstart = function() { highlight_bar.style.display = "none"; };
			link_anchor.onmousedown = function() { highlight_bar.style.display = "none"; };
			link_anchor.onmouseup = function() { highlight_bar.style.display = "none"; };
			link_anchor.ontouchend = function() { highlight_bar.style.display = "none"; };
	};
	instanceProto.draw = function ()
	{
	};
	instanceProto.drawGL = function(glw)
	{
	};
	instanceProto.onDestroy = function ()
	{
		jQuery(this.elem).remove();
		this.elem = null;
	};
	instanceProto.tick = function ()
	{
		this.updatePosition();
    };
	instanceProto.updatePosition = function ()
	{
		if (this.isFullScreen == true) // if destination is fullscreen ( prevent a bug )
		{  }
		else if (this.isFullScreen == false) // if destination is a frame ( prevent a bug )
		{
		var left = this.layer.layerToCanvas(this.x, this.y, true);
		var top = this.layer.layerToCanvas(this.x, this.y, false);
		var right = this.layer.layerToCanvas(this.x + this.width, this.y + this.height, true);
		var bottom = this.layer.layerToCanvas(this.x + this.width, this.y + this.height, false);
		if (!this.visible || !this.layer.visible || right <= 0 || bottom <= 0 || left >= this.runtime.width || top >= this.runtime.height)
		{
			jQuery(this.elem).hide();
			return;
		}
		if (this.truncate == true) // ability to disable
		{
			if (left < 1)
				left = 1;
			if (top < 1)
				top = 1;
			if (right >= this.runtime.width)
				right = this.runtime.width - 1;
			if (bottom >= this.runtime.height)
				bottom = this.runtime.height - 1;
		} else {};
		jQuery(this.elem).show();
		var offx = Math.round(left) + jQuery(this.runtime.canvas).offset().left;
		var offy = Math.round(top) + jQuery(this.runtime.canvas).offset().top;
		jQuery(this.elem).offset({left: offx, top: offy});
		jQuery(this.elem).width(right - left);
		jQuery(this.elem).height(bottom - top);
		};
	};
	pluginProto.acts = {};
	var acts = pluginProto.acts;
	acts.add_Line = function (text, id, linkActive, linkURL, topSpace, bottomSpace, leftSpace, rightSpace, topinnerSpace, bottominnerSpace,
																					lineHeight, heightLine, lineWidth, bgColor, textAlign)
	{
		if (linkActive === 0) // if a link
		{
			var newLink = document.createElement("a");
				newLink.href = linkURL;
				newLink.className = "fakeHighlightLink";
				newLink.style.textDecoration = "none";
			var newLine = document.createElement("li");
				newLine.className = "swipe"; // add swipe to delete support
				if (id.toString() == ">USE UNIQUE ID<") { } else {  newLine.id = id; };
				newLine.style.width = lineWidth-(leftSpace+rightSpace)+"%";
				newLine.style.listStyle = "none";
				newLine.style.paddingLeft = leftSpace+"%";
				newLine.style.paddingRight = rightSpace+"%";
				newLine.style.paddingTop = topinnerSpace+"%";
				newLine.style.paddingBottom = bottominnerSpace+"%";
				newLine.style.left = (100-lineWidth)/2+"%";
				newLine.style.marginTop= topSpace+"px";
				newLine.style.marginBottom = bottomSpace+"px";
				newLine.style.cssFloat = "none";
				newLine.style.overflow = "hidden";
				newLine.style.position = "relative";
				if (lineHeight.toString().toLowerCase() == "auto") // height of line
					{
					newLine.style.height = "auto";
					newLine.style.paddingTop = "3%";
					newLine.style.paddingBottom = "3%";
					}
				else
					{ newLine.style.height = lineHeight+"px"; };
				if (heightLine.toString().toLowerCase() == "auto") // line-height of line
					{ newLine.style.lineHeight = "normal"; }
				else
					{ newLine.style.lineHeight = heightLine+"px"; };
				newLine.style.background = bgColor.toString();
			/*	newLine.style.borderRadius = "0px 0px 0px 0px";
				newLine.style.MozBorderRadius = "0px 0px 0px 0px";
				newLine.style.WebkitBorderRadius = "0px 0px 0px 0px";  */
				newLine.style.fontFamily = "helvetica";
				newLine.style.fontSize = "12pt";
				newLine.style.color = "black";
				if (textAlign === 0){ newLine.style.textAlign = "left" } else if (textAlign === 1){ newLine.style.textAlign = "center" } else if (textAlign === 2) { newLine.style.textAlign = "right" };
				newLine.style.zIndex = this.properties[25];
				newLine.onclick = (function(self) { //self remplace this
						return function() {
						self.triggerID = id;
						self.runtime.trigger(cr.plugins_.iScroll.prototype.cnds.isClicked, self);
						self.runtime.trigger(cr.plugins_.iScroll.prototype.cnds.isAnyClicked, self);
						};
					})(this);
			var newText = document.createElement("span");
				newText.id = "text_"+id;
				newText.innerHTML = text;
			var ElementParent = document.getElementById("ul_id_"+this.uid);
				ElementParent.appendChild(newLink);
				newLine.appendChild(newText);
				newLink.appendChild(newLine);
			if (this.fakelink == true)
			{
				var newDIV = document.createElement("div");
					newDIV.id = "fakelink_"+id;
					newDIV.style.height = "100%";
					newDIV.style.width = "100%";
					newDIV.style.position = "absolute";
					newDIV.style.top = "0px";
					newDIV.style.left = "0px";
					newDIV.style.background = this.linkStyle.toString();
				/*	newDIV.style.borderRadius = "0px 0px 0px 0px";
					newDIV.style.MozBorderRadius = "0px 0px 0px 0px";
					newDIV.style.WebkitBorderRadius = "0px 0px 0px 0px"; */
					newDIV.style.display = "none";
					newDIV.style.zIndex = this.properties[25]+1;
				newLine.appendChild(newDIV);
				this.fakeHighlightTap(newLink, newDIV, linkURL);
			} else {
			newLink.onclick = function()
				{
				setTimeout(function() { window.location = linkURL; }, 200);
				};
			};
		}
		else  //if not a link
		{
			var newLine = document.createElement("li"); //li
				if (id.toString() == ">USE UNIQUE ID<") { } else {  newLine.id = id; };
				newLine.className = "swipe"; // add swipe to delete support
				newLine.style.width = lineWidth-(leftSpace+rightSpace)+"%";
				newLine.style.listStyle = "none";
				newLine.style.paddingLeft = leftSpace+"%";
				newLine.style.paddingRight = rightSpace+"%";
				newLine.style.paddingTop = topinnerSpace+"%";
				newLine.style.paddingBottom = bottominnerSpace+"%";
				newLine.style.left = (100-lineWidth)/2+"%";
				newLine.style.position = "relative";
				newLine.style.marginTop= topSpace+"px";
				newLine.style.marginBottom = bottomSpace+"px";
				newLine.style.overflow = "hidden";
				if (lineHeight.toString().toLowerCase() == "auto") // height of line
					{
					newLine.style.height = "auto";
					newLine.style.paddingTop = "3%";
					newLine.style.paddingBottom = "3%";
					}
				else
					{ newLine.style.height = lineHeight+"px"; };
				if (heightLine.toString().toLowerCase() == "auto") // line-height of line
					{ newLine.style.lineHeight = "normal"; }
				else
					{ newLine.style.lineHeight = heightLine+"px"; };
				newLine.style.background = bgColor.toString();
			/*	newLine.style.borderRadius = "0px 0px 0px 0px";
				newLine.style.MozBorderRadius = "0px 0px 0px 0px";
				newLine.style.WebkitBorderRadius = "0px 0px 0px 0px";  */
				newLine.style.fontFamily = "helvetica";
				newLine.style.fontSize = "12pt";
				newLine.style.color = "black";
				if (textAlign === 0){ newLine.style.textAlign = "left" } else if (textAlign === 1){ newLine.style.textAlign = "center" } else if (textAlign === 2) { newLine.style.textAlign = "right" };
				newLine.style.zIndex = this.properties[25];
				var newText = document.createElement("span");
				newText.id = "text_"+id;
				newText.innerHTML = text;
				newLine.onclick = (function(self) {
						return function() {
						self.triggerID = id;
						self.runtime.trigger(cr.plugins_.iScroll.prototype.cnds.isClicked, self);
						self.runtime.trigger(cr.plugins_.iScroll.prototype.cnds.isAnyClicked, self);
						};
					})(this);
			var ElementParent = document.getElementById("ul_id_"+this.uid);
				ElementParent.appendChild(newLine);
				newLine.appendChild(newText);
		};
	};
	acts.add_InputLine = function (text, textForm, id, inputHeight, inputWidth, inputType, inputReadonly, topSpace, bottomSpace, leftSpace, rightSpace,
																			topinnerSpace, bottominnerSpace, lineHeight, lineWidth, bgColor)
	{
			var newInputLine = document.createElement("li");
			newInputLine.className = "swipe"; // add swipe to delete support
				if (id.toString() == ">USE UNIQUE ID<") { } else {  newInputLine.id = id; };
				newInputLine["style"]["width"] = lineWidth-(leftSpace+rightSpace)+"%";
				newInputLine["style"]["listStyle"] = "none";
				newInputLine["style"]["paddingLeft"] = leftSpace+"%";
				newInputLine["style"]["paddingRight"] = rightSpace+"%";
				newInputLine["style"]["paddingTop"] = topinnerSpace+"%";
				newInputLine["style"]["paddingBottom"] = bottominnerSpace+"%";
				newInputLine["style"]["left"] = (100-lineWidth)/2+"%";
				newInputLine["style"]["position"] = "relative";
				newInputLine["style"]["marginTop"] = topSpace+"px";
				newInputLine["style"]["marginBottom"] = bottomSpace+"px";
				newInputLine["style"]["overflow"] = "hidden";
				newInputLine["style"]["fontFamily"] = "helvetica";
				newInputLine["style"]["fontSize"] = "12pt";
				newInputLine["style"]["color"] = "black";
				if (lineHeight == "auto")
					{ newInputLine["style"]["height"] = "auto"; }
				else
					{ newInputLine["style"]["height"] = lineHeight.valueOf()+"px"; };
				if (lineHeight == "auto")
					{ newInputLine["style"]["lineHeight"] = "normal"; }
				else
					{ newInputLine["style"]["lineHeight"] = lineHeight.valueOf()+"px"; };
				newInputLine["style"]["background"] = bgColor.toString();
			/*	newInputLine.style.borderRadius = "0px 0px 0px 0px";
				newInputLine.style.MozBorderRadius = "0px 0px 0px 0px";
				newInputLine.style.WebkitBorderRadius = "0px 0px 0px 0px"; */
				newInputLine["style"]["zIndex"] = this.properties[25];
		var newText = document.createElement("span");
				newText.id = "text_"+id;
				newText.innerHTML = text;
				newText.style.marginRight = "3%";
			var newLabel = document.createElement("span");
				newLabel.style.cssFloat = "right";
				newLabel.style.width = inputWidth+"%";
				newLabel.style.height = inputHeight+"%";
			var newInput = document.createElement("input");
				switch (inputType) {
					case 0:
						newInput["type"] = "text";
					break;
					case 1:
						newInput["type"] = "password";
					break;
					case 2:
						newInput["type"] = "email";
					break;
					case 3:
						newInput["type"] = "number";
					break;
					case 4:
						newInput["type"] = "tel";
					break;
					case 5:
						newInput["type"] = "url";
					break;
				};
				newInput["id"] = id+"_input";
				newInput["value"] = textForm;
				newInput["style"]["cssFloat"] = "right";
				if (inputReadonly === 0) { newInput["readOnly"] = true; } else { newInput["readOnly"] = false;};
				if (inputWidth == "auto") { newInput["style"]["width"] = "auto"; } else { newInput["style"]["width"] = inputWidth+"%"; };
				if (inputHeight == "auto") { newInput["style"]["height"] = "auto"; } else { newInput["style"]["height"] = inputHeight+"%"; };
				newInput["style"]["position"] = "relative";
				newInput["style"]["marginRight"] = "auto";
				newInput.addEventListener('mousedown', function(e) {
				e.stopPropagation();
				}, false);
				newInput.addEventListener('touchstart', function(e) {
				e.stopPropagation();
				}, false);
				newInputLine.onclick = (function(self) {
						return function() {
						self.triggerID = id;
						self.runtime.trigger(cr.plugins_.iScroll.prototype.cnds.isClicked, self);
						self.runtime.trigger(cr.plugins_.iScroll.prototype.cnds.isAnyClicked, self);
						};
					})(this);
				newInput.oninput = (function(self) {
						return function() {
						self.triggerID = id+"_input";
						self.runtime.trigger(cr.plugins_.iScroll.prototype.cnds.onTextChanged, self);
						};
					})(this);
			var ElementParent = document.getElementById("ul_id_"+this.uid);
				ElementParent.appendChild(newInputLine);
				newInputLine.appendChild(newText);
				newLabel.appendChild(newInput);
				newInputLine.appendChild(newLabel);
	};
	acts.add_ToggleLine = function (text, id, toggleStatus, topSpace, bottomSpace, leftSpace, rightSpace,
																			topinnerSpace, bottominnerSpace, lineHeight, lineWidth, bgColor)
	{
			var newToggleLine = document.createElement("li");
			newToggleLine.className = "swipe"; // add swipe to delete support
				newToggleLine.style.listStyle = "none";
				if (id.toString() == ">USE UNIQUE ID<") { } else {  newToggleLine.id = id; };
				if (this.iOS_version === true || this.iOS_version === false) { ++toggle_t; };
				if (this.iOS_version === true && toggle_t == 1) { jQuery(toggle_iosFour).appendTo("head"); } else if (this.iOS_version === false && toggle_t == 1) { jQuery(toggle_iosFive).appendTo("head"); };
				newToggleLine.style.width = lineWidth-(leftSpace+rightSpace)+"%";
				if (lineHeight == "auto")
					{ newToggleLine.style.height = "auto"; }
				else
					{ newToggleLine.style.height = lineHeight.valueOf()+"px"; };
				if (lineHeight == "auto")
					{ newToggleLine.style.lineHeight = "normal"; }
				else
					{ newToggleLine.style.lineHeight = lineHeight.valueOf()+"px"; };
				newToggleLine.style.paddingLeft = leftSpace+"%";
				newToggleLine.style.paddingRight = rightSpace+"%";
				newToggleLine.style.paddingTop = topinnerSpace+"%";
				newToggleLine.style.paddingBottom = bottominnerSpace+"%";
				newToggleLine.style.left = (100-lineWidth)/2+"%";
				newToggleLine.style.position = "relative";
				newToggleLine.style.marginTop= topSpace+"px";
				newToggleLine.style.marginBottom = bottomSpace+"px";
				newToggleLine.style.background = bgColor.toString();
			var newText = document.createElement("span");
				newText.id = "text_"+id;
				newText.innerHTML = text;
			var newSwitch = document.createElement("span");
				newSwitch.id = "toggle_"+id;
				if(toggleStatus === 0) { newSwitch.className = "switch on"; } else { newSwitch.className = "switch";};
			var newThumb = document.createElement("span");
				newThumb.className = "thumb";
			var newCheckbox = document.createElement("input");
				newCheckbox.type = "checkbox";
			newSwitch.onclick = function () {
				if (newSwitch.className == "switch on")
					{
						newSwitch.className = "switch";
					}
				else
					{
						newSwitch.className = "switch on";
					};
				};
			newToggleLine.onclick = (function(self) {
							return function() {
							self.triggerID = id;
							if (newSwitch.className == "switch on")
							{ self.triggerToggle =  0; } else { self.triggerToggle = 1; };
							self.runtime.trigger(cr.plugins_.iScroll.prototype.cnds.toggleStatus, self);
							};
						})(this);
			newSwitch.addEventListener('touchstart', function(e) {
				e.stopPropagation();
				}, false);
			var ElementParent = document.getElementById("ul_id_"+this.uid);
				ElementParent.appendChild(newToggleLine);
				newToggleLine.appendChild(newText);
				newToggleLine.appendChild(newSwitch);
				newSwitch.appendChild(newThumb);
				newSwitch.appendChild(newCheckbox);
	};
	acts.add_Header = function (text, headerHeight, headerWidth, bgColor, fontSize, textAlign, fontWeight, fontColor, shadow, linkActive, linkURL)
	{
		var initHeader = document.getElementById("header");
			if (initHeader)
			{
				jQuery(initHeader).remove();
			};
		if (linkActive === 0) // if a link
		{
			var newLink = document.createElement("a");
				newLink.href = linkURL;
				newLink.className = "fakeHighlightLink";
				newLink.style.textDecoration = "none";
			var newHeader = document.createElement("header")
				newHeader.id = "header";
				newHeader.style.position = "absolute";
				if (window.navigator.standalone) { newHeader.style.top = "20px"; } else { newHeader.style.top = "0px";} ; // essayer en supprimant totalement cette ligne
				newHeader.style.left = (100-headerWidth)/2+"%";
				newHeader.style.height = headerHeight+"px";
				newHeader.style.lineHeight = headerHeight+"px";
				newHeader.style.width = headerWidth+"%";
				newHeader.style.padding = "0";
				newHeader.style.background = bgColor.toString();
				newHeader.style.fontFamily = "helvetica";
				newHeader.style.fontSize = fontSize+"pt";
				if (fontWeight === 0){ newHeader.style.fontWeight = "normal" } else if (fontWeight === 1){ newHeader.style.fontWeight = "bold" };
				if (shadow === 0){ newHeader.style.textShadow = "0 -1px 0 rgba(0,0,0,0.5)" } else if (shadow === 1){ newHeader.style.textShadow = "" };
				if (textAlign === 0){ newHeader.style.textAlign = "left" } else if (textAlign === 1){ newHeader.style.textAlign = "center" } else if (textAlign === 2) { newHeader.style.textAlign = "right" };
				newHeader.style.color = fontColor.toString();
				newHeader.style.zIndex = this.properties[25]+1;
				if (window.navigator.standalone) { this.properties[17]+20+"px"; } else { this.elem.style.top = headerHeight+"px"; };
			var newText = document.createElement("span");
				newText.id = "text_header";
				newText.innerHTML = text;
			newHeader.appendChild(newText);
			newLink.appendChild(newHeader);
			jQuery(newLink).appendTo(this.runtime.canvasdiv ? this.runtime.canvasdiv : "body");
			newHeader.onclick = (function(self) {
				return function() {
				self.triggerID = "header";
				self.runtime.trigger(cr.plugins_.iScroll.prototype.cnds.isClicked, self);
				self.runtime.trigger(cr.plugins_.iScroll.prototype.cnds.isAnyClicked, self);
				};
			})(this);
			if (this.fakelink == true)
			{
				var newDIV = document.createElement("div");
					newDIV.style.height = "100%";
					newDIV.style.width = "100%";
					newDIV.style.position = "absolute";
					newDIV.style.top = "0px";
					newDIV.style.left = "0px";
					newDIV.style.background = this.linkStyle.toString();
					newDIV.style.display = "none";
					newDIV.style.zIndex = this.properties[25]+1;
				newHeader.appendChild(newDIV);
				this.fakeHighlightTap(newLink, newDIV, linkURL);
			} else {
			newLink.onclick = function()
				{
				setTimeout(function() { window.location = linkURL; }, 200);
				};
			};
		}
		else  // if not a link
		{
			var newHeader = document.createElement("header")
				newHeader.id = "header";
				newHeader.style.position = "absolute";
				if (window.navigator.standalone) { newHeader.style.top = "20px"; } else { newHeader.style.top = "0px";} ; // essayer en supprimant totalement cette ligne
				newHeader.style.left = (100-headerWidth)/2+"%";
				newHeader.style.height = headerHeight+"px";
				newHeader.style.lineHeight = headerHeight+"px";
				newHeader.style.width = headerWidth+"%";
				newHeader.style.padding = "0";
				newHeader.style.background = bgColor.toString();
				newHeader.style.fontFamily = "helvetica";
				newHeader.style.fontSize = fontSize+"pt";
				if (fontWeight === 0){ newHeader.style.fontWeight = "normal" } else if (fontWeight === 1){ newHeader.style.fontWeight = "bold" };
				if (shadow === 0){ newHeader.style.textShadow = "0 -1px 0 rgba(0,0,0,0.5)" } else if (shadow === 1){ newHeader.style.textShadow = "" };
				if (textAlign === 0){ newHeader.style.textAlign = "left" } else if (textAlign === 1){ newHeader.style.textAlign = "center" } else if (textAlign === 2) { newHeader.style.textAlign = "right" };
				newHeader.style.color = fontColor.toString();
				newHeader.style.zIndex = this.properties[25]+1;
				if (window.navigator.standalone) { this.properties[17]+20+"px"; } else { this.elem.style.top = headerHeight+"px"; };
			var newText = document.createElement("span");
				newText.id = "text_header";
				newText.innerHTML = text;
			newHeader.onclick = (function(self) {
				return function() {
				self.triggerID = "header";
				self.runtime.trigger(cr.plugins_.iScroll.prototype.cnds.isClicked, self);
				self.runtime.trigger(cr.plugins_.iScroll.prototype.cnds.isAnyClicked, self);
				};
			})(this);
			newHeader.appendChild(newText);
			jQuery(newHeader).appendTo(this.runtime.canvasdiv ? this.runtime.canvasdiv : "body");
		};
			if (newHeader.onmousedown)
				{ newHeader["style"]["MozUserSelect"] = "normal"; }
			else
				{ newHeader["style"]["MozUserSelect"] = "none"; };
	};
	acts.add_Footer = function (text, footerHeight, footerWidth, borderSize, bgColor, fontSize, textAlign, fontWeight, fontColor, shadow, linkActive, linkURL)
	{
			var initFooter = document.getElementById("footer");
				if (initFooter)
				{
					jQuery(initFooter).remove();
				};
		if (linkActive === 0) // if a link
		{
			var newLink = document.createElement("a");
				newLink.href = linkURL;
				newLink.className = "fakeHighlightLink";
				newLink.style.textDecoration = "none";
			var newFooter = document.createElement("footer");
				newFooter.id = "footer";
				newFooter.style.position = "absolute";
				newFooter.style.bottom = "0";
				newFooter.style.left = (100-footerWidth)/2+"%";
				newFooter.style.height = footerHeight+"px";
				newFooter.style.lineHeight = "45px";
				newFooter.style.width = footerWidth+"%";
				newFooter.style.borderTop = borderSize+"px solid #444";
				newFooter.style.padding = "0";
				newFooter.style.background = bgColor.toString();
				newFooter.style.fontFamily = "helvetica";
				newFooter.style.fontSize = fontSize+"pt";
				if (fontWeight === 0){ newFooter.style.fontWeight = "normal" } else if (fontWeight === 1){ newFooter.style.fontWeight = "bold" };
				if (shadow === 0){ newFooter.style.textShadow = "0 -1px 0 rgba(0,0,0,0.5)" } else if (shadow === 1){ newFooter.style.textShadow = "" };
				if (textAlign === 0){ newFooter.style.textAlign = "left" } else if (textAlign === 1){ newFooter.style.textAlign = "center" } else if (textAlign === 2) { newFooter.style.textAlign = "right" };
				newFooter.style.color = fontColor.toString();
				newFooter.style.zIndex = this.properties[25]+1;
				this.elem.style.bottom = footerHeight+"px";
			var newText = document.createElement("span");
				newText.id = "text_footer";
				newText.innerHTML = text;
			newFooter.appendChild(newText);
			newLink.appendChild(newFooter);
			jQuery(newLink).appendTo(this.runtime.canvasdiv ? this.runtime.canvasdiv : "body");
			newFooter.onclick = (function(self) {
				return function() {
				self.triggerID = "footer";
				self.runtime.trigger(cr.plugins_.iScroll.prototype.cnds.isClicked, self);
				self.runtime.trigger(cr.plugins_.iScroll.prototype.cnds.isAnyClicked, self);
				};
			})(this);
			if (this.fakelink == true)
			{
				var newDIV = document.createElement("div");
					newDIV.style.height = "100%";
					newDIV.style.width = "100%";
					newDIV.style.position = "absolute";
					newDIV.style.top = "0px";
					newDIV.style.left = "0px";
					newDIV.style.background = this.linkStyle.toString();
					newDIV.style.display = "none";
					newDIV.style.zIndex = this.properties[25]+1;
				newFooter.appendChild(newDIV);
				this.fakeHighlightTap(newLink, newDIV, linkURL);
			} else {
			newLink.onclick = function()
				{
				setTimeout(function() { window.location = linkURL; }, 200);
				};
			};
		}
		else  // if not a link
		{
			var newFooter = document.createElement("footer");
				newFooter.id = "footer";
				newFooter.style.position = "absolute";
				newFooter.style.bottom = "0";
				newFooter.style.left = (100-footerWidth)/2+"%";
				newFooter.style.height = footerHeight+"px";
				newFooter.style.lineHeight = "45px";
				newFooter.style.width = footerWidth+"%";
				newFooter.style.borderTop = borderSize+"px solid #444";
				newFooter.style.padding = "0";
				newFooter.style.background = bgColor.toString();
				newFooter.style.fontFamily = "helvetica";
				newFooter.style.fontSize = fontSize+"pt";
					if (fontWeight === 0){ newFooter.style.fontWeight = "normal" } else if (fontWeight === 1){ newFooter.style.fontWeight = "bold" };
				if (shadow === 0){ newFooter.style.textShadow = "0 -1px 0 rgba(0,0,0,0.5)" } else if (shadow === 1){ newFooter.style.textShadow = "" };
				if (textAlign === 0){ newFooter.style.textAlign = "left" } else if (textAlign === 1){ newFooter.style.textAlign = "center" } else if (textAlign === 2) { newFooter.style.textAlign = "right" };
				newFooter.style.color = fontColor.toString();
				newFooter.style.zIndex = this.properties[25]+1;
				this.elem.style.bottom = footerHeight+"px";
			var newText = document.createElement("span");
				newText.id = "text_footer";
				newText.innerHTML = text;
			newFooter.onclick = (function(self) {
				return function() {
				self.triggerID = "footer";
				self.runtime.trigger(cr.plugins_.iScroll.prototype.cnds.isClicked, self);
				self.runtime.trigger(cr.plugins_.iScroll.prototype.cnds.isAnyClicked, self);
				};
			})(this);
			newFooter.appendChild(newText);
			jQuery(newFooter).appendTo(this.runtime.canvasdiv ? this.runtime.canvasdiv : "body");
		};
			newFooter.onclick = (function(self) {
				return function() {
				self.triggerID = "footer";
				self.runtime.trigger(cr.plugins_.iScroll.prototype.cnds.isClicked, self);
				self.runtime.trigger(cr.plugins_.iScroll.prototype.cnds.isAnyClicked, self);
				};
			})(this);
			if (newFooter.onmousedown)
				{ newFooter["style"]["MozUserSelect"] = "normal"; }
			else
				{ newFooter["style"]["MozUserSelect"] = "none";};
	};
	acts.remove_Header = function ()
	{
		var a = document.getElementById("header");
		if (a)
		{
			jQuery(a).remove();
			if (window.navigator.standalone) { this.elem.style.top = "20px"; } else { this.elem.style.top = "0px"; };
		};
	};
	acts.remove_Footer = function ()
	{
		var a = document.getElementById("footer");
		if (a)
		{
			jQuery(a).remove();
			this.elem.style.bottom = "0px";
		};
	};
	acts.remove_Line = function (id)
	{
		var a = document.getElementById(id);
		if (a)
		{
			jQuery(a).remove();
			this.myScroll.refresh();
		};
	};
	acts.enable_scrolling = function (i)
	{
		if ( i === 0 )
		{
		this.myScroll.options.vScroll = true;
		this.myScroll.options.vScrollbar = [true,false][this.properties[12]]; //prevent a conflict between properties & action
		this.myScroll.refresh();
		}
		else
		{
		this.myScroll.options.vScroll = false;
		this.myScroll.options.vScrollbar = [true,false][this.properties[12]]; //prevent a conflict between properties & action
		this.myScroll.refresh();
		};
	};
	acts.scrollTo_element = function (i)
	{
		this.myScroll.scrollToElement('#'+i.toString(), 100);
	};
	acts.scrollTo_Y = function (i)
	{
		this.myScroll.scrollTo(0, -i, 100);
	};
	acts.refresh_Scroller = function ()
	{
		this.myScroll.refresh();
	};
	acts.set_toggleStatus = function (id, status)
	{
		var elem = document.getElementById("toggle_"+id);
		if (!elem)
			{ return false; }
		else if (status === 0)
			{ elem.className = "switch on"; }
		else if (status === 1)
			{ elem.className = "switch"; };
	};
	acts.modify_radiusCorner = function (id, tl, tr, br, bl)
	{
		var elem = document.getElementById(id);
		var link = document.getElementById("fakelink_"+id);
		if (elem)
		{
			elem["style"]["borderRadius"] = tl+"px "+tr+"px "+br+"px "+bl+"px";
			elem["style"]["MozBorderRadius"] = tl+"px "+tr+"px "+br+"px "+bl+"px";
			elem["style"]["WebkitBorderRadius"] = tl+"px "+tr+"px "+br+"px "+bl+"px";
		};
		if (link)
		{
			link["style"]["borderRadius"] = tl+"px "+tr+"px "+br+"px "+bl+"px";
			link["style"]["MozBorderRadius"] = tl+"px "+tr+"px "+br+"px "+bl+"px";
			link["style"]["WebkitBorderRadius"] = tl+"px "+tr+"px "+br+"px "+bl+"px";
		};
	};
	acts.modify_borders = function (id, tb, bb, lb, rb, color)
	{
		var elem = document.getElementById(id);
		if (elem)
		{
			elem.style.borderTop = tb+"px solid "+color;
			elem.style.borderBottom = bb+"px solid "+color;
			elem.style.borderLeft = lb+"px solid "+color;
			elem.style.borderRight = rb+"px solid "+color;
			if (lb+rb != 0) { elem.style.marginLeft = "-"+(lb+rb)/2+"px"; };
		};
	};
	acts.modify_fonts = function (id, ffamily, fcolor, fsize)
	{
		var elem = document.getElementById(id);
		if (elem)
		{
			elem.style.fontFamily = ffamily;
			elem.style.fontSize = fsize+"pt";
			elem.style.color = fcolor;
		};
	};
	acts.modify_shadow = function (id, i, color)
	{
		var elem = document.getElementById(id);
		if (elem) {
			if (i === 0)
			{
				elem["style"]["boxShadow"]  = "1px 1px 7px "+color;
				elem["style"]["MozBoxShadow"]  = "1px 1px 7px "+color;
				elem["style"]["WebkitBoxShadow"]  = "1px 1px 7px "+color;
			} else {};
		};
	};
	acts.modify_images = function (id, bgimage, bgalign, bgrepeat, iconactive, iconimage, iconalign)
	{
		var elem = document.getElementById(id);
		var bg_Align;
		var icon_Align;
		var bg_Repeat;
		switch (bgalign) { case 0: bg_Align = "left"; break; case 1: bg_Align = "center"; break; case 2: bg_Align = "right"; break; };
		switch (iconalign) { case 0: icon_Align = "left, "; break; case 1: icon_Align = "right, "; };
		switch (bgrepeat) { case 0: bg_Repeat = "no-repeat"; break; case 1: bg_Repeat = "repeat-x"; break; case 2: bg_Repeat = "repeat-y"; break; case 3: bg_Repeat = "repeat"; break;};
		if (elem) {
			if (iconactive === 0)
			{
				elem.style.backgroundImage = "url('"+iconimage+"'), url('"+bgimage+"')";
				elem.style.backgroundPosition = icon_Align+bg_Align;
				elem.style.backgroundRepeat = "no-repeat, "+bg_Repeat;
			} else {
				elem.style.backgroundImage = "url('"+bgimage+"')";
				elem.style.backgroundPosition = bg_Align;
				elem.style.backgroundRepeat = bg_Repeat;
			};
		};
	};
	acts.modify_text = function (id, texte)
	{
		var elem = document.getElementById("text_"+id);
		if (elem) {
		elem.innerHTML = texte;
		};
	};
	acts.append_Text = function (id, texte)
	{
		var elem = document.getElementById("text_"+id);
		var i = elem.innerHTML;
		if (elem) {
		elem.innerHTML = i+texte;
		};
	};
	acts.append_specialText = function (id, texte)
	{
		var elem = document.getElementById(id);
		var i = elem.innerHTML;
		if (elem) {
		elem.innerHTML = i+texte;
		};
	};
	acts.modify_inputText = function (id, texte)
	{
		var elem = document.getElementById(id+"_input");
		if (elem) {
		elem.value = texte;
		};
	};
	acts.modify_setReadOnly = function (id, i)
	{
		var elem = document.getElementById(id+"_input");
		if (elem && i === 0)
		{ elem["readOnly"] = true; } else { elem["readOnly"] = false; };
	};
	acts.null_action = function ()
	{
	};
	acts.null_blank = function ()
	{
	};
	pluginProto.cnds = {};
	var cnds = pluginProto.cnds;
	cnds.isClicked = function (id)
	{
		return id == this.triggerID;
	};
	cnds.isAnyClicked = function ()
	{
		return true;
	};
	cnds.onScrollMove = function ()
	{
		return true;
	};
	cnds.onScrollEnd = function ()
	{
		return true;
	};
	cnds.onTextChanged = function (id)
	{
		return id+"_input" == this.triggerID;
	};
	cnds.toggleStatus = function (id, status)
	{
		return id == this.triggerID && this.triggerToggle == status;
	};
	cnds.isSwipingLeft = function (id)
	{
		return id == this.triggerSwipe;
	};
	cnds.isSwipingRight = function (id)
	{
		return id == this.triggerSwipe;
	};
	pluginProto.exps = {};
	var exps = pluginProto.exps;
	exps.inputText = function (ret, id)
	{
		var elem = document.getElementById(id+"_input");
		ret.set_any(elem.value);
	};
	exps.actualElementId = function (ret)
	{
		if (this.triggerID != null) { ret.set_any(this.triggerID); };
	};
	exps.scrollingPosition = function (ret)
	{
		ret.set_int(-(this.myScroll.y));
	};
	exps.countTtElement = function (ret)
	{
		var id = "#ul_id_"+this.uid;
		var count_elem = jQuery(id).children().size();
		ret.set_int(count_elem);
	};
	exps.getText = function (ret, id)
	{
		var elem = document.getElementById("text_"+id);
		ret.set_any(elem.innerHTML);
	};
}());
;
;
cr.plugins_.imageButton = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.imageButton.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
		this.disabled = [true,false][this.properties[4]]; //permet de d�finir quand le bouton est disabled
		var style_css = "<style type=\"text/css\">  .imagebutton{ cursor: default; } </style>";
		jQuery(style_css).appendTo("head");
		var load_image = new Image();
		var image_url = new Array();
		image_url[0] = this.properties[0];
		image_url[1] = this.properties[1];
		image_url[2] = this.properties[2];
		image_url[3] = this.properties[3];
		var i = 0;
		for(i = 0; i <= 3; i++)
		{ load_image.src = image_url[i]; };
		this.elem = document.createElement("img");
		this.elem.className = "imagebutton";
		if (this.properties[5] != "") { this.elem.id = this.properties[5]; };
		if (this.disabled == true) { this.elem.src = this.properties[3]; } else { this.elem.src = this.properties[0]; };
		jQuery(this.elem).appendTo("body");
		this.elem.onclick = (function (self) {
			return function() {
			self.runtime.trigger(cr.plugins_.imageButton.prototype.cnds.onClicked, self);
			}; })(this);
		this.elem.onmouseover = (function (self) {
			return function() {
			if (self.disabled == false && self.properties[1] != "") { self.elem.src = self.properties[1]; };
			}; })(this);
		this.elem.onmouseout = (function (self) {
			return function() {
			if (self.disabled == false && self.properties[1] != "") { self.elem.src = self.properties[0]; };
			}; })(this);
		this.elem.onmousedown = (function (self) {
			return function() {
			if (self.disabled == false) { self.elem.src = self.properties[2]; };
			}; })(this);
		this.elem.onmouseup = (function (self) {
			return function() {
			if (self.disabled == false) { self.elem.src = self.properties[0]; };
			}; })(this);
		this.elem.onmouserelease = (function (self) {
			return function() {
			if (self.disabled == false) { self.elem.src = self.properties[0]; };
			}; })(this);
		this.elem.ondragstart = function() { return false; };
		this.elem.oncontextmenu = function() { return false; };
		this.updatePosition();
		this.runtime.tickMe(this);
	};
	instanceProto.draw = function ()
	{
	};
	instanceProto.drawGL = function(glw)
	{
	};
	instanceProto.onDestroy = function ()
	{
		jQuery(this.elem).remove();
		this.elem = null;
	};
	instanceProto.tick = function ()
	{
		this.updatePosition();
    };
	instanceProto.updatePosition = function ()
	{
		var left = this.layer.layerToCanvas(this.x, this.y, true);
		var top = this.layer.layerToCanvas(this.x, this.y, false);
		var right = this.layer.layerToCanvas(this.x + this.width, this.y + this.height, true);
		var bottom = this.layer.layerToCanvas(this.x + this.width, this.y + this.height, false);
		if (!this.visible || !this.layer.visible || right <= 0 || bottom <= 0 || left >= this.runtime.width || top >= this.runtime.height)
		{
			jQuery(this.elem).hide();
			return;
		}
		if (left < 1)
			left = 1;
		if (top < 1)
			top = 1;
		if (right >= this.runtime.width)
			right = this.runtime.width - 1;
		if (bottom >= this.runtime.height)
			bottom = this.runtime.height - 1;
		jQuery(this.elem).show();
		var offx = Math.round(left) + jQuery(this.runtime.canvas).offset().left;
		var offy = Math.round(top) + jQuery(this.runtime.canvas).offset().top;
		jQuery(this.elem).offset({left: offx, top: offy});
		jQuery(this.elem).width(Math.round(right - left));
		jQuery(this.elem).height(Math.round(bottom - top));
	};
	pluginProto.acts = {};
	var acts = pluginProto.acts;
	acts.enabledButton = function ()
	{
		this.disabled = false;
		this.elem.src = this.properties[0];
	};
	acts.disabledButton = function ()
	{
		this.disabled = true;
		this.elem.src = this.properties[3];
	};
	pluginProto.cnds = {};
	var cnds = pluginProto.cnds;
	cnds.onClicked = function ()
	{
		if (this.disabled == false) { return true; };
	};
	cnds.isDisabled = function ()
	{
		return this.disabled;
	};
	pluginProto.exps = {};
	var exps = pluginProto.exps;
}());
var bA;
var bB;
var triggerID;
var input_idSpace = {};
;
;
cr.plugins_.iosdialogs = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.iosdialogs.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
		var css = "<style type=\"text/css\"> .button{ width: 125px; height: 40px; font-size: 16px; line-height: 37px; font-weight: bold; overflow: hidden; display: inline-block; text-align: center; margin-top: 15px; margin-bottom: 7px; margin-left: 5px; margin-right: 5px; border: solid 1px #192542;	background-image: linear-gradient(bottom, rgba(45,61,100,0.7) 12%, rgba(36,53,94,0.7) 50%, rgba(71,85,120,0.7) 0%, rgba(178,188,212,0.7) 99%); background-image: -o-linear-gradient(bottom, rgba(45,61,100,0.7) 12%, rgba(36,53,94,0.7) 50%, rgba(71,85,120,0.7) 0%, rgba(178,188,212,0.7) 99%); background-image: -moz-linear-gradient(bottom, rgba(45,61,100,0.7) 12%, rgba(36,53,94,0.7) 50%, rgba(71,85,120,0.7) 0%, rgba(178,188,212,0.7) 99%); background-image: -webkit-linear-gradient(bottom, rgba(45,61,100,0.7) 12%, rgba(36,53,94,0.7) 50%, rgba(71,85,120,0.7) 0%, rgba(178,188,212,0.7) 99%); background-image: -ms-linear-gradient(bottom, rgba(45,61,100,0.7) 12%, rgba(36,53,94,0.7) 50%, rgba(71,85,120,0.7) 0%, rgba(178,188,212,0.7) 99%); color: #fff; text-shadow: 0px -1px 0px #000; text-align: center; -webkit-border-radius: 6px; border-radius: 6px; box-shadow: 0pt 1pt 0px 0px rgba(255,255,255,0.3) inset, 0pt 1.5pt 0px 0px #5d6a8b; -webkit-box-shadow: 0pt 1pt 0px 0px rgba(255,255,255,0.3) inset, 0pt 1.5pt 0px 0px #5d6a8b; -moz-box-shadow: 0pt 1pt 0px 0px rgba(255,255,255,0.3) inset, 0pt 1.5pt 0px 0px #5d6a8b;}.button.default { background-image: linear-gradient(bottom, rgba(104,115,143) 12%, rgb(80,92,124) 50%, rgb(118,127,152) 0%, rgb(176,181,196) 99%); background-image: -o-linear-gradient(bottom, rgb(104,115,143) 12%, rgb(80,92,124) 50%, rgb(118,127,152) 0%, rgb(176,181,196) 99%); background-image: -moz-linear-gradient(bottom, rgb(104,115,143) 12%, rgb(80,92,124) 50%, rgb(118,127,152) 0%, rgb(176,181,196) 99%); background-image: -webkit-linear-gradient(bottom, rgb(104,115,143) 12%, rgb(80,92,124) 50%, rgb(118,127,152) 0%, rgb(176,181,196) 99%); background-image: -ms-linear-gradient(bottom, rgb(104,115,143) 12%, rgb(80,92,124) 50%, rgb(118,127,152) 0%, rgb(176,181,196) 99%);}.button:hover, button.hover { background-image: linear-gradient(bottom, rgb(44,51,67) 12%, rgba(27,31,41,0.9) 50%, rgb(64,69,86) 0%, rgb(108,113,132) 99%); background-image: -o-linear-gradient(bottom, rgb(44,51,67) 12%, rgba(27,31,41,0.9) 50%, rgb(64,69,86) 0%, rgb(108,113,132) 99%); background-image: -moz-linear-gradient(bottom, rgb(44,51,67) 12%, rgba(27,31,41,0.9) 50%, rgb(64,69,86) 0%, rgb(108,113,132) 99%); background-image: -webkit-linear-gradient(bottom, rgb(44,51,67) 12%, rgba(27,31,41,0.9) 50%, rgb(64,69,86) 0%, rgb(108,113,132) 99%); background-image: -ms-linear-gradient(bottom, rgb(44,51,67) 12%, rgba(27,31,41,0.9) 50%, rgb(64,69,86) 0%, rgb(108,113,132) 99%);} .input { margin-top: 15px; padding: 5px; resize: none; box-sizing: border-box; -moz-box-sizing: border-box; -webkit-box-sizing: border-box; border: solid 0px rgba(0,0,0,0.5); border-radius: 0px; -webkit-box-shadow: 0px 1pt 3px 1px rgba(0,0,0,0.8) inset; -moz-box-shadow: 0px 1pt 3px 1px rgba(0,0,0,0.8) inset; box-shadow: 0px 1pt 3px 1px rgba(0,0,0,0.8) inset;}</style>"
		jQuery(css).appendTo("head");
		document.addEventListener('touchmove', function (e)
			{ e.preventDefault(); }, false); // use this for compatibility with iDevice & Android (prevents whole window scrolling)
		window.onresize = function() { instanceProto.updateDialogPosition(); };
	};
	instanceProto.updateDialogPosition = function()
	{
			var browser = { height: window.innerHeight || document.documentElement.clientHeight || document.body.offsetHeight };
			var useragent = navigator.userAgent;
			var iphone = (useragent.indexOf('iPhone') != -1);
			var ipod = (useragent.indexOf('iPod') != -1);
		var popup = document.getElementById("popup");
		var text_content = document.getElementById("text_content");
		if (text_content)
		{
		var i = text_content.innerHTML; //wait for all content of text_content is loaded
		};
		if (popup)
		{
		var popup_height = document.getElementById("popup").offsetHeight; //dynamic height of the dialog (with dynamic content, borders,...)
		var pos = ((browser.height-popup_height)/2);
			popup["style"]["top"] = pos+"px";
		};
		if (iphone && popup || ipod && popup)
		{
			var popup_height = document.getElementById("popup").offsetHeight;
			var content_height = document.getElementById("text_content").offsetHeight;
			if (popup_height >= browser.height)
				{
					popup["style"]["height"] = (browser.height-10)+"px";
					var over = popup_height-browser.height;
					text_content["style"]["height"] = (content_height-over-10)+"px";
					/*if (browser.height == 320) // horizontal
					{ text_content["style"]["maxHeight"] = "130px"; }
					else // vertical
					{ text_content["style"]["minHeight"] = "290px"; }*/
				}
			};
	};
	instanceProto.addDialog = function(id, title, content, type, defaultvalue, nb_button, buttonA, buttonB, defaultbutton)
	{
		var div_null = document.createElement("div");
			div_null.id = "div_null";
			div_null["style"]["visibility"] = "hidden";
			div_null["style"]["opacity"] = "0";
			div_null["style"]["position"] = "fixed";
			div_null["style"]["top"] = "0";
			div_null["style"]["left"] = "0";
			div_null["style"]["right"] = "0";
			div_null["style"]["bottom"] = "0";
			div_null["style"]["width"] = "100%";
			div_null["style"]["height"] = "100%";
			div_null["style"]["background"] = "-moz-radial-gradient(center, ellipse cover, rgba(255,255,255,0.5) 30%, rgba(0,0,0,0.7) 120%)";
			div_null["style"]["background"] = "-webkit-radial-gradient(center, ellipse cover, rgba(255,255,255,0.5) 30%, rgba(0,0,0,0.7) 120%)";
		var Popup = document.createElement("div");
		var Popup_size = 275;
			Popup.id = "popup";
			Popup["style"]["cursor"] = "default";
			Popup["style"]["overflow"] = "hidden";
			Popup["style"]["position"] = "absolute";
			Popup["style"]["top"] = "25%";
			Popup["style"]["left"] = "50%";
			Popup["style"]["width"] = Popup_size+"px";
			Popup["style"]["height"] = "auto";
			Popup["style"]["marginLeft"] = "-"+(Popup_size/2)+"px";;
			Popup["style"]["opacity"] = "0";
			Popup["style"]["webkitTransform"] = "scale(0)";
			Popup["style"]["webkitTransition"] = "all 0.25s  ease-in-out";
			Popup["style"]["zIndex"] = "1000";
			Popup["style"]["fontFamily"] = "Tahoma, Arial, Helvetica, sans-serif";
			Popup["style"]["fontSize"] = "15px";
			Popup["style"]["color"] = "#fff";
			Popup["style"]["textShadow"] = "0px -1px 0px #000";
			Popup["style"]["textAlign"] = "center";
			Popup["style"]["border"] = "solid 2.5px rgba(241,246,255,0.9)";
			Popup["style"]["borderRadius"] = "10px";
			Popup["style"]["webkitBoxShadow"] = "0pt 0px 0px 1px rgba(140, 140, 140, 0.5), 0px 0px 1px #72767b, 0px 4px 6px #666, 0px 0px 200px rgba(192,205,223,0.9)";
			Popup["style"]["mozBoxShadow"] = "0pt 0px 0px 1px rgba(140, 140, 140, 0.5), 0px 0px 1px #72767b, 0px 4px 6px #666, 0px 0px 200px rgba(192,205,223,0.9)";
			Popup["style"]["boxShadow"] = "0pt 0px 0px 1px rgba(140, 140, 140, 0.5), 0px 0px 1px #72767b, 0px 4px 6px #666, 0px 0px 200px rgba(192,205,223,0.9)";
			Popup["style"]["backgroundColor"] = "rgba(171, 171, 171, 0)";
			Popup["style"]["background"] = "-moz-radial-gradient(center, ellipse cover, rgba(0,22,77,0.8) 0%, rgba(16,36,82,0.8) 100%)";
			Popup["style"]["background"] = "-webkit-radial-gradient(center, ellipse cover, rgba(0,22,77,0.8) 0%, rgba(16,36,82,0.8) 100%)";
			Popup["style"]["webkitTapHighlightColor"] = "rgba(0,0,0,0)"; // disable highlight tap
		Popup.ontouchstart = (function (self) {
				return function() {
					self.runtime.trigger(cr.plugins_.iosdialogs.prototype.cnds.isOnTouch, self);
					};
				})(this);
		jQuery(document).keyup(function(e) {
				if (e.keyCode == 27) {
					jQuery(Popup).fadeOut(100);
							setTimeout(function() { jQuery(div_null).fadeOut(400); }, 100);
							setTimeout(function() { jQuery(div_null).remove(); }, 500);
					}
		});
		/* prevent enter
		jQuery(document).keyup(function(e) {
				if (e.keyCode == 13) {
					}
		});*/
		/*Popup.ondblclick = (function (self) {
				return function() {
					self.runtime.trigger(cr.plugins_.iosdialogs.prototype.cnds.isOnTouch, self);
					};
				})(this);	*/
		var Glossy = document.createElement("div");
			Glossy["style"]["width"] = "350px";
			Glossy["style"]["height"] = "100px";
			Glossy["style"]["position"] = "absolute";
			Glossy["style"]["top"] = "-80px";
			Glossy["style"]["left"] = "-30px";
			Glossy["style"]["background"] = "-moz-radial-gradient(center, ellipse cover, rgba(255,255,255,0.7) 15%, rgba(255,255,255,0.1) 75%, rgba(19,19,19,0) 40%, rgba(19,19,19,0) 70%)";
			Glossy["style"]["background"] = "-webkit-radial-gradient(center, ellipse cover, rgba(255,255,255,0.7) 15%, rgba(255,255,255,0.1) 75%, rgba(19,19,19,0) 40%, rgba(19,19,19,0) 70%)";
		var Text_title = document.createElement("span");
			Text_title["style"]["display"] = "block";
			Text_title["style"]["padding"] = "15px";
			Text_title["style"]["fontWeight"] = "bold";
			Text_title["style"]["fontSize"] = "17px";
			Text_title.innerHTML = title;
		var Text_content = document.createElement("span");
			Text_content.id = "text_content";
			Text_content["style"]["display"] = "block";
			Text_content["style"]["overflow"] = "hidden"; //
			Text_content["style"]["margin"] = "0 10px";
		if (nb_button == 0) { Text_content["style"]["marginBottom"] = "15px"; };
			Text_content.innerHTML = content;
		Text_title.onmousedown = function () {
			Text_title["style"]["UserSelect"] = "none";
			Text_title["style"]["MozUserSelect"] = "none";
			Text_title["style"]["webkitUserSelect"] = "none";
			return false;
			};
		Text_content.onmousedown = function () {
			Text_content["style"]["UserSelect"] = "none";
			Text_content["style"]["MozUserSelect"] = "none";
			Text_content["style"]["webkitUserSelect"] = "none";
			return false;
			};
		Text_title.ontouchstart = function () {
			return false;
			};
		Text_content.ontouchstart = function () {
			return false;
			};
		if (type == 1) //input
		{
			var Inputform = document.createElement("form");
				Inputform.id = "input_form";
			var Inputline = document.createElement("input");
				Inputline.id = "input_line_"+id;
				Inputline.className = "input";
				Inputline.name = "inputtext_form";
				Inputline["style"]["width"] = "96%";
				Inputline.type = "text";
				Inputline.value = defaultvalue;
				if (nb_button == 0) { Inputline["style"]["marginBottom"] = "15px"; };
			Inputline.addEventListener('touchstart', function(e) {
					e.stopPropagation();
					}, false);
		}
		else if (type == 2) //multiline
		{
			var Inputform = document.createElement("form");
				Inputform.id = "input_form";
			var Inputline = document.createElement("textarea");
				Inputline.id = "input_line_"+id;
				Inputline.name = "textarea_form";
				Inputline.className = "input";
				Inputline["style"]["width"] = "96%";
				Inputline.value = defaultvalue;
				if (nb_button == 0) { Inputline["style"]["marginBottom"] = "15px"; };
				Inputline.addEventListener('touchstart', function(e) {
						e.stopPropagation();
						}, false);
		} else {};
		if (nb_button == 1)
		{
		var Footer = document.createElement("div");
			Footer["style"]["width"] = "100%";
			Footer["style"]["maxHeight"] = "62px";
		var ButtonA = document.createElement("span");
			ButtonA.innerHTML = buttonA;
				if (defaultbutton == 0) { var bAclass = "button default" } else { var bAclass = "button" };
			ButtonA.className = bAclass;
		Footer.onmousedown = function () {
			Footer["style"]["UserSelect"] = "none";
			Footer["style"]["MozUserSelect"] = "none";
			Footer["style"]["webkitUserSelect"] = "none";
			};
		}
		else if (nb_button == 2)
		{
		var Footer = document.createElement("div");
			Footer["style"]["width"] = "100%";
			Footer["style"]["maxHeight"] = "62px";
		var ButtonA = document.createElement("span");
			ButtonA.innerHTML = buttonA;
				if (defaultbutton == 0) { var bAclass = "button default" } else { var bAclass = "button" };
			ButtonA.className = bAclass;
		var ButtonB = document.createElement("span");
				if (defaultbutton == 1) { var bBclass = "button default" } else { var bBclass = "button" };
			ButtonB.className = bBclass;
			ButtonB.innerHTML = buttonB;
		Footer.onmousedown = function () {
			Footer["style"]["UserSelect"] = "none";
			Footer["style"]["MozUserSelect"] = "none";
			Footer["style"]["webkitUserSelect"] = "none";
			};
		} else {};
		if (nb_button == 1)
		{
			ButtonA.ontouchstart = function()
						{
							ButtonA.className = "button hover";
						};
			ButtonA.ontouchend = function()
						{
							ButtonA.className = bAclass;
						};
			ButtonA.onclick = (function (self) {
				return function() {
					input_idSpace[id]["first_button"] = true;
					input_idSpace[id]["second_button"] = false;
				if (type != 0)
					{ var input_value = document.forms["input_form"].elements["input_line_"+id].value;
					input_idSpace[id]["input_content"] = input_value; };
					triggerID = id;
					jQuery(Popup).fadeOut(100);
					setTimeout(function() { jQuery(div_null).fadeOut(400); }, 100);
					setTimeout(function() { jQuery(div_null).remove(); }, 500);
					self.runtime.trigger(cr.plugins_.iosdialogs.prototype.cnds.isFirstClicked, self);
					};
				})(this);
		} else if (nb_button == 2)
		{
			ButtonA.ontouchstart = function()
							{
								ButtonA.className = "button hover";
							};
			ButtonA.ontouchend = function()
							{
								ButtonA.className = bAclass;
							};
			ButtonA.onclick = (function (self) {
				return function() {
					input_idSpace[id]["first_button"] = true;
					input_idSpace[id]["second_button"] = false;
				if (type != 0)
					{ var input_value = document.forms["input_form"].elements["input_line_"+id].value;
					input_idSpace[id]["input_content"] = input_value; };
					triggerID = id;
					jQuery(Popup).fadeOut(100);
					setTimeout(function() { jQuery(div_null).fadeOut(400); }, 100);
					setTimeout(function() { jQuery(div_null).remove(); }, 500);
					self.runtime.trigger(cr.plugins_.iosdialogs.prototype.cnds.isFirstClicked, self);
					};
				})(this);
			ButtonB.ontouchstart = function()
						{
							ButtonB.className = "button hover";
						};
			ButtonB.ontouchend = function()
						{
							ButtonB.className = bBclass;
						};
			ButtonB.onclick = (function (self) {
				return function() {
					input_idSpace[id]["first_button"] = false;
					input_idSpace[id]["second_button"] = true;
				if (type != 0)
					{ var input_value = document.forms["input_form"].elements["input_line_"+id].value;
					input_idSpace[id]["input_content"] = input_value; };
					triggerID = id;
					jQuery(Popup).fadeOut(100);
					setTimeout(function() { jQuery(div_null).fadeOut(400); }, 100);
					setTimeout(function() { jQuery(div_null).remove(); }, 500);
					self.runtime.trigger(cr.plugins_.iosdialogs.prototype.cnds.isSecondClicked, self);
					};
				})(this);
		};
		jQuery(div_null).appendTo("body");
					div_null.appendChild(Popup);
					Popup.appendChild(Glossy);
					Popup.appendChild(Text_title);
					Popup.appendChild(Text_content);
					if (type == 1 || type == 2) { Popup.appendChild(Inputform); Inputform.appendChild(Inputline); };
					if (nb_button == 1) {
						Popup.appendChild(Footer);
						Footer.appendChild(ButtonA);
					} else if (nb_button == 2) {
						Popup.appendChild(Footer);
						Footer.appendChild(ButtonA);
						Footer.appendChild(ButtonB);
					};
	};
	instanceProto.draw = function ()
	{
	};
	instanceProto.drawGL = function(glw)
	{
	};
	instanceProto.onDestroy = function ()
	{
		jQuery(this.elem).remove();
		this.elem = null;
	};
	pluginProto.acts = {};
	var acts = pluginProto.acts;
	acts.inputbox = function (id, title, message, input, nb_button, label_buttonA, label_buttonB, default_button)
	{
		input_idSpace[id] = this.addDialog(id, title, message, 1, input, nb_button, label_buttonA, label_buttonB, default_button);
		input_idSpace[id] = {
			first_button 	: false,
			second_button	: false,
			input_content	: "" };
		var div_null = document.getElementById("div_null");
			div_null["style"]["opacity"] = "1";
			div_null["style"]["visibility"] = "visible";
			jQuery(div_null).fadeIn();
		var Popup = document.getElementById("popup");
			Popup["style"]["opacity"] = "1";
			Popup["style"]["webkitTransform"] = "scale(1)";
		this.updateDialogPosition();
		var text_content = document.getElementById("text_content");
		var i = text_content.innerHTML;
		jQuery(i).load(function() { instanceProto.updateDialogPosition(); });
	};
	acts.alertbox = function (id, title, message, nb_button, label_buttonA, label_buttonB, default_button)
	{
		input_idSpace[id] = this.addDialog(id, title, message, 0, "", nb_button, label_buttonA, label_buttonB, default_button);
		input_idSpace[id] = {
			first_button 	: false,
			second_button	: false,
			input_content	: "" };
		var div_null = document.getElementById("div_null");
			div_null["style"]["opacity"] = "1";
			div_null["style"]["visibility"] = "visible";
			jQuery(div_null).fadeIn();
		var Popup = document.getElementById("popup");
			Popup["style"]["opacity"] = "1";
			Popup["style"]["webkitTransform"] = "scale(1)";
		this.updateDialogPosition();
		var text_content = document.getElementById("text_content");
		var i = text_content.innerHTML;
		jQuery(i).load(function() { instanceProto.updateDialogPosition(); });
	};
	acts.listbox = function (id, title, message, input, nb_button, label_buttonA, label_buttonB, default_button)
	{
		input_idSpace[id] = this.addDialog(id, title, message, 2, input, nb_button, label_buttonA, label_buttonB, default_button);
		input_idSpace[id] = {
			first_button 	: false,
			second_button	: false,
			input_content	: "" };
		var div_null = document.getElementById("div_null");
			div_null["style"]["opacity"] = "1";
			div_null["style"]["visibility"] = "visible";
			jQuery(div_null).fadeIn();
		var Popup = document.getElementById("popup");
			Popup["style"]["opacity"] = "1";
			Popup["style"]["webkitTransform"] = "scale(1)";
		this.updateDialogPosition();
		var text_content = document.getElementById("text_content");
		var i = text_content.innerHTML;
		jQuery(i).load(function() { instanceProto.updateDialogPosition(); });
	};
	acts.customInputForm = function (id, valueText, textAlignment, formType, placeHolder, toolTip, enabledStatus, readOnlyStatus, maxlengthForm, widthForm)
	{
		var elem = document.getElementById("input_line_"+id);
		if (!elem) { return false; };
		if (widthForm >= 96) { elem["style"]["width"] = "96%"; } else { elem["style"]["width"] = widthForm+"%"; };
		if (elem.name == "inputtext_form")
		{
			switch (formType) {
								case 0:
									elem.type = "text";
								break;
								case 1:
									elem.type = "password";
								break;
								case 2:
									elem.type = "email";
								break;
								case 3:
									elem.type = "number";
								break;
								case 4:
									elem.type = "tel";
								break;
								case 5:
									elem.type = "url";
								break;
							};
		};
		elem.value = valueText;
		if (textAlignment == 0) { elem["style"]["textAlign"] = "left"; }
			else if (textAlignment == 1) { elem["style"]["textAlign"] = "center"; }
			else { elem["style"]["textAlign"] = "right"; };
		elem.placeholder = placeHolder;
		elem.title = toolTip;
		elem.maxLength = maxlengthForm;
		elem.disabled = (enabledStatus === 1);
		elem.readOnly = (readOnlyStatus === 0);
	};
	acts.closeDialog = function ()
	{
		var div_null = document.getElementById("div_null");
		var Popup = document.getElementById("popup");
			jQuery(Popup).fadeOut(100);
			setTimeout(function() { jQuery(div_null).fadeOut(400); }, 100);
			setTimeout(function() { jQuery(div_null).remove(); }, 500);
	};
	/*acts.debugTool = function ()
	{
		alert(screen.height+" "+screen.width);
	};	*/
	pluginProto.cnds = {};
	var cnds = pluginProto.cnds;
	cnds.isFirstClicked = function (id)
	{
		if (id == triggerID) { return input_idSpace[id]["first_button"]; };
	};
	cnds.isSecondClicked = function (id)
	{
		if (id == triggerID) { return input_idSpace[id]["second_button"]; }
	};
	cnds.isOnTouch = function ()
	{
		return true;
	};
	pluginProto.exps = {};
	var exps = pluginProto.exps;
	exps.getInput = function(ret, id)
	{
		var i = input_idSpace[id]["input_content"];
		ret.set_any(i);
	};
}());
;
;
cr.plugins_.sliderbar = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.sliderbar.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
		if (this.runtime.isDomFree)
		{
			cr.logexport("[Construct 2] Slider Bar plugin not supported on this platform - the object will not be created");
			return;
		}
		this.elem = document.createElement("input");
		this.elem.type = "range";
		this.elem["max"] = this.properties[2];
		this.elem["min"] = this.properties[1];
		this.elem["step"] = this.properties[3];
		this.elem["value"] = this.properties[0];
		this.elem.disabled = (this.properties[6] === 0);
		this.elem.id = this.properties[7];
		this.elem.title = this.properties[4];
		jQuery(this.elem).appendTo(this.runtime.canvasdiv ? this.runtime.canvasdiv : "body");
		this.element_hidden = false;
		if (this.properties[5] === 0)
		{
			jQuery(this.elem).hide();
			this.visible = false;
			this.element_hidden = true;
		}
		this.elem.onclick = (function (self) {
			return function(e) {
				e.stopPropagation();
				self.runtime.isInUserInputEvent = true;
				self.runtime.trigger(cr.plugins_.sliderbar.prototype.cnds.OnClicked, self);
				self.runtime.isInUserInputEvent = false;
			};
		})(this);
		this.elem.onchange = (function (self) {
			return function(e) {
				self.runtime.isInUserInputEvent = true;
				self.runtime.trigger(cr.plugins_.sliderbar.prototype.cnds.OnChanged, self);
				self.runtime.isInUserInputEvent = false;
			};
		})(this);
		this.elem.addEventListener("touchstart", function (e) {
			e.stopPropagation();
		}, false);
		this.elem.addEventListener("touchmove", function (e) {
			e.stopPropagation();
		}, false);
		this.elem.addEventListener("touchend", function (e) {
			e.stopPropagation();
		}, false);
		jQuery(this.elem).mousedown(function (e) {
			e.stopPropagation();
		});
		jQuery(this.elem).mouseup(function (e) {
			e.stopPropagation();
		});
		jQuery(this.elem).keydown(function (e) {
			e.stopPropagation();
		});
		jQuery(this.elem).keyup(function (e) {
			e.stopPropagation();
		});
		this.lastLeft = 0;
		this.lastTop = 0;
		this.lastRight = 0;
		this.lastBottom = 0;
		this.lastWinWidth = 0;
		this.lastWinHeight = 0;
		this.updatePosition(true);
		this.runtime.tickMe(this);
	};
	instanceProto.saveToJSON = function ()
	{
		var o = {
			"v": this.elem["value"],
			"mi": this.elem["min"],
			"ma": this.elem["max"],
			"s": this.elem["step"]
		};
		return o;
	};
	instanceProto.loadFromJSON = function (o)
	{
		this.elem["min"] = o["mi"];
		this.elem["max"] = o["ma"];
		this.elem["step"] = o["s"];
		this.elem["value"] = o["v"];
	};
	instanceProto.onDestroy = function ()
	{
		if (this.runtime.isDomFree)
			return;
		jQuery(this.elem).remove();
		this.elem = null;
	};
	instanceProto.tick = function ()
	{
		this.updatePosition();
	};
	var last_canvas_offset = null;
	var last_checked_tick = -1;
	instanceProto.updatePosition = function (first)
	{
		if (this.runtime.isDomFree)
			return;
		var left = this.layer.layerToCanvas(this.x, this.y, true);
		var top = this.layer.layerToCanvas(this.x, this.y, false);
		var right = this.layer.layerToCanvas(this.x + this.width, this.y + this.height, true);
		var bottom = this.layer.layerToCanvas(this.x + this.width, this.y + this.height, false);
		if (!this.visible || !this.layer.visible || right <= 0 || bottom <= 0 || left >= this.runtime.width || top >= this.runtime.height)
		{
			if (!this.element_hidden)
				jQuery(this.elem).hide();
			this.element_hidden = true;
			return;
		}
		if (left < 1)
			left = 1;
		if (top < 1)
			top = 1;
		if (right >= this.runtime.width)
			right = this.runtime.width - 1;
		if (bottom >= this.runtime.height)
			bottom = this.runtime.height - 1;
		var curWinWidth = window.innerWidth;
		var curWinHeight = window.innerHeight;
		if (!first && this.lastLeft === left && this.lastTop === top && this.lastRight === right && this.lastBottom === bottom && this.lastWinWidth === curWinWidth && this.lastWinHeight === curWinHeight)
		{
			if (this.element_hidden)
			{
				jQuery(this.elem).show();
				this.element_hidden = false;
			}
			return;
		}
		this.lastLeft = left;
		this.lastTop = top;
		this.lastRight = right;
		this.lastBottom = bottom;
		this.lastWinWidth = curWinWidth;
		this.lastWinHeight = curWinHeight;
		if (this.element_hidden)
		{
			jQuery(this.elem).show();
			this.element_hidden = false;
		}
		var offx = Math.round(left) + jQuery(this.runtime.canvas).offset().left;
		var offy = Math.round(top) + jQuery(this.runtime.canvas).offset().top;
		jQuery(this.elem).css("position", "absolute");
		jQuery(this.elem).offset({left: offx, top: offy});
		jQuery(this.elem).width(Math.round(right - left));
		jQuery(this.elem).height(Math.round(bottom - top));
	};
	instanceProto.draw = function(ctx)
	{
	};
	instanceProto.drawGL = function(glw)
	{
	};
	function Cnds() {};
	Cnds.prototype.OnClicked = function ()
	{
		return true;
	};
	Cnds.prototype.OnChanged = function ()
	{
		return true;
	};
	Cnds.prototype.CompareValue = function (cmp, x)
	{
		if (this.isDomFree)
			return false;
		return cr.do_cmp(this.elem["value"], cmp, x);
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.SetTooltip = function (text)
	{
		if (this.runtime.isDomFree)
			return;
		this.elem.title = text;
	};
	Acts.prototype.SetVisible = function (vis)
	{
		if (this.runtime.isDomFree)
			return;
		this.visible = (vis !== 0);
	};
	Acts.prototype.SetCSSStyle = function (p, v)
	{
		if (this.runtime.isDomFree)
			return;
		jQuery(this.elem).css(p, v);
	};
	Acts.prototype.SetValue = function (x)
	{
		if (this.runtime.isDomFree)
			return;
		this.elem["value"] = x;
	};
	Acts.prototype.SetMaximum = function (x)
	{
		if (this.runtime.isDomFree)
			return;
		this.elem["max"] = x;
	};
	Acts.prototype.SetMinimum = function (x)
	{
		if (this.runtime.isDomFree)
			return;
		this.elem["min"] = x;
	};
	Acts.prototype.SetStep = function (x)
	{
		if (this.runtime.isDomFree)
			return;
		this.elem["step"] = x;
	};
	Acts.prototype.SetEnabled = function (en)
	{
		if (this.runtime.isDomFree)
			return;
		this.elem.disabled = (en === 0);
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.Value = function (ret)
	{
		ret.set_float(this.runtime.isDomFree ? 0 : (parseFloat(this.elem["value"]) || 0));
	};
	Exps.prototype.Maximum = function (ret)
	{
		ret.set_float(this.runtime.isDomFree ? 0 : (parseFloat(this.elem["max"]) || 0));
	};
	Exps.prototype.Minimum = function (ret)
	{
		ret.set_float(this.runtime.isDomFree ? 0 : (parseFloat(this.elem["min"]) || 0));
	};
	Exps.prototype.Step = function (ret)
	{
		ret.set_float(this.runtime.isDomFree ? 0 : (parseFloat(this.elem["step"]) || 0));
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.behaviors.Bullet = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var behaviorProto = cr.behaviors.Bullet.prototype;
	behaviorProto.Type = function(behavior, objtype)
	{
		this.behavior = behavior;
		this.objtype = objtype;
		this.runtime = behavior.runtime;
	};
	var behtypeProto = behaviorProto.Type.prototype;
	behtypeProto.onCreate = function()
	{
	};
	behaviorProto.Instance = function(type, inst)
	{
		this.type = type;
		this.behavior = type.behavior;
		this.inst = inst;				// associated object instance to modify
		this.runtime = type.runtime;
	};
	var behinstProto = behaviorProto.Instance.prototype;
	behinstProto.onCreate = function()
	{
		var speed = this.properties[0];
		this.acc = this.properties[1];
		this.g = this.properties[2];
		this.bounceOffSolid = (this.properties[3] !== 0);
		this.setAngle = (this.properties[4] !== 0);
		this.dx = Math.cos(this.inst.angle) * speed;
		this.dy = Math.sin(this.inst.angle) * speed;
		this.lastx = this.inst.x;
		this.lasty = this.inst.y;
		this.lastKnownAngle = this.inst.angle;
		this.travelled = 0;
		this.enabled = (this.properties[5] !== 0);
	};
	behinstProto.saveToJSON = function ()
	{
		return {
			"acc": this.acc,
			"g": this.g,
			"dx": this.dx,
			"dy": this.dy,
			"lx": this.lastx,
			"ly": this.lasty,
			"lka": this.lastKnownAngle,
			"t": this.travelled,
			"e": this.enabled
		};
	};
	behinstProto.loadFromJSON = function (o)
	{
		this.acc = o["acc"];
		this.g = o["g"];
		this.dx = o["dx"];
		this.dy = o["dy"];
		this.lastx = o["lx"];
		this.lasty = o["ly"];
		this.lastKnownAngle = o["lka"];
		this.travelled = o["t"];
		this.enabled = o["e"];
	};
	behinstProto.tick = function ()
	{
		if (!this.enabled)
			return;
		var dt = this.runtime.getDt(this.inst);
		var s, a;
		var bounceSolid, bounceAngle;
		if (this.inst.angle !== this.lastKnownAngle)
		{
			if (this.setAngle)
			{
				s = cr.distanceTo(0, 0, this.dx, this.dy);
				this.dx = Math.cos(this.inst.angle) * s;
				this.dy = Math.sin(this.inst.angle) * s;
			}
			this.lastKnownAngle = this.inst.angle;
		}
		if (this.acc !== 0)
		{
			s = cr.distanceTo(0, 0, this.dx, this.dy);
			if (this.dx === 0 && this.dy === 0)
				a = this.inst.angle;
			else
				a = cr.angleTo(0, 0, this.dx, this.dy);
			s += this.acc * dt;
			if (s < 0)
				s = 0;
			this.dx = Math.cos(a) * s;
			this.dy = Math.sin(a) * s;
		}
		if (this.g !== 0)
			this.dy += this.g * dt;
		this.lastx = this.inst.x;
		this.lasty = this.inst.y;
		if (this.dx !== 0 || this.dy !== 0)
		{
			this.inst.x += this.dx * dt;
			this.inst.y += this.dy * dt;
			this.travelled += cr.distanceTo(0, 0, this.dx * dt, this.dy * dt)
			if (this.setAngle)
			{
				this.inst.angle = cr.angleTo(0, 0, this.dx, this.dy);
				this.inst.set_bbox_changed();
				this.lastKnownAngle = this.inst.angle;
			}
			this.inst.set_bbox_changed();
			if (this.bounceOffSolid)
			{
				bounceSolid = this.runtime.testOverlapSolid(this.inst);
				if (bounceSolid)
				{
					this.runtime.registerCollision(this.inst, bounceSolid);
					s = cr.distanceTo(0, 0, this.dx, this.dy);
					bounceAngle = this.runtime.calculateSolidBounceAngle(this.inst, this.lastx, this.lasty);
					this.dx = Math.cos(bounceAngle) * s;
					this.dy = Math.sin(bounceAngle) * s;
					this.inst.x += this.dx * dt;			// move out for one tick since the object can't have spent a tick in the solid
					this.inst.y += this.dy * dt;
					this.inst.set_bbox_changed();
					if (this.setAngle)
					{
						this.inst.angle = bounceAngle;
						this.lastKnownAngle = bounceAngle;
						this.inst.set_bbox_changed();
					}
					if (!this.runtime.pushOutSolid(this.inst, this.dx / s, this.dy / s, Math.max(s * 2.5 * dt, 30)))
						this.runtime.pushOutSolidNearest(this.inst, 100);
				}
			}
		}
	};
	function Cnds() {};
	Cnds.prototype.CompareSpeed = function (cmp, s)
	{
		return cr.do_cmp(cr.distanceTo(0, 0, this.dx, this.dy), cmp, s);
	};
	Cnds.prototype.CompareTravelled = function (cmp, d)
	{
		return cr.do_cmp(this.travelled, cmp, d);
	};
	behaviorProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.SetSpeed = function (s)
	{
		var a = cr.angleTo(0, 0, this.dx, this.dy);
		this.dx = Math.cos(a) * s;
		this.dy = Math.sin(a) * s;
	};
	Acts.prototype.SetAcceleration = function (a)
	{
		this.acc = a;
	};
	Acts.prototype.SetGravity = function (g)
	{
		this.g = g;
	};
	Acts.prototype.SetAngleOfMotion = function (a)
	{
		a = cr.to_radians(a);
		var s = cr.distanceTo(0, 0, this.dx, this.dy)
		this.dx = Math.cos(a) * s;
		this.dy = Math.sin(a) * s;
	};
	Acts.prototype.Bounce = function (objtype)
	{
		if (!objtype)
			return;
		var otherinst = objtype.getFirstPicked(this.inst);
		if (!otherinst)
			return;
		var dt = this.runtime.getDt(this.inst);
		var s = cr.distanceTo(0, 0, this.dx, this.dy);
		var bounceAngle = this.runtime.calculateSolidBounceAngle(this.inst, this.lastx, this.lasty, otherinst);
		this.dx = Math.cos(bounceAngle) * s;
		this.dy = Math.sin(bounceAngle) * s;
		this.inst.x += this.dx * dt;			// move out for one tick since the object can't have spent a tick in the solid
		this.inst.y += this.dy * dt;
		this.inst.set_bbox_changed();
		if (this.setAngle)
		{
			this.inst.angle = bounceAngle;
			this.lastKnownAngle = bounceAngle;
			this.inst.set_bbox_changed();
		}
		if (this.bounceOffSolid)
		{
			if (!this.runtime.pushOutSolid(this.inst, this.dx / s, this.dy / s, Math.max(s * 2.5 * dt, 30)))
				this.runtime.pushOutSolidNearest(this.inst, 100);
		}
		else
		{
			this.runtime.pushOut(this.inst, this.dx / s, this.dy / s, Math.max(s * 2.5 * dt, 30), otherinst)
		}
	};
	Acts.prototype.SetEnabled = function (en)
	{
		this.enabled = (en === 1);
	};
	behaviorProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.Speed = function (ret)
	{
		var s = cr.distanceTo(0, 0, this.dx, this.dy);
		s = cr.round6dp(s);
		ret.set_float(s);
	};
	Exps.prototype.Acceleration = function (ret)
	{
		ret.set_float(this.acc);
	};
	Exps.prototype.AngleOfMotion = function (ret)
	{
		ret.set_float(cr.to_degrees(cr.angleTo(0, 0, this.dx, this.dy)));
	};
	Exps.prototype.DistanceTravelled = function (ret)
	{
		ret.set_float(this.travelled);
	};
	behaviorProto.exps = new Exps();
}());
;
;
cr.behaviors.Persist = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var behaviorProto = cr.behaviors.Persist.prototype;
	behaviorProto.Type = function(behavior, objtype)
	{
		this.behavior = behavior;
		this.objtype = objtype;
		this.runtime = behavior.runtime;
	};
	var behtypeProto = behaviorProto.Type.prototype;
	behtypeProto.onCreate = function()
	{
	};
	behaviorProto.Instance = function(type, inst)
	{
		this.type = type;
		this.behavior = type.behavior;
		this.inst = inst;				// associated object instance to modify
		this.runtime = type.runtime;
	};
	var behinstProto = behaviorProto.Instance.prototype;
	behinstProto.onCreate = function()
	{
		this.myProperty = this.properties[0];
	};
	behinstProto.onDestroy = function ()
	{
	};
	behinstProto.tick = function ()
	{
		var dt = this.runtime.getDt(this.inst);
	};
	function Cnds() {};
	behaviorProto.cnds = new Cnds();
	function Acts() {};
	behaviorProto.acts = new Acts();
	function Exps() {};
	behaviorProto.exps = new Exps();
}());
;
;
cr.behaviors.Pin = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var behaviorProto = cr.behaviors.Pin.prototype;
	behaviorProto.Type = function(behavior, objtype)
	{
		this.behavior = behavior;
		this.objtype = objtype;
		this.runtime = behavior.runtime;
	};
	var behtypeProto = behaviorProto.Type.prototype;
	behtypeProto.onCreate = function()
	{
	};
	behaviorProto.Instance = function(type, inst)
	{
		this.type = type;
		this.behavior = type.behavior;
		this.inst = inst;				// associated object instance to modify
		this.runtime = type.runtime;
	};
	var behinstProto = behaviorProto.Instance.prototype;
	behinstProto.onCreate = function()
	{
		this.pinObject = null;
		this.pinObjectUid = -1;		// for loading
		this.pinAngle = 0;
		this.pinDist = 0;
		this.myStartAngle = 0;
		this.theirStartAngle = 0;
		this.lastKnownAngle = 0;
		this.mode = 0;				// 0 = position & angle; 1 = position; 2 = angle; 3 = rope; 4 = bar
		var self = this;
		if (!this.recycled)
		{
			this.myDestroyCallback = (function(inst) {
													self.onInstanceDestroyed(inst);
												});
		}
		this.runtime.addDestroyCallback(this.myDestroyCallback);
	};
	behinstProto.saveToJSON = function ()
	{
		return {
			"uid": this.pinObject ? this.pinObject.uid : -1,
			"pa": this.pinAngle,
			"pd": this.pinDist,
			"msa": this.myStartAngle,
			"tsa": this.theirStartAngle,
			"lka": this.lastKnownAngle,
			"m": this.mode
		};
	};
	behinstProto.loadFromJSON = function (o)
	{
		this.pinObjectUid = o["uid"];		// wait until afterLoad to look up
		this.pinAngle = o["pa"];
		this.pinDist = o["pd"];
		this.myStartAngle = o["msa"];
		this.theirStartAngle = o["tsa"];
		this.lastKnownAngle = o["lka"];
		this.mode = o["m"];
	};
	behinstProto.afterLoad = function ()
	{
		if (this.pinObjectUid === -1)
			this.pinObject = null;
		else
		{
			this.pinObject = this.runtime.getObjectByUID(this.pinObjectUid);
;
		}
		this.pinObjectUid = -1;
	};
	behinstProto.onInstanceDestroyed = function (inst)
	{
		if (this.pinObject == inst)
			this.pinObject = null;
	};
	behinstProto.onDestroy = function()
	{
		this.pinObject = null;
		this.runtime.removeDestroyCallback(this.myDestroyCallback);
	};
	behinstProto.tick = function ()
	{
	};
	behinstProto.tick2 = function ()
	{
		if (!this.pinObject)
			return;
		if (this.lastKnownAngle !== this.inst.angle)
			this.myStartAngle = cr.clamp_angle(this.myStartAngle + (this.inst.angle - this.lastKnownAngle));
		var newx = this.inst.x;
		var newy = this.inst.y;
		if (this.mode === 3 || this.mode === 4)		// rope mode or bar mode
		{
			var dist = cr.distanceTo(this.inst.x, this.inst.y, this.pinObject.x, this.pinObject.y);
			if ((dist > this.pinDist) || (this.mode === 4 && dist < this.pinDist))
			{
				var a = cr.angleTo(this.pinObject.x, this.pinObject.y, this.inst.x, this.inst.y);
				newx = this.pinObject.x + Math.cos(a) * this.pinDist;
				newy = this.pinObject.y + Math.sin(a) * this.pinDist;
			}
		}
		else
		{
			newx = this.pinObject.x + Math.cos(this.pinObject.angle + this.pinAngle) * this.pinDist;
			newy = this.pinObject.y + Math.sin(this.pinObject.angle + this.pinAngle) * this.pinDist;
		}
		var newangle = cr.clamp_angle(this.myStartAngle + (this.pinObject.angle - this.theirStartAngle));
		this.lastKnownAngle = newangle;
		if ((this.mode === 0 || this.mode === 1 || this.mode === 3 || this.mode === 4)
			&& (this.inst.x !== newx || this.inst.y !== newy))
		{
			this.inst.x = newx;
			this.inst.y = newy;
			this.inst.set_bbox_changed();
		}
		if ((this.mode === 0 || this.mode === 2) && (this.inst.angle !== newangle))
		{
			this.inst.angle = newangle;
			this.inst.set_bbox_changed();
		}
	};
	function Cnds() {};
	Cnds.prototype.IsPinned = function ()
	{
		return !!this.pinObject;
	};
	behaviorProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.Pin = function (obj, mode_)
	{
		if (!obj)
			return;
		var otherinst = obj.getFirstPicked(this.inst);
		if (!otherinst)
			return;
		this.pinObject = otherinst;
		this.pinAngle = cr.angleTo(otherinst.x, otherinst.y, this.inst.x, this.inst.y) - otherinst.angle;
		this.pinDist = cr.distanceTo(otherinst.x, otherinst.y, this.inst.x, this.inst.y);
		this.myStartAngle = this.inst.angle;
		this.lastKnownAngle = this.inst.angle;
		this.theirStartAngle = otherinst.angle;
		this.mode = mode_;
	};
	Acts.prototype.Unpin = function ()
	{
		this.pinObject = null;
	};
	behaviorProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.PinnedUID = function (ret)
	{
		ret.set_int(this.pinObject ? this.pinObject.uid : -1);
	};
	behaviorProto.exps = new Exps();
}());
;
;
cr.behaviors.bound = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var behaviorProto = cr.behaviors.bound.prototype;
	behaviorProto.Type = function(behavior, objtype)
	{
		this.behavior = behavior;
		this.objtype = objtype;
		this.runtime = behavior.runtime;
	};
	var behtypeProto = behaviorProto.Type.prototype;
	behtypeProto.onCreate = function()
	{
	};
	behaviorProto.Instance = function(type, inst)
	{
		this.type = type;
		this.behavior = type.behavior;
		this.inst = inst;				// associated object instance to modify
		this.runtime = type.runtime;
		this.mode = 0;
	};
	var behinstProto = behaviorProto.Instance.prototype;
	behinstProto.onCreate = function()
	{
		this.mode = this.properties[0];	// 0 = origin, 1 = edge
	};
	behinstProto.tick = function ()
	{
	};
	behinstProto.tick2 = function ()
	{
		this.inst.update_bbox();
		var bbox = this.inst.bbox;
		var layout = this.inst.layer.layout;
		var changed = false;
		if (this.mode === 0)	// origin
		{
			if (this.inst.x < 0)
			{
				this.inst.x = 0;
				changed = true;
			}
			if (this.inst.y < 0)
			{
				this.inst.y = 0;
				changed = true;
			}
			if (this.inst.x > layout.width)
			{
				this.inst.x = layout.width;
				changed = true;
			}
			if (this.inst.y > layout.height)
			{
				this.inst.y = layout.height;
				changed = true;
			}
		}
		else
		{
			if (bbox.left < 0)
			{
				this.inst.x -= bbox.left;
				changed = true;
			}
			if (bbox.top < 0)
			{
				this.inst.y -= bbox.top;
				changed = true;
			}
			if (bbox.right > layout.width)
			{
				this.inst.x -= (bbox.right - layout.width);
				changed = true;
			}
			if (bbox.bottom > layout.height)
			{
				this.inst.y -= (bbox.bottom - layout.height);
				changed = true;
			}
		}
		if (changed)
			this.inst.set_bbox_changed();
	};
}());
;
;
cr.behaviors.injectImage = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var behaviorProto = cr.behaviors.injectImage.prototype;
	behaviorProto.Type = function(behavior, objtype)
	{
		this.behavior = behavior;
		this.objtype = objtype;
		this.runtime = behavior.runtime;
	};
	var behtypeProto = behaviorProto.Type.prototype;
	behtypeProto.onCreate = function()
	{
	};
	behaviorProto.Instance = function(type, inst)
	{
		this.type = type;
		this.behavior = type.behavior;
		this.inst = inst;				// associated object instance to modify
		this.runtime = type.runtime;
	};
	var behinstProto = behaviorProto.Instance.prototype;
	behinstProto.onCreate = function()
	{
		this.myProperty = this.properties[0];
		this.base64ImageString ='';
		/*this.canvasSprite = document.createElement("canvas");
		this.ctxSprite = this.canvasSprite.getContext("2d");
		this.dataURL = '';*/
	};
	behinstProto.tick = function ()
	{
		var dt = this.runtime.getDt(this.inst);
	};
	/*behinstProto.getBase64Image = function(img) {
	}*/
	behaviorProto.cnds = {};
	var cnds = behaviorProto.cnds;
	cnds.IsMoving = function ()
	{
		return false;
	};
	behaviorProto.acts = {};
	var acts = behaviorProto.acts;
	/*acts.Stop = function ()
	{
	};*/
	acts.injectString = function(base64string)
	{
		this.inst.cur_animation.frames[this.inst.cur_frame].texture_img.onload = (function (self) {
			return function(info) {
				self.runtime.redraw = true;
			};
		})(this);
		this.inst.cur_animation.frames[this.inst.cur_frame].texture_img.src = base64string;
		/*this.inst.cur_animation.frames[this.inst.cur_frame].texture_img.width = this.inst.width;
		this.inst.cur_animation.frames[this.inst.cur_frame].texture_img.height = this.inst.height;*/
		this.runtime.redraw = true;
	};
	acts.injectStringConstrained = function(base64string,_width,_height)
	{
		this.inst.cur_animation.frames[this.inst.cur_frame].texture_img.onload = (function (self) {
			return function(info) {
				self.runtime.redraw = true;
			};
		})(this);
		this.inst.cur_animation.frames[this.inst.cur_frame].texture_img.src = base64string;
		/*this.inst.cur_animation.frames[this.inst.cur_frame].texture_img.width = _width;
		this.inst.cur_animation.frames[this.inst.cur_frame].texture_img.height = _height;*/
		this.inst.width = _width;
		this.inst.height = _height;
		this.runtime.redraw = true;
	};
	behaviorProto.exps = {};
	var exps = behaviorProto.exps;
	/*exps.currentImage = function (ret)	// 'ret' must always be the first parameter - always return the expression's result through it!
	{
		this.canvasSprite.width = this.inst.cur_animation.frames[this.inst.cur_frame].texture_img.width;
		this.canvasSprite.height = this.inst.cur_animation.frames[this.inst.cur_frame].texture_img.height;
		this.ctxSprite.drawImage(this.inst.cur_animation.frames[this.inst.cur_frame].texture_img, 0, 0);
		this.dataURL = this.canvasSprite.toDataURL("image/png");
		this.dataURL.replace(/^data:image\/(png|jpg);base64,/, "");
		ret.set_string(this.dataURL);
	};*/
}());
;
;
cr.behaviors.scrollto = function(runtime)
{
	this.runtime = runtime;
	this.shakeMag = 0;
	this.shakeStart = 0;
	this.shakeEnd = 0;
	this.shakeMode = 0;
};
(function ()
{
	var behaviorProto = cr.behaviors.scrollto.prototype;
	behaviorProto.Type = function(behavior, objtype)
	{
		this.behavior = behavior;
		this.objtype = objtype;
		this.runtime = behavior.runtime;
	};
	var behtypeProto = behaviorProto.Type.prototype;
	behtypeProto.onCreate = function()
	{
	};
	behaviorProto.Instance = function(type, inst)
	{
		this.type = type;
		this.behavior = type.behavior;
		this.inst = inst;				// associated object instance to modify
		this.runtime = type.runtime;
	};
	var behinstProto = behaviorProto.Instance.prototype;
	behinstProto.onCreate = function()
	{
		this.enabled = (this.properties[0] !== 0);
	};
	behinstProto.saveToJSON = function ()
	{
		return {
			"smg": this.behavior.shakeMag,
			"ss": this.behavior.shakeStart,
			"se": this.behavior.shakeEnd,
			"smd": this.behavior.shakeMode
		};
	};
	behinstProto.loadFromJSON = function (o)
	{
		this.behavior.shakeMag = o["smg"];
		this.behavior.shakeStart = o["ss"];
		this.behavior.shakeEnd = o["se"];
		this.behavior.shakeMode = o["smd"];
	};
	behinstProto.tick = function ()
	{
	};
	function getScrollToBehavior(inst)
	{
		var i, len, binst;
		for (i = 0, len = inst.behavior_insts.length; i < len; ++i)
		{
			binst = inst.behavior_insts[i];
			if (binst.behavior instanceof cr.behaviors.scrollto)
				return binst;
		}
		return null;
	};
	behinstProto.tick2 = function ()
	{
		if (!this.enabled)
			return;
		var all = this.behavior.my_instances.valuesRef();
		var sumx = 0, sumy = 0;
		var i, len, binst, count = 0;
		for (i = 0, len = all.length; i < len; i++)
		{
			binst = getScrollToBehavior(all[i]);
			if (!binst || !binst.enabled)
				continue;
			sumx += all[i].x;
			sumy += all[i].y;
			++count;
		}
		var layout = this.inst.layer.layout;
		var now = this.runtime.kahanTime.sum;
		var offx = 0, offy = 0;
		if (now >= this.behavior.shakeStart && now < this.behavior.shakeEnd)
		{
			var mag = this.behavior.shakeMag * Math.min(this.runtime.timescale, 1);
			if (this.behavior.shakeMode === 0)
				mag *= 1 - (now - this.behavior.shakeStart) / (this.behavior.shakeEnd - this.behavior.shakeStart);
			var a = Math.random() * Math.PI * 2;
			var d = Math.random() * mag;
			offx = Math.cos(a) * d;
			offy = Math.sin(a) * d;
		}
		layout.scrollToX(sumx / count + offx);
		layout.scrollToY(sumy / count + offy);
	};
	function Acts() {};
	Acts.prototype.Shake = function (mag, dur, mode)
	{
		this.behavior.shakeMag = mag;
		this.behavior.shakeStart = this.runtime.kahanTime.sum;
		this.behavior.shakeEnd = this.behavior.shakeStart + dur;
		this.behavior.shakeMode = mode;
	};
	Acts.prototype.SetEnabled = function (e)
	{
		this.enabled = (e !== 0);
	};
	behaviorProto.acts = new Acts();
}());
cr.getProjectModel = function() { return [
	null,
	"mainLogin",
	[
	[
		cr.plugins_.imageButton,
		false,
		true,
		true,
		true,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.iosdialogs,
		true,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.AJAX,
		true,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.appMobi,
		true,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.Audio,
		true,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.Browser,
		true,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.Button,
		false,
		true,
		true,
		true,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.iScroll,
		false,
		true,
		true,
		true,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.CSS_import,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.HTML_Div,
		false,
		true,
		true,
		true,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.HTML_iFrame,
		false,
		true,
		true,
		true,
		true,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.HTML_Img,
		false,
		true,
		true,
		true,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.FacebookMod,
		true,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.Facebook2_1,
		false,
		true,
		true,
		true,
		true,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.Geolocation,
		true,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.Phonegap,
		true,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.Keyboard,
		true,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.PhonegapLocalNotification,
		true,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.sliderbar,
		false,
		true,
		true,
		true,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.Sprite,
		false,
		true,
		true,
		true,
		true,
		true,
		true,
		true,
		false
	]
,	[
		cr.plugins_.PhonegapDialog,
		true,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.Text,
		false,
		true,
		true,
		true,
		true,
		true,
		true,
		true,
		false
	]
,	[
		cr.plugins_.Touch,
		true,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.UserMedia,
		false,
		true,
		true,
		true,
		false,
		true,
		true,
		true,
		false
	]
,	[
		cr.plugins_.TextBox,
		false,
		true,
		true,
		true,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.WebStorage,
		true,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
	],
	[
	[
		"t0",
		cr.plugins_.WebStorage,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		0,
		[],
		null
		,[]
	]
,	[
		"t1",
		cr.plugins_.Touch,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		1,
		[],
		null
		,[1]
	]
,	[
		"t2",
		cr.plugins_.Browser,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		2,
		[],
		null
		,[]
	]
,	[
		"t3",
		cr.plugins_.Audio,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		3,
		[],
		null
		,[0,0,1,1,600,600,10000,1,5000,1]
	]
,	[
		"t4",
		cr.plugins_.appMobi,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		4,
		[],
		null
		,[]
	]
,	[
		"t5",
		cr.plugins_.AJAX,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		2174003727579416,
		[],
		null
		,[]
	]
,	[
		"t6",
		cr.plugins_.Geolocation,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		1382267859527764,
		[],
		null
		,[]
	]
,	[
		"t7",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5139613172149332,
			[
				["images/frame-sheet0.png", 293, 0, 0, 640, 16, 1, 0.5, 0.5,[],[-0.5,-0.5,0.5,-0.5,0.496874988079071,0.375,0,0.5,-0.496874988079071,0.375],0]
			]
			]
		],
		[
		],
		false,
		false,
		7434488875146057,
		[],
		null
	]
,	[
		"t8",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			1010781588601369,
			[
				["images/logo-sheet0.png", 58244, 0, 0, 510, 340, 1, 0.5, 0.5029411911964417,[],[-0.4960784316062927,-0.4970588386058807,0.4960780143737793,-0.4970588386058807,0.4980390071868897,-0.00294119119644165,0.4137250185012817,0.3676468133926392,0,0.479411780834198,-0.4019607901573181,0.3499997854232788,-0.4980392158031464,-0.00294119119644165],0]
			]
			]
		],
		[
		],
		false,
		false,
		1647744352916974,
		[],
		null
	]
,	[
		"t9",
		cr.plugins_.Text,
		false,
		[9358643963948604],
		1,
		0,
		null,
		null,
		[
		[
			"Pin",
			cr.behaviors.Pin,
			9385707316885463
		]
		],
		false,
		false,
		7218792030706323,
		[],
		null
	]
,	[
		"t10",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4666085013174766,
			[
				["images/usernamefield-sheet0.png", 9932, 1, 1, 560, 92, 1, 0.5, 0.5,[],[],0],
				["images/usernamefield-sheet0.png", 9932, 1, 129, 560, 92, 1, 0.5, 0.5,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		5522344379740679,
		[],
		null
	]
,	[
		"t11",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			2746348668176733,
			[
				["images/passwordfield-sheet0.png", 10144, 1, 1, 560, 92, 1, 0.5, 0.5,[],[],0],
				["images/passwordfield-sheet0.png", 10144, 1, 129, 560, 92, 1, 0.5, 0.5,[],[-0.4964285790920258,-0.4782609045505524,0,-0.5,0.4964290261268616,-0.4782609045505524,0.4964290261268616,0.4782609939575195,0,0.5,-0.4964285790920258,0.4782609939575195],0]
			]
			]
		],
		[
		],
		false,
		false,
		1986487552799834,
		[],
		null
	]
,	[
		"t12",
		cr.plugins_.TextBox,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		8732202262230518,
		[],
		null
	]
,	[
		"t13",
		cr.plugins_.CSS_import,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		true,
		false,
		207828742700615,
		[],
		null
	]
,	[
		"t14",
		cr.plugins_.TextBox,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		1243262051039763,
		[],
		null
	]
,	[
		"t15",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			6892453137875335,
			[
				["images/registernav-sheet0.png", 647, 0, 0, 247, 82, 1, 0.5020242929458618, 0.5,[],[-0.4939271211624146,-0.4756098091602325,-0.004048287868499756,-0.5,0.4858297109603882,-0.4634146094322205,0.4979757070541382,0,0.4858297109603882,0.4634150266647339,-0.004048287868499756,0.5,-0.4939271211624146,0.4756100177764893],0]
			]
			]
		],
		[
		],
		false,
		false,
		5767245181544487,
		[],
		null
	]
,	[
		"t16",
		cr.plugins_.imageButton,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		9959466223989255,
		[],
		null
	]
,	[
		"t17",
		cr.plugins_.Sprite,
		false,
		[8603529016387703],
		0,
		0,
		null,
		[
			[
			"Default",
			0,
			false,
			1,
			0,
			false,
			7117607730400185,
			[
				["images/searchicon-sheet0.png", 2967, 0, 0, 128, 128, 1, 0.5, 0.5,[],[-0.3515619933605194,-0.3515619933605194,0,-0.453125,0.2734379768371582,-0.2734369933605194,0.3203129768371582,0,0.4453129768371582,0.4453129768371582,0,0.3203129768371582,-0.2734369933605194,0.2734379768371582,-0.453125,0],0],
				["images/searchicon-sheet1.png", 3521, 0, 0, 128, 128, 1, 0.5, 0.5,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		5486007298618995,
		[],
		null
	]
,	[
		"t18",
		cr.plugins_.TextBox,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		5263734951659611,
		[],
		null
	]
,	[
		"t19",
		cr.plugins_.TextBox,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		304485455781654,
		[],
		null
	]
,	[
		"t20",
		cr.plugins_.imageButton,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		4722429154215313,
		[],
		null
	]
,	[
		"t21",
		cr.plugins_.TextBox,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		8332874199233896,
		[],
		null
	]
,	[
		"t22",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			2882610119322523,
			[
				["images/select-sheet0.png", 353, 0, 0, 126, 108, 1, 0.5, 0.5,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		4733528314954673,
		[],
		null
	]
,	[
		"t23",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			741013680735287,
			[
				["images/plus-sheet0.png", 568, 0, 0, 64, 64, 1, 0.5, 0.5,[],[-0.140625,-0.140625,0,-0.5,0.140625,-0.140625,0.5,0,0.140625,0.140625,0,0.5,-0.140625,0.140625,-0.5,0],0]
			]
			]
		],
		[
		],
		false,
		false,
		8665250392808025,
		[],
		null
	]
,	[
		"t24",
		cr.plugins_.Text,
		false,
		[9586885805124056],
		2,
		0,
		null,
		null,
		[
		[
			"Pin",
			cr.behaviors.Pin,
			300974994655807
		]
,		[
			"Persist",
			cr.behaviors.Persist,
			4075438455399066
		]
		],
		false,
		false,
		9968269173932836,
		[],
		null
	]
,	[
		"t25",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3257698737864032,
			[
				["images/testimage-sheet0.png", 878, 0, 0, 250, 250, 1, 0.5, 0.5,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		6857678138470704,
		[],
		null
	]
,	[
		"t26",
		cr.plugins_.Button,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		4706591926810447,
		[],
		null
	]
,	[
		"t27",
		cr.plugins_.Button,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		8487450046833782,
		[],
		null
	]
,	[
		"t28",
		cr.plugins_.Button,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		4063925307966495,
		[],
		null
	]
,	[
		"t29",
		cr.plugins_.Text,
		false,
		[],
		1,
		0,
		null,
		null,
		[
		[
			"Pin",
			cr.behaviors.Pin,
			9059480970644431
		]
		],
		false,
		false,
		3472718679972493,
		[],
		null
	]
,	[
		"t30",
		cr.plugins_.Button,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		2859063026410825,
		[],
		null
	]
,	[
		"t31",
		cr.plugins_.Button,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		9153134456963955,
		[],
		null
	]
,	[
		"t32",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			8638900398294343,
			[
				["images/commonbutton-sheet0.png", 643, 0, 0, 247, 82, 1, 0.5020242929458618, 0.5121951103210449,[["Imagepoint 1", 0, 0]],[-0.4939271211624146,-0.4878049194812775,-0.004048287868499756,-0.5121951103210449,0.4858297109603882,-0.4756097197532654,0.4979757070541382,-0.01219511032104492,0.4858297109603882,0.451219916343689,-0.004048287868499756,0.4878048896789551,-0.4939271211624146,0.4634149074554443],0]
			]
			]
		],
		[
		],
		false,
		false,
		7134473670034983,
		[],
		null
	]
,	[
		"t33",
		cr.plugins_.Sprite,
		false,
		[9174794140301637],
		0,
		0,
		null,
		[
			[
			"Default",
			0,
			false,
			1,
			0,
			false,
			7285977645266372,
			[
				["images/tile-sheet0.png", 6012, 1, 1, 250, 250, 1, 0.5, 0.5,[],[],0],
				["images/tile-sheet0.png", 6012, 257, 1, 250, 250, 1, 0.5, 0.5,[],[],0],
				["images/tile-sheet0.png", 6012, 1, 257, 250, 250, 1, 0.5, 0.5,[],[],0],
				["images/tile-sheet0.png", 6012, 257, 257, 250, 250, 1, 0.5, 0.5,[],[],0],
				["images/tile-sheet1.png", 5541, 1, 1, 250, 250, 1, 0.5, 0.5,[],[],0],
				["images/tile-sheet1.png", 5541, 257, 1, 250, 250, 1, 0.5, 0.5,[],[],0],
				["images/tile-sheet1.png", 5541, 1, 257, 250, 250, 1, 0.5, 0.5,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		1236711343799578,
		[],
		null
	]
,	[
		"t34",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			6425654739136913,
			[
				["images/topnav-sheet0.png", 820, 0, 0, 250, 250, 1, 0.5, 0.5,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		2676080835918776,
		[],
		null
	]
,	[
		"t35",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		7040476100193071,
		[],
		null
	]
,	[
		"t36",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			0,
			false,
			1,
			0,
			false,
			1717203732099138,
			[
				["images/savedicon-sheet0.png", 3675, 0, 0, 128, 128, 1, 0.5, 0.5,[],[-0.3828119933605194,-0.3828119933605194,0,-0.3125,0.3828129768371582,-0.3828119933605194,0.46875,0,0.34375,0.34375,0,0.4453129768371582,-0.34375,0.34375,-0.46875,0],0],
				["images/savedicon-sheet1.png", 4060, 0, 0, 128, 128, 1, 0.5, 0.5,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		4556315645945647,
		[],
		null
	]
,	[
		"t37",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			0,
			false,
			1,
			0,
			false,
			6653483705727898,
			[
				["images/ownicon-sheet0.png", 2412, 0, 0, 128, 128, 1, 0.5, 0.5,[],[-0.2265619933605194,-0.2265619933605194,0,-0.46875,0.2421879768371582,-0.2421869933605194,0.3359379768371582,0,0.40625,0.40625,0,0.46875,-0.3984369933605194,0.3984379768371582,-0.328125,0],0],
				["images/ownicon-sheet1.png", 2335, 0, 0, 128, 128, 1, 0.5, 0.5,[],[-0.2265619933605194,-0.2265619933605194,0,-0.46875,0.2421879768371582,-0.2421869933605194,0.3359379768371582,0,0.40625,0.40625,0,0.46875,-0.3984369933605194,0.3984379768371582,-0.328125,0],0]
			]
			]
		],
		[
		],
		false,
		false,
		1140255304454113,
		[],
		null
	]
,	[
		"t38",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			0,
			false,
			1,
			0,
			false,
			2694676446443389,
			[
				["images/settingicon-sheet0.png", 4951, 0, 0, 128, 128, 1, 0.5, 0.5,[],[],0],
				["images/settingicon-sheet1.png", 4538, 0, 0, 128, 128, 1, 0.5, 0.5,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		4808853223146403,
		[],
		null
	]
,	[
		"t39",
		cr.plugins_.TextBox,
		false,
		[2093705852874392],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		4658868606212615,
		[],
		null
	]
,	[
		"t40",
		cr.plugins_.Sprite,
		false,
		[360576856443368],
		1,
		0,
		null,
		[
			[
			"Default",
			0,
			false,
			1,
			0,
			false,
			6911485196522858,
			[
				["images/searchtile-sheet0.png", 2849, 1, 1, 500, 200, 1, 0.5, 0.5,[["Imagepoint 1", 0.8859999775886536, 0.4449999928474426],["Imagepoint 2", 0.8840000033378601, 0.4799999892711639]],[-0.3779999911785126,-0.1949999928474426,0.378000020980835,-0.1949999928474426,0.4559999704360962,0,0.3619999885559082,0.1549999713897705,-0.3619999885559082,0.1549999713897705,-0.4519999921321869,0],0],
				["images/searchtile-sheet0.png", 2849, 1, 257, 500, 200, 1, 0.5, 0.5,[["Imagepoint 1", 0.8619999885559082, 0.4900000095367432],["Imagepoint 2", 0.9459999799728394, 0.5249999761581421]],[-0.3779999911785126,-0.1949999928474426,0.378000020980835,-0.1949999928474426,0.4559999704360962,0,0.3619999885559082,0.1549999713897705,-0.3619999885559082,0.1549999713897705,-0.4519999921321869,0],0],
				["images/searchtile-sheet1.png", 1429, 0, 0, 500, 200, 1, 0.5, 0.5,[["Imagepoint 1", 0.4760000109672546, 0.8600000143051148],["Imagepoint 2", 0.4760000109672546, 0.9449999928474426]],[-0.1399999856948853,-0.2439999878406525,-0.1399999856948853,0.2440000176429749,0,-0.3779999911785126,-0.1450000107288361,0.3579999804496765,-0.1450000107288361,-0.3579999804496765,0,-0.4359999895095825],0]
			]
			]
		],
		[
		[
			"Pin",
			cr.behaviors.Pin,
			3182817462502112
		]
		],
		false,
		false,
		2954230026265926,
		[],
		null
	]
,	[
		"t41",
		cr.plugins_.Sprite,
		false,
		[1113783882049415],
		0,
		0,
		null,
		[
			[
			"Default",
			0,
			false,
			1,
			0,
			false,
			3623771489778608,
			[
				["images/show-sheet0.png", 810, 0, 0, 250, 250, 1, 0.5, 0.5,[],[],0],
				["images/show-sheet1.png", 813, 0, 0, 250, 250, 1, 0.5, 0.5,[],[0.5,0.5,-0.5,0.5,-0.5,-0.5,0.5,-0.5],0],
				["images/show-sheet2.png", 812, 0, 0, 250, 250, 1, 0.5, 0.5,[],[0.5,0.5,-0.5,0.5,-0.5,-0.5,0.5,-0.5],0],
				["images/tile-sheet0.png", 6012, 1, 257, 250, 250, 1, 0.5, 0.5,[],[0.5,0.5,-0.5,0.5,-0.5,-0.5,0.5,-0.5],0]
			]
			]
		],
		[
		],
		false,
		false,
		4074754280379239,
		[],
		null
	]
,	[
		"t42",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			0,
			false,
			1,
			0,
			false,
			8612764984145198,
			[
				["images/seperator-sheet0.png", 824, 0, 0, 250, 250, 1, 0.5, 0.5,[],[],0],
				["images/seperator-sheet1.png", 822, 0, 0, 250, 250, 1, 0.5, 0.5,[["Imagepoint 1", 0.08799999952316284, 0.4959999918937683]],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		2484856459523674,
		[],
		null
	]
,	[
		"t43",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			0,
			false,
			1,
			0,
			false,
			7963966028341117,
			[
				["images/propicsearch-sheet0.png", 371, 0, 0, 256, 256, 1, 0.5, 0.5,[],[],0],
				["images/propicsearch-sheet1.png", 23490, 0, 0, 256, 256, 1, 0.5, 0.5,[],[-0.3085939884185791,-0.3085939884185791,0,-0.4375,0.3085939884185791,-0.3085939884185791,0.4374999403953552,0,0.3085939884185791,0.3085939884185791,0,0.4374999403953552,-0.3085939884185791,0.3085939884185791,-0.4375,0],0]
			]
			]
		],
		[
		],
		false,
		false,
		4497849965253001,
		[],
		null
	]
,	[
		"t44",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		2199176290938036,
		[],
		null
	]
,	[
		"t45",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		8777163779402855,
		[],
		null
	]
,	[
		"t46",
		cr.plugins_.Sprite,
		false,
		[948547770152436,5929225089780663],
		0,
		0,
		null,
		[
			[
			"Default",
			0,
			false,
			1,
			0,
			false,
			9868564128286719,
			[
				["images/viewbutton-sheet0.png", 32613, 1, 1, 256, 256, 1, 0.5, 0.5,[],[],0],
				["images/viewbutton-sheet0.png", 32613, 513, 1, 256, 256, 1, 0.5, 0.5,[],[],0],
				["images/viewbutton-sheet0.png", 32613, 1, 513, 256, 256, 1, 0.5, 0.5,[],[],0],
				["images/viewbutton-sheet0.png", 32613, 513, 513, 256, 256, 1, 0.5, 0.5,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		5386933687858034,
		[],
		null
	]
,	[
		"t47",
		cr.plugins_.Sprite,
		false,
		[2697837622352239],
		1,
		0,
		null,
		[
			[
			"Default",
			0,
			false,
			1,
			0,
			false,
			1796187741038026,
			[
				["images/icons-sheet0.png", 54148, 1, 513, 250, 250, 1, 0.5, 0.5,[],[-0.3199999928474426,-0.3199999928474426,0.3199999928474426,-0.3199999928474426,0.4359999895095825,0,0.371999979019165,0.371999979019165,-0.371999979019165,0.371999979019165,-0.4440000057220459,0],0],
				["images/icons-sheet0.png", 54148, 257, 513, 250, 250, 1, 0.5, 0.5,[],[],0],
				["images/icons-sheet0.png", 54148, 513, 513, 250, 250, 1, 0.5, 0.5,[],[],0],
				["images/icons-sheet0.png", 54148, 769, 513, 250, 250, 1, 0.5, 0.5,[],[],0],
				["images/icons-sheet0.png", 54148, 1, 769, 250, 250, 1, 0.5, 0.5,[],[-0.343999981880188,-0.343999981880188,0,-0.4359999895095825,0.3479999899864197,-0.3479999899864197,0.3479999899864197,0.3479999899864197,0,0.4520000219345093,-0.343999981880188,0.343999981880188],0],
				["images/icons-sheet0.png", 54148, 257, 769, 250, 250, 1, 0.5, 0.5,[],[-0.3199999928474426,-0.3199999928474426,0.3199999928474426,-0.3199999928474426,0.4359999895095825,0,0.371999979019165,0.371999979019165,-0.371999979019165,0.371999979019165,-0.4440000057220459,0],0],
				["images/icons-sheet0.png", 54148, 513, 769, 250, 250, 1, 0.5, 0.5,[],[-0.2279999852180481,-0.2279999852180481,0,-0.3840000033378601,0.2519999742507935,-0.2520000040531158,0.2519999742507935,0.2519999742507935,0,0.4160000085830689,-0.2279999852180481,0.2279999852180481],0],
				["images/icons-sheet0.png", 54148, 769, 769, 250, 250, 1, 0.5, 0.5,[],[-0.2680000066757202,-0.2680000066757202,0,-0.3799999952316284,0.2720000147819519,-0.2720000147819519,0.3920000195503235,0,0.2799999713897705,0.2799999713897705,0,0.3920000195503235,-0.2720000147819519,0.2720000147819519,-0.3799999952316284,0],0],
				["images/icons-sheet0.png", 54148, 1, 1, 256, 256, 1, 0.5, 0.5,[],[-0.28125,-0.28125,0,-0.234375,0.3085939884185791,-0.3085939884185791,0.3007810115814209,0,0.3515629768371582,0.3515629768371582,0,0.40625,-0.4023436903953552,0.4023439884185791,-0.5,0],0],
				["images/icons-sheet1.png", 1883, 0, 0, 250, 250, 1, 0.5, 0.5,[],[-0.3919999897480011,-0.3919999897480011,0.3920000195503235,-0.3919999897480011,0.4279999732971191,0,0.3560000061988831,0.3560000061988831,-0.3560000061988831,0.3560000061988831,-0.4239999949932098,0],0],
				["images/icons-sheet0.png", 54148, 513, 1, 256, 256, 1, 0.5, 0.5,[],[-0.375,-0.375,0,-0.375,0.4335939884185791,-0.4335936903953552,0.375,0,0.375,0.375,0,0.5,-0.4648436903953552,0.4648439884185791,-0.5,0],0]
			]
			]
		],
		[
		[
			"Pin",
			cr.behaviors.Pin,
			4302318439808027
		]
		],
		false,
		false,
		694742147463527,
		[],
		null
	]
,	[
		"t48",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			1018480119729343,
			[
				["images/addnew-sheet0.png", 1570, 0, 0, 256, 256, 1, 0.5, 0.5,[],[-0.1171869933605194,-0.1171869933605194,0,-0.4296875,0.1171879768371582,-0.1171869933605194,0.4296879768371582,0,0.1171879768371582,0.1171879768371582,0,0.4296879768371582,-0.1171869933605194,0.1171879768371582,-0.4296875,0],0]
			]
			]
		],
		[
		],
		false,
		false,
		5056584079098724,
		[],
		null
	]
,	[
		"t49",
		cr.plugins_.Sprite,
		false,
		[7290228596856399],
		0,
		0,
		null,
		[
			[
			"Default",
			0,
			false,
			1,
			0,
			false,
			4525218124935617,
			[
				["images/searchiconback-sheet0.png", 1762, 0, 0, 250, 250, 1, 0.5, 0.5,[["Imagepoint 1", 0.5, 0.5]],[-0.2279999852180481,-0.2279999852180481,0,-0.02399998903274536,0.2279999852180481,-0.2279999852180481,0.02799999713897705,0,0.2319999933242798,0.2319999933242798,0,0.02799999713897705,-0.2279999852180481,0.2279999852180481,-0.01600000262260437,0],0]
			]
			]
		],
		[
		],
		false,
		false,
		9420311635545042,
		[],
		null
	]
,	[
		"t50",
		cr.plugins_.Sprite,
		false,
		[6297949676768024],
		0,
		0,
		null,
		[
			[
			"Default",
			0,
			false,
			1,
			0,
			false,
			7286005543399399,
			[
				["images/socialicons-sheet0.png", 28109, 1, 1, 250, 250, 1, 0.5, 0.5,[],[-0.3040000200271606,-0.3040000200271606,0,-0.4280000030994415,0.3040000200271606,-0.3040000200271606,0.4319999814033508,0,0.3080000281333923,0.3080000281333923,0,0.4319999814033508,-0.3040000200271606,0.3040000200271606,-0.4280000030994415,0],0],
				["images/socialicons-sheet0.png", 28109, 257, 1, 250, 250, 1, 0.5, 0.5,[],[-0.3040000200271606,-0.3040000200271606,0,-0.4280000030994415,0.3040000200271606,-0.3040000200271606,0.4319999814033508,0,0.3080000281333923,0.3080000281333923,0,0.4319999814033508,-0.3040000200271606,0.3040000200271606,-0.4280000030994415,0],0],
				["images/socialicons-sheet0.png", 28109, 1, 257, 250, 250, 1, 0.5, 0.5,[],[-0.3040000200271606,-0.3040000200271606,0,-0.4280000030994415,0.3040000200271606,-0.3040000200271606,0.4319999814033508,0,0.3080000281333923,0.3080000281333923,0,0.4319999814033508,-0.3040000200271606,0.3040000200271606,-0.4280000030994415,0],0],
				["images/socialicons-sheet0.png", 28109, 257, 257, 250, 250, 1, 0.5, 0.5,[],[-0.3040000200271606,-0.3040000200271606,0,-0.4280000030994415,0.3040000200271606,-0.3040000200271606,0.4319999814033508,0,0.3080000281333923,0.3080000281333923,0,0.4319999814033508,-0.3040000200271606,0.3040000200271606,-0.4280000030994415,0],0]
			]
			]
		],
		[
		],
		false,
		false,
		800214161033669,
		[],
		null
	]
,	[
		"t51",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3043868209732081,
			[
				["images/lines-sheet0.png", 810, 0, 0, 250, 250, 1, 0.5, 0.5,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		4629898989421232,
		[],
		null
	]
,	[
		"t52",
		cr.plugins_.UserMedia,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		881034998199839,
		[],
		null
	]
,	[
		"t53",
		cr.plugins_.Sprite,
		false,
		[3850001477886914,574316301929623],
		0,
		0,
		null,
		[
			[
			"Default",
			0,
			false,
			1,
			0,
			false,
			9061713791673769,
			[
				["images/tabs-sheet0.png", 1830, 0, 0, 250, 250, 1, 0.5, 0.5,[],[],0],
				["images/tile-sheet0.png", 6012, 1, 257, 250, 250, 1, 0.5, 0.5,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		4599372380835841,
		[],
		null
	]
,	[
		"t54",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			29,
			true,
			1,
			0,
			false,
			3984657892147623,
			[
				["images/loading-sheet0.png", 32093, 1, 1, 220, 235, 1, 0.5, 0.5021276473999023,[],[],0],
				["images/loading-sheet0.png", 32093, 257, 1, 220, 235, 1, 0.5, 0.5021276473999023,[],[],0],
				["images/loading-sheet0.png", 32093, 513, 1, 220, 235, 1, 0.5, 0.5021276473999023,[],[],0],
				["images/loading-sheet0.png", 32093, 769, 1, 220, 235, 1, 0.5, 0.5021276473999023,[],[],0],
				["images/loading-sheet0.png", 32093, 1, 257, 220, 235, 1, 0.5, 0.5021276473999023,[],[],0],
				["images/loading-sheet0.png", 32093, 257, 257, 220, 235, 1, 0.5, 0.5021276473999023,[],[],0],
				["images/loading-sheet0.png", 32093, 513, 257, 220, 235, 1, 0.5, 0.5021276473999023,[],[],0],
				["images/loading-sheet0.png", 32093, 769, 257, 220, 235, 1, 0.5, 0.5021276473999023,[],[],0],
				["images/loading-sheet0.png", 32093, 1, 513, 220, 235, 1, 0.5, 0.5021276473999023,[],[],0],
				["images/loading-sheet0.png", 32093, 257, 513, 220, 235, 1, 0.5, 0.5021276473999023,[],[],0],
				["images/loading-sheet0.png", 32093, 513, 513, 220, 235, 1, 0.5, 0.5021276473999023,[],[],0],
				["images/loading-sheet0.png", 32093, 769, 513, 220, 235, 1, 0.5, 0.5021276473999023,[],[],0],
				["images/loading-sheet0.png", 32093, 1, 769, 220, 235, 1, 0.5, 0.5021276473999023,[],[],0],
				["images/loading-sheet0.png", 32093, 257, 769, 220, 235, 1, 0.5, 0.5021276473999023,[],[],0],
				["images/loading-sheet0.png", 32093, 513, 769, 220, 235, 1, 0.5, 0.5021276473999023,[],[],0],
				["images/loading-sheet0.png", 32093, 769, 769, 220, 235, 1, 0.5, 0.5021276473999023,[],[],0],
				["images/loading-sheet1.png", 25414, 1, 1, 220, 235, 1, 0.5, 0.5021276473999023,[],[],0],
				["images/loading-sheet1.png", 25414, 257, 1, 220, 235, 1, 0.5, 0.5021276473999023,[],[],0],
				["images/loading-sheet1.png", 25414, 513, 1, 220, 235, 1, 0.5, 0.5021276473999023,[],[],0],
				["images/loading-sheet1.png", 25414, 769, 1, 220, 235, 1, 0.5, 0.5021276473999023,[],[],0],
				["images/loading-sheet1.png", 25414, 1, 257, 220, 235, 1, 0.5, 0.5021276473999023,[],[],0],
				["images/loading-sheet1.png", 25414, 257, 257, 220, 235, 1, 0.5, 0.5021276473999023,[],[],0],
				["images/loading-sheet1.png", 25414, 513, 257, 220, 235, 1, 0.5, 0.5021276473999023,[],[],0],
				["images/loading-sheet1.png", 25414, 769, 257, 220, 235, 1, 0.5, 0.5021276473999023,[],[],0],
				["images/loading-sheet1.png", 25414, 1, 513, 220, 235, 1, 0.5, 0.5021276473999023,[],[],0],
				["images/loading-sheet1.png", 25414, 257, 513, 220, 235, 1, 0.5, 0.5021276473999023,[],[],0],
				["images/loading-sheet1.png", 25414, 513, 513, 220, 235, 1, 0.5, 0.5021276473999023,[],[],0],
				["images/loading-sheet1.png", 25414, 769, 513, 220, 235, 1, 0.5, 0.5021276473999023,[],[],0],
				["images/loading-sheet1.png", 25414, 1, 769, 220, 235, 1, 0.5, 0.5021276473999023,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		9109134151556296,
		[],
		null
	]
,	[
		"t55",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			0,
			false,
			1,
			0,
			false,
			4594657804251815,
			[
				["images/propicuser-sheet0.png", 857, 0, 0, 256, 256, 1, 0.5, 0.5,[],[],0],
				["images/propicsearch-sheet1.png", 23490, 0, 0, 256, 256, 1, 0.5, 0.5,[],[-0.3085939884185791,-0.3085939884185791,0,-0.4375,0.3085939884185791,-0.3085939884185791,0.4374999403953552,0,0.3085939884185791,0.3085939884185791,0,0.4374999403953552,-0.3085939884185791,0.3085939884185791,-0.4375,0],0]
			]
			]
		],
		[
		[
			"InjectImage",
			cr.behaviors.injectImage,
			8475110421802446
		]
		],
		false,
		false,
		2439070541088104,
		[],
		null
	]
,	[
		"t56",
		cr.plugins_.TextBox,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		7820603577421571,
		[],
		null
	]
,	[
		"t57",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		7191238203648333,
		[],
		null
	]
,	[
		"t58",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		6617824180076355,
		[],
		null
	]
,	[
		"t59",
		cr.plugins_.Keyboard,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		5850712651602241,
		[],
		null
		,[]
	]
,	[
		"t60",
		cr.plugins_.TextBox,
		false,
		[6561284014220233],
		1,
		0,
		null,
		null,
		[
		[
			"Pin",
			cr.behaviors.Pin,
			2100417634428876
		]
		],
		false,
		false,
		4055668995871637,
		[],
		null
	]
,	[
		"t61",
		cr.plugins_.HTML_Img,
		false,
		[3114204342255155],
		2,
		0,
		null,
		null,
		[
		[
			"InjectImage",
			cr.behaviors.injectImage,
			473603897634147
		]
,		[
			"Persist",
			cr.behaviors.Persist,
			7716384750435718
		]
		],
		false,
		false,
		312018772546187,
		[],
		null
	]
,	[
		"t62",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4977751737095242,
			[
				["images/fbregister-sheet0.png", 7645, 0, 0, 463, 100, 1, 0.5010799169540405, 0.5,[],[-0.5010799169540405,-0.5,0.4989200830459595,-0.5,0.4967600703239441,0.4900000095367432,-0.4989200830459595,0.4900000095367432],0]
			]
			]
		],
		[
		],
		false,
		false,
		1288814313267057,
		[],
		null
	]
,	[
		"t63",
		cr.plugins_.FacebookMod,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		5885253100853842,
		[],
		null
		,["576508812455924","01742008196573526abc4ae01742008196573526abc4ae1bbeb71041bbeb7104"]
	]
,	[
		"t64",
		cr.plugins_.Sprite,
		false,
		[1354382222910618],
		0,
		0,
		null,
		[
			[
			"Default",
			29,
			true,
			1,
			0,
			false,
			7622870145992497,
			[
				["images/loading-sheet0.png", 32093, 1, 1, 220, 235, 1, 0.5, 0.5021276473999023,[],[],0],
				["images/loading-sheet0.png", 32093, 257, 1, 220, 235, 1, 0.5, 0.5021276473999023,[],[],0],
				["images/loading-sheet0.png", 32093, 513, 1, 220, 235, 1, 0.5, 0.5021276473999023,[],[],0],
				["images/loading-sheet0.png", 32093, 769, 1, 220, 235, 1, 0.5, 0.5021276473999023,[],[],0],
				["images/loading-sheet0.png", 32093, 1, 257, 220, 235, 1, 0.5, 0.5021276473999023,[],[],0],
				["images/loading-sheet0.png", 32093, 257, 257, 220, 235, 1, 0.5, 0.5021276473999023,[],[],0],
				["images/loading-sheet0.png", 32093, 513, 257, 220, 235, 1, 0.5, 0.5021276473999023,[],[],0],
				["images/loading-sheet0.png", 32093, 769, 257, 220, 235, 1, 0.5, 0.5021276473999023,[],[],0],
				["images/loading-sheet0.png", 32093, 1, 513, 220, 235, 1, 0.5, 0.5021276473999023,[],[],0],
				["images/loading-sheet0.png", 32093, 257, 513, 220, 235, 1, 0.5, 0.5021276473999023,[],[],0],
				["images/loading-sheet0.png", 32093, 513, 513, 220, 235, 1, 0.5, 0.5021276473999023,[],[],0],
				["images/loading-sheet0.png", 32093, 769, 513, 220, 235, 1, 0.5, 0.5021276473999023,[],[],0],
				["images/loading-sheet0.png", 32093, 1, 769, 220, 235, 1, 0.5, 0.5021276473999023,[],[],0],
				["images/loading-sheet0.png", 32093, 257, 769, 220, 235, 1, 0.5, 0.5021276473999023,[],[],0],
				["images/loading-sheet0.png", 32093, 513, 769, 220, 235, 1, 0.5, 0.5021276473999023,[],[],0],
				["images/loading-sheet0.png", 32093, 769, 769, 220, 235, 1, 0.5, 0.5021276473999023,[],[],0],
				["images/loading-sheet1.png", 25414, 1, 1, 220, 235, 1, 0.5, 0.5021276473999023,[],[],0],
				["images/loading-sheet1.png", 25414, 257, 1, 220, 235, 1, 0.5, 0.5021276473999023,[],[],0],
				["images/loading-sheet1.png", 25414, 513, 1, 220, 235, 1, 0.5, 0.5021276473999023,[],[],0],
				["images/loading-sheet1.png", 25414, 769, 1, 220, 235, 1, 0.5, 0.5021276473999023,[],[],0],
				["images/loading-sheet1.png", 25414, 1, 257, 220, 235, 1, 0.5, 0.5021276473999023,[],[],0],
				["images/loading-sheet1.png", 25414, 257, 257, 220, 235, 1, 0.5, 0.5021276473999023,[],[],0],
				["images/loading-sheet1.png", 25414, 513, 257, 220, 235, 1, 0.5, 0.5021276473999023,[],[],0],
				["images/loading-sheet1.png", 25414, 769, 257, 220, 235, 1, 0.5, 0.5021276473999023,[],[],0],
				["images/loading-sheet1.png", 25414, 1, 513, 220, 235, 1, 0.5, 0.5021276473999023,[],[],0],
				["images/loading-sheet1.png", 25414, 257, 513, 220, 235, 1, 0.5, 0.5021276473999023,[],[],0],
				["images/loading-sheet1.png", 25414, 513, 513, 220, 235, 1, 0.5, 0.5021276473999023,[],[],0],
				["images/loading-sheet1.png", 25414, 769, 513, 220, 235, 1, 0.5, 0.5021276473999023,[],[],0],
				["images/loading-sheet1.png", 25414, 1, 769, 220, 235, 1, 0.5, 0.5021276473999023,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		2851074093006107,
		[],
		null
	]
,	[
		"t65",
		cr.plugins_.HTML_Div,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		4686867498007431,
		[],
		null
	]
,	[
		"t66",
		cr.plugins_.Text,
		false,
		[7899920874562007],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		8346089181554172,
		[],
		null
	]
,	[
		"t67",
		cr.plugins_.Sprite,
		false,
		[2055927989136385,7323377325136423,3558542498390502],
		3,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5685420741231523,
			[
				["images/touchfollowme-sheet0.png", 1534, 0, 0, 25, 960, 1, 0.1599999964237213, 1,[],[],0]
			]
			]
		],
		[
		[
			"BoundToLayout",
			cr.behaviors.bound,
			5657191091397134
		]
,		[
			"Bullet",
			cr.behaviors.Bullet,
			1114863170313822
		]
,		[
			"ScrollTo",
			cr.behaviors.scrollto,
			6844734824281759
		]
		],
		false,
		false,
		8632818686324616,
		[],
		null
	]
,	[
		"t68",
		cr.plugins_.HTML_iFrame,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		7303812389370075,
		[],
		null
	]
,	[
		"t69",
		cr.plugins_.TextBox,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		7143239740269752,
		[],
		null
	]
,	[
		"t70",
		cr.plugins_.iScroll,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		8250425179201948,
		[],
		null
	]
,	[
		"t71",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3568860936283989,
			[
				["images/up-sheet0.png", 808, 0, 0, 49, 56, 1, 0.5102040767669678, 0.5,[],[-0.2857140898704529,-0.3035709857940674,0.2653059363365173,-0.3035709857940674,0.08163291215896606,0.1428570151329041,-0.02040806412696838,0.3035709857940674,-0.08163309097290039,0.125],0]
			]
			]
		],
		[
		],
		false,
		false,
		601244876701724,
		[],
		null
	]
,	[
		"t72",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			2478671441051792,
			[
				["images/refresh-sheet0.png", 3897, 0, 0, 128, 128, 1, 0.5, 0.5,[],[-0.328125,-0.328125,0,-0.46875,0.3359379768371582,-0.3359369933605194,0.4765629768371582,0,0.3359379768371582,0.3359379768371582,0,0.46875,-0.328125,0.328125,0.34375,0],0]
			]
			]
		],
		[
		],
		false,
		false,
		8201858582980769,
		[],
		null
	]
,	[
		"t73",
		cr.plugins_.TextBox,
		false,
		[8768958837474019],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		8009647426859793,
		[],
		null
	]
,	[
		"t74",
		cr.plugins_.Sprite,
		false,
		[8686512281869622],
		0,
		0,
		null,
		[
			[
			"Default",
			0,
			false,
			1,
			0,
			false,
			3797348858943525,
			[
				["images/socialtile-sheet0.png", 4255, 1, 1, 500, 200, 1, 0.5, 0.5,[["Imagepoint 1", 0.06800000369548798, 0.3499999940395355],["Imagepoint 2", 0.8399999737739563, 0.5]],[-0.3779999911785126,-0.1949999928474426,0.378000020980835,-0.1949999928474426,0.4559999704360962,0,0.3619999885559082,0.1549999713897705,-0.3619999885559082,0.1549999713897705,-0.4519999921321869,0],0],
				["images/socialtile-sheet0.png", 4255, 1, 257, 250, 250, 1, 0.5, 0.5,[],[0.5,0.5,-0.5,0.5,-0.5,-0.5,0.5,-0.5],0],
				["images/tile-sheet0.png", 6012, 1, 257, 250, 250, 1, 0.5, 0.5,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		9402762491637051,
		[],
		null
	]
,	[
		"t75",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		7799593212674613,
		[],
		null
	]
,	[
		"t76",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4508022651646529,
			[
				["images/hc-sheet0.png", 5690, 0, 0, 463, 100, 1, 0.5010799169540405, 0.5099999904632568,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		8274350348119652,
		[],
		null
	]
,	[
		"t77",
		cr.plugins_.Text,
		false,
		[],
		1,
		0,
		null,
		null,
		[
		[
			"Pin",
			cr.behaviors.Pin,
			6485562653948666
		]
		],
		false,
		false,
		7100591076684023,
		[],
		null
	]
,	[
		"t78",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			8789980592982976,
			[
				["images/frame1-sheet0.png", 6932, 0, 0, 486, 755, 1, 0.5, 0.5006622672080994,[["Imagepoint 1", 0.07818929851055145, 0.2649006545543671]],[-0.491769552230835,-0.495364248752594,0.4917700290679932,-0.495364248752594,0.4814810156822205,0.4874167442321777,-0.4814814925193787,0.4874167442321777],0]
			]
			]
		],
		[
		],
		false,
		false,
		1614841363840456,
		[],
		null
	]
,	[
		"t79",
		cr.plugins_.Sprite,
		false,
		[8593055991677625],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3301185856826138,
			[
				["images/spaceback-sheet0.png", 528, 0, 0, 399, 67, 1, 0.5012531280517578, 0.5074626803398132,[],[-0.5012531280517578,-0.5074626803398132,0.4987468719482422,-0.5074626803398132,0.4987468719482422,0.4925373196601868,-0.4987468719482422,0.477612316608429],0]
			]
			]
		],
		[
		],
		false,
		false,
		4310476423612363,
		[],
		null
	]
,	[
		"t80",
		cr.plugins_.Sprite,
		false,
		[172319455783293,2479755747082675],
		0,
		0,
		null,
		[
			[
			"Default",
			0,
			false,
			1,
			0,
			false,
			2766429843345031,
			[
				["images/viewbutton2-sheet0.png", 7060, 0, 0, 256, 256, 1, 0.5, 0.5,[],[-0.25,-0.25,0,-0.4648436903953552,0.25,-0.25,0.2109379768371582,0,0.3515629768371582,0.3515629768371582,0,0.4648439884185791,-0.4648436903953552,0.4648439884185791,-0.2070310115814209,0],0],
				["images/viewbutton2-sheet1.png", 7951, 0, 0, 256, 256, 1, 0.5, 0.5,[],[-0.25,-0.25,0,-0.4648436903953552,0.25,-0.25,0.2109379768371582,0,0.3164060115814209,0.3164060115814209,0,0.4648439884185791,-0.4648436903953552,0.4648439884185791,-0.2070310115814209,0],0],
				["images/viewbutton-sheet0.png", 32613, 1, 513, 256, 256, 1, 0.5, 0.5,[],[],0],
				["images/viewbutton-sheet0.png", 32613, 513, 513, 256, 256, 1, 0.5, 0.5,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		3091531935883,
		[],
		null
	]
,	[
		"t81",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			0,
			false,
			1,
			0,
			false,
			8916971848512484,
			[
				["images/pop-sheet0.png", 859, 0, 0, 250, 250, 1, 0.5, 0.5,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		7022067278393743,
		[],
		null
	]
,	[
		"t82",
		cr.plugins_.Text,
		false,
		[],
		1,
		0,
		null,
		null,
		[
		[
			"Pin",
			cr.behaviors.Pin,
			7786072497272293
		]
		],
		false,
		false,
		9709124549177394,
		[],
		null
	]
,	[
		"t83",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			0,
			false,
			1,
			0,
			false,
			5246312857050732,
			[
				["images/share-sheet0.png", 8177, 1, 1, 258, 81, 1, 0.5, 0.5061728358268738,[],[-0.5,-0.5061728358268738,0.5,-0.5061728358268738,0.5,0.4938271641731262,-0.4922480583190918,0.4691361784934998],0],
				["images/share-sheet0.png", 8177, 1, 129, 258, 81, 1, 0.5, 0.5061728358268738,[],[-0.5,-0.5061728358268738,0.5,-0.5061728358268738,0.492247998714447,0.4691361784934998,-0.5,0.4938271641731262],0],
				["images/share-sheet0.png", 8177, 1, 257, 258, 81, 1, 0.5, 0.5061728358268738,[],[-0.5,-0.5061728358268738,0.5,-0.5061728358268738,0.492247998714447,0.4691361784934998,-0.5,0.4938271641731262],0],
				["images/share-sheet0.png", 8177, 1, 385, 258, 81, 1, 0.5, 0.5061728358268738,[],[-0.5,-0.5061728358268738,0.5,-0.5061728358268738,0.492247998714447,0.4691361784934998,-0.5,0.4938271641731262],0]
			]
			]
		],
		[
		[
			"Pin",
			cr.behaviors.Pin,
			6579196050811677
		]
		],
		false,
		false,
		6922830795652398,
		[],
		null
	]
,	[
		"t84",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			2965712321217771,
			[
				["images/close-sheet0.png", 3808, 0, 0, 128, 128, 1, 0.5, 0.5,[],[-0.296875,-0.296875,0,-0.140625,0.3046879768371582,-0.3046869933605194,0.1796879768371582,0,0.3203129768371582,0.3203129768371582,0,0.1796879768371582,-0.3125,0.3125,-0.1640619933605194,0],0]
			]
			]
		],
		[
		[
			"Pin",
			cr.behaviors.Pin,
			3507031564599889
		]
		],
		false,
		false,
		8179833766042797,
		[],
		null
	]
,	[
		"t85",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			615310963836879,
			[
				["images/hcicon-sheet0.png", 2247, 0, 0, 256, 256, 1, 0.5, 0.5,[],[-0.3242189884185791,-0.3242189884185791,0.3242189884185791,-0.3242189884185791,0.4921879768371582,0,0.2695310115814209,0.2695310115814209,0,0.3203129768371582,-0.234375,0.234375,-0.484375,0],0]
			]
			]
		],
		[
		],
		false,
		false,
		3489792904764171,
		[],
		null
	]
,	[
		"t86",
		cr.plugins_.Text,
		false,
		[],
		1,
		0,
		null,
		null,
		[
		[
			"Pin",
			cr.behaviors.Pin,
			2424698117770167
		]
		],
		false,
		false,
		7077204420476377,
		[],
		null
	]
,	[
		"t87",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			2062085068257616,
			[
				["images/notificationicon-sheet0.png", 4053, 0, 0, 256, 263, 1, 0.5, 0.5019011497497559,[["Imagepoint 1", 0.7734375, 0.1901140660047531]],[-0.2851560115814209,-0.2927761673927307,0,-0.5019011497497559,0.2851560115814209,-0.2927761673927307,0.359375,-0.00380215048789978,0.3007810115814209,0.3041828274726868,0,0.4980988502502441,-0.3007810115814209,0.3041828274726868,-0.359375,-0.00380215048789978],0]
			]
			]
		],
		[
		],
		false,
		false,
		2229858240470801,
		[],
		null
	]
,	[
		"t88",
		cr.plugins_.sliderbar,
		false,
		[],
		1,
		0,
		null,
		null,
		[
		[
			"Pin",
			cr.behaviors.Pin,
			320405022001305
		]
		],
		false,
		false,
		5211331565278318,
		[],
		null
	]
,	[
		"t89",
		cr.plugins_.iScroll,
		false,
		[7719145093742076],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		5913580356904289,
		[],
		null
	]
,	[
		"t90",
		cr.plugins_.iosdialogs,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		9859137477535679,
		[],
		null
		,[]
	]
,	[
		"t91",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			9099949984169236,
			[
				["images/notificationback-sheet0.png", 2129, 0, 0, 100, 100, 1, 0.5, 0.5,[],[-0.3400000035762787,-0.3400000035762787,0,-0.4900000095367432,0.3399999737739563,-0.3400000035762787,0.4599999785423279,0,0.3299999833106995,0.3299999833106995,0,0.4800000190734863,-0.3400000035762787,0.3399999737739563,-0.4699999988079071,0],0]
			]
			]
		],
		[
		[
			"Pin",
			cr.behaviors.Pin,
			1205400032792599
		]
		],
		false,
		false,
		6382275899996224,
		[],
		null
	]
,	[
		"t92",
		cr.plugins_.Text,
		false,
		[],
		1,
		0,
		null,
		null,
		[
		[
			"Pin",
			cr.behaviors.Pin,
			3684528882792851
		]
		],
		false,
		false,
		4707048098675747,
		[],
		null
	]
,	[
		"t93",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			0,
			false,
			1,
			0,
			false,
			3449764165850131,
			[
				["images/socialshare-sheet0.png", 128776, 1, 1, 512, 512, 1, 0.5, 0.5,[],[],0],
				["images/socialshare-sheet0.png", 128776, 1025, 1, 512, 512, 1, 0.5, 0.5,[],[],0],
				["images/socialshare-sheet0.png", 128776, 1, 1025, 512, 512, 1, 0.5, 0.5,[],[-0.3535159826278687,-0.3535159826278687,0,-0.49609375,0.3417969942092896,-0.3417969942092896,0.4667969942092896,0,0.3359379768371582,0.3359379768371582,0,0.484375,-0.3476560115814209,0.3476560115814209,-0.490234375,0],0],
				["images/socialshare-sheet0.png", 128776, 1025, 1025, 512, 512, 1, 0.5, 0.5,[],[-0.3535159826278687,-0.3535159826278687,0,-0.49609375,0.3417969942092896,-0.3417969942092896,0.4667969942092896,0,0.3359379768371582,0.3359379768371582,0,0.484375,-0.3476560115814209,0.3476560115814209,-0.490234375,0],0]
			]
			]
		],
		[
		[
			"Pin",
			cr.behaviors.Pin,
			1586117873826268
		]
		],
		false,
		false,
		4237458858525138,
		[],
		null
	]
,	[
		"t94",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			0,
			false,
			1,
			0,
			false,
			6845217934752452,
			[
				["images/settingsicons-sheet0.png", 12999, 1, 1, 512, 346, 1, 0.5, 0.5,[],[-0.193358987569809,-0.04624301195144653,0,-0.4364162087440491,0.1933590173721314,-0.04624301195144653,0.1933590173721314,0,0.2285159826278687,0.09826600551605225,0,-0.1156069934368134,-0.228516012430191,0.09826600551605225,-0.193358987569809,0],0],
				["images/settingsicons-sheet1.png", 5559, 0, 0, 256, 256, 1, 0.5, 0.5,[],[],0],
				["images/settingsicons-sheet0.png", 12999, 1, 513, 512, 346, 1, 0.5, 0.5,[],[-0.2949219942092896,-0.1965320110321045,0.234375,-0.1069360077381134,0.2949219942092896,0,0.234375,0.106935977935791,-0.2949219942092896,0.1965320110321045],0]
			]
			]
		],
		[
		[
			"Pin",
			cr.behaviors.Pin,
			360367312649608
		]
		],
		false,
		false,
		5374002320981106,
		[],
		null
	]
,	[
		"t95",
		cr.plugins_.PhonegapDialog,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		4883019204221626,
		[],
		null
		,[]
	]
,	[
		"t96",
		cr.plugins_.PhonegapLocalNotification,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		7252305162395715,
		[],
		null
		,[]
	]
,	[
		"t97",
		cr.plugins_.Phonegap,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		7472135463284918,
		[],
		null
		,[]
	]
,	[
		"t98",
		cr.plugins_.iScroll,
		false,
		[341649720989855],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		7527073103835713,
		[],
		null
	]
,	[
		"t99",
		cr.plugins_.Facebook2_1,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		true,
		false,
		6596372252798826,
		[],
		null
	]
,	[
		"t100",
		cr.plugins_.Sprite,
		true,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		4964824913604316,
		[],
		null
	]
,	[
		"t101",
		cr.plugins_.TextBox,
		true,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		7525719095183788,
		[],
		null
	]
,	[
		"t102",
		cr.plugins_.Text,
		true,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		8815132597988675,
		[],
		null
	]
	],
	[
		[100,48,84,32,62,76,49,42,94,50,93,74,53,46,80]
,		[101,21,19,18,14,12]
,		[102,35,45,58,29,75,66,77,82,86,24,9,44,57]
	],
	[
	[
		"mainLogin",
		640,
		1136,
		false,
		"mainLogin",
		3011742986804865,
		[
		[
			"Layer 0",
			0,
			3200675753827079,
			true,
			[245, 245, 245],
			false,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[320, 1061.5, 0, 640, 153, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				34,
				191,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[320, 275, 0, 230, 153, 0, 0, 1, 0.5, 0.5029411911964417, 0, 0, []],
				8,
				192,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[320, 461, 0, 639, 70, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				9,
				212,
				[
					["label"]
				],
				[
				[
				]
				],
				[
					"Connect with",
					0,
					"26pt Open Sans",
					"rgb(174,174,174)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[320, 646, 0, 640, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				9,
				213,
				[
					["label"]
				],
				[
				[
				]
				],
				[
					"or",
					0,
					"26pt Open Sans",
					"rgb(174,174,174)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[320, 1061, 0, 640, 152, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				9,
				214,
				[
					["register"]
				],
				[
				[
				]
				],
				[
					"Sign up with email",
					0,
					"26pt Open Sans",
					"rgb(255,255,255)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[320, 567, 0, 236, 51, 0, 0, 1, 0.5010799169540405, 0.5, 0, 0, []],
				62,
				215,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[320, 726, 0, 236, 51, 0, 0, 1, 0.5010799169540405, 0.5099999904632568, 0, 0, []],
				76,
				216,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[481, 568, 0, 59.85585403442383, 63.93693923950195, 0, 0, 1, 0.5, 0.5021276473999023, 0, 0, []],
				54,
				20,
				[
				],
				[
				],
				[
					1,
					"Default",
					0,
					1
				]
			]
,			[
				[315, 876, 0, 549, 115, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				29,
				297,
				[
				],
				[
				[
				]
				],
				[
					"",
					0,
					"16pt Open Sans",
					"rgb(255,0,0)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[223, 881, 0, 200, 25, 0, 0, 1, 0, 0, 0, 0, []],
				99,
				298,
				[
				],
				[
				],
				[
					1,
					"576508812455924",
					"01742008196573526abc4ae1bbeb7104",
					67,
					0,
					0,
					0,
					"v2.0",
					"Available",
					0,
					0,
					0,
					1,
					1,
					1,
					1,
					1,
					1,
					1,
					1,
					1,
					1,
					1,
					1,
					1,
					1,
					1,
					1,
					1,
					1,
					1,
					1,
					1,
					1,
					1,
					1,
					1,
					1,
					1,
					1,
					1,
					1,
					1,
					1,
					1,
					1,
					"",
					0
				]
			]
			],
			[			]
		]
,		[
			"Layer 1",
			1,
			9598971610297358,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
		],
		[
		],
		[]
	]
,	[
		"Register",
		640,
		1136,
		false,
		"Register",
		2574568503507662,
		[
		[
			"Layer 0",
			0,
			3462824732487971,
			true,
			[245, 245, 245],
			false,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[320, 52, 0, 640, 106, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				34,
				22,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[320, 1128, 0, 640, 14, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				7,
				21,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[128, 214, 0, 472, 90, 0, 0, 1, 0, 0, 0, 0, []],
				18,
				26,
				[
				],
				[
				],
				[
					"",
					" Full Name",
					"",
					1,
					1,
					0,
					0,
					0,
					0,
					""
				]
			]
,			[
				[128, 398, 0, 472, 90, 0, 0, 1, 0, 0, 0, 0, []],
				19,
				27,
				[
				],
				[
				],
				[
					"",
					" myname@example.com",
					"",
					1,
					1,
					0,
					0,
					2,
					0,
					""
				]
			]
,			[
				[320, 552, 0, 537, 50, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				9,
				32,
				[
					["label"]
				],
				[
				[
				]
				],
				[
					"Password",
					0,
					"26pt Open Sans",
					"rgb(153,153,153)",
					0,
					0,
					1,
					0,
					0
				]
			]
,			[
				[128, 582, 0, 472, 90, 0, 0, 1, 0, 0, 0, 0, []],
				14,
				33,
				[
				],
				[
				],
				[
					"",
					" Password",
					"",
					1,
					1,
					0,
					0,
					1,
					0,
					""
				]
			]
,			[
				[320, 367, 0, 537, 50, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				9,
				36,
				[
					["label"]
				],
				[
				[
				]
				],
				[
					"Email",
					0,
					"26pt Open Sans",
					"rgb(153,153,153)",
					0,
					0,
					1,
					0,
					0
				]
			]
,			[
				[320, 182, 0, 537, 50, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				9,
				37,
				[
					["label"]
				],
				[
				[
				]
				],
				[
					"Full Name",
					0,
					"26pt Open Sans",
					"rgb(153,153,153)",
					0,
					0,
					1,
					0,
					0
				]
			]
,			[
				[320, 50, 0, 379, 99, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				9,
				39,
				[
					["heading"]
				],
				[
				[
				]
				],
				[
					"Register",
					0,
					"26pt Open Sans",
					"rgb(255,255,255)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[128, 766, 0, 472, 90, 0, 0, 1, 0, 0, 0, 0, []],
				21,
				45,
				[
				],
				[
				],
				[
					"",
					" 0123456789",
					"",
					1,
					1,
					0,
					0,
					4,
					0,
					""
				]
			]
,			[
				[320, 735, 0, 537, 50, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				9,
				70,
				[
					["label"]
				],
				[
				[
				]
				],
				[
					"Contact",
					0,
					"26pt Open Sans",
					"rgb(153,153,153)",
					0,
					0,
					1,
					0,
					0
				]
			]
,			[
				[324, 909, 0, 549, 115, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				29,
				73,
				[
				],
				[
				[
				]
				],
				[
					"",
					0,
					"16pt Open Sans",
					"rgb(255,0,0)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[326, 996, 0, 247, 82, 0, 0, 1, 0.5020242929458618, 0.5121951103210449, 0, 0, []],
				32,
				81,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[326, 1001, 0, 244, 79, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				9,
				82,
				[
					["buttontext"]
				],
				[
				[
				]
				],
				[
					"REGISTER",
					0,
					"26pt Open Sans",
					"rgb(255,255,255)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[86.6259765625, 52, 0, 172, 99, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				35,
				23,
				[
				],
				[
				],
				[
					"< Back",
					0,
					"20pt Open Sans",
					"rgb(246,246,246)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[86, 260, 0, 50, 50, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				47,
				193,
				[
					[0]
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[86, 628, 0, 50, 50, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				47,
				30,
				[
					[0]
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[86, 811, 0, 50, 50, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				47,
				31,
				[
					[3]
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[86, 444, 0, 50, 50, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				47,
				35,
				[
					[1]
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
		],
		[
		],
		[]
	]
,	[
		"UniqueID",
		640,
		1136,
		false,
		"UniqueID",
		2588301702428325,
		[
		[
			"Layer 0",
			0,
			1238164559127587,
			true,
			[255, 255, 255],
			false,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[315.5, 517, 0, 589, 283, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				248,
				[
					[1]
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					1,
					1
				]
			]
,			[
				[320, 52, 0, 640, 106, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				34,
				40,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[320, 1126, 0, 640, 18, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				7,
				43,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[320, 52.5, 0, 593, 104, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				9,
				44,
				[
					[""]
				],
				[
				[
				]
				],
				[
					"HelloCard Handle",
					0,
					"26pt Roboto",
					"rgb(255,255,255)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[340, 492, 0, 478, 181, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				69,
				[
					[""]
				],
				[
				[
				],
				[
				]
				],
				[
					"",
					1,
					"48pt Arial",
					"rgb(0,0,0)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[326.0931396484375, 861, 0, 814, 82, 0, 0, 1, 0.5020242929458618, 0.5121951103210449, 0, 0, []],
				32,
				77,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[24, 606, 0, 593, 201, 0, 0, 1, 0, 0, 0, 0, []],
				9,
				78,
				[
					["1"]
				],
				[
				[
				]
				],
				[
					"",
					0,
					"26pt Roboto",
					"rgb(153,153,153)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[304, 1024, 0, 549, 130, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				29,
				79,
				[
				],
				[
				[
				]
				],
				[
					"Didn't receive verification mail? click here to resend.",
					0,
					"24pt Arial",
					"rgb(68,187,155)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[320, 240, 0, 264.6299133300781, 176.4199523925781, 0, 0, 1, 0.5, 0.5029411911964417, 0, 0, []],
				8,
				7,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[322, 859, 0, 571, 79, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				9,
				41,
				[
					["button"]
				],
				[
				[
				]
				],
				[
					"Save",
					0,
					"26pt Open Sans",
					"rgb(255,255,255)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[127, 469, 0, 359, 76, 0, 0, 1, 0, 0, 0, 0, []],
				60,
				245,
				[
					[""]
				],
				[
				[
				]
				],
				[
					"",
					"Hellocard Handle",
					"",
					1,
					1,
					0,
					0,
					0,
					0,
					""
				]
			]
,			[
				[332, 397, 0, 542, 54, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				86,
				246,
				[
				],
				[
				[
				]
				],
				[
					"Reserve your Hellocard Handle",
					0,
					"24pt Open Sans",
					"rgb(75,75,75)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[97, 507, 0, 250, 75, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				77,
				247,
				[
				],
				[
				[
				]
				],
				[
					"@",
					0,
					"36pt Open Sans",
					"rgb(75,75,75)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[530, 508, 0, 571, 79, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				9,
				249,
				[
					["button1"]
				],
				[
				[
				]
				],
				[
					"Save",
					0,
					"26pt Open Sans",
					"rgb(30,30,30)",
					1,
					1,
					1,
					0,
					0
				]
			]
			],
			[			]
		]
		],
		[
		],
		[]
	]
,	[
		"Login",
		640,
		1136,
		false,
		"Login",
		6,
		[
		[
			"Layer 0",
			0,
			7,
			true,
			[245, 245, 245],
			false,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[320, 52, 0, 640, 106, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				34,
				19,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[320, 270, 0, 230, 153, 0, 0, 1, 0.5, 0.5029411911964417, 0, 0, []],
				8,
				9,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[320, 51.5, 0, 640, 102, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				9,
				10,
				[
					["head"]
				],
				[
				[
				]
				],
				[
					"Login",
					0,
					"26pt Open Sans",
					"rgb(255,255,255)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[320, 455, 0, 537, 50, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				9,
				11,
				[
					["label"]
				],
				[
				[
				]
				],
				[
					"Username",
					0,
					"26pt Open Sans",
					"rgb(153,153,153)",
					0,
					0,
					1,
					0,
					0
				]
			]
,			[
				[320, 655, 0, 537, 50, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				9,
				12,
				[
					["label"]
				],
				[
				[
				]
				],
				[
					"Password",
					0,
					"26pt Open Sans",
					"rgb(153,153,153)",
					0,
					0,
					1,
					0,
					0
				]
			]
,			[
				[129, 483, 0, 472, 92, 0, 0, 1, 0, 0, 0, 0, []],
				12,
				16,
				[
				],
				[
				],
				[
					"",
					" HC ID or Email",
					"",
					1,
					1,
					0,
					0,
					0,
					0,
					""
				]
			]
,			[
				[129, 683, 0, 472, 92, 0, 0, 1, 0, 0, 0, 0, []],
				14,
				18,
				[
				],
				[
				],
				[
					"",
					" Enter Password",
					"",
					1,
					1,
					0,
					0,
					1,
					0,
					""
				]
			]
,			[
				[476, 989, 0, 278, 58, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				9,
				15,
				[
					["fp"]
				],
				[
				[
				]
				],
				[
					"Forgot Password?",
					0,
					"22pt Open Sans",
					"rgb(153,153,153)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[186.0283050537109, 990, 0, 261, 82, 0, 0, 1, 0.5020242929458618, 0.5121951103210449, 0, 0, []],
				32,
				75,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[331, 862, 0, 549, 162, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				29,
				76,
				[
				],
				[
				[
				]
				],
				[
					"",
					0,
					"24pt Open Sans",
					"rgb(255,0,0)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[186.0283050537109, 990, 0, 258, 79, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				9,
				80,
				[
					["buttontext"]
				],
				[
				[
				]
				],
				[
					"LOGIN",
					0,
					"26pt Open Sans",
					"rgb(255,255,255)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[86, 530, 0, 50, 50, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				47,
				14,
				[
					[0]
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[86, 729.5, 0, 50, 50, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				47,
				25,
				[
					[2]
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					2,
					1
				]
			]
,			[
				[86.6259765625, 52, 0, 172, 99, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				35,
				8,
				[
				],
				[
				],
				[
					"< Back",
					0,
					"20pt Open Sans",
					"rgb(246,246,246)",
					1,
					1,
					1,
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"Layer 1",
			1,
			5399337315518251,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[320, 859, 0, 108.8406982421875, 116.2616577148438, 0, 0, 1, 0.5, 0.5021276473999023, 0, 0, []],
				54,
				119,
				[
				],
				[
				],
				[
					1,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
		],
		[
			[
				null,
				13,
				17,
				[
				],
				[
				],
				[
					"bootstrap.css"
				]
			]
		],
		[]
	]
,	[
		"forgotPassword",
		640,
		1136,
		false,
		"forgotPassword",
		1032597787595178,
		[
		[
			"Layer 0",
			0,
			2588857198603976,
			true,
			[245, 245, 245],
			false,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[320, 52, 0, 640, 106, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				34,
				72,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[320.5, 1127.5, 0, 640, 13, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				7,
				194,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[320, 240, 0, 264.6299133300781, 176.4199523925781, 0, 0, 1, 0.5, 0.5029411911964417, 0, 0, []],
				8,
				195,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[320, 51, 0, 593, 79, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				9,
				196,
				[
					["heading"]
				],
				[
				[
				]
				],
				[
					"Password Reset",
					0,
					"26pt Open Sans",
					"rgb(153,153,153)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[320, 930, 0, 318, 82, 0, 0, 1, 0.5020242929458618, 0.5121951103210449, 0, 0, []],
				32,
				205,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[320, 933, 0, 317, 79, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				9,
				207,
				[
					["reset"]
				],
				[
				[
				]
				],
				[
					"Reset Password",
					0,
					"26pt Open Sans",
					"rgb(255,255,255)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[128, 554, 0, 472, 90, 0, 0, 1, 0, 0, 0, 0, []],
				19,
				198,
				[
				],
				[
				],
				[
					"",
					" Enter ur HCID or Email.",
					"",
					1,
					1,
					0,
					0,
					2,
					0,
					""
				]
			]
,			[
				[40, 503, 0, 537, 50, 0, 0, 1, 0, 0, 0, 0, []],
				9,
				204,
				[
					[""]
				],
				[
				[
				]
				],
				[
					"Username",
					0,
					"26pt Open Sans",
					"rgb(153,153,153)",
					0,
					0,
					1,
					0,
					0
				]
			]
,			[
				[86, 600, 0, 50, 50, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				47,
				209,
				[
					[1]
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[86.62599945068359, 52, 0, 172, 99, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				35,
				201,
				[
				],
				[
				],
				[
					"< Back",
					0,
					"20pt Open Sans",
					"rgb(255,255,255)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[322, 702, 0, 554, 91, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				29,
				206,
				[
				],
				[
				[
				]
				],
				[
					"",
					0,
					"24pt Open Sans",
					"rgb(255,0,0)",
					1,
					1,
					1,
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"Layer 1",
			1,
			120743036372456,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
		],
		[
		],
		[]
	]
,	[
		"Search",
		640,
		1136,
		false,
		"Search",
		3019477116221086,
		[
		[
			"Layer 0",
			0,
			5858409018885466,
			true,
			[252, 252, 252],
			false,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[320, 191, 0, 673, 262, 0, 0, 0.75, 0.5, 0.5, 0, 0, []],
				40,
				13,
				[
					[0]
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[33, 149, 0, 474, 79, 0, 0, 1, 0, 0, 0, 0, []],
				39,
				113,
				[
					[0]
				],
				[
				],
				[
					"",
					"Hellocard id (4 characters)",
					"",
					1,
					1,
					0,
					0,
					0,
					0,
					""
				]
			]
,			[
				[320, 345, 0, 640, 160, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				42,
				117,
				[
				],
				[
				],
				[
					1,
					"Default",
					0,
					1
				]
			]
,			[
				[185, 310, 0, 311.2876281738281, 46.69314575195313, 0, 0, 1, 0, 0, 0, 0, []],
				44,
				125,
				[
				],
				[
				],
				[
					"John Gresham",
					1,
					"24pt Open Sans",
					"rgb(105,105,105)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[185, 360, 0, 239, 46, 0, 0, 1, 0, 0, 0, 0, []],
				45,
				129,
				[
				],
				[
				],
				[
					"web developer",
					1,
					"16pt Open Sans",
					"rgb(105,105,105)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[531, 350, 0, 65.62773895263672, 65.62773895263672, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				46,
				133,
				[
					[0],
					[""]
				],
				[
				],
				[
					1,
					"Default",
					0,
					1
				]
			]
,			[
				[159.7805786132813, 926, 0, 325, 100, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				53,
				203,
				[
					[0],
					[1]
				],
				[
				],
				[
					0,
					"Default",
					1,
					1
				]
			]
,			[
				[477.719482421875, 926, 0, 318.5611572265625, 100, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				53,
				208,
				[
					[1],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[533, 350, 0, 549, 115, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				29,
				256,
				[
				],
				[
				[
				]
				],
				[
					"Request sent",
					1,
					"18pt Open Sans",
					"rgb(0,204,0)",
					1,
					1,
					1,
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"Layer 1",
			1,
			5911829497928251,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[80, 1056, 0, 160, 160, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				22,
				60,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[240, 1056, 0, 160, 160, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				33,
				64,
				[
					[1]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[400, 1056, 0, 160, 160, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				33,
				83,
				[
					[2]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[560, 1056, 0, 160, 160, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				33,
				84,
				[
					[3]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[80, 1053.5, 0, 160, 165, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				33,
				62,
				[
					[0]
				],
				[
				],
				[
					0,
					"Default",
					2,
					1
				]
			]
,			[
				[79, 1051, 0, 70, 70, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				17,
				85,
				[
					[0]
				],
				[
				],
				[
					0,
					"Default",
					1,
					1
				]
			]
,			[
				[320, 52, 0, 640, 106, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				34,
				86,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[320, 51, 0, 593, 79, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				9,
				87,
				[
					["heading"]
				],
				[
				[
				]
				],
				[
					"Search",
					0,
					"26pt Open Sans",
					"rgb(255,255,255)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[240, 1051, 0, 70, 70, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				36,
				88,
				[
				],
				[
				],
				[
					0,
					"Default",
					1,
					1
				]
			]
,			[
				[400, 1051, 0, 70, 70, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				37,
				89,
				[
				],
				[
				],
				[
					0,
					"Default",
					1,
					1
				]
			]
,			[
				[560, 1051, 0, 70, 70, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				90,
				[
				],
				[
				],
				[
					0,
					"Default",
					1,
					1
				]
			]
,			[
				[159, 926, 0, 319, 98, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				9,
				210,
				[
					["0"]
				],
				[
				[
				]
				],
				[
					"Search by HC Id",
					0,
					"20pt Open Sans",
					"rgb(255,255,255)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[479, 926, 0, 320, 98, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				9,
				211,
				[
					["1"]
				],
				[
				[
				]
				],
				[
					"Search by email/contact",
					0,
					"20pt Open Sans",
					"rgb(105,105,105)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[317, 347, 0, 63.77929306030273, 68.12788391113281, 0, 0, 1, 0.5, 0.5021276473999023, 0, 0, []],
				54,
				118,
				[
				],
				[
				],
				[
					1,
					"Default",
					0,
					1
				]
			]
,			[
				[531, 352, 0, 34.34493255615234, 36.6866340637207, 0, 0, 1, 0.5, 0.5021276473999023, 0, 0, []],
				64,
				142,
				[
					[""]
				],
				[
				],
				[
					1,
					"Default",
					0,
					1
				]
			]
,			[
				[31, 280, 0, 120, 120, 0, 0, 1, 0, 0, 0, 0, []],
				61,
				52,
				[
					[""]
				],
				[
				[
				],
				[
				]
				],
				[
					0,
					"",
					"border-radius:100%;border: 4px solid #ffffff;"
				]
			]
,			[
				[80, 1105, 0, 250, 75, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				77,
				221,
				[
				],
				[
				[
				]
				],
				[
					"Search",
					0,
					"18pt Open Sans",
					"rgb(255,255,255)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[240, 1105, 0, 250, 75, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				77,
				222,
				[
				],
				[
				[
				]
				],
				[
					"Saved",
					0,
					"18pt Open Sans",
					"rgb(255,255,255)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[400, 1105, 0, 250, 75, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				77,
				223,
				[
				],
				[
				[
				]
				],
				[
					"My cards",
					0,
					"18pt Open Sans",
					"rgb(255,255,255)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[560, 1105, 0, 250, 75, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				77,
				224,
				[
				],
				[
				[
				]
				],
				[
					"Settings",
					0,
					"18pt Open Sans",
					"rgb(255,255,255)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[584, 51, 0, 50, 50, 0, 0, 0.5, 0.5, 0.5019011497497559, 0, 0, []],
				87,
				254,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[594, 25, 0, 32, 32, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				91,
				280,
				[
				],
				[
				[
				]
				],
				[
					1,
					"Default",
					0,
					1
				]
			]
,			[
				[595, 25, 0, 200, 30, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				92,
				281,
				[
				],
				[
				[
				]
				],
				[
					"0",
					1,
					"14pt Open Sans Light",
					"rgb(255,255,255)",
					1,
					1,
					1,
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"Layer 2",
			2,
			3830119111829203,
			false,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[320, 503.5, 0, 673, 285, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				163,
				[
					[1]
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					1,
					1
				]
			]
,			[
				[33, 457, 0, 451, 89, 0, 0, 1, 0, 0, 0, 0, []],
				39,
				166,
				[
					[1]
				],
				[
				],
				[
					"",
					"Add tags seperated by commas ','",
					"",
					1,
					1,
					0,
					0,
					0,
					0,
					""
				]
			]
,			[
				[574, 491, 0, 138, 97, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				9,
				167,
				[
					["save"]
				],
				[
				[
				]
				],
				[
					"Save",
					0,
					"20pt Open Sans",
					"rgb(90,90,90)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[99, 433, 0, 49, 56, 0, 3.141592741012573, 1, 0.5102040767669678, 0.5, 0, 0, []],
				71,
				164,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
		],
		[
		],
		[]
	]
,	[
		"Model",
		640,
		1136,
		true,
		"Model",
		6302111906056118,
		[
		[
			"Layer 0",
			0,
			4712880691277016,
			true,
			[252, 252, 252],
			false,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 1",
			1,
			5428022123730483,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[0, 264, 0, 640, 705, 0, 0, 1, 0, 0, 0, 0, []],
				70,
				67,
				[
				],
				[
				],
				[
					1,
					2,
					1,
					1,
					640,
					710,
					0,
					0,
					100,
					1,
					"rgba(0,0,0,0.4)",
					100,
					0,
					0,
					0,
					0,
					1,
					"",
					100,
					1,
					"",
					16,
					0,
					"#fcfcfc",
					0,
					0
				]
			]
,			[
				[80, 1056, 0, 160, 160, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				22,
				46,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[560, 1056, 0, 160, 160, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				33,
				47,
				[
					[3]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[400, 1056, 0, 160, 160, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				33,
				48,
				[
					[2]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[240, 1053.5, 0, 160, 165, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				33,
				49,
				[
					[1]
				],
				[
				],
				[
					0,
					"Default",
					2,
					1
				]
			]
,			[
				[80, 1056, 0, 160, 160, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				33,
				68,
				[
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[80, 1051, 0, 70, 70, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				17,
				74,
				[
					[0]
				],
				[
				],
				[
					0,
					"Default",
					1,
					1
				]
			]
,			[
				[240, 1051, 0, 70, 70, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				36,
				121,
				[
				],
				[
				],
				[
					0,
					"Default",
					1,
					1
				]
			]
,			[
				[400, 1051, 0, 70, 70, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				37,
				135,
				[
				],
				[
				],
				[
					0,
					"Default",
					1,
					1
				]
			]
,			[
				[560, 1051, 0, 70, 70, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				148,
				[
				],
				[
				],
				[
					0,
					"Default",
					1,
					1
				]
			]
,			[
				[320, 52, 0, 640, 106, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				34,
				150,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[320, 51, 0, 593, 79, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				9,
				151,
				[
					["heading"]
				],
				[
				[
				]
				],
				[
					"Saved Cards",
					0,
					"26pt Open Sans",
					"rgb(255,255,255)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[320, 191, 0, 673, 262, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				160,
				[
					[0]
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[123, 148, 0, 443, 74, 0, 0, 1, 0, 0, 0, 0, []],
				39,
				161,
				[
					[0]
				],
				[
				],
				[
					"",
					"Search by tags or name.",
					"",
					1,
					1,
					0,
					0,
					0,
					0,
					""
				]
			]
,			[
				[80, 1105, 0, 250, 75, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				77,
				225,
				[
				],
				[
				[
				]
				],
				[
					"Search",
					0,
					"18pt Open Sans",
					"rgb(255,255,255)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[240, 1105, 0, 250, 75, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				77,
				226,
				[
				],
				[
				[
				]
				],
				[
					"Saved",
					0,
					"18pt Open Sans",
					"rgb(255,255,255)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[400, 1105, 0, 250, 75, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				77,
				227,
				[
				],
				[
				[
				]
				],
				[
					"My cards",
					0,
					"18pt Open Sans",
					"rgb(255,255,255)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[560, 1105, 0, 250, 75, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				77,
				228,
				[
				],
				[
				[
				]
				],
				[
					"Settings",
					0,
					"18pt Open Sans",
					"rgb(255,255,255)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[584, 51, 0, 50, 50, 0, 0, 0.5, 0.5, 0.5019011497497559, 0, 0, []],
				87,
				251,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[594, 25, 0, 32, 32, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				91,
				274,
				[
				],
				[
				[
				]
				],
				[
					1,
					"Default",
					0,
					1
				]
			]
,			[
				[595, 25, 0, 200, 30, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				92,
				275,
				[
				],
				[
				[
				]
				],
				[
					"0",
					1,
					"14pt Open Sans Light",
					"rgb(255,255,255)",
					1,
					1,
					1,
					0,
					0
				]
			]
			],
			[			]
		]
		],
		[
		],
		[]
	]
,	[
		"MyCards",
		640,
		1136,
		false,
		"MyCards",
		9805087756833931,
		[
		[
			"Layer 0",
			0,
			2828543299625036,
			true,
			[252, 252, 252],
			false,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[177, 141, 0, 506, 78, 0, 0, 1, 0, 0, 0, 0, []],
				44,
				145,
				[
				],
				[
				],
				[
					"John Gresham",
					1,
					"24pt Open Sans",
					"rgb(90,90,90)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[175, 192, 0, 239, 46, 0, 0, 1, 0, 0, 0, 0, []],
				45,
				149,
				[
				],
				[
				],
				[
					"web developer",
					1,
					"16pt Open Sans",
					"rgb(90,90,90)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[309, 721, 0, 549, 130, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				29,
				190,
				[
				],
				[
				[
				]
				],
				[
					"",
					0,
					"24pt Arial",
					"rgb(255,0,0)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[0, 101, 0, 640, 869, 0, 0, 1, 0, 0, 0, 0, []],
				98,
				294,
				[
					[""]
				],
				[
				],
				[
					1,
					0,
					1,
					1,
					320,
					480,
					0,
					0,
					45,
					1,
					"rgba(0,0,0,0.4)",
					100,
					0,
					0,
					0,
					0,
					1,
					"",
					45,
					1,
					"",
					48,
					0,
					"#fcfcfc",
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"Layer 1",
			1,
			898351650134368,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[320, 51, 0, 640, 106, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				34,
				42,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[80, 1056, 0, 160, 160, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				22,
				56,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[560, 1056, 0, 160, 160, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				33,
				65,
				[
					[3]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[400, 1053.5, 0, 160, 165, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				33,
				63,
				[
					[2]
				],
				[
				],
				[
					0,
					"Default",
					2,
					1
				]
			]
,			[
				[240, 1056, 0, 160, 160, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				33,
				61,
				[
					[1]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[80, 1056, 0, 160, 160, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				33,
				38,
				[
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[80, 1051, 0, 70, 70, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				17,
				57,
				[
					[0]
				],
				[
				],
				[
					0,
					"Default",
					1,
					1
				]
			]
,			[
				[320, 50, 0, 593, 79, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				9,
				55,
				[
					["heading"]
				],
				[
				[
				]
				],
				[
					"My HelloCards",
					0,
					"26pt Open Sans",
					"rgb(255,255,255)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[240, 1051, 0, 70, 70, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				36,
				54,
				[
				],
				[
				],
				[
					0,
					"Default",
					1,
					1
				]
			]
,			[
				[400, 1051, 0, 70, 70, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				37,
				58,
				[
				],
				[
				],
				[
					0,
					"Default",
					1,
					1
				]
			]
,			[
				[560, 1051, 0, 70, 70, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				59,
				[
				],
				[
				],
				[
					0,
					"Default",
					1,
					1
				]
			]
,			[
				[60, 51, 0, 64, 64, 0, 0, 0.5, 0.5, 0.5, 0, 0, []],
				48,
				24,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[80, 1105, 0, 250, 75, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				77,
				115,
				[
				],
				[
				[
				]
				],
				[
					"Search",
					0,
					"18pt Open Sans",
					"rgb(255,255,255)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[240, 1105, 0, 250, 75, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				77,
				138,
				[
				],
				[
				[
				]
				],
				[
					"Saved",
					0,
					"18pt Open Sans",
					"rgb(255,255,255)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[400, 1105, 0, 250, 75, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				77,
				140,
				[
				],
				[
				[
				]
				],
				[
					"My cards",
					0,
					"18pt Open Sans",
					"rgb(255,255,255)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[560, 1105, 0, 250, 75, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				77,
				162,
				[
				],
				[
				[
				]
				],
				[
					"Settings",
					0,
					"18pt Open Sans",
					"rgb(255,255,255)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[584, 51, 0, 50, 50, 0, 0, 0.5, 0.5, 0.5019011497497559, 0, 0, []],
				87,
				250,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[594, 25, 0, 32, 32, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				91,
				159,
				[
				],
				[
				[
				]
				],
				[
					1,
					"Default",
					0,
					1
				]
			]
,			[
				[595, 25, 0, 200, 30, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				92,
				273,
				[
				],
				[
				[
				]
				],
				[
					"0",
					1,
					"14pt Open Sans Light",
					"rgb(255,255,255)",
					1,
					1,
					1,
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"Layer 2",
			2,
			462784941144836,
			false,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[313, 188, 0, 63.77929306030273, 68.12788391113281, 0, 0, 1, 0.5, 0.5021276473999023, 0, 0, []],
				54,
				120,
				[
				],
				[
				],
				[
					1,
					"Default",
					0,
					1
				]
			]
,			[
				[548, 179, 0, 244, 79, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				9,
				123,
				[
					["buttontext"]
				],
				[
				[
				]
				],
				[
					"view",
					0,
					"20pt Open Sans",
					"rgb(255,255,255)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[31, 119, 0, 120, 120, 0, 0, 1, 0, 0, 0, 0, []],
				61,
				141,
				[
					[""]
				],
				[
				[
				],
				[
				]
				],
				[
					0,
					"",
					"border-radius:100%;border: 4px solid #ffffff;"
				]
			]
,			[
				[320, 185, 0, 640, 160, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				42,
				137,
				[
				],
				[
				],
				[
					1,
					"Default",
					0,
					1
				]
			]
,			[
				[546, 180, 0, 99, 49, 0, 0, 1, 0.5020242929458618, 0.5121951103210449, 0, 0, []],
				32,
				122,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
		],
		[
		],
		[]
	]
,	[
		"Setting",
		640,
		1136,
		false,
		"Setting",
		2909272804119645,
		[
		[
			"Layer 0",
			0,
			1463527885259858,
			true,
			[252, 252, 252],
			false,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[448, 179, 0, 73, 25, 0, 0, 1, 0, 0, 0, 0, []],
				88,
				255,
				[
				],
				[
				[
				]
				],
				[
					0,
					0,
					1,
					1,
					"",
					1,
					1,
					""
				]
			]
,			[
				[106, 346, 0, 100, 100, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				93,
				284,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[246, 346, 0, 100, 100, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				93,
				285,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					1,
					1
				]
			]
,			[
				[386, 346, 0, 100, 100, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				93,
				286,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					2,
					1
				]
			]
,			[
				[526, 346, 0, 100, 100, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				93,
				287,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					3,
					1
				]
			]
,			[
				[89, 619, 0, 64, 45, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				94,
				288,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[302, 618, 0, 313, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				289,
				[
					["report"]
				],
				[
				[
				],
				[
				]
				],
				[
					"Report a bug",
					0,
					"26pt Open Sans",
					"rgb(105,105,105)",
					0,
					1,
					1,
					0,
					0
				]
			]
,			[
				[89, 505, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				94,
				290,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					1,
					1
				]
			]
,			[
				[302, 508, 0, 313, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				291,
				[
					["about"]
				],
				[
				[
				],
				[
				]
				],
				[
					"About us",
					0,
					"26pt Open Sans",
					"rgb(105,105,105)",
					0,
					1,
					1,
					0,
					0
				]
			]
,			[
				[484, 191, 0, 313, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				292,
				[
					[""]
				],
				[
				[
				],
				[
				]
				],
				[
					"off             on",
					0,
					"26pt Open Sans",
					"rgb(105,105,105)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[89, 719, 0, 64, 45, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				94,
				295,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					2,
					1
				]
			]
,			[
				[302, 718, 0, 313, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				296,
				[
					["signout"]
				],
				[
				[
				],
				[
				]
				],
				[
					"Logout",
					0,
					"26pt Open Sans",
					"rgb(105,105,105)",
					0,
					1,
					1,
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"Layer 1",
			1,
			498705429333623,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[80, 1056, 0, 160, 160, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				22,
				102,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[80, 1056, 0, 160, 160, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				33,
				103,
				[
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[240, 1056, 0, 160, 160, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				33,
				104,
				[
					[1]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[400, 1056, 0, 160, 160, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				33,
				105,
				[
					[2]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[560, 1053.5, 0, 160, 165, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				33,
				106,
				[
					[3]
				],
				[
				],
				[
					0,
					"Default",
					2,
					1
				]
			]
,			[
				[80, 1051, 0, 70, 70, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				17,
				107,
				[
					[0]
				],
				[
				],
				[
					0,
					"Default",
					1,
					1
				]
			]
,			[
				[320, 52, 0, 640, 106, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				34,
				108,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[320, 51, 0, 593, 79, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				9,
				109,
				[
					["heading"]
				],
				[
				[
				]
				],
				[
					"Settings",
					0,
					"26pt Open Sans",
					"rgb(255,255,255)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[240, 1051, 0, 70, 70, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				36,
				110,
				[
				],
				[
				],
				[
					0,
					"Default",
					1,
					1
				]
			]
,			[
				[400, 1051, 0, 70, 70, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				37,
				111,
				[
				],
				[
				],
				[
					0,
					"Default",
					1,
					1
				]
			]
,			[
				[560, 1051, 0, 70, 70, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				112,
				[
				],
				[
				],
				[
					0,
					"Default",
					1,
					1
				]
			]
,			[
				[80, 1105, 0, 250, 75, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				77,
				217,
				[
				],
				[
				[
				]
				],
				[
					"Search",
					0,
					"18pt Open Sans",
					"rgb(255,255,255)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[240, 1105, 0, 250, 75, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				77,
				218,
				[
				],
				[
				[
				]
				],
				[
					"Saved",
					0,
					"18pt Open Sans",
					"rgb(255,255,255)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[400, 1105, 0, 250, 75, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				77,
				219,
				[
				],
				[
				[
				]
				],
				[
					"My cards",
					0,
					"18pt Open Sans",
					"rgb(255,255,255)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[560, 1105, 0, 250, 75, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				77,
				220,
				[
				],
				[
				[
				]
				],
				[
					"Settings",
					0,
					"18pt Open Sans",
					"rgb(255,255,255)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[584, 51, 0, 50, 50, 0, 0, 0.5, 0.5, 0.5019011497497559, 0, 0, []],
				87,
				252,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[594, 25, 0, 32, 32, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				91,
				276,
				[
				],
				[
				[
				]
				],
				[
					1,
					"Default",
					0,
					1
				]
			]
,			[
				[595, 25, 0, 200, 30, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				92,
				277,
				[
				],
				[
				[
				]
				],
				[
					"0",
					1,
					"14pt Open Sans Light",
					"rgb(255,255,255)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[123, 194, 0, 313, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				282,
				[
					[""]
				],
				[
				[
				],
				[
				]
				],
				[
					"Privacy",
					0,
					"26pt Open Sans",
					"rgb(105,105,105)",
					1,
					1,
					1,
					0,
					0
				]
			]
			],
			[			]
		]
		],
		[
		],
		[]
	]
,	[
		"HelloCard",
		640,
		1136,
		false,
		"HelloCard",
		2170365296701147,
		[
		[
			"Layer 0",
			0,
			2238971064873618,
			true,
			[245, 245, 245],
			false,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[318, 551, 0, 486, 755, 0, 0, 1, 0.5, 0.5006622672080994, 0, 0, []],
				78,
				234,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[317, 660, 0, 399, 67, 0, 0, 1, 0.5012531280517578, 0.5074626803398132, 0, 0, []],
				79,
				130,
				[
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[316, 760, 0, 399, 67, 0, 0, 1, 0.5012531280517578, 0.5074626803398132, 0, 0, []],
				79,
				156,
				[
					[1]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[316, 860, 0, 399, 67, 0, 0, 1, 0.5012531280517578, 0.5074626803398132, 0, 0, []],
				79,
				189,
				[
					[2]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[320, 536, 0, 640, 65, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				9,
				132,
				[
					["designation"]
				],
				[
				[
				]
				],
				[
					"Loading...",
					0,
					"16pt Open Sans",
					"rgb(255,255,255)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[-815, 600, 0, 130, 130, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				50,
				29,
				[
					["facebook"]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-680, 599, 0, 130, 130, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				50,
				34,
				[
					["twitter"]
				],
				[
				],
				[
					0,
					"Default",
					1,
					1
				]
			]
,			[
				[-545, 599, 0, 130, 130, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				50,
				71,
				[
					["linkdin"]
				],
				[
				],
				[
					0,
					"Default",
					2,
					1
				]
			]
,			[
				[-410, 599, 0, 130, 130, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				50,
				114,
				[
					["website"]
				],
				[
				],
				[
					0,
					"Default",
					3,
					1
				]
			]
,			[
				[151, 760, 0, 40, 40, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				47,
				155,
				[
					[5]
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					5,
					1
				]
			]
,			[
				[150, 650, 0, 50, 50, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				47,
				197,
				[
					[6]
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					6,
					1
				]
			]
,			[
				[352, 659, 0, 323, 87, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				9,
				200,
				[
					["number"]
				],
				[
				[
				]
				],
				[
					"Loading...",
					0,
					"20pt Open Sans",
					"rgb(105,105,105)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[354.5, 759, 0, 321, 79, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				9,
				202,
				[
					["email"]
				],
				[
				[
				]
				],
				[
					"Loading...",
					0,
					"16pt Open Sans",
					"rgb(105,105,105)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[320, 492, 0, 640, 71, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				57,
				126,
				[
				],
				[
				],
				[
					"Loading...",
					0,
					"28pt Open Sans",
					"rgb(255,255,255)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[125, 522, 0, 403, 45, 0, 0, 1, 0, 0, 0, 0, []],
				60,
				131,
				[
					["designation"]
				],
				[
				[
				]
				],
				[
					"",
					"Designation & Company",
					"",
					0,
					0,
					0,
					0,
					0,
					0,
					""
				]
			]
,			[
				[197, 639, 0, 289, 37, 0, 0, 1, 0, 0, 0, 0, []],
				60,
				124,
				[
					["number"]
				],
				[
				[
				]
				],
				[
					"",
					"Number",
					"",
					0,
					0,
					0,
					0,
					0,
					0,
					""
				]
			]
,			[
				[193, 740, 0, 313, 37, 0, 0, 1, 0, 0, 0, 0, []],
				60,
				127,
				[
					["email"]
				],
				[
				[
				]
				],
				[
					"",
					"Email",
					"",
					0,
					0,
					0,
					0,
					0,
					0,
					""
				]
			]
,			[
				[246, 283, 0, 150, 150, 0, 0, 1, 0, 0, 0, 0, []],
				61,
				136,
				[
					[""]
				],
				[
				[
				],
				[
				]
				],
				[
					1,
					"http://hellocard.co/hellocard-app/files/phpimg/default.png",
					"border-radius:100px;border: 6px solid #ffffff;"
				]
			]
,			[
				[150, 860, 0, 45, 45, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				47,
				153,
				[
					[7]
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					7,
					1
				]
			]
,			[
				[352, 857, 0, 323, 87, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				9,
				199,
				[
					["company"]
				],
				[
				[
				]
				],
				[
					"Loading...",
					0,
					"20pt Open Sans",
					"rgb(105,105,105)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[193, 840, 0, 313, 37, 0, 0, 1, 0, 0, 0, 0, []],
				60,
				154,
				[
					["company"]
				],
				[
				[
				]
				],
				[
					"",
					"www.example.com",
					"",
					0,
					0,
					0,
					0,
					0,
					0,
					""
				]
			]
,			[
				[493, 230, 0, 50, 50, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				47,
				229,
				[
					[8]
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					8,
					1
				]
			]
			],
			[			]
		]
,		[
			"Layer 1",
			1,
			5120710930600614,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[320, 52, 0, 640, 106, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				34,
				183,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[80, 1056, 0, 160, 160, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				22,
				177,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[80, 1056, 0, 160, 160, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				33,
				178,
				[
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[240, 1056, 0, 160, 160, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				33,
				179,
				[
					[1]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[400, 1056, 0, 160, 160, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				33,
				180,
				[
					[2]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[560, 1056, 0, 160, 160, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				33,
				181,
				[
					[3]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[80, 1051, 0, 70, 70, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				17,
				182,
				[
					[0]
				],
				[
				],
				[
					0,
					"Default",
					1,
					1
				]
			]
,			[
				[320, 230, 0, 300, 79, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				9,
				184,
				[
					["heading"]
				],
				[
				[
				]
				],
				[
					"HelloCard",
					0,
					"28pt Open Sans",
					"rgb(255,255,255)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[240, 1051, 0, 70, 70, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				36,
				185,
				[
				],
				[
				],
				[
					0,
					"Default",
					1,
					1
				]
			]
,			[
				[400, 1051, 0, 70, 70, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				37,
				186,
				[
				],
				[
				],
				[
					0,
					"Default",
					1,
					1
				]
			]
,			[
				[560, 1051, 0, 70, 70, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				187,
				[
				],
				[
				],
				[
					0,
					"Default",
					1,
					1
				]
			]
,			[
				[86.6259765625, 52, 0, 172, 99, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				35,
				188,
				[
				],
				[
				],
				[
					"< Back",
					0,
					"20pt Open Sans",
					"rgb(255,255,255)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[68, 231, 0, 138, 79, 0, 0, 1, 0, 0, 0, 0, []],
				9,
				116,
				[
					["edit"]
				],
				[
				[
				]
				],
				[
					"Edit",
					1,
					"20pt Open Sans",
					"rgb(255,255,255)",
					1,
					1,
					0,
					0,
					0
				]
			]
,			[
				[2602, 16, 0, 50.83138275146484, 54.29716110229492, 0, 0, 1, 0.5, 0.5021276473999023, 0, 0, []],
				64,
				158,
				[
					[""]
				],
				[
				],
				[
					1,
					"Default",
					0,
					1
				]
			]
,			[
				[2143, -325, 0, 65.62773895263672, 65.62773895263672, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				46,
				152,
				[
					[1],
					[""]
				],
				[
				],
				[
					0,
					"Default",
					1,
					1
				]
			]
,			[
				[320, 525, 0, 112.3113174438477, 119.9689102172852, 0, 0, 1, 0.5, 0.5021276473999023, 0, 0, []],
				54,
				134,
				[
				],
				[
				],
				[
					1,
					"Default",
					0,
					1
				]
			]
,			[
				[-355, 469, 0, 572, 200, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				74,
				171,
				[
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-601, 440, 0, 414, 50, 0, 0, 1, 0, 0, 0, 0, []],
				73,
				170,
				[
					[""]
				],
				[
				],
				[
					"",
					"Username",
					"",
					1,
					0,
					0,
					0,
					0,
					0,
					""
				]
			]
,			[
				[-143, 461, 0, 210, 97, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				9,
				174,
				[
					["save"]
				],
				[
				[
				]
				],
				[
					"Save",
					0,
					"20pt Open Sans",
					"rgb(68,187,155)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[-554, 514, 0, 49, 56, 0, 0, 1, 0.5102040767669678, 0.5, 0, 0, []],
				71,
				172,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[117, 373, 0, 70, 70, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				41,
				176,
				[
					[1]
				],
				[
				],
				[
					0,
					"Default",
					3,
					1
				]
			]
,			[
				[114, 375, 0, 237, 112, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				75,
				175,
				[
				],
				[
				],
				[
					"0",
					0,
					"26pt Open Sans",
					"rgb(255,255,255)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[80, 1105, 0, 250, 75, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				77,
				230,
				[
				],
				[
				[
				]
				],
				[
					"Search",
					0,
					"18pt Open Sans",
					"rgb(255,255,255)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[240, 1105, 0, 250, 75, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				77,
				231,
				[
				],
				[
				[
				]
				],
				[
					"Saved",
					0,
					"18pt Open Sans",
					"rgb(255,255,255)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[400, 1105, 0, 250, 75, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				77,
				232,
				[
				],
				[
				[
				]
				],
				[
					"My cards",
					0,
					"18pt Open Sans",
					"rgb(255,255,255)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[560, 1105, 0, 250, 75, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				77,
				233,
				[
				],
				[
				[
				]
				],
				[
					"Settings",
					0,
					"18pt Open Sans",
					"rgb(255,255,255)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[-455, 230, 0, 50, 50, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				80,
				236,
				[
					[1],
					[""]
				],
				[
				],
				[
					0,
					"Default",
					1,
					1
				]
			]
,			[
				[141, 226, 0, 50, 50, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				47,
				243,
				[
					[10]
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					10,
					1
				]
			]
,			[
				[320, 54, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				85,
				244,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[584, 51, 0, 50, 50, 0, 0, 0.5, 0.5, 0.5019011497497559, 0, 0, []],
				87,
				253,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[594, 25, 0, 32, 32, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				91,
				278,
				[
				],
				[
				[
				]
				],
				[
					1,
					"Default",
					0,
					1
				]
			]
,			[
				[595, 25, 0, 200, 30, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				92,
				279,
				[
				],
				[
				[
				]
				],
				[
					"0",
					1,
					"14pt Open Sans Light",
					"rgb(255,255,255)",
					1,
					1,
					1,
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"Layer 2",
			2,
			5779915734090026,
			false,
			[0, 0, 0],
			false,
			1,
			1,
			0.5,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 3",
			3,
			9200435090524282,
			false,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[2000, 420, 0, 580, 690, 0, 0, 1, 0, 0, 0, 0, []],
				68,
				50,
				[
				],
				[
				],
				[
					1,
					"",
					""
				]
			]
,			[
				[2447, 108, 0, 64, 64, 0, 0, 1, 0.5020242929458618, 0.5121951103210449, 0, 0, []],
				32,
				53,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Layer 4",
			4,
			8307755352008395,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[2412, 176, 0, 64, 64, 0, 0, 1, 0, 0, 0, 0, []],
				9,
				51,
				[
					["close"]
				],
				[
				[
				]
				],
				[
					"X",
					0,
					"26pt Open Sans",
					"rgb(255,255,255)",
					1,
					1,
					1,
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"Layer 5",
			5,
			8795320082340077,
			false,
			[0, 0, 0],
			false,
			1,
			1,
			0.5,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 6",
			6,
			7506280987394647,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[320, 556, 0, 516, 777, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				81,
				235,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[320, 213, 0, 210, 69, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				82,
				237,
				[
				],
				[
				[
				]
				],
				[
					"Share",
					0,
					"28pt Open Sans",
					"rgb(0,0,0)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[320, 530, 0, 258, 81, 0, 0, 1, 0.5, 0.5061728358268738, 0, 0, []],
				83,
				238,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[320, 630, 0, 258, 81, 0, 0, 1, 0.5, 0.5061728358268738, 0, 0, []],
				83,
				239,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					1,
					1
				]
			]
,			[
				[320, 730, 0, 258, 81, 0, 0, 1, 0.5, 0.5061728358268738, 0, 0, []],
				83,
				240,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					2,
					1
				]
			]
,			[
				[320, 830, 0, 258, 81, 0, 0, 1, 0.5, 0.5061728358268738, 0, 0, []],
				83,
				241,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					3,
					1
				]
			]
,			[
				[559, 133, 0, 52.4404411315918, 52.4404411315918, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				84,
				242,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
		],
		[
		],
		[]
	]
,	[
		"Saved",
		640,
		1800,
		false,
		"Saved",
		5560407591488043,
		[
		[
			"Layer 0",
			0,
			4548042142767765,
			true,
			[255, 255, 255],
			false,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 1",
			1,
			5452537766804814,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 2",
			2,
			2338879105586428,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[802, 118, 0, 120, 120, 0, 0, 1, 0, 0, 0, 0, []],
				65,
				144,
				[
				],
				[
				],
				[
					1,
					"",
					""
				]
			]
,			[
				[1000, 180, 0, 450, 140, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				66,
				146,
				[
					[0]
				],
				[
				],
				[
					"",
					0,
					"20pt Open Sans Light",
					"rgb(255,255,255)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[801, 283, 0, 120, 120, 0, 0, 1, 0, 0, 0, 0, []],
				61,
				147,
				[
					[""]
				],
				[
				[
				],
				[
				]
				],
				[
					0,
					"",
					""
				]
			]
,			[
				[1096, 180, 0, 640, 151, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				42,
				157,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[951, 150, 0, 311.2876281738281, 46.69314575195313, 0, 0, 1, 0, 0, 0, 0, []],
				44,
				165,
				[
				],
				[
				],
				[
					"John Gresham",
					0,
					"24pt Open Sans Light",
					"rgb(75,75,75)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[951, 200, 0, 239, 46, 0, 0, 1, 0, 0, 0, 0, []],
				45,
				169,
				[
				],
				[
				],
				[
					"web developer",
					0,
					"16pt Open Sans Light",
					"rgb(75,75,75)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[1301, 180, 0, 65.62773895263672, 65.62773895263672, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				46,
				173,
				[
					[1],
					[""]
				],
				[
				],
				[
					0,
					"Default",
					1,
					1
				]
			]
			],
			[			]
		]
,		[
			"Layer 3",
			3,
			5572346207973189,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[80, 1056, 0, 160, 160, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				22,
				91,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[560, 1056, 0, 160, 160, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				33,
				95,
				[
					[3]
				],
				[
				],
				[
					0,
					"Default",
					6,
					1
				]
			]
,			[
				[400, 1056, 0, 160, 160, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				33,
				94,
				[
					[2]
				],
				[
				],
				[
					0,
					"Default",
					5,
					1
				]
			]
,			[
				[240, 1056, 0, 160, 160, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				33,
				93,
				[
					[1]
				],
				[
				],
				[
					0,
					"Default",
					2,
					1
				]
			]
,			[
				[80, 1056, 0, 160, 160, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				33,
				92,
				[
					[0]
				],
				[
				],
				[
					0,
					"Default",
					3,
					1
				]
			]
,			[
				[80, 1056, 0, 70, 70, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				17,
				96,
				[
					[0]
				],
				[
				],
				[
					0,
					"Default",
					1,
					1
				]
			]
,			[
				[319.5, 52, 0, 643, 106, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				34,
				97,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[320, 51, 0, 593, 79, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				9,
				98,
				[
					[""]
				],
				[
				[
				]
				],
				[
					"Saved Cards",
					0,
					"26pt Open Sans",
					"rgb(153,153,153)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[240, 1056, 0, 70, 70, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				36,
				99,
				[
				],
				[
				],
				[
					0,
					"Default",
					1,
					1
				]
			]
,			[
				[400, 1056, 0, 70, 70, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				37,
				100,
				[
				],
				[
				],
				[
					0,
					"Default",
					1,
					1
				]
			]
,			[
				[560, 1056, 0, 70, 70, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				101,
				[
				],
				[
				],
				[
					0,
					"Default",
					1,
					1
				]
			]
,			[
				[612, 454, 0, 25, 222, 0, 0, 1, 0.1599999964237213, 1, 0, 0, []],
				67,
				143,
				[
					[0],
					[0],
					[0]
				],
				[
				[
					1
				],
				[
					0,
					0,
					0,
					0,
					1,
					1
				],
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[866, 348, 0, 50.83138275146484, 54.29716110229492, 0, 0, 1, 0.5, 0.5021276473999023, 0, 0, []],
				64,
				66,
				[
					[""]
				],
				[
				],
				[
					1,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
		],
		[
		],
		[]
	]
,	[
		"Notifications",
		640,
		1136,
		false,
		"Notifications",
		4203711600822629,
		[
		[
			"Layer 0",
			0,
			9993093014860774,
			true,
			[245, 245, 245],
			false,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[80, 1056, 0, 160, 160, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				22,
				257,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[80, 1056, 0, 160, 160, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				33,
				258,
				[
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[240, 1056, 0, 160, 160, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				33,
				259,
				[
					[1]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[400, 1056, 0, 160, 160, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				33,
				260,
				[
					[2]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[560, 1056, 0, 160, 160, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				33,
				261,
				[
					[3]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[80, 1051, 0, 70, 70, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				17,
				262,
				[
					[0]
				],
				[
				],
				[
					0,
					"Default",
					1,
					1
				]
			]
,			[
				[240, 1051, 0, 70, 70, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				36,
				263,
				[
				],
				[
				],
				[
					0,
					"Default",
					1,
					1
				]
			]
,			[
				[400, 1051, 0, 70, 70, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				37,
				264,
				[
				],
				[
				],
				[
					0,
					"Default",
					1,
					1
				]
			]
,			[
				[560, 1051, 0, 70, 70, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				265,
				[
				],
				[
				],
				[
					0,
					"Default",
					1,
					1
				]
			]
,			[
				[80, 1105, 0, 250, 75, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				77,
				266,
				[
				],
				[
				[
				]
				],
				[
					"Search",
					0,
					"18pt Open Sans",
					"rgb(255,255,255)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[240, 1105, 0, 250, 75, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				77,
				267,
				[
				],
				[
				[
				]
				],
				[
					"Saved",
					0,
					"18pt Open Sans",
					"rgb(255,255,255)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[400, 1105, 0, 250, 75, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				77,
				268,
				[
				],
				[
				[
				]
				],
				[
					"My cards",
					0,
					"18pt Open Sans",
					"rgb(255,255,255)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[560, 1105, 0, 250, 75, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				77,
				269,
				[
				],
				[
				[
				]
				],
				[
					"Settings",
					0,
					"18pt Open Sans",
					"rgb(255,255,255)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[320, 52, 0, 640, 106, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				34,
				270,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[320, 51, 0, 593, 79, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				9,
				271,
				[
					["heading"]
				],
				[
				[
				]
				],
				[
					"Notifications",
					0,
					"26pt Open Sans",
					"rgb(255,255,255)",
					1,
					1,
					1,
					0,
					0
				]
			]
,			[
				[0, 107, 0, 640, 864, 0, 0, 1, 0, 0, 0, 0, []],
				89,
				272,
				[
					[""]
				],
				[
				],
				[
					1,
					2,
					1,
					1,
					640,
					864,
					0,
					0,
					45,
					1,
					"rgba(0,0,0,0.4)",
					100,
					0,
					0,
					0,
					0,
					1,
					"",
					45,
					1,
					"",
					48,
					0,
					"#fcfcfc",
					0,
					0
				]
			]
			],
			[			]
		]
		],
		[
		],
		[]
	]
	],
	[
	[
		"Login",
		[
		[
			2,
			"Global",
			false
		]
,		[
			0,
			null,
			false,
			null,
			764355404975219,
			[
			[
				12,
				cr.plugins_.TextBox.prototype.cnds.OnTextChanged,
				null,
				1,
				false,
				false,
				false,
				7631913754046509,
				false
			]
			],
			[
			[
				0,
				cr.plugins_.WebStorage.prototype.acts.StoreLocal,
				null,
				7306597369331461,
				false
				,[
				[
					1,
					[
						2,
						"username"
					]
				]
,				[
					7,
					[
						20,
						12,
						cr.plugins_.TextBox.prototype.exps.Text,
						true,
						null
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			7270968039629285,
			[
			[
				14,
				cr.plugins_.TextBox.prototype.cnds.OnTextChanged,
				null,
				1,
				false,
				false,
				false,
				741745263405054,
				false
			]
			],
			[
			[
				0,
				cr.plugins_.WebStorage.prototype.acts.StoreLocal,
				null,
				3561390907768596,
				false
				,[
				[
					1,
					[
						2,
						"fullname"
					]
				]
,				[
					7,
					[
						20,
						14,
						cr.plugins_.TextBox.prototype.exps.Text,
						true,
						null
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			true,
			null,
			3487918346772583,
			[
			[
				-1,
				cr.system_object.prototype.cnds.Compare,
				null,
				0,
				false,
				false,
				false,
				870156528949288,
				false
				,[
				[
					7,
					[
						19,
						cr.system_object.prototype.exps.len
						,[
[
							20,
							12,
							cr.plugins_.TextBox.prototype.exps.Text,
							true,
							null
						]
						]
					]
				]
,				[
					8,
					2
				]
,				[
					7,
					[
						0,
						4
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.Compare,
				null,
				0,
				false,
				false,
				false,
				7630712487966991,
				false
				,[
				[
					7,
					[
						19,
						cr.system_object.prototype.exps.len
						,[
[
							20,
							14,
							cr.plugins_.TextBox.prototype.exps.Text,
							true,
							null
						]
						]
					]
				]
,				[
					8,
					2
				]
,				[
					7,
					[
						0,
						6
					]
				]
				]
			]
			],
			[
			[
				32,
				cr.plugins_.Sprite.prototype.acts.SetOpacity,
				null,
				7476778353052139,
				false
				,[
				[
					0,
					[
						0,
						50
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			6036353478647246,
			[
			[
				1,
				cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
				null,
				1,
				false,
				false,
				false,
				2495702963822641,
				false
			]
,			[
				1,
				cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
				null,
				0,
				false,
				false,
				false,
				4042775076306996,
				false
				,[
				[
					4,
					32
				]
				]
			]
,			[
				32,
				cr.plugins_.Sprite.prototype.cnds.CompareOpacity,
				null,
				0,
				false,
				false,
				false,
				9714534195251622,
				false
				,[
				[
					8,
					4
				]
,				[
					0,
					[
						0,
						50
					]
				]
				]
			]
			],
			[
			[
				29,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				1052956159334366,
				false
				,[
				[
					7,
					[
						2,
						""
					]
				]
				]
			]
,			[
				5,
				cr.plugins_.AJAX.prototype.acts.Post,
				null,
				2395139998752383,
				false
				,[
				[
					1,
					[
						2,
						"Login"
					]
				]
,				[
					1,
					[
						10,
						[
							10,
							[
								23,
								"host"
							]
							,[
								2,
								"login.php?hcid="
							]
						]
						,[
							20,
							12,
							cr.plugins_.TextBox.prototype.exps.Text,
							true,
							null
						]
					]
				]
,				[
					1,
					[
						2,
						""
					]
				]
,				[
					1,
					[
						2,
						"POST"
					]
				]
				]
			]
,			[
				54,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				9016692955473442,
				false
				,[
				[
					3,
					1
				]
				]
			]
,			[
				12,
				cr.plugins_.TextBox.prototype.acts.SetEnabled,
				null,
				8848494803510489,
				false
				,[
				[
					3,
					0
				]
				]
			]
,			[
				14,
				cr.plugins_.TextBox.prototype.acts.SetEnabled,
				null,
				5873440813229246,
				false
				,[
				[
					3,
					0
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			405756113026744,
			[
			[
				1,
				cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
				null,
				1,
				false,
				false,
				false,
				929186002495938,
				false
			]
,			[
				1,
				cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
				null,
				0,
				false,
				false,
				false,
				9235059676996869,
				false
				,[
				[
					4,
					9
				]
				]
			]
,			[
				9,
				cr.plugins_.Text.prototype.cnds.CompareInstanceVar,
				null,
				0,
				false,
				false,
				false,
				9901699910499637,
				false
				,[
				[
					10,
					0
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						2,
						"fp"
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.GoToLayout,
				null,
				1174747103181126,
				false
				,[
				[
					6,
					"forgotPassword"
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			2447007706287929,
			[
			[
				5,
				cr.plugins_.AJAX.prototype.cnds.OnComplete,
				null,
				1,
				false,
				false,
				false,
				5116322504048379,
				false
				,[
				[
					1,
					[
						2,
						"Login"
					]
				]
				]
			]
			],
			[
			[
				12,
				cr.plugins_.TextBox.prototype.acts.SetEnabled,
				null,
				6802418989204509,
				false
				,[
				[
					3,
					1
				]
				]
			]
,			[
				14,
				cr.plugins_.TextBox.prototype.acts.SetEnabled,
				null,
				7233550943455167,
				false
				,[
				[
					3,
					1
				]
				]
			]
,			[
				54,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				9089965671961594,
				false
				,[
				[
					3,
					0
				]
				]
			]
			]
			,[
			[
				0,
				null,
				false,
				null,
				1018112446951252,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					7514978202975562,
					false
					,[
					[
						7,
						[
							20,
							5,
							cr.plugins_.AJAX.prototype.exps.LastData,
							true,
							null
						]
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							""
						]
					]
					]
				]
				],
				[
				[
					29,
					cr.plugins_.Text.prototype.acts.SetText,
					null,
					3372289671771064,
					false
					,[
					[
						7,
						[
							2,
							"Error: Retry.!"
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				5962241202213742,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Else,
					null,
					0,
					false,
					false,
					false,
					476828718167527,
					false
				]
,				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					1993709179284285,
					false
					,[
					[
						7,
						[
							20,
							5,
							cr.plugins_.AJAX.prototype.exps.LastData,
							true,
							null
						]
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							20,
							14,
							cr.plugins_.TextBox.prototype.exps.Text,
							true,
							null
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					2111171430154064,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						5234822663788153,
						false
						,[
						[
							7,
							[
								19,
								cr.system_object.prototype.exps.find
								,[
[
									20,
									12,
									cr.plugins_.TextBox.prototype.exps.Text,
									true,
									null
								]
,[
									2,
									"@"
								]
								]
							]
						]
,						[
							8,
							2
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						5,
						cr.plugins_.AJAX.prototype.acts.Post,
						null,
						7010751897430051,
						false
						,[
						[
							1,
							[
								2,
								"retrieve"
							]
						]
,						[
							1,
							[
								10,
								[
									10,
									[
										23,
										"host"
									]
									,[
										2,
										"retrieve.php?&email=&name=&contact=&hcid="
									]
								]
								,[
									20,
									12,
									cr.plugins_.TextBox.prototype.exps.Text,
									true,
									null
								]
							]
						]
,						[
							1,
							[
								2,
								""
							]
						]
,						[
							1,
							[
								2,
								"POST"
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					2619797299767942,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						3464847643759015,
						false
						,[
						[
							7,
							[
								19,
								cr.system_object.prototype.exps.len
								,[
[
									20,
									12,
									cr.plugins_.TextBox.prototype.exps.Text,
									true,
									null
								]
								]
							]
						]
,						[
							8,
							4
						]
,						[
							7,
							[
								0,
								4
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						559042062135344,
						false
						,[
						[
							7,
							[
								19,
								cr.system_object.prototype.exps.find
								,[
[
									20,
									12,
									cr.plugins_.TextBox.prototype.exps.Text,
									true,
									null
								]
,[
									2,
									"@"
								]
								]
							]
						]
,						[
							8,
							4
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						9092951035531887,
						false
						,[
						[
							7,
							[
								19,
								cr.system_object.prototype.exps.find
								,[
[
									20,
									12,
									cr.plugins_.TextBox.prototype.exps.Text,
									true,
									null
								]
,[
									2,
									"."
								]
								]
							]
						]
,						[
							8,
							4
						]
,						[
							7,
							[
								0,
								3
							]
						]
						]
					]
					],
					[
					[
						5,
						cr.plugins_.AJAX.prototype.acts.Post,
						null,
						4821592616349504,
						false
						,[
						[
							1,
							[
								2,
								"retrieve"
							]
						]
,						[
							1,
							[
								10,
								[
									10,
									[
										23,
										"host"
									]
									,[
										2,
										"retrieve.php?&hcid=&name&contact=&email="
									]
								]
								,[
									20,
									12,
									cr.plugins_.TextBox.prototype.exps.Text,
									true,
									null
								]
							]
						]
,						[
							1,
							[
								2,
								""
							]
						]
,						[
							1,
							[
								2,
								"POST"
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				2513922501178286,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Else,
					null,
					0,
					false,
					false,
					false,
					4992106624581695,
					false
				]
,				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					6600510704367034,
					false
					,[
					[
						7,
						[
							20,
							5,
							cr.plugins_.AJAX.prototype.exps.LastData,
							true,
							null
						]
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"0"
						]
					]
					]
				]
				],
				[
				[
					29,
					cr.plugins_.Text.prototype.acts.SetText,
					null,
					2940349930034369,
					false
					,[
					[
						7,
						[
							2,
							"Please verify by clicking the confirmation link sent to ur mail id or click here to resend."
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8409443634242872,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Else,
					null,
					0,
					false,
					false,
					false,
					904837110545312,
					false
				]
,				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					2381928489744454,
					false
					,[
					[
						7,
						[
							20,
							5,
							cr.plugins_.AJAX.prototype.exps.LastData,
							true,
							null
						]
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"1"
						]
					]
					]
				]
				],
				[
				[
					29,
					cr.plugins_.Text.prototype.acts.SetText,
					null,
					9133660134058272,
					false
					,[
					[
						7,
						[
							2,
							"Error: no such user found.!"
						]
					]
					]
				]
,				[
					12,
					cr.plugins_.TextBox.prototype.acts.SetFocus,
					null,
					106802457191758,
					false
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9456638377038865,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Else,
					null,
					0,
					false,
					false,
					false,
					6290343321028494,
					false
				]
,				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					6528521242177433,
					false
					,[
					[
						7,
						[
							19,
							cr.system_object.prototype.exps.len
							,[
[
								20,
								5,
								cr.plugins_.AJAX.prototype.exps.LastData,
								true,
								null
							]
							]
						]
					]
,					[
						8,
						3
					]
,					[
						7,
						[
							0,
							15
						]
					]
					]
				]
				],
				[
				[
					29,
					cr.plugins_.Text.prototype.acts.SetText,
					null,
					9693190955704783,
					false
					,[
					[
						7,
						[
							2,
							"Error: incorrect password.!"
						]
					]
					]
				]
,				[
					14,
					cr.plugins_.TextBox.prototype.acts.SetFocus,
					null,
					4341519982775242,
					false
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6645828776609481,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Else,
					null,
					0,
					false,
					false,
					false,
					2564362136397945,
					false
				]
,				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					2471401168253403,
					false
					,[
					[
						7,
						[
							19,
							cr.system_object.prototype.exps.len
							,[
[
								20,
								5,
								cr.plugins_.AJAX.prototype.exps.LastData,
								true,
								null
							]
							]
						]
					]
,					[
						8,
						4
					]
,					[
						7,
						[
							0,
							15
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					3300875422716047,
					false
					,[
					[
						7,
						[
							19,
							cr.system_object.prototype.exps.len
							,[
[
								20,
								5,
								cr.plugins_.AJAX.prototype.exps.LastData,
								true,
								null
							]
							]
						]
					]
,					[
						8,
						2
					]
,					[
						7,
						[
							0,
							75
						]
					]
					]
				]
				],
				[
				[
					29,
					cr.plugins_.Text.prototype.acts.SetText,
					null,
					9838833771431464,
					false
					,[
					[
						7,
						[
							10,
							[
								2,
								"Error: "
							]
							,[
								20,
								5,
								cr.plugins_.AJAX.prototype.exps.LastData,
								true,
								null
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				5062863422195281,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Else,
					null,
					0,
					false,
					false,
					false,
					4598912734779994,
					false
				]
				],
				[
				[
					29,
					cr.plugins_.Text.prototype.acts.SetText,
					null,
					7530136826689022,
					false
					,[
					[
						7,
						[
							2,
							"Error: try logging in after sometime.!"
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			692022960787273,
			[
			[
				5,
				cr.plugins_.AJAX.prototype.cnds.OnComplete,
				null,
				1,
				false,
				false,
				false,
				7308503727978098,
				false
				,[
				[
					1,
					[
						2,
						"retrieve"
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.Compare,
				null,
				0,
				false,
				false,
				false,
				1475511515528136,
				false
				,[
				[
					7,
					[
						19,
						cr.system_object.prototype.exps.len
						,[
[
							20,
							5,
							cr.plugins_.AJAX.prototype.exps.LastData,
							true,
							null
						]
						]
					]
				]
,				[
					8,
					1
				]
,				[
					7,
					[
						2,
						""
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.Compare,
				null,
				0,
				false,
				false,
				false,
				8039709470064835,
				false
				,[
				[
					7,
					[
						19,
						cr.system_object.prototype.exps.find
						,[
[
							19,
							cr.system_object.prototype.exps.tokenat
							,[
[
								20,
								5,
								cr.plugins_.AJAX.prototype.exps.LastData,
								true,
								null
							]
,[
								0,
								0
							]
,[
								2,
								"|"
							]
							]
						]
,[
							2,
							"@"
						]
						]
					]
				]
,				[
					8,
					2
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
			],
			[
			[
				0,
				cr.plugins_.WebStorage.prototype.acts.StoreLocal,
				null,
				7700823247174848,
				false
				,[
				[
					1,
					[
						2,
						"hcid"
					]
				]
,				[
					7,
					[
						19,
						cr.system_object.prototype.exps.tokenat
						,[
[
							20,
							5,
							cr.plugins_.AJAX.prototype.exps.LastData,
							true,
							null
						]
,[
							0,
							0
						]
,[
							2,
							"|"
						]
						]
					]
				]
				]
			]
,			[
				0,
				cr.plugins_.WebStorage.prototype.acts.StoreLocal,
				null,
				7842806864235265,
				false
				,[
				[
					1,
					[
						2,
						"fullname"
					]
				]
,				[
					7,
					[
						19,
						cr.system_object.prototype.exps.tokenat
						,[
[
							20,
							5,
							cr.plugins_.AJAX.prototype.exps.LastData,
							true,
							null
						]
,[
							0,
							1
						]
,[
							2,
							"|"
						]
						]
					]
				]
				]
			]
,			[
				0,
				cr.plugins_.WebStorage.prototype.acts.StoreLocal,
				null,
				5742276334338641,
				false
				,[
				[
					1,
					[
						2,
						"designation"
					]
				]
,				[
					7,
					[
						19,
						cr.system_object.prototype.exps.tokenat
						,[
[
							20,
							5,
							cr.plugins_.AJAX.prototype.exps.LastData,
							true,
							null
						]
,[
							0,
							2
						]
,[
							2,
							"|"
						]
						]
					]
				]
				]
			]
,			[
				0,
				cr.plugins_.WebStorage.prototype.acts.StoreLocal,
				null,
				8909013216894674,
				false
				,[
				[
					1,
					[
						2,
						"company"
					]
				]
,				[
					7,
					[
						19,
						cr.system_object.prototype.exps.tokenat
						,[
[
							20,
							5,
							cr.plugins_.AJAX.prototype.exps.LastData,
							true,
							null
						]
,[
							0,
							3
						]
,[
							2,
							"|"
						]
						]
					]
				]
				]
			]
,			[
				0,
				cr.plugins_.WebStorage.prototype.acts.StoreLocal,
				null,
				3412910392246355,
				false
				,[
				[
					1,
					[
						2,
						"contact"
					]
				]
,				[
					7,
					[
						19,
						cr.system_object.prototype.exps.tokenat
						,[
[
							20,
							5,
							cr.plugins_.AJAX.prototype.exps.LastData,
							true,
							null
						]
,[
							0,
							4
						]
,[
							2,
							"|"
						]
						]
					]
				]
				]
			]
,			[
				0,
				cr.plugins_.WebStorage.prototype.acts.StoreLocal,
				null,
				1167368846186415,
				false
				,[
				[
					1,
					[
						2,
						"email"
					]
				]
,				[
					7,
					[
						19,
						cr.system_object.prototype.exps.tokenat
						,[
[
							20,
							5,
							cr.plugins_.AJAX.prototype.exps.LastData,
							true,
							null
						]
,[
							0,
							5
						]
,[
							2,
							"|"
						]
						]
					]
				]
				]
			]
,			[
				0,
				cr.plugins_.WebStorage.prototype.acts.StoreLocal,
				null,
				4973344150137851,
				false
				,[
				[
					1,
					[
						2,
						"propic"
					]
				]
,				[
					7,
					[
						19,
						cr.system_object.prototype.exps.tokenat
						,[
[
							20,
							5,
							cr.plugins_.AJAX.prototype.exps.LastData,
							true,
							null
						]
,[
							0,
							6
						]
,[
							2,
							"|"
						]
						]
					]
				]
				]
			]
,			[
				0,
				cr.plugins_.WebStorage.prototype.acts.StoreLocal,
				null,
				4588694345718901,
				false
				,[
				[
					1,
					[
						2,
						"login"
					]
				]
,				[
					7,
					[
						2,
						"1"
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			1167769998869629,
			[
			[
				0,
				cr.plugins_.WebStorage.prototype.cnds.CompareKeyText,
				null,
				0,
				false,
				false,
				false,
				6173913674479,
				false
				,[
				[
					1,
					[
						2,
						"login"
					]
				]
,				[
					1,
					[
						2,
						"1"
					]
				]
,				[
					3,
					0
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.Compare,
				null,
				0,
				false,
				false,
				false,
				8078282933337747,
				false
				,[
				[
					7,
					[
						20,
						0,
						cr.plugins_.WebStorage.prototype.exps.LocalValue,
						true,
						null
						,[
[
							2,
							"hcid"
						]
						]
					]
				]
,				[
					8,
					1
				]
,				[
					7,
					[
						2,
						""
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.GoToLayout,
				null,
				3530672962945714,
				false
				,[
				[
					6,
					"MyCards"
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			3105668448850851,
			[
			[
				1,
				cr.plugins_.Touch.prototype.cnds.OnTouchObject,
				null,
				1,
				false,
				false,
				false,
				6669482881760174,
				false
				,[
				[
					4,
					29
				]
				]
			]
,			[
				29,
				cr.plugins_.Text.prototype.cnds.CompareText,
				null,
				0,
				false,
				false,
				false,
				3762408157377537,
				false
				,[
				[
					1,
					[
						2,
						"Please verify by clicking the confirmation link sent to ur mail id or click here to resend."
					]
				]
,				[
					3,
					0
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				1725856371952891,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					1373942510968923,
					false
					,[
					[
						7,
						[
							19,
							cr.system_object.prototype.exps.find
							,[
[
								20,
								12,
								cr.plugins_.TextBox.prototype.exps.Text,
								true,
								null
							]
,[
								2,
								"@"
							]
							]
						]
					]
,					[
						8,
						2
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					5,
					cr.plugins_.AJAX.prototype.acts.Post,
					null,
					1346642695278222,
					false
					,[
					[
						1,
						[
							2,
							"verify"
						]
					]
,					[
						1,
						[
							10,
							[
								10,
								[
									10,
									[
										23,
										"host"
									]
									,[
										2,
										"verify.php?&hcid="
									]
								]
								,[
									20,
									12,
									cr.plugins_.TextBox.prototype.exps.Text,
									true,
									null
								]
							]
							,[
								2,
								"&mail=yes"
							]
						]
					]
,					[
						1,
						[
							2,
							""
						]
					]
,					[
						1,
						[
							2,
							"POST"
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4506607070608913,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					7417614538389377,
					false
					,[
					[
						7,
						[
							19,
							cr.system_object.prototype.exps.len
							,[
[
								20,
								12,
								cr.plugins_.TextBox.prototype.exps.Text,
								true,
								null
							]
							]
						]
					]
,					[
						8,
						4
					]
,					[
						7,
						[
							0,
							4
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					2444337398506545,
					false
					,[
					[
						7,
						[
							19,
							cr.system_object.prototype.exps.find
							,[
[
								20,
								12,
								cr.plugins_.TextBox.prototype.exps.Text,
								true,
								null
							]
,[
								2,
								"@"
							]
							]
						]
					]
,					[
						8,
						4
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					1383110054272883,
					false
					,[
					[
						7,
						[
							19,
							cr.system_object.prototype.exps.find
							,[
[
								20,
								12,
								cr.plugins_.TextBox.prototype.exps.Text,
								true,
								null
							]
,[
								2,
								"."
							]
							]
						]
					]
,					[
						8,
						4
					]
,					[
						7,
						[
							0,
							3
						]
					]
					]
				]
				],
				[
				[
					5,
					cr.plugins_.AJAX.prototype.acts.Post,
					null,
					579187249783226,
					false
					,[
					[
						1,
						[
							2,
							"verify"
						]
					]
,					[
						1,
						[
							10,
							[
								10,
								[
									10,
									[
										23,
										"host"
									]
									,[
										2,
										"verify.php?&hcid="
									]
								]
								,[
									20,
									12,
									cr.plugins_.TextBox.prototype.exps.Text,
									true,
									null
								]
							]
							,[
								2,
								"&mail=yes"
							]
						]
					]
,					[
						1,
						[
							2,
							""
						]
					]
,					[
						1,
						[
							2,
							"POST"
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			325778713893538,
			[
			[
				5,
				cr.plugins_.AJAX.prototype.cnds.OnComplete,
				null,
				1,
				false,
				false,
				false,
				7801896701444546,
				false
				,[
				[
					1,
					[
						2,
						"verify"
					]
				]
				]
			]
			],
			[
			[
				29,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				6830655590758,
				false
				,[
				[
					7,
					[
						2,
						"Verification Mail Sent!"
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			6776988473597171,
			[
			[
				1,
				cr.plugins_.Touch.prototype.cnds.OnTouchObject,
				null,
				1,
				false,
				false,
				false,
				9978016085139258,
				false
				,[
				[
					4,
					35
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.GoToLayout,
				null,
				8026985433578927,
				false
				,[
				[
					6,
					"mainLogin"
				]
				]
			]
			]
		]
,		[
			0,
			[true, "responsive"],
			false,
			null,
			5610773081774741,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				5610773081774741,
				false
				,[
				[
					1,
					[
						2,
						"responsive"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				4099922395473512,
				[
				[
					-1,
					cr.system_object.prototype.cnds.EveryTick,
					null,
					0,
					false,
					false,
					false,
					8208514485597372,
					false
				]
				],
				[
				[
					29,
					cr.plugins_.Text.prototype.acts.SetY,
					null,
					8182072015042552,
					false
					,[
					[
						0,
						[
							4,
							[
								4,
								[
									20,
									14,
									cr.plugins_.TextBox.prototype.exps.Y,
									false,
									null
								]
								,[
									20,
									14,
									cr.plugins_.TextBox.prototype.exps.Height,
									false,
									null
								]
							]
							,[
								0,
								50
							]
						]
					]
					]
				]
,				[
					8,
					cr.plugins_.Sprite.prototype.acts.SetX,
					null,
					2790845318186548,
					false
					,[
					[
						0,
						[
							7,
							[
								19,
								cr.system_object.prototype.exps.viewportright
								,[
[
									0,
									0
								]
								]
							]
							,[
								0,
								2
							]
						]
					]
					]
				]
,				[
					62,
					cr.plugins_.Sprite.prototype.acts.SetPos,
					null,
					2311239503906892,
					false
					,[
					[
						0,
						[
							5,
							[
								5,
								[
									19,
									cr.system_object.prototype.exps.viewportright
									,[
[
										0,
										0
									]
									]
								]
								,[
									7,
									[
										20,
										62,
										cr.plugins_.Sprite.prototype.exps.Width,
										false,
										null
									]
									,[
										0,
										2
									]
								]
							]
							,[
								0,
								50
							]
						]
					]
,					[
						0,
						[
							20,
							34,
							cr.plugins_.Sprite.prototype.exps.Y,
							false,
							null
						]
					]
					]
				]
,				[
					32,
					cr.plugins_.Sprite.prototype.acts.SetPos,
					null,
					9608624405735832,
					false
					,[
					[
						0,
						[
							5,
							[
								7,
								[
									19,
									cr.system_object.prototype.exps.viewportright
									,[
[
										0,
										0
									]
									]
								]
								,[
									0,
									3
								]
							]
							,[
								0,
								50
							]
						]
					]
,					[
						0,
						[
							4,
							[
								20,
								29,
								cr.plugins_.Text.prototype.exps.Y,
								false,
								null
							]
							,[
								0,
								150
							]
						]
					]
					]
				]
,				[
					34,
					cr.plugins_.Sprite.prototype.acts.SetY,
					null,
					842045905777585,
					false
					,[
					[
						0,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewporttop
								,[
[
									0,
									0
								]
								]
							]
							,[
								7,
								[
									20,
									34,
									cr.plugins_.Sprite.prototype.exps.Height,
									false,
									null
								]
								,[
									0,
									2
								]
							]
						]
					]
					]
				]
,				[
					47,
					cr.plugins_.Sprite.prototype.acts.SetX,
					null,
					2094239871462467,
					false
					,[
					[
						0,
						[
							5,
							[
								20,
								14,
								cr.plugins_.TextBox.prototype.exps.X,
								false,
								null
							]
							,[
								20,
								47,
								cr.plugins_.Sprite.prototype.exps.Width,
								false,
								null
							]
						]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					6974331745904359,
					[
					[
						9,
						cr.plugins_.Text.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						100987550412674,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								2,
								"head"
							]
						]
						]
					]
					],
					[
					[
						9,
						cr.plugins_.Text.prototype.acts.SetPos,
						null,
						8826509405087064,
						false
						,[
						[
							0,
							[
								7,
								[
									19,
									cr.system_object.prototype.exps.viewportright
									,[
[
										0,
										0
									]
									]
								]
								,[
									0,
									2
								]
							]
						]
,						[
							0,
							[
								20,
								34,
								cr.plugins_.Sprite.prototype.exps.Y,
								false,
								null
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					3914417220314573,
					[
					[
						9,
						cr.plugins_.Text.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						6412892606402822,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								2,
								"fp"
							]
						]
						]
					]
					],
					[
					[
						9,
						cr.plugins_.Text.prototype.acts.SetPos,
						null,
						1032377441826774,
						false
						,[
						[
							0,
							[
								4,
								[
									7,
									[
										6,
										[
											0,
											2
										]
										,[
											19,
											cr.system_object.prototype.exps.viewportright
											,[
[
												0,
												0
											]
											]
										]
									]
									,[
										0,
										3
									]
								]
								,[
									0,
									50
								]
							]
						]
,						[
							0,
							[
								20,
								32,
								cr.plugins_.Sprite.prototype.exps.Y,
								false,
								null
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					7682743898552262,
					[
					[
						9,
						cr.plugins_.Text.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						4023636032096227,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								2,
								"register"
							]
						]
						]
					]
					],
					[
					[
						9,
						cr.plugins_.Text.prototype.acts.SetPos,
						null,
						4327379618600753,
						false
						,[
						[
							0,
							[
								7,
								[
									19,
									cr.system_object.prototype.exps.viewportright
									,[
[
										0,
										0
									]
									]
								]
								,[
									0,
									2
								]
							]
						]
,						[
							0,
							[
								4,
								[
									4,
									[
										20,
										32,
										cr.plugins_.Sprite.prototype.exps.Y,
										false,
										null
									]
									,[
										7,
										[
											20,
											32,
											cr.plugins_.Sprite.prototype.exps.Height,
											false,
											null
										]
										,[
											0,
											2
										]
									]
								]
								,[
									7,
									[
										19,
										cr.system_object.prototype.exps.distance
										,[
[
											0,
											0
										]
,[
											4,
											[
												20,
												32,
												cr.plugins_.Sprite.prototype.exps.Y,
												false,
												null
											]
											,[
												7,
												[
													20,
													32,
													cr.plugins_.Sprite.prototype.exps.Height,
													false,
													null
												]
												,[
													0,
													2
												]
											]
										]
,[
											0,
											0
										]
,[
											5,
											[
												19,
												cr.system_object.prototype.exps.viewportbottom
												,[
[
													0,
													0
												]
												]
											]
											,[
												0,
												10
											]
										]
										]
									]
									,[
										0,
										2
									]
								]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					6161628260339074,
					[
					[
						9,
						cr.plugins_.Text.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						9142177682476648,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								2,
								"buttontext"
							]
						]
						]
					]
					],
					[
					[
						9,
						cr.plugins_.Text.prototype.acts.SetPosToObject,
						null,
						2597000131743488,
						false
						,[
						[
							4,
							32
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				1014083092101968,
				[
				[
					8,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					1539453092867302,
					false
					,[
					[
						4,
						34
					]
					]
				]
				],
				[
				[
					8,
					cr.plugins_.Sprite.prototype.acts.SetSize,
					null,
					4903840888472281,
					false
					,[
					[
						0,
						[
							0,
							150
						]
					]
,					[
						0,
						[
							0,
							100
						]
					]
					]
				]
,				[
					8,
					cr.plugins_.Sprite.prototype.acts.SetPos,
					null,
					5344369435083345,
					false
					,[
					[
						0,
						[
							7,
							[
								19,
								cr.system_object.prototype.exps.viewportright
								,[
[
									0,
									0
								]
								]
							]
							,[
								0,
								2
							]
						]
					]
,					[
						0,
						[
							4,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewporttop
									,[
[
										0,
										0
									]
									]
								]
								,[
									0,
									53
								]
							]
							,[
								7,
								[
									19,
									cr.system_object.prototype.exps.distance
									,[
[
										7,
										[
											19,
											cr.system_object.prototype.exps.viewportright
											,[
[
												0,
												0
											]
											]
										]
										,[
											0,
											2
										]
									]
,[
										20,
										34,
										cr.plugins_.Sprite.prototype.exps.Y,
										false,
										null
									]
,[
										7,
										[
											19,
											cr.system_object.prototype.exps.viewportright
											,[
[
												0,
												0
											]
											]
										]
										,[
											0,
											2
										]
									]
,[
										20,
										12,
										cr.plugins_.TextBox.prototype.exps.Y,
										false,
										null
									]
									]
								]
								,[
									0,
									2
								]
							]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			9922980222735979,
			[
			[
				97,
				cr.plugins_.Phonegap.prototype.cnds.OnBack,
				null,
				1,
				false,
				false,
				false,
				6795632257496227,
				false
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.GoToLayout,
				null,
				3280349727850052,
				false
				,[
				[
					6,
					"mainLogin"
				]
				]
			]
			]
		]
		]
	]
,	[
		"Global",
		[
		[
			1,
			"notifyEnable",
			0,
			0,
false,false,1246279929280467,false
		]
,		[
			1,
			"host",
			1,
			"http://hellocard.co/hellocard-app/files/",
false,false,6654023529906868,false
		]
,		[
			1,
			"host2",
			1,
			"http://192.168.1.12/hellocard-app/files/",
false,false,7857809860808235,false
		]
,		[
			1,
			"edit",
			0,
			0,
false,false,4306624245629197,false
		]
,		[
			1,
			"HCIDLEN",
			0,
			20,
false,true,1766163005319747,false
		]
,		[
			1,
			"hcid",
			1,
			"",
false,false,6039032647676549,false
		]
,		[
			1,
			"UserID",
			0,
			0,
false,false,7390525715623456,false
		]
,		[
			1,
			"fullname",
			1,
			"",
false,false,4202471491011099,false
		]
,		[
			1,
			"email",
			1,
			"",
false,false,8631909182562937,false
		]
,		[
			1,
			"username",
			1,
			"",
false,false,6895613525009847,false
		]
,		[
			1,
			"contact",
			1,
			"",
false,false,7849172403759405,false
		]
,		[
			1,
			"password",
			1,
			"",
false,false,8816726575399049,false
		]
,		[
			0,
			null,
			false,
			null,
			6835649445309703,
			[
			[
				-1,
				cr.system_object.prototype.cnds.OnLayoutStart,
				null,
				1,
				false,
				false,
				false,
				7542850887967844,
				false
			]
			],
			[
			[
				4,
				cr.plugins_.appMobi.prototype.acts.deviceSetAutoRotate,
				null,
				9221133312679243,
				false
				,[
				[
					3,
					0
				]
				]
			]
,			[
				4,
				cr.plugins_.appMobi.prototype.acts.deviceSetRotateOrientation,
				null,
				1096319070759795,
				false
				,[
				[
					3,
					0
				]
				]
			]
,			[
				102,
				cr.plugins_.Text.prototype.acts.SetWebFont,
				null,
				541640155118095,
				false
				,[
				[
					1,
					[
						2,
						"OpenSansLight"
					]
				]
,				[
					1,
					[
						2,
						"style.css"
					]
				]
				]
			]
,			[
				12,
				cr.plugins_.TextBox.prototype.acts.SetFocus,
				null,
				8928701700300896,
				false
			]
,			[
				12,
				cr.plugins_.TextBox.prototype.acts.SetCSSStyle,
				null,
				7298282024197474,
				false
				,[
				[
					1,
					[
						2,
						"border-style"
					]
				]
,				[
					1,
					[
						2,
						"none"
					]
				]
				]
			]
,			[
				12,
				cr.plugins_.TextBox.prototype.acts.SetCSSStyle,
				null,
				443959771753492,
				false
				,[
				[
					1,
					[
						2,
						"outline-style"
					]
				]
,				[
					1,
					[
						2,
						"none"
					]
				]
				]
			]
,			[
				14,
				cr.plugins_.TextBox.prototype.acts.SetCSSStyle,
				null,
				663791397591872,
				false
				,[
				[
					1,
					[
						2,
						"border-style"
					]
				]
,				[
					1,
					[
						2,
						"none"
					]
				]
				]
			]
,			[
				14,
				cr.plugins_.TextBox.prototype.acts.SetCSSStyle,
				null,
				3927001766551964,
				false
				,[
				[
					1,
					[
						2,
						"outline-style"
					]
				]
,				[
					1,
					[
						2,
						"none"
					]
				]
				]
			]
,			[
				19,
				cr.plugins_.TextBox.prototype.acts.SetCSSStyle,
				null,
				8082963827872825,
				false
				,[
				[
					1,
					[
						2,
						"border-style"
					]
				]
,				[
					1,
					[
						2,
						"none"
					]
				]
				]
			]
,			[
				19,
				cr.plugins_.TextBox.prototype.acts.SetCSSStyle,
				null,
				1064180250130166,
				false
				,[
				[
					1,
					[
						2,
						"outline-style"
					]
				]
,				[
					1,
					[
						2,
						"none"
					]
				]
				]
			]
,			[
				21,
				cr.plugins_.TextBox.prototype.acts.SetCSSStyle,
				null,
				1228818886924562,
				false
				,[
				[
					1,
					[
						2,
						"border-style"
					]
				]
,				[
					1,
					[
						2,
						"none"
					]
				]
				]
			]
,			[
				21,
				cr.plugins_.TextBox.prototype.acts.SetCSSStyle,
				null,
				9409769530818723,
				false
				,[
				[
					1,
					[
						2,
						"outline-style"
					]
				]
,				[
					1,
					[
						2,
						"none"
					]
				]
				]
			]
,			[
				56,
				cr.plugins_.TextBox.prototype.acts.SetCSSStyle,
				null,
				2128425636732057,
				false
				,[
				[
					1,
					[
						2,
						"border-style"
					]
				]
,				[
					1,
					[
						2,
						"none"
					]
				]
				]
			]
,			[
				56,
				cr.plugins_.TextBox.prototype.acts.SetCSSStyle,
				null,
				2709938990223945,
				false
				,[
				[
					1,
					[
						2,
						"outline-style"
					]
				]
,				[
					1,
					[
						2,
						"none"
					]
				]
				]
			]
,			[
				60,
				cr.plugins_.TextBox.prototype.acts.SetCSSStyle,
				null,
				4001166392138276,
				false
				,[
				[
					1,
					[
						2,
						"border-style"
					]
				]
,				[
					1,
					[
						2,
						"none"
					]
				]
				]
			]
,			[
				60,
				cr.plugins_.TextBox.prototype.acts.SetCSSStyle,
				null,
				1354891024079284,
				false
				,[
				[
					1,
					[
						2,
						"outline-style"
					]
				]
,				[
					1,
					[
						2,
						"none"
					]
				]
				]
			]
,			[
				73,
				cr.plugins_.TextBox.prototype.acts.SetCSSStyle,
				null,
				8688820931796936,
				false
				,[
				[
					1,
					[
						2,
						"outline-style"
					]
				]
,				[
					1,
					[
						2,
						"none"
					]
				]
				]
			]
,			[
				73,
				cr.plugins_.TextBox.prototype.acts.SetCSSStyle,
				null,
				3653352437944532,
				false
				,[
				[
					1,
					[
						2,
						"border-style"
					]
				]
,				[
					1,
					[
						2,
						"none"
					]
				]
				]
			]
,			[
				39,
				cr.plugins_.TextBox.prototype.acts.SetCSSStyle,
				null,
				9303510560511193,
				false
				,[
				[
					1,
					[
						2,
						"outline-style"
					]
				]
,				[
					1,
					[
						2,
						"none"
					]
				]
				]
			]
,			[
				39,
				cr.plugins_.TextBox.prototype.acts.SetCSSStyle,
				null,
				5680010184906609,
				false
				,[
				[
					1,
					[
						2,
						"border-style"
					]
				]
,				[
					1,
					[
						2,
						"none"
					]
				]
				]
			]
,			[
				39,
				cr.plugins_.TextBox.prototype.acts.SetCSSStyle,
				null,
				7385620258440788,
				false
				,[
				[
					1,
					[
						2,
						"background-color"
					]
				]
,				[
					1,
					[
						2,
						"rgba(85,85,85,0)"
					]
				]
				]
			]
,			[
				87,
				cr.plugins_.Sprite.prototype.acts.SetSize,
				null,
				1269845412019124,
				false
				,[
				[
					0,
					[
						0,
						45
					]
				]
,				[
					0,
					[
						0,
						45
					]
				]
				]
			]
,			[
				91,
				cr.behaviors.Pin.prototype.acts.Pin,
				"Pin",
				822327255560742,
				false
				,[
				[
					4,
					87
				]
,				[
					3,
					0
				]
				]
			]
,			[
				92,
				cr.behaviors.Pin.prototype.acts.Pin,
				"Pin",
				8352073852103919,
				false
				,[
				[
					4,
					87
				]
,				[
					3,
					0
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			6560204201241519,
			[
			[
				1,
				cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
				null,
				0,
				false,
				false,
				false,
				2025455499300487,
				false
				,[
				[
					4,
					100
				]
				]
			]
			],
			[
			[
				100,
				cr.plugins_.Sprite.prototype.acts.SetOpacity,
				null,
				1526638455769325,
				false
				,[
				[
					0,
					[
						0,
						70
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			861489956681355,
			[
			[
				-1,
				cr.system_object.prototype.cnds.Else,
				null,
				0,
				false,
				false,
				false,
				6236987723257095,
				false
			]
			],
			[
			[
				100,
				cr.plugins_.Sprite.prototype.acts.SetOpacity,
				null,
				2364438590112211,
				false
				,[
				[
					0,
					[
						0,
						100
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			4824275864786652,
			[
			[
				1,
				cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
				null,
				0,
				false,
				false,
				false,
				6644705375970062,
				false
				,[
				[
					4,
					33
				]
				]
			]
,			[
				33,
				cr.plugins_.Sprite.prototype.cnds.CompareFrame,
				null,
				0,
				false,
				false,
				false,
				6768779124812718,
				false
				,[
				[
					8,
					0
				]
,				[
					0,
					[
						0,
						1
					]
				]
				]
			]
			],
			[
			[
				33,
				cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
				null,
				5664225258668263,
				false
				,[
				[
					0,
					[
						0,
						1
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			8501208535080297,
			[
			[
				1,
				cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
				null,
				1,
				false,
				false,
				false,
				8726260666099341,
				false
			]
,			[
				1,
				cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
				null,
				0,
				false,
				false,
				false,
				9528841771762755,
				false
				,[
				[
					4,
					33
				]
				]
			]
,			[
				33,
				cr.plugins_.Sprite.prototype.cnds.CompareFrame,
				null,
				0,
				false,
				false,
				false,
				4227066011848109,
				false
				,[
				[
					8,
					1
				]
,				[
					0,
					[
						0,
						2
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				7425748024654734,
				[
				[
					33,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					9791619528843987,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.GoToLayout,
					null,
					3289098165581503,
					false
					,[
					[
						6,
						"Search"
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3551484946539172,
				[
				[
					33,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					4135016910226026,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.GoToLayout,
					null,
					5523956664843274,
					false
					,[
					[
						6,
						"Model"
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				489874936548351,
				[
				[
					33,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					9975414103580518,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							2
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.GoToLayout,
					null,
					2458970181392385,
					false
					,[
					[
						6,
						"MyCards"
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4896632668571491,
				[
				[
					33,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					242796363871026,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							3
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.GoToLayout,
					null,
					6532714839147776,
					false
					,[
					[
						6,
						"Setting"
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			7365609560367057,
			[
			[
				-1,
				cr.system_object.prototype.cnds.EveryTick,
				null,
				0,
				false,
				false,
				false,
				5550074015387771,
				false
			]
			],
			[
			[
				34,
				cr.plugins_.Sprite.prototype.acts.SetWidth,
				null,
				8989273725870304,
				false
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.viewportright
						,[
[
							0,
							0
						]
						]
					]
				]
				]
			]
,			[
				34,
				cr.plugins_.Sprite.prototype.acts.SetX,
				null,
				3477233649128535,
				false
				,[
				[
					0,
					[
						7,
						[
							19,
							cr.system_object.prototype.exps.viewportright
							,[
[
								0,
								0
							]
							]
						]
						,[
							0,
							2
						]
					]
				]
				]
			]
,			[
				42,
				cr.plugins_.Sprite.prototype.acts.SetWidth,
				null,
				6598812051263152,
				false
				,[
				[
					0,
					[
						4,
						[
							19,
							cr.system_object.prototype.exps.viewportright
							,[
[
								0,
								0
							]
							]
						]
						,[
							19,
							cr.system_object.prototype.exps.abs
							,[
[
								19,
								cr.system_object.prototype.exps.viewportleft
								,[
[
									0,
									0
								]
								]
							]
							]
						]
					]
				]
				]
			]
,			[
				42,
				cr.plugins_.Sprite.prototype.acts.SetX,
				null,
				5643546255621087,
				false
				,[
				[
					0,
					[
						7,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewportright
								,[
[
									0,
									0
								]
								]
							]
							,[
								19,
								cr.system_object.prototype.exps.abs
								,[
[
									19,
									cr.system_object.prototype.exps.viewportleft
									,[
[
										0,
										0
									]
									]
								]
								]
							]
						]
						,[
							0,
							2
						]
					]
				]
				]
			]
,			[
				7,
				cr.plugins_.Sprite.prototype.acts.SetWidth,
				null,
				6516578570774758,
				false
				,[
				[
					0,
					[
						4,
						[
							19,
							cr.system_object.prototype.exps.viewportright
							,[
[
								0,
								0
							]
							]
						]
						,[
							19,
							cr.system_object.prototype.exps.abs
							,[
[
								19,
								cr.system_object.prototype.exps.viewportleft
								,[
[
									0,
									0
								]
								]
							]
							]
						]
					]
				]
				]
			]
,			[
				7,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				7944922643715893,
				false
				,[
				[
					0,
					[
						7,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewportright
								,[
[
									0,
									0
								]
								]
							]
							,[
								19,
								cr.system_object.prototype.exps.abs
								,[
[
									19,
									cr.system_object.prototype.exps.viewportleft
									,[
[
										0,
										0
									]
									]
								]
								]
							]
						]
						,[
							0,
							2
						]
					]
				]
,				[
					0,
					[
						5,
						[
							19,
							cr.system_object.prototype.exps.viewportbottom
							,[
[
								0,
								0
							]
							]
						]
						,[
							7,
							[
								20,
								7,
								cr.plugins_.Sprite.prototype.exps.Height,
								false,
								null
							]
							,[
								0,
								2
							]
						]
					]
				]
				]
			]
,			[
				101,
				cr.plugins_.TextBox.prototype.acts.SetX,
				null,
				1254247266914922,
				false
				,[
				[
					0,
					[
						4,
						[
							5,
							[
								7,
								[
									4,
									[
										19,
										cr.system_object.prototype.exps.viewportright
										,[
[
											0,
											0
										]
										]
									]
									,[
										19,
										cr.system_object.prototype.exps.abs
										,[
[
											19,
											cr.system_object.prototype.exps.viewportleft
											,[
[
												0,
												0
											]
											]
										]
										]
									]
								]
								,[
									0,
									2
								]
							]
							,[
								7,
								[
									20,
									101,
									cr.plugins_.TextBox.prototype.exps.Width,
									false,
									null
								]
								,[
									0,
									2
								]
							]
						]
						,[
							0,
							40
						]
					]
				]
				]
			]
,			[
				33,
				cr.plugins_.Sprite.prototype.acts.SetWidth,
				null,
				3942704013697515,
				false
				,[
				[
					0,
					[
						7,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewportright
								,[
[
									0,
									0
								]
								]
							]
							,[
								19,
								cr.system_object.prototype.exps.abs
								,[
[
									19,
									cr.system_object.prototype.exps.viewportleft
									,[
[
										0,
										0
									]
									]
								]
								]
							]
						]
						,[
							0,
							4
						]
					]
				]
				]
			]
,			[
				33,
				cr.plugins_.Sprite.prototype.acts.SetX,
				null,
				2568673179835108,
				false
				,[
				[
					0,
					[
						5,
						[
							6,
							[
								4,
								[
									21,
									33,
									false,
									null
									,0
								]
								,[
									0,
									1
								]
							]
							,[
								7,
								[
									4,
									[
										19,
										cr.system_object.prototype.exps.viewportright
										,[
[
											0,
											0
										]
										]
									]
									,[
										19,
										cr.system_object.prototype.exps.abs
										,[
[
											19,
											cr.system_object.prototype.exps.viewportleft
											,[
[
												0,
												0
											]
											]
										]
										]
									]
								]
								,[
									0,
									4
								]
							]
						]
						,[
							7,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewportright
									,[
[
										0,
										0
									]
									]
								]
								,[
									19,
									cr.system_object.prototype.exps.abs
									,[
[
										19,
										cr.system_object.prototype.exps.viewportleft
										,[
[
											0,
											0
										]
										]
									]
									]
								]
							]
							,[
								0,
								8
							]
						]
					]
				]
				]
			]
,			[
				29,
				cr.plugins_.Text.prototype.acts.SetX,
				null,
				4931987173181388,
				false
				,[
				[
					0,
					[
						7,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewportright
								,[
[
									0,
									0
								]
								]
							]
							,[
								19,
								cr.system_object.prototype.exps.abs
								,[
[
									19,
									cr.system_object.prototype.exps.viewportleft
									,[
[
										0,
										0
									]
									]
								]
								]
							]
						]
						,[
							0,
							2
						]
					]
				]
				]
			]
,			[
				46,
				cr.plugins_.Sprite.prototype.acts.SetX,
				null,
				1234357686417411,
				false
				,[
				[
					0,
					[
						5,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewportright
								,[
[
									0,
									0
								]
								]
							]
							,[
								19,
								cr.system_object.prototype.exps.abs
								,[
[
									19,
									cr.system_object.prototype.exps.viewportleft
									,[
[
										0,
										0
									]
									]
								]
								]
							]
						]
						,[
							0,
							75
						]
					]
				]
				]
			]
,			[
				87,
				cr.plugins_.Sprite.prototype.acts.SetX,
				null,
				2742718724030508,
				false
				,[
				[
					0,
					[
						5,
						[
							19,
							cr.system_object.prototype.exps.viewportright
							,[
[
								0,
								0
							]
							]
						]
						,[
							0,
							75
						]
					]
				]
				]
			]
			]
			,[
			[
				0,
				null,
				false,
				null,
				8980111868671113,
				[
				[
					39,
					cr.plugins_.TextBox.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					476018955156507,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					40,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					6220320893086126,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					39,
					cr.plugins_.TextBox.prototype.acts.SetX,
					null,
					9360120147424982,
					false
					,[
					[
						0,
						[
							4,
							[
								5,
								[
									20,
									40,
									cr.plugins_.Sprite.prototype.exps.X,
									false,
									null
								]
								,[
									7,
									[
										20,
										40,
										cr.plugins_.Sprite.prototype.exps.Width,
										false,
										null
									]
									,[
										0,
										2
									]
								]
							]
							,[
								0,
								50
							]
						]
					]
					]
				]
,				[
					40,
					cr.plugins_.Sprite.prototype.acts.SetX,
					null,
					3553873017682912,
					false
					,[
					[
						0,
						[
							7,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewportright
									,[
[
										0,
										0
									]
									]
								]
								,[
									19,
									cr.system_object.prototype.exps.abs
									,[
[
										19,
										cr.system_object.prototype.exps.viewportleft
										,[
[
											0,
											0
										]
										]
									]
									]
								]
							]
							,[
								0,
								2
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3537693921210504,
				[
				[
					39,
					cr.plugins_.TextBox.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					7525747522230021,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					40,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					9338535576528576,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					39,
					cr.plugins_.TextBox.prototype.acts.SetX,
					null,
					7224658789900677,
					false
					,[
					[
						0,
						[
							4,
							[
								5,
								[
									20,
									40,
									cr.plugins_.Sprite.prototype.exps.X,
									false,
									null
								]
								,[
									7,
									[
										20,
										40,
										cr.plugins_.Sprite.prototype.exps.Width,
										false,
										null
									]
									,[
										0,
										2
									]
								]
							]
							,[
								0,
								50
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8305997890666959,
				[
				[
					40,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					8546707823642764,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					49,
					cr.plugins_.Sprite.prototype.acts.SetPosToObject,
					null,
					4095612631120539,
					false
					,[
					[
						4,
						40
					]
,					[
						7,
						[
							0,
							2
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8166226093503542,
				[
				[
					17,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					5977296959384711,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetPosToObject,
					null,
					2770809328286479,
					false
					,[
					[
						4,
						49
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				7552960726202814,
				[
				[
					9,
					cr.plugins_.Text.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					4551710769816195,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"label"
						]
					]
					]
				]
				],
				[
				[
					9,
					cr.plugins_.Text.prototype.acts.SetX,
					null,
					5414801173769664,
					false
					,[
					[
						0,
						[
							5,
							[
								7,
								[
									4,
									[
										19,
										cr.system_object.prototype.exps.viewportright
										,[
[
											0,
											0
										]
										]
									]
									,[
										19,
										cr.system_object.prototype.exps.abs
										,[
[
											19,
											cr.system_object.prototype.exps.viewportleft
											,[
[
												0,
												0
											]
											]
										]
										]
									]
								]
								,[
									0,
									2
								]
							]
							,[
								0,
								10
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3917105034254535,
				[
				[
					9,
					cr.plugins_.Text.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					7449458247895657,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"heading"
						]
					]
					]
				]
				],
				[
				[
					9,
					cr.plugins_.Text.prototype.acts.SetX,
					null,
					8925621718730166,
					false
					,[
					[
						0,
						[
							7,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewportright
									,[
[
										0,
										0
									]
									]
								]
								,[
									19,
									cr.system_object.prototype.exps.abs
									,[
[
										19,
										cr.system_object.prototype.exps.viewportleft
										,[
[
											0,
											0
										]
										]
									]
									]
								]
							]
							,[
								0,
								2
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3593423281002939,
				[
				[
					33,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					221171882637562,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					2538460194242651,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					77,
					cr.plugins_.Text.prototype.cnds.CompareText,
					null,
					0,
					false,
					false,
					false,
					3513587491525991,
					false
					,[
					[
						1,
						[
							2,
							"search"
						]
					]
,					[
						3,
						0
					]
					]
				]
				],
				[
				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetX,
					null,
					5181387924098412,
					false
					,[
					[
						0,
						[
							20,
							33,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
					]
					]
				]
,				[
					77,
					cr.plugins_.Text.prototype.acts.SetX,
					null,
					9075786877410121,
					false
					,[
					[
						0,
						[
							20,
							17,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				2869518163461035,
				[
				[
					33,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					6198546536873395,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					77,
					cr.plugins_.Text.prototype.cnds.CompareText,
					null,
					0,
					false,
					false,
					false,
					7441532511277511,
					false
					,[
					[
						1,
						[
							2,
							"saved"
						]
					]
,					[
						3,
						0
					]
					]
				]
				],
				[
				[
					36,
					cr.plugins_.Sprite.prototype.acts.SetX,
					null,
					6746881856180319,
					false
					,[
					[
						0,
						[
							20,
							33,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
					]
					]
				]
,				[
					77,
					cr.plugins_.Text.prototype.acts.SetX,
					null,
					3482299169725878,
					false
					,[
					[
						0,
						[
							20,
							36,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8629910315606559,
				[
				[
					33,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					3129357102179338,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							2
						]
					]
					]
				]
,				[
					77,
					cr.plugins_.Text.prototype.cnds.CompareText,
					null,
					0,
					false,
					false,
					false,
					3549613042186376,
					false
					,[
					[
						1,
						[
							2,
							"my cards"
						]
					]
,					[
						3,
						0
					]
					]
				]
				],
				[
				[
					37,
					cr.plugins_.Sprite.prototype.acts.SetX,
					null,
					8670525472393312,
					false
					,[
					[
						0,
						[
							20,
							33,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
					]
					]
				]
,				[
					77,
					cr.plugins_.Text.prototype.acts.SetX,
					null,
					1572657379354519,
					false
					,[
					[
						0,
						[
							20,
							37,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9095068524848551,
				[
				[
					33,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					6027515078257561,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							3
						]
					]
					]
				]
,				[
					77,
					cr.plugins_.Text.prototype.cnds.CompareText,
					null,
					0,
					false,
					false,
					false,
					5453419043644308,
					false
					,[
					[
						1,
						[
							2,
							"settings"
						]
					]
,					[
						3,
						0
					]
					]
				]
				],
				[
				[
					38,
					cr.plugins_.Sprite.prototype.acts.SetX,
					null,
					5613863927493907,
					false
					,[
					[
						0,
						[
							20,
							33,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
					]
					]
				]
,				[
					77,
					cr.plugins_.Text.prototype.acts.SetX,
					null,
					2763119492898708,
					false
					,[
					[
						0,
						[
							20,
							38,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			1852343357938059,
			[
			[
				1,
				cr.plugins_.Touch.prototype.cnds.OnTouchObject,
				null,
				1,
				false,
				false,
				false,
				8277511110267786,
				false
				,[
				[
					4,
					87
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.GoToLayout,
				null,
				7974796812548276,
				false
				,[
				[
					6,
					"Notifications"
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			8140382279898206,
			[
			[
				-1,
				cr.system_object.prototype.cnds.Every,
				null,
				0,
				false,
				false,
				false,
				1050743942994396,
				false
				,[
				[
					0,
					[
						0,
						2
					]
				]
				]
			]
			],
			[
			[
				5,
				cr.plugins_.AJAX.prototype.acts.Post,
				null,
				4976878316774569,
				false
				,[
				[
					1,
					[
						2,
						"getNotificationsNum"
					]
				]
,				[
					1,
					[
						10,
						[
							10,
							[
								10,
								[
									23,
									"host"
								]
								,[
									2,
									"notify.php?myhcid=&savehcid="
								]
							]
							,[
								20,
								0,
								cr.plugins_.WebStorage.prototype.exps.LocalValue,
								true,
								null
								,[
[
									2,
									"hcid"
								]
								]
							]
						]
						,[
							2,
							"&type=&message=&check=yes"
						]
					]
				]
,				[
					1,
					[
						2,
						""
					]
				]
,				[
					1,
					[
						2,
						"POST"
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			1110347390078175,
			[
			[
				5,
				cr.plugins_.AJAX.prototype.cnds.OnComplete,
				null,
				1,
				false,
				false,
				false,
				5431764443172379,
				false
				,[
				[
					1,
					[
						2,
						"getNotificationsNum"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				5719691782879189,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					6035525694920239,
					false
					,[
					[
						11,
						"notifyEnable"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					87,
					cr.plugins_.Sprite.prototype.acts.SetOpacity,
					null,
					1689823343709362,
					false
					,[
					[
						0,
						[
							0,
							50
						]
					]
					]
				]
,				[
					91,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					4700940807399804,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					92,
					cr.plugins_.Text.prototype.acts.SetVisible,
					null,
					3468386537185275,
					false
					,[
					[
						3,
						0
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8913893912824259,
				[
				[
					0,
					cr.plugins_.WebStorage.prototype.cnds.LocalStorageExists,
					null,
					0,
					false,
					false,
					false,
					3206554633324607,
					false
					,[
					[
						1,
						[
							2,
							"numOfNotifications"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					8250022692047847,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						8765226141883579,
						false
						,[
						[
							7,
							[
								5,
								[
									19,
									cr.system_object.prototype.exps["int"]
									,[
[
										7,
										[
											5,
											[
												19,
												cr.system_object.prototype.exps.tokencount
												,[
[
													20,
													5,
													cr.plugins_.AJAX.prototype.exps.LastData,
													true,
													null
												]
,[
													2,
													"|"
												]
												]
											]
											,[
												0,
												1
											]
										]
										,[
											0,
											5
										]
									]
									]
								]
								,[
									19,
									cr.system_object.prototype.exps["int"]
									,[
[
										20,
										0,
										cr.plugins_.WebStorage.prototype.exps.LocalValue,
										true,
										null
										,[
[
											2,
											"numOfNotifications"
										]
										]
									]
									]
								]
							]
						]
,						[
							8,
							4
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						87,
						cr.plugins_.Sprite.prototype.acts.SetOpacity,
						null,
						5696350489538125,
						false
						,[
						[
							0,
							[
								0,
								100
							]
						]
						]
					]
,					[
						91,
						cr.plugins_.Sprite.prototype.acts.SetVisible,
						null,
						4714772763992016,
						false
						,[
						[
							3,
							1
						]
						]
					]
,					[
						92,
						cr.plugins_.Text.prototype.acts.SetVisible,
						null,
						4332531116889504,
						false
						,[
						[
							3,
							1
						]
						]
					]
,					[
						92,
						cr.plugins_.Text.prototype.acts.SetText,
						null,
						4800045369879218,
						false
						,[
						[
							7,
							[
								5,
								[
									19,
									cr.system_object.prototype.exps["int"]
									,[
[
										7,
										[
											5,
											[
												19,
												cr.system_object.prototype.exps.tokencount
												,[
[
													20,
													5,
													cr.plugins_.AJAX.prototype.exps.LastData,
													true,
													null
												]
,[
													2,
													"|"
												]
												]
											]
											,[
												0,
												1
											]
										]
										,[
											0,
											5
										]
									]
									]
								]
								,[
									19,
									cr.system_object.prototype.exps["int"]
									,[
[
										20,
										0,
										cr.plugins_.WebStorage.prototype.exps.LocalValue,
										true,
										null
										,[
[
											2,
											"numOfNotifications"
										]
										]
									]
									]
								]
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						3184179983448002,
						false
						,[
						[
							11,
							"notifyEnable"
						]
,						[
							7,
							[
								5,
								[
									19,
									cr.system_object.prototype.exps["int"]
									,[
[
										7,
										[
											5,
											[
												19,
												cr.system_object.prototype.exps.tokencount
												,[
[
													20,
													5,
													cr.plugins_.AJAX.prototype.exps.LastData,
													true,
													null
												]
,[
													2,
													"|"
												]
												]
											]
											,[
												0,
												1
											]
										]
										,[
											0,
											5
										]
									]
									]
								]
								,[
									19,
									cr.system_object.prototype.exps["int"]
									,[
[
										20,
										0,
										cr.plugins_.WebStorage.prototype.exps.LocalValue,
										true,
										null
										,[
[
											2,
											"numOfNotifications"
										]
										]
									]
									]
								]
							]
						]
						]
					]
,					[
						0,
						cr.plugins_.WebStorage.prototype.acts.StoreLocal,
						null,
						7581848356531364,
						false
						,[
						[
							1,
							[
								2,
								"numOfNotifications"
							]
						]
,						[
							7,
							[
								19,
								cr.system_object.prototype.exps["int"]
								,[
[
									7,
									[
										5,
										[
											19,
											cr.system_object.prototype.exps.tokencount
											,[
[
												20,
												5,
												cr.plugins_.AJAX.prototype.exps.LastData,
												true,
												null
											]
,[
												2,
												"|"
											]
											]
										]
										,[
											0,
											1
										]
									]
									,[
										0,
										5
									]
								]
								]
							]
						]
						]
					]
,					[
						96,
						cr.plugins_.PhonegapLocalNotification.prototype.acts.SendLocalNotification,
						null,
						1538421538216045,
						false
						,[
						[
							0,
							[
								0,
								1
							]
						]
,						[
							1,
							[
								2,
								"HelloCard"
							]
						]
,						[
							1,
							[
								10,
								[
									10,
									[
										2,
										"you have "
									]
									,[
										23,
										"notifyEnable"
									]
								]
								,[
									2,
									" new notification"
								]
							]
						]
,						[
							3,
							1
						]
,						[
							0,
							[
								0,
								0
							]
						]
,						[
							3,
							0
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				2736113487460484,
				[
				[
					0,
					cr.plugins_.WebStorage.prototype.cnds.LocalStorageExists,
					null,
					0,
					false,
					true,
					false,
					1444328822665654,
					false
					,[
					[
						1,
						[
							2,
							"numOfNotifications"
						]
					]
					]
				]
				],
				[
				[
					87,
					cr.plugins_.Sprite.prototype.acts.SetOpacity,
					null,
					3877449816734489,
					false
					,[
					[
						0,
						[
							0,
							100
						]
					]
					]
				]
,				[
					91,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					649012704370899,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					92,
					cr.plugins_.Text.prototype.acts.SetVisible,
					null,
					9163402001176516,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					92,
					cr.plugins_.Text.prototype.acts.SetText,
					null,
					2377506451631678,
					false
					,[
					[
						7,
						[
							19,
							cr.system_object.prototype.exps["int"]
							,[
[
								7,
								[
									5,
									[
										19,
										cr.system_object.prototype.exps.tokencount
										,[
[
											20,
											5,
											cr.plugins_.AJAX.prototype.exps.LastData,
											true,
											null
										]
,[
											2,
											"|"
										]
										]
									]
									,[
										0,
										1
									]
								]
								,[
									0,
									5
								]
							]
							]
						]
					]
					]
				]
,				[
					0,
					cr.plugins_.WebStorage.prototype.acts.StoreLocal,
					null,
					1773173003602191,
					false
					,[
					[
						1,
						[
							2,
							"numOfNotifications"
						]
					]
,					[
						7,
						[
							19,
							cr.system_object.prototype.exps["int"]
							,[
[
								7,
								[
									5,
									[
										19,
										cr.system_object.prototype.exps.tokencount
										,[
[
											20,
											5,
											cr.plugins_.AJAX.prototype.exps.LastData,
											true,
											null
										]
,[
											2,
											"|"
										]
										]
									]
									,[
										0,
										1
									]
								]
								,[
									0,
									5
								]
							]
							]
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					1652641258296698,
					false
					,[
					[
						11,
						"notifyEnable"
					]
,					[
						7,
						[
							19,
							cr.system_object.prototype.exps["int"]
							,[
[
								7,
								[
									5,
									[
										19,
										cr.system_object.prototype.exps.tokencount
										,[
[
											20,
											5,
											cr.plugins_.AJAX.prototype.exps.LastData,
											true,
											null
										]
,[
											2,
											"|"
										]
										]
									]
									,[
										0,
										1
									]
								]
								,[
									0,
									5
								]
							]
							]
						]
					]
					]
				]
,				[
					96,
					cr.plugins_.PhonegapLocalNotification.prototype.acts.SendLocalNotification,
					null,
					2260447579723437,
					false
					,[
					[
						0,
						[
							0,
							1
						]
					]
,					[
						1,
						[
							2,
							"HelloCard"
						]
					]
,					[
						1,
						[
							10,
							[
								10,
								[
									2,
									"you have "
								]
								,[
									23,
									"notifyEnable"
								]
							]
							,[
								2,
								" new notification"
							]
						]
					]
,					[
						3,
						1
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						3,
						0
					]
					]
				]
				]
			]
			]
		]
		]
	]
,	[
		"Register",
		[
		[
			1,
			"fb",
			0,
			0,
false,false,3531137882545687,false
		]
,		[
			2,
			"Global",
			false
		]
,		[
			0,
			null,
			false,
			null,
			9399997782036379,
			[
			[
				1,
				cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
				null,
				1,
				false,
				false,
				false,
				8798713591560705,
				false
			]
,			[
				1,
				cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
				null,
				0,
				false,
				false,
				false,
				7021175847487136,
				false
				,[
				[
					4,
					35
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.GoToLayout,
				null,
				4884485904352979,
				false
				,[
				[
					6,
					"mainLogin"
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			3328057704548767,
			[
			[
				18,
				cr.plugins_.TextBox.prototype.cnds.OnTextChanged,
				null,
				1,
				false,
				false,
				false,
				2286283070085235,
				false
			]
			],
			[
			[
				0,
				cr.plugins_.WebStorage.prototype.acts.StoreLocal,
				null,
				7767589802842733,
				false
				,[
				[
					1,
					[
						2,
						"fullname"
					]
				]
,				[
					7,
					[
						20,
						18,
						cr.plugins_.TextBox.prototype.exps.Text,
						true,
						null
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			4998823184302538,
			[
			[
				19,
				cr.plugins_.TextBox.prototype.cnds.OnTextChanged,
				null,
				1,
				false,
				false,
				false,
				3524438563854413,
				false
			]
			],
			[
			[
				0,
				cr.plugins_.WebStorage.prototype.acts.StoreLocal,
				null,
				1752163467554218,
				false
				,[
				[
					1,
					[
						2,
						"email"
					]
				]
,				[
					7,
					[
						20,
						19,
						cr.plugins_.TextBox.prototype.exps.Text,
						true,
						null
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			9205038219362775,
			[
			[
				14,
				cr.plugins_.TextBox.prototype.cnds.OnTextChanged,
				null,
				1,
				false,
				false,
				false,
				1103213310425222,
				false
			]
			],
			[
			[
				0,
				cr.plugins_.WebStorage.prototype.acts.StoreLocal,
				null,
				1542740202362446,
				false
				,[
				[
					1,
					[
						2,
						"password"
					]
				]
,				[
					7,
					[
						20,
						14,
						cr.plugins_.TextBox.prototype.exps.Text,
						true,
						null
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			2836292502986442,
			[
			[
				21,
				cr.plugins_.TextBox.prototype.cnds.OnTextChanged,
				null,
				1,
				false,
				false,
				false,
				6867815404521443,
				false
			]
			],
			[
			[
				0,
				cr.plugins_.WebStorage.prototype.acts.StoreLocal,
				null,
				1034462301611828,
				false
				,[
				[
					1,
					[
						2,
						"contact"
					]
				]
,				[
					7,
					[
						20,
						21,
						cr.plugins_.TextBox.prototype.exps.Text,
						true,
						null
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			true,
			null,
			7313597031597152,
			[
			[
				18,
				cr.plugins_.TextBox.prototype.cnds.CompareText,
				null,
				0,
				false,
				false,
				false,
				507262781282896,
				false
				,[
				[
					1,
					[
						2,
						""
					]
				]
,				[
					3,
					0
				]
				]
			]
,			[
				14,
				cr.plugins_.TextBox.prototype.cnds.CompareText,
				null,
				0,
				false,
				false,
				false,
				4148622150102853,
				false
				,[
				[
					1,
					[
						2,
						""
					]
				]
,				[
					3,
					0
				]
				]
			]
,			[
				19,
				cr.plugins_.TextBox.prototype.cnds.CompareText,
				null,
				0,
				false,
				false,
				false,
				9567539245738046,
				false
				,[
				[
					1,
					[
						2,
						""
					]
				]
,				[
					3,
					0
				]
				]
			]
,			[
				21,
				cr.plugins_.TextBox.prototype.cnds.CompareText,
				null,
				0,
				false,
				false,
				false,
				647409537947708,
				false
				,[
				[
					1,
					[
						2,
						""
					]
				]
,				[
					3,
					0
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.Compare,
				null,
				0,
				false,
				false,
				false,
				1606015942302653,
				false
				,[
				[
					7,
					[
						19,
						cr.system_object.prototype.exps.len
						,[
[
							20,
							21,
							cr.plugins_.TextBox.prototype.exps.Text,
							true,
							null
						]
						]
					]
				]
,				[
					8,
					2
				]
,				[
					7,
					[
						0,
						10
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.Compare,
				null,
				0,
				false,
				false,
				false,
				7634372539081631,
				false
				,[
				[
					7,
					[
						19,
						cr.system_object.prototype.exps.len
						,[
[
							20,
							18,
							cr.plugins_.TextBox.prototype.exps.Text,
							true,
							null
						]
						]
					]
				]
,				[
					8,
					2
				]
,				[
					7,
					[
						0,
						3
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.Compare,
				null,
				0,
				false,
				false,
				false,
				5845268717805276,
				false
				,[
				[
					7,
					[
						19,
						cr.system_object.prototype.exps.len
						,[
[
							20,
							14,
							cr.plugins_.TextBox.prototype.exps.Text,
							true,
							null
						]
						]
					]
				]
,				[
					8,
					2
				]
,				[
					7,
					[
						0,
						6
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.Compare,
				null,
				0,
				false,
				false,
				false,
				5752615846583717,
				false
				,[
				[
					7,
					[
						19,
						cr.system_object.prototype.exps.len
						,[
[
							20,
							19,
							cr.plugins_.TextBox.prototype.exps.Text,
							true,
							null
						]
						]
					]
				]
,				[
					8,
					2
				]
,				[
					7,
					[
						0,
						4
					]
				]
				]
			]
			],
			[
			[
				32,
				cr.plugins_.Sprite.prototype.acts.SetOpacity,
				null,
				7551347234257074,
				false
				,[
				[
					0,
					[
						0,
						50
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			1026396304266331,
			[
			[
				1,
				cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
				null,
				1,
				false,
				false,
				false,
				7376633397883436,
				false
			]
,			[
				1,
				cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
				null,
				0,
				false,
				false,
				false,
				7216847646703153,
				false
				,[
				[
					4,
					32
				]
				]
			]
,			[
				32,
				cr.plugins_.Sprite.prototype.cnds.CompareOpacity,
				null,
				0,
				false,
				false,
				false,
				8860975127149875,
				false
				,[
				[
					8,
					4
				]
,				[
					0,
					[
						0,
						50
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				9501465062021679,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					8886017540831649,
					false
					,[
					[
						7,
						[
							19,
							cr.system_object.prototype.exps.len
							,[
[
								20,
								18,
								cr.plugins_.TextBox.prototype.exps.Text,
								true,
								null
							]
							]
						]
					]
,					[
						8,
						4
					]
,					[
						7,
						[
							0,
							2
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					9052527701842262,
					false
					,[
					[
						7,
						[
							19,
							cr.system_object.prototype.exps.len
							,[
[
								20,
								18,
								cr.plugins_.TextBox.prototype.exps.Text,
								true,
								null
							]
							]
						]
					]
,					[
						8,
						2
					]
,					[
						7,
						[
							0,
							50
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					272781190567724,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						1454569400159754,
						false
						,[
						[
							7,
							[
								19,
								cr.system_object.prototype.exps.find
								,[
[
									20,
									19,
									cr.plugins_.TextBox.prototype.exps.Text,
									true,
									null
								]
,[
									2,
									"@"
								]
								]
							]
						]
,						[
							8,
							4
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						3091965396790796,
						false
						,[
						[
							7,
							[
								19,
								cr.system_object.prototype.exps.find
								,[
[
									20,
									19,
									cr.plugins_.TextBox.prototype.exps.Text,
									true,
									null
								]
,[
									2,
									"."
								]
								]
							]
						]
,						[
							8,
							4
						]
,						[
							7,
							[
								0,
								2
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						4017665633580789,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Compare,
							null,
							0,
							false,
							false,
							false,
							5735199720972479,
							false
							,[
							[
								7,
								[
									19,
									cr.system_object.prototype.exps.len
									,[
[
										20,
										21,
										cr.plugins_.TextBox.prototype.exps.Text,
										true,
										null
									]
									]
								]
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									10
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							6323479340761888,
							[
							[
								-1,
								cr.system_object.prototype.cnds.Compare,
								null,
								0,
								false,
								false,
								false,
								8653546873414924,
								false
								,[
								[
									7,
									[
										19,
										cr.system_object.prototype.exps.len
										,[
[
											20,
											14,
											cr.plugins_.TextBox.prototype.exps.Text,
											true,
											null
										]
										]
									]
								]
,								[
									8,
									4
								]
,								[
									7,
									[
										0,
										5
									]
								]
								]
							]
,							[
								-1,
								cr.system_object.prototype.cnds.Compare,
								null,
								0,
								false,
								false,
								false,
								7613735779421174,
								false
								,[
								[
									7,
									[
										19,
										cr.system_object.prototype.exps.len
										,[
[
											20,
											14,
											cr.plugins_.TextBox.prototype.exps.Text,
											true,
											null
										]
										]
									]
								]
,								[
									8,
									3
								]
,								[
									7,
									[
										0,
										15
									]
								]
								]
							]
							],
							[
							[
								0,
								cr.plugins_.WebStorage.prototype.acts.StoreLocal,
								null,
								2012649223025616,
								false
								,[
								[
									1,
									[
										2,
										"fullname"
									]
								]
,								[
									7,
									[
										20,
										18,
										cr.plugins_.TextBox.prototype.exps.Text,
										true,
										null
									]
								]
								]
							]
,							[
								0,
								cr.plugins_.WebStorage.prototype.acts.StoreLocal,
								null,
								344000129456492,
								false
								,[
								[
									1,
									[
										2,
										"email"
									]
								]
,								[
									7,
									[
										20,
										19,
										cr.plugins_.TextBox.prototype.exps.Text,
										true,
										null
									]
								]
								]
							]
,							[
								0,
								cr.plugins_.WebStorage.prototype.acts.StoreLocal,
								null,
								197120057726378,
								false
								,[
								[
									1,
									[
										2,
										"password"
									]
								]
,								[
									7,
									[
										20,
										14,
										cr.plugins_.TextBox.prototype.exps.Text,
										true,
										null
									]
								]
								]
							]
,							[
								0,
								cr.plugins_.WebStorage.prototype.acts.StoreLocal,
								null,
								9999929098015421,
								false
								,[
								[
									1,
									[
										2,
										"contact"
									]
								]
,								[
									7,
									[
										20,
										21,
										cr.plugins_.TextBox.prototype.exps.Text,
										true,
										null
									]
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								5490091198089381,
								[
								[
									0,
									cr.plugins_.WebStorage.prototype.cnds.CompareKeyNumber,
									null,
									0,
									false,
									false,
									false,
									703812914558387,
									false
									,[
									[
										1,
										[
											2,
											"fb"
										]
									]
,									[
										8,
										0
									]
,									[
										0,
										[
											0,
											1
										]
									]
									]
								]
								],
								[
								[
									5,
									cr.plugins_.AJAX.prototype.acts.Post,
									null,
									3118464165784351,
									false
									,[
									[
										1,
										[
											2,
											"registerFB"
										]
									]
,									[
										1,
										[
											10,
											[
												10,
												[
													10,
													[
														10,
														[
															10,
															[
																10,
																[
																	10,
																	[
																		10,
																		[
																			10,
																			[
																				10,
																				[
																					23,
																					"host"
																				]
																				,[
																					2,
																					"register.php?&password="
																				]
																			]
																			,[
																				20,
																				14,
																				cr.plugins_.TextBox.prototype.exps.Text,
																				true,
																				null
																			]
																		]
																		,[
																			2,
																			"&contact="
																		]
																	]
																	,[
																		20,
																		21,
																		cr.plugins_.TextBox.prototype.exps.Text,
																		true,
																		null
																	]
																]
																,[
																	2,
																	"&email="
																]
															]
															,[
																20,
																19,
																cr.plugins_.TextBox.prototype.exps.Text,
																true,
																null
															]
														]
														,[
															2,
															"&fullname="
														]
													]
													,[
														20,
														18,
														cr.plugins_.TextBox.prototype.exps.Text,
														true,
														null
													]
												]
												,[
													2,
													"&pic="
												]
											]
											,[
												20,
												63,
												cr.plugins_.FacebookMod.prototype.exps.MyPic,
												true,
												null
											]
										]
									]
,									[
										1,
										[
											2,
											""
										]
									]
,									[
										1,
										[
											2,
											"POST"
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								6885903784589974,
								[
								[
									0,
									cr.plugins_.WebStorage.prototype.cnds.CompareKeyNumber,
									null,
									0,
									false,
									false,
									false,
									2106309725929978,
									false
									,[
									[
										1,
										[
											2,
											"fb"
										]
									]
,									[
										8,
										0
									]
,									[
										0,
										[
											0,
											0
										]
									]
									]
								]
								],
								[
								[
									5,
									cr.plugins_.AJAX.prototype.acts.Post,
									null,
									795762167366793,
									false
									,[
									[
										1,
										[
											2,
											"register"
										]
									]
,									[
										1,
										[
											10,
											[
												10,
												[
													10,
													[
														10,
														[
															10,
															[
																10,
																[
																	10,
																	[
																		10,
																		[
																			23,
																			"host"
																		]
																		,[
																			2,
																			"register.php?&password="
																		]
																	]
																	,[
																		20,
																		14,
																		cr.plugins_.TextBox.prototype.exps.Text,
																		true,
																		null
																	]
																]
																,[
																	2,
																	"&contact="
																]
															]
															,[
																20,
																21,
																cr.plugins_.TextBox.prototype.exps.Text,
																true,
																null
															]
														]
														,[
															2,
															"&email="
														]
													]
													,[
														20,
														19,
														cr.plugins_.TextBox.prototype.exps.Text,
														true,
														null
													]
												]
												,[
													2,
													"&pic=&fullname="
												]
											]
											,[
												20,
												18,
												cr.plugins_.TextBox.prototype.exps.Text,
												true,
												null
											]
										]
									]
,									[
										1,
										[
											2,
											""
										]
									]
,									[
										1,
										[
											2,
											"POST"
										]
									]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							3417039710814594,
							[
							[
								-1,
								cr.system_object.prototype.cnds.Else,
								null,
								0,
								false,
								false,
								false,
								9738898844287514,
								false
							]
							],
							[
							[
								29,
								cr.plugins_.Text.prototype.acts.SetText,
								null,
								3114628691582799,
								false
								,[
								[
									7,
									[
										2,
										"Password should be between 6-15 characters."
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						4957840761223216,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Else,
							null,
							0,
							false,
							false,
							false,
							5958861900135693,
							false
						]
						],
						[
						[
							29,
							cr.plugins_.Text.prototype.acts.SetText,
							null,
							5024901307707111,
							false
							,[
							[
								7,
								[
									2,
									"Contact should contain 10 numbers."
								]
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					770388570102212,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Else,
						null,
						0,
						false,
						false,
						false,
						4053470292508895,
						false
					]
					],
					[
					[
						29,
						cr.plugins_.Text.prototype.acts.SetText,
						null,
						6361037320734108,
						false
						,[
						[
							7,
							[
								2,
								"Email should be in the format abc@example.com."
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8381232820900781,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Else,
					null,
					0,
					false,
					false,
					false,
					4803173381870707,
					false
				]
				],
				[
				[
					29,
					cr.plugins_.Text.prototype.acts.SetText,
					null,
					8871121659429217,
					false
					,[
					[
						7,
						[
							2,
							"Full Name should be between 5-25 characters."
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			true,
			null,
			4471090898598543,
			[
			[
				5,
				cr.plugins_.AJAX.prototype.cnds.OnComplete,
				null,
				1,
				false,
				false,
				false,
				9517405550890135,
				false
				,[
				[
					1,
					[
						2,
						"register"
					]
				]
				]
			]
,			[
				5,
				cr.plugins_.AJAX.prototype.cnds.OnComplete,
				null,
				1,
				false,
				false,
				false,
				409348544968592,
				false
				,[
				[
					1,
					[
						2,
						"registerFB"
					]
				]
				]
			]
			],
			[
			[
				29,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				7089932309750741,
				false
				,[
				[
					7,
					[
						20,
						5,
						cr.plugins_.AJAX.prototype.exps.LastData,
						true,
						null
					]
				]
				]
			]
			]
			,[
			[
				0,
				null,
				false,
				null,
				6806048739643819,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					5422733555947209,
					false
					,[
					[
						7,
						[
							19,
							cr.system_object.prototype.exps.find
							,[
[
								20,
								5,
								cr.plugins_.AJAX.prototype.exps.LastData,
								true,
								null
							]
,[
								2,
								"@"
							]
							]
						]
					]
,					[
						8,
						2
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					0,
					cr.plugins_.WebStorage.prototype.acts.StoreLocal,
					null,
					9237648928300773,
					false
					,[
					[
						1,
						[
							2,
							"hcid"
						]
					]
,					[
						7,
						[
							20,
							5,
							cr.plugins_.AJAX.prototype.exps.LastData,
							true,
							null
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.GoToLayout,
					null,
					6301263863968117,
					false
					,[
					[
						6,
						"UniqueID"
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			8341088063616494,
			[
			[
				-1,
				cr.system_object.prototype.cnds.OnLayoutStart,
				null,
				1,
				false,
				false,
				false,
				5508482205952822,
				false
			]
			],
			[
			[
				18,
				cr.plugins_.TextBox.prototype.acts.SetCSSStyle,
				null,
				2672227743477693,
				false
				,[
				[
					1,
					[
						2,
						"border-style"
					]
				]
,				[
					1,
					[
						2,
						"none"
					]
				]
				]
			]
,			[
				18,
				cr.plugins_.TextBox.prototype.acts.SetCSSStyle,
				null,
				3166994474655623,
				false
				,[
				[
					1,
					[
						2,
						"outline-style"
					]
				]
,				[
					1,
					[
						2,
						"none"
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			7384696716070271,
			[
			[
				1,
				cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
				null,
				1,
				false,
				false,
				false,
				1165605778231036,
				false
			]
,			[
				1,
				cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
				null,
				0,
				false,
				false,
				false,
				628753639623169,
				false
				,[
				[
					4,
					62
				]
				]
			]
,			[
				0,
				cr.plugins_.WebStorage.prototype.cnds.CompareKeyNumber,
				null,
				0,
				false,
				false,
				false,
				6648235428316817,
				false
				,[
				[
					1,
					[
						2,
						"fb"
					]
				]
,				[
					8,
					0
				]
,				[
					0,
					[
						0,
						0
					]
				]
				]
			]
			],
			[
			[
				0,
				cr.plugins_.WebStorage.prototype.acts.StoreLocal,
				null,
				6514137866775259,
				false
				,[
				[
					1,
					[
						2,
						"fb"
					]
				]
,				[
					7,
					[
						0,
						3
					]
				]
				]
			]
,			[
				63,
				cr.plugins_.FacebookMod.prototype.acts.LogIn,
				null,
				410466292956574,
				false
				,[
				[
					3,
					1
				]
,				[
					3,
					1
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			606097571179108,
			[
			[
				63,
				cr.plugins_.FacebookMod.prototype.cnds.OnNameAvailable,
				null,
				1,
				false,
				false,
				false,
				3435197367744015,
				false
			]
,			[
				63,
				cr.plugins_.FacebookMod.prototype.cnds.IsLoggedIn,
				null,
				0,
				false,
				false,
				false,
				1459054183447246,
				false
			]
,			[
				0,
				cr.plugins_.WebStorage.prototype.cnds.CompareKeyNumber,
				null,
				0,
				false,
				false,
				false,
				2477161811953327,
				false
				,[
				[
					1,
					[
						2,
						"fb"
					]
				]
,				[
					8,
					0
				]
,				[
					0,
					[
						0,
						3
					]
				]
				]
			]
			],
			[
			[
				0,
				cr.plugins_.WebStorage.prototype.acts.StoreLocal,
				null,
				9584165733326771,
				false
				,[
				[
					1,
					[
						2,
						"fb"
					]
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			993444699671069,
			[
			[
				0,
				cr.plugins_.WebStorage.prototype.cnds.CompareKeyNumber,
				null,
				0,
				false,
				false,
				false,
				8042898270554403,
				false
				,[
				[
					1,
					[
						2,
						"fb"
					]
				]
,				[
					8,
					0
				]
,				[
					0,
					[
						0,
						1
					]
				]
				]
			]
			],
			[
			[
				62,
				cr.plugins_.Sprite.prototype.acts.SetOpacity,
				null,
				5259236801139366,
				false
				,[
				[
					0,
					[
						0,
						50
					]
				]
				]
			]
,			[
				18,
				cr.plugins_.TextBox.prototype.acts.SetText,
				null,
				6101610680329855,
				false
				,[
				[
					1,
					[
						20,
						0,
						cr.plugins_.WebStorage.prototype.exps.LocalValue,
						true,
						null
						,[
[
							2,
							"fullname"
						]
						]
					]
				]
				]
			]
,			[
				19,
				cr.plugins_.TextBox.prototype.acts.SetText,
				null,
				8223297436678074,
				false
				,[
				[
					1,
					[
						20,
						0,
						cr.plugins_.WebStorage.prototype.exps.LocalValue,
						true,
						null
						,[
[
							2,
							"email"
						]
						]
					]
				]
				]
			]
,			[
				0,
				cr.plugins_.WebStorage.prototype.acts.StoreLocal,
				null,
				4584500239768323,
				false
				,[
				[
					1,
					[
						2,
						"fb_id"
					]
				]
,				[
					7,
					[
						19,
						cr.system_object.prototype.exps.str
						,[
[
							20,
							63,
							cr.plugins_.FacebookMod.prototype.exps.UserID,
							false,
							null
						]
						]
					]
				]
				]
			]
,			[
				19,
				cr.plugins_.TextBox.prototype.acts.SetEnabled,
				null,
				3319787420678773,
				false
				,[
				[
					3,
					0
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			8837925290820633,
			[
			[
				-1,
				cr.system_object.prototype.cnds.EveryTick,
				null,
				0,
				false,
				false,
				false,
				2087917342996882,
				false
			]
			],
			[
			[
				32,
				cr.plugins_.Sprite.prototype.acts.SetX,
				null,
				8365722200140867,
				false
				,[
				[
					0,
					[
						7,
						[
							19,
							cr.system_object.prototype.exps.viewportright
							,[
[
								0,
								0
							]
							]
						]
						,[
							0,
							2
						]
					]
				]
				]
			]
,			[
				47,
				cr.plugins_.Sprite.prototype.acts.SetX,
				null,
				7880901896060672,
				false
				,[
				[
					0,
					[
						5,
						[
							20,
							14,
							cr.plugins_.TextBox.prototype.exps.X,
							false,
							null
						]
						,[
							20,
							47,
							cr.plugins_.Sprite.prototype.exps.Width,
							false,
							null
						]
					]
				]
				]
			]
			]
			,[
			[
				0,
				null,
				false,
				null,
				509889203098723,
				[
				[
					9,
					cr.plugins_.Text.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					2876575658826077,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"buttontext"
						]
					]
					]
				]
				],
				[
				[
					9,
					cr.plugins_.Text.prototype.acts.SetX,
					null,
					7123292214329593,
					false
					,[
					[
						0,
						[
							20,
							32,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			7812200845466218,
			[
			[
				97,
				cr.plugins_.Phonegap.prototype.cnds.OnBack,
				null,
				1,
				false,
				false,
				false,
				6610727907043231,
				false
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.GoToLayout,
				null,
				2170511445788127,
				false
				,[
				[
					6,
					"mainLogin"
				]
				]
			]
			]
		]
		]
	]
,	[
		"UniqueID",
		[
		[
			2,
			"Global",
			false
		]
,		[
			0,
			null,
			false,
			null,
			6675755029708213,
			[
			[
				-1,
				cr.system_object.prototype.cnds.OnLayoutStart,
				null,
				1,
				false,
				false,
				false,
				1847427622743111,
				false
			]
			],
			[
			[
				24,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				9465743299450567,
				false
				,[
				[
					7,
					[
						20,
						0,
						cr.plugins_.WebStorage.prototype.exps.LocalValue,
						true,
						null
						,[
[
							2,
							"hcid"
						]
						]
					]
				]
				]
			]
,			[
				60,
				cr.plugins_.TextBox.prototype.acts.SetText,
				null,
				3343270135122969,
				false
				,[
				[
					1,
					[
						20,
						0,
						cr.plugins_.WebStorage.prototype.exps.LocalValue,
						true,
						null
						,[
[
							2,
							"hcid"
						]
						]
					]
				]
				]
			]
,			[
				86,
				cr.behaviors.Pin.prototype.acts.Pin,
				"Pin",
				6220304099556973,
				false
				,[
				[
					4,
					8
				]
,				[
					3,
					0
				]
				]
			]
,			[
				9,
				cr.behaviors.Pin.prototype.acts.Pin,
				"Pin",
				1213797083269232,
				false
				,[
				[
					4,
					8
				]
,				[
					3,
					0
				]
				]
			]
,			[
				60,
				cr.behaviors.Pin.prototype.acts.Pin,
				"Pin",
				3284221964332633,
				false
				,[
				[
					4,
					8
				]
,				[
					3,
					0
				]
				]
			]
,			[
				29,
				cr.behaviors.Pin.prototype.acts.Pin,
				"Pin",
				4340927932801606,
				false
				,[
				[
					4,
					8
				]
,				[
					3,
					0
				]
				]
			]
,			[
				77,
				cr.behaviors.Pin.prototype.acts.Pin,
				"Pin",
				5419123232349468,
				false
				,[
				[
					4,
					8
				]
,				[
					3,
					0
				]
				]
			]
,			[
				40,
				cr.behaviors.Pin.prototype.acts.Pin,
				"Pin",
				6076536548408739,
				false
				,[
				[
					4,
					8
				]
,				[
					3,
					0
				]
				]
			]
			]
			,[
			[
				0,
				null,
				false,
				null,
				3535269884652372,
				[
				[
					9,
					cr.plugins_.Text.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					9594056516985518,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"1"
						]
					]
					]
				]
				],
				[
				[
					9,
					cr.plugins_.Text.prototype.acts.SetText,
					null,
					4799546573597785,
					false
					,[
					[
						7,
						[
							10,
							[
								2,
								"Verify by clicking on the link sent to ur mail id - "
							]
							,[
								20,
								0,
								cr.plugins_.WebStorage.prototype.exps.LocalValue,
								true,
								null
								,[
[
									2,
									"email"
								]
								]
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				7385788650096012,
				[
				[
					9,
					cr.plugins_.Text.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					2113889852415599,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"button"
						]
					]
					]
				]
				],
				[
				]
			]
,			[
				0,
				null,
				false,
				null,
				5981994031350709,
				[
				[
					0,
					cr.plugins_.WebStorage.prototype.cnds.CompareKeyNumber,
					null,
					0,
					false,
					false,
					false,
					8118337496421079,
					false
					,[
					[
						1,
						[
							2,
							"fb"
						]
					]
,					[
						8,
						0
					]
,					[
						0,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					29,
					cr.plugins_.Text.prototype.acts.SetText,
					null,
					6203094562360519,
					false
					,[
					[
						7,
						[
							2,
							""
						]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					7500884120414117,
					[
					[
						9,
						cr.plugins_.Text.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						6625120702144426,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								2,
								"1"
							]
						]
						]
					]
					],
					[
					[
						9,
						cr.plugins_.Text.prototype.acts.SetText,
						null,
						349888178794723,
						false
						,[
						[
							7,
							[
								2,
								"Share ur HC id and start saving paper."
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					5990283190148721,
					[
					[
						9,
						cr.plugins_.Text.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						91502142235392,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								2,
								"button"
							]
						]
						]
					]
					],
					[
					[
						9,
						cr.plugins_.Text.prototype.acts.SetText,
						null,
						4806777890878586,
						false
						,[
						[
							7,
							[
								2,
								"goto My HelloCards"
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			2588449647104904,
			[
			[
				1,
				cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
				null,
				1,
				false,
				false,
				false,
				3656919759690325,
				false
			]
,			[
				1,
				cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
				null,
				0,
				false,
				false,
				false,
				3383009054540428,
				false
				,[
				[
					4,
					32
				]
				]
			]
,			[
				0,
				cr.plugins_.WebStorage.prototype.cnds.CompareKeyNumber,
				null,
				0,
				false,
				false,
				false,
				4280115237270871,
				false
				,[
				[
					1,
					[
						2,
						"fb"
					]
				]
,				[
					8,
					0
				]
,				[
					0,
					[
						0,
						0
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.GoToLayout,
				null,
				3581629737702177,
				false
				,[
				[
					6,
					"Login"
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			5542845574656762,
			[
			[
				1,
				cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
				null,
				1,
				false,
				false,
				false,
				3024486942808724,
				false
			]
,			[
				1,
				cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
				null,
				0,
				false,
				false,
				false,
				4792217778378013,
				false
				,[
				[
					4,
					9
				]
				]
			]
,			[
				9,
				cr.plugins_.Text.prototype.cnds.CompareInstanceVar,
				null,
				0,
				false,
				false,
				false,
				1320790372210123,
				false
				,[
				[
					10,
					0
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						2,
						"button1"
					]
				]
				]
			]
,			[
				60,
				cr.plugins_.TextBox.prototype.cnds.CompareText,
				null,
				0,
				false,
				true,
				false,
				6356607838775037,
				false
				,[
				[
					1,
					[
						2,
						""
					]
				]
,				[
					3,
					0
				]
				]
			]
			],
			[
			[
				5,
				cr.plugins_.AJAX.prototype.acts.Post,
				null,
				2665377363936204,
				false
				,[
				[
					1,
					[
						2,
						"saveHandle"
					]
				]
,				[
					1,
					[
						10,
						[
							10,
							[
								10,
								[
									10,
									[
										23,
										"host"
									]
									,[
										2,
										"saveHandle.php?hcid="
									]
								]
								,[
									20,
									60,
									cr.plugins_.TextBox.prototype.exps.Text,
									true,
									null
								]
							]
							,[
								2,
								"&email="
							]
						]
						,[
							20,
							0,
							cr.plugins_.WebStorage.prototype.exps.LocalValue,
							true,
							null
							,[
[
								2,
								"email"
							]
							]
						]
					]
				]
,				[
					1,
					[
						2,
						""
					]
				]
,				[
					1,
					[
						2,
						"POST"
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			1964578678630048,
			[
			[
				5,
				cr.plugins_.AJAX.prototype.cnds.OnComplete,
				null,
				1,
				false,
				false,
				false,
				6571761033705277,
				false
				,[
				[
					1,
					[
						2,
						"saveHandle"
					]
				]
				]
			]
			],
			[
			[
				0,
				cr.plugins_.WebStorage.prototype.acts.StoreLocal,
				null,
				8836986531955162,
				false
				,[
				[
					1,
					[
						2,
						"hcid"
					]
				]
,				[
					7,
					[
						20,
						60,
						cr.plugins_.TextBox.prototype.exps.Text,
						true,
						null
					]
				]
				]
			]
,			[
				29,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				9780441878793043,
				false
				,[
				[
					7,
					[
						20,
						5,
						cr.plugins_.AJAX.prototype.exps.LastData,
						true,
						null
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			9478032204552694,
			[
			[
				1,
				cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
				null,
				1,
				false,
				false,
				false,
				9727554714000061,
				false
			]
,			[
				1,
				cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
				null,
				0,
				false,
				false,
				false,
				2164963789838273,
				false
				,[
				[
					4,
					32
				]
				]
			]
,			[
				0,
				cr.plugins_.WebStorage.prototype.cnds.CompareKeyNumber,
				null,
				0,
				false,
				false,
				false,
				3577743405878447,
				false
				,[
				[
					1,
					[
						2,
						"fb"
					]
				]
,				[
					8,
					0
				]
,				[
					0,
					[
						0,
						1
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.GoToLayout,
				null,
				2464197113526724,
				false
				,[
				[
					6,
					"MyCards"
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			5796369355121675,
			[
			[
				1,
				cr.plugins_.Touch.prototype.cnds.OnTouchObject,
				null,
				1,
				false,
				false,
				false,
				1999992619587326,
				false
				,[
				[
					4,
					29
				]
				]
			]
,			[
				0,
				cr.plugins_.WebStorage.prototype.cnds.CompareKeyNumber,
				null,
				0,
				false,
				false,
				false,
				1376223064977257,
				false
				,[
				[
					1,
					[
						2,
						"fb"
					]
				]
,				[
					8,
					0
				]
,				[
					0,
					[
						0,
						0
					]
				]
				]
			]
			],
			[
			[
				5,
				cr.plugins_.AJAX.prototype.acts.Post,
				null,
				6475882539116661,
				false
				,[
				[
					1,
					[
						2,
						"verify"
					]
				]
,				[
					1,
					[
						10,
						[
							10,
							[
								10,
								[
									23,
									"host"
								]
								,[
									2,
									"verify.php?&hcid="
								]
							]
							,[
								23,
								"hcid"
							]
						]
						,[
							2,
							"&mail=yes"
						]
					]
				]
,				[
					1,
					[
						2,
						""
					]
				]
,				[
					1,
					[
						2,
						"POST"
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			9466716790682274,
			[
			[
				5,
				cr.plugins_.AJAX.prototype.cnds.OnComplete,
				null,
				1,
				false,
				false,
				false,
				4991944896933083,
				false
				,[
				[
					1,
					[
						2,
						"verify"
					]
				]
				]
			]
			],
			[
			[
				29,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				9000286054371083,
				false
				,[
				[
					7,
					[
						2,
						"Verification Mail Sent!"
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			1870953376233513,
			[
			[
				-1,
				cr.system_object.prototype.cnds.TriggerOnce,
				null,
				0,
				false,
				false,
				false,
				7403695190425033,
				false
			]
,			[
				0,
				cr.plugins_.WebStorage.prototype.cnds.CompareKeyNumber,
				null,
				0,
				false,
				false,
				false,
				3806616240025396,
				false
				,[
				[
					1,
					[
						2,
						"fb"
					]
				]
,				[
					8,
					0
				]
,				[
					0,
					[
						0,
						1
					]
				]
				]
			]
			],
			[
			[
				63,
				cr.plugins_.FacebookMod.prototype.acts.PromptToShareApp,
				null,
				897957738838433,
				false
				,[
				[
					1,
					[
						10,
						[
							2,
							"It’s time to get rid of the business cards hassle.I have just created my awesome virtual business card using HelloCard. Join and Save my virtual business card on HelloCard at @"
						]
						,[
							20,
							0,
							cr.plugins_.WebStorage.prototype.exps.LocalValue,
							true,
							null
							,[
[
								2,
								"hcid"
							]
							]
						]
					]
				]
,				[
					1,
					[
						2,
						"HelloCard App"
					]
				]
,				[
					1,
					[
						2,
						"Create ur virtual hellocard, save paper and be free from carrying those heavy business cards."
					]
				]
,				[
					1,
					[
						2,
						""
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			4820923846325959,
			[
			[
				-1,
				cr.system_object.prototype.cnds.EveryTick,
				null,
				0,
				false,
				false,
				false,
				774129425776176,
				false
			]
			],
			[
			[
				8,
				cr.plugins_.Sprite.prototype.acts.SetX,
				null,
				5898898654287913,
				false
				,[
				[
					0,
					[
						7,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.abs
								,[
[
									19,
									cr.system_object.prototype.exps.viewportleft
									,[
[
										0,
										0
									]
									]
								]
								]
							]
							,[
								19,
								cr.system_object.prototype.exps.viewportright
								,[
[
									0,
									0
								]
								]
							]
						]
						,[
							0,
							2
						]
					]
				]
				]
			]
,			[
				32,
				cr.plugins_.Sprite.prototype.acts.SetX,
				null,
				6199243255222431,
				false
				,[
				[
					0,
					[
						4,
						[
							7,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.abs
									,[
[
										19,
										cr.system_object.prototype.exps.viewportleft
										,[
[
											0,
											0
										]
										]
									]
									]
								]
								,[
									19,
									cr.system_object.prototype.exps.viewportright
									,[
[
										0,
										0
									]
									]
								]
							]
							,[
								0,
								2
							]
						]
						,[
							0,
							100
						]
					]
				]
				]
			]
,			[
				32,
				cr.plugins_.Sprite.prototype.acts.SetWidth,
				null,
				6371152885531444,
				false
				,[
				[
					0,
					[
						4,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.abs
								,[
[
									19,
									cr.system_object.prototype.exps.viewportleft
									,[
[
										0,
										0
									]
									]
								]
								]
							]
							,[
								19,
								cr.system_object.prototype.exps.viewportright
								,[
[
									0,
									0
								]
								]
							]
						]
						,[
							0,
							200
						]
					]
				]
				]
			]
			]
		]
		]
	]
,	[
		"Model",
		[
		[
			2,
			"Global",
			false
		]
,		[
			0,
			null,
			false,
			null,
			2176934753380183,
			[
			[
				-1,
				cr.system_object.prototype.cnds.OnLayoutStart,
				null,
				1,
				false,
				false,
				false,
				4904875453410122,
				false
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				6154057932017038,
				false
				,[
				[
					11,
					"SavedCards"
				]
,				[
					7,
					[
						20,
						0,
						cr.plugins_.WebStorage.prototype.exps.LocalValue,
						true,
						null
						,[
[
							2,
							"SavedCards"
						]
						]
					]
				]
				]
			]
,			[
				39,
				cr.plugins_.TextBox.prototype.acts.SetCSSStyle,
				null,
				4021124693116822,
				false
				,[
				[
					1,
					[
						2,
						"border-style"
					]
				]
,				[
					1,
					[
						2,
						"none"
					]
				]
				]
			]
,			[
				39,
				cr.plugins_.TextBox.prototype.acts.SetCSSStyle,
				null,
				9355855378536557,
				false
				,[
				[
					1,
					[
						2,
						"outline-style"
					]
				]
,				[
					1,
					[
						2,
						"none"
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				3150243947597034,
				false
				,[
				[
					11,
					"count"
				]
,				[
					7,
					[
						7,
						[
							5,
							[
								19,
								cr.system_object.prototype.exps.tokencount
								,[
[
									23,
									"SavedCards"
								]
,[
									2,
									"|"
								]
								]
							]
							,[
								0,
								1
							]
						]
						,[
							0,
							5
						]
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetGroupActive,
				null,
				2512092571903265,
				false
				,[
				[
					1,
					[
						2,
						"ShowCards2"
					]
				]
,				[
					3,
					1
				]
				]
			]
,			[
				5,
				cr.plugins_.AJAX.prototype.acts.Post,
				null,
				3904710068519125,
				false
				,[
				[
					1,
					[
						2,
						"GetSavedCards"
					]
				]
,				[
					1,
					[
						10,
						[
							10,
							[
								23,
								"host"
							]
							,[
								2,
								"retrieveSaved.php?hcid="
							]
						]
						,[
							20,
							0,
							cr.plugins_.WebStorage.prototype.exps.LocalValue,
							true,
							null
							,[
[
								2,
								"hcid"
							]
							]
						]
					]
				]
,				[
					1,
					[
						2,
						""
					]
				]
,				[
					1,
					[
						2,
						"POST"
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			7062835352597003,
			[
			[
				5,
				cr.plugins_.AJAX.prototype.cnds.OnComplete,
				null,
				1,
				false,
				false,
				false,
				9251898781886519,
				false
				,[
				[
					1,
					[
						2,
						"GetSavedCards"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				7396831636084487,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					7434880135983022,
					false
					,[
					[
						7,
						[
							20,
							0,
							cr.plugins_.WebStorage.prototype.exps.LocalValue,
							true,
							null
							,[
[
								2,
								"SavedCards"
							]
							]
						]
					]
,					[
						8,
						1
					]
,					[
						7,
						[
							20,
							5,
							cr.plugins_.AJAX.prototype.exps.LastData,
							true,
							null
						]
					]
					]
				]
				],
				[
				[
					0,
					cr.plugins_.WebStorage.prototype.acts.StoreLocal,
					null,
					356488083803013,
					false
					,[
					[
						1,
						[
							2,
							"SavedCards"
						]
					]
,					[
						7,
						[
							20,
							5,
							cr.plugins_.AJAX.prototype.exps.LastData,
							true,
							null
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.RestartLayout,
					null,
					5410504128855599,
					false
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				2302951373006357,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					2339885847002492,
					false
					,[
					[
						7,
						[
							20,
							5,
							cr.plugins_.AJAX.prototype.exps.LastData,
							true,
							null
						]
					]
,					[
						8,
						1
					]
,					[
						7,
						[
							2,
							""
						]
					]
					]
				]
				],
				[
				[
					0,
					cr.plugins_.WebStorage.prototype.acts.StoreLocal,
					null,
					2434021855076061,
					false
					,[
					[
						1,
						[
							2,
							"SavedCards"
						]
					]
,					[
						7,
						[
							20,
							5,
							cr.plugins_.AJAX.prototype.exps.LastData,
							true,
							null
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					7156543845956967,
					false
					,[
					[
						11,
						"SavedCards"
					]
,					[
						7,
						[
							20,
							0,
							cr.plugins_.WebStorage.prototype.exps.LocalValue,
							true,
							null
							,[
[
								2,
								"SavedCards"
							]
							]
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					8382826899103578,
					false
					,[
					[
						11,
						"count"
					]
,					[
						7,
						[
							7,
							[
								5,
								[
									19,
									cr.system_object.prototype.exps.tokencount
									,[
[
										23,
										"SavedCards"
									]
,[
										2,
										"|"
									]
									]
								]
								,[
									0,
									1
								]
							]
							,[
								0,
								5
							]
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetGroupActive,
					null,
					7735940920792491,
					false
					,[
					[
						1,
						[
							2,
							"ShowCards2"
						]
					]
,					[
						3,
						1
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[false, "ShowCards2"],
			false,
			null,
			2085764636387359,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				2085764636387359,
				false
				,[
				[
					1,
					[
						2,
						"ShowCards2"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				7677516801321318,
				[
				[
					-1,
					cr.system_object.prototype.cnds.For,
					null,
					0,
					true,
					false,
					false,
					2901987919508933,
					false
					,[
					[
						1,
						[
							2,
							"loop"
						]
					]
,					[
						0,
						[
							0,
							1
						]
					]
,					[
						0,
						[
							23,
							"count"
						]
					]
					]
				]
				],
				[
				[
					70,
					cr.plugins_.iScroll.prototype.acts.remove_Line,
					null,
					5073388307265615,
					false
					,[
					[
						7,
						[
							19,
							cr.system_object.prototype.exps.tokenat
							,[
[
								23,
								"SavedCards"
							]
,[
								4,
								[
									6,
									[
										5,
										[
											19,
											cr.system_object.prototype.exps.loopindex
											,[
[
												2,
												"loop"
											]
											]
										]
										,[
											0,
											1
										]
									]
									,[
										0,
										5
									]
								]
								,[
									0,
									3
								]
							]
,[
								2,
								"|"
							]
							]
						]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					8311618177186208,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						7344971846614384,
						false
						,[
						[
							7,
							[
								19,
								cr.system_object.prototype.exps.tokenat
								,[
[
									23,
									"SavedCards"
								]
,[
									6,
									[
										5,
										[
											19,
											cr.system_object.prototype.exps.loopindex
										]
										,[
											0,
											1
										]
									]
									,[
										0,
										5
									]
								]
,[
									2,
									"|"
								]
								]
							]
						]
,						[
							8,
							1
						]
,						[
							7,
							[
								2,
								""
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						1312696262936691,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Compare,
							null,
							0,
							false,
							false,
							false,
							9951111159273596,
							false
							,[
							[
								7,
								[
									19,
									cr.system_object.prototype.exps.find
									,[
[
										19,
										cr.system_object.prototype.exps.tokenat
										,[
[
											23,
											"SavedCards"
										]
,[
											4,
											[
												6,
												[
													5,
													[
														19,
														cr.system_object.prototype.exps.loopindex
													]
													,[
														0,
														1
													]
												]
												,[
													0,
													5
												]
											]
											,[
												0,
												2
											]
										]
,[
											2,
											"|"
										]
										]
									]
,[
										2,
										"http"
									]
									]
								]
							]
,							[
								8,
								5
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
						],
						[
						[
							70,
							cr.plugins_.iScroll.prototype.acts.add_Line,
							null,
							8320909563802092,
							false
							,[
							[
								7,
								[
									10,
									[
										10,
										[
											10,
											[
												10,
												[
													10,
													[
														10,
														[
															2,
															"<div style=\"margin-top:-10px;\"><img src=\""
														]
														,[
															19,
															cr.system_object.prototype.exps.tokenat
															,[
[
																23,
																"SavedCards"
															]
,[
																4,
																[
																	6,
																	[
																		5,
																		[
																			19,
																			cr.system_object.prototype.exps.loopindex
																		]
																		,[
																			0,
																			1
																		]
																	]
																	,[
																		0,
																		5
																	]
																]
																,[
																	0,
																	2
																]
															]
,[
																2,
																"|"
															]
															]
														]
													]
													,[
														2,
														"\" width=\"55px\" height=\"55px\" style=\"float:left;margin-right:15px;border-radius:100px;border: 4px solid #ffffff;\"/></div><div><p style=\"font-size:15px;padding-top:10px\">"
													]
												]
												,[
													19,
													cr.system_object.prototype.exps.tokenat
													,[
[
														23,
														"SavedCards"
													]
,[
														6,
														[
															5,
															[
																19,
																cr.system_object.prototype.exps.loopindex
															]
															,[
																0,
																1
															]
														]
														,[
															0,
															5
														]
													]
,[
														2,
														"|"
													]
													]
												]
											]
											,[
												2,
												"</p><p style=\"font-size:10px;padding-top:5px\">"
											]
										]
										,[
											19,
											cr.system_object.prototype.exps.tokenat
											,[
[
												23,
												"SavedCards"
											]
,[
												4,
												[
													6,
													[
														5,
														[
															19,
															cr.system_object.prototype.exps.loopindex
														]
														,[
															0,
															1
														]
													]
													,[
														0,
														5
													]
												]
												,[
													0,
													1
												]
											]
,[
												2,
												"|"
											]
											]
										]
									]
									,[
										2,
										"</p></div>"
									]
								]
							]
,							[
								7,
								[
									19,
									cr.system_object.prototype.exps.tokenat
									,[
[
										23,
										"SavedCards"
									]
,[
										4,
										[
											6,
											[
												5,
												[
													19,
													cr.system_object.prototype.exps.loopindex
												]
												,[
													0,
													1
												]
											]
											,[
												0,
												5
											]
										]
										,[
											0,
											3
										]
									]
,[
										2,
										"|"
									]
									]
								]
							]
,							[
								3,
								1
							]
,							[
								7,
								[
									2,
									"#"
								]
							]
,							[
								0,
								[
									0,
									0
								]
							]
,							[
								0,
								[
									0,
									0
								]
							]
,							[
								0,
								[
									0,
									5
								]
							]
,							[
								0,
								[
									0,
									0
								]
							]
,							[
								0,
								[
									0,
									3
								]
							]
,							[
								0,
								[
									0,
									0
								]
							]
,							[
								7,
								[
									0,
									58
								]
							]
,							[
								7,
								[
									2,
									"auto"
								]
							]
,							[
								7,
								[
									2,
									"auto"
								]
							]
,							[
								7,
								[
									2,
									"#f5f5f5"
								]
							]
,							[
								3,
								0
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						7009646196081684,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Compare,
							null,
							0,
							false,
							false,
							false,
							6276920022714771,
							false
							,[
							[
								7,
								[
									19,
									cr.system_object.prototype.exps.find
									,[
[
										19,
										cr.system_object.prototype.exps.tokenat
										,[
[
											23,
											"SavedCards"
										]
,[
											4,
											[
												6,
												[
													5,
													[
														19,
														cr.system_object.prototype.exps.loopindex
													]
													,[
														0,
														1
													]
												]
												,[
													0,
													5
												]
											]
											,[
												0,
												2
											]
										]
,[
											2,
											"|"
										]
										]
									]
,[
										2,
										"phpimg"
									]
									]
								]
							]
,							[
								8,
								5
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
						],
						[
						[
							70,
							cr.plugins_.iScroll.prototype.acts.add_Line,
							null,
							535441934808179,
							false
							,[
							[
								7,
								[
									10,
									[
										10,
										[
											10,
											[
												10,
												[
													10,
													[
														10,
														[
															10,
															[
																2,
																"<div style=\"margin-top:-10px;\"><img src=\""
															]
															,[
																23,
																"host"
															]
														]
														,[
															19,
															cr.system_object.prototype.exps.tokenat
															,[
[
																23,
																"SavedCards"
															]
,[
																4,
																[
																	6,
																	[
																		5,
																		[
																			19,
																			cr.system_object.prototype.exps.loopindex
																		]
																		,[
																			0,
																			1
																		]
																	]
																	,[
																		0,
																		5
																	]
																]
																,[
																	0,
																	2
																]
															]
,[
																2,
																"|"
															]
															]
														]
													]
													,[
														2,
														" \" width=\"55px\" height=\"55px\" style=\"float:left;margin-right:15px;border-radius:100px;border: 4px solid #ffffff;\"/></div><div><p style=\"font-size:15px;padding-top:10px\">"
													]
												]
												,[
													19,
													cr.system_object.prototype.exps.tokenat
													,[
[
														23,
														"SavedCards"
													]
,[
														6,
														[
															5,
															[
																19,
																cr.system_object.prototype.exps.loopindex
															]
															,[
																0,
																1
															]
														]
														,[
															0,
															5
														]
													]
,[
														2,
														"|"
													]
													]
												]
											]
											,[
												2,
												"</p><p style=\"font-size:10px;padding-top:5px\">"
											]
										]
										,[
											19,
											cr.system_object.prototype.exps.tokenat
											,[
[
												23,
												"SavedCards"
											]
,[
												4,
												[
													6,
													[
														5,
														[
															19,
															cr.system_object.prototype.exps.loopindex
														]
														,[
															0,
															1
														]
													]
													,[
														0,
														5
													]
												]
												,[
													0,
													1
												]
											]
,[
												2,
												"|"
											]
											]
										]
									]
									,[
										2,
										"</p></div>"
									]
								]
							]
,							[
								7,
								[
									19,
									cr.system_object.prototype.exps.tokenat
									,[
[
										23,
										"SavedCards"
									]
,[
										4,
										[
											6,
											[
												5,
												[
													19,
													cr.system_object.prototype.exps.loopindex
												]
												,[
													0,
													1
												]
											]
											,[
												0,
												5
											]
										]
										,[
											0,
											3
										]
									]
,[
										2,
										"|"
									]
									]
								]
							]
,							[
								3,
								1
							]
,							[
								7,
								[
									2,
									"#"
								]
							]
,							[
								0,
								[
									0,
									0
								]
							]
,							[
								0,
								[
									0,
									0
								]
							]
,							[
								0,
								[
									0,
									5
								]
							]
,							[
								0,
								[
									0,
									0
								]
							]
,							[
								0,
								[
									0,
									3
								]
							]
,							[
								0,
								[
									0,
									0
								]
							]
,							[
								7,
								[
									0,
									58
								]
							]
,							[
								7,
								[
									2,
									"auto"
								]
							]
,							[
								7,
								[
									2,
									"auto"
								]
							]
,							[
								7,
								[
									2,
									"#f5f5f5"
								]
							]
,							[
								3,
								0
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						9797136557024077,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Compare,
							null,
							0,
							false,
							false,
							false,
							1218829332949484,
							false
							,[
							[
								7,
								[
									19,
									cr.system_object.prototype.exps.len
									,[
[
										19,
										cr.system_object.prototype.exps.tokenat
										,[
[
											23,
											"SavedCards"
										]
,[
											4,
											[
												6,
												[
													5,
													[
														19,
														cr.system_object.prototype.exps.loopindex
													]
													,[
														0,
														1
													]
												]
												,[
													0,
													5
												]
											]
											,[
												0,
												2
											]
										]
,[
											2,
											"|"
										]
										]
									]
									]
								]
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
						],
						[
						[
							70,
							cr.plugins_.iScroll.prototype.acts.add_Line,
							null,
							4664495399056888,
							false
							,[
							[
								7,
								[
									10,
									[
										10,
										[
											10,
											[
												10,
												[
													10,
													[
														10,
														[
															2,
															"<div style=\"margin-top:-10px;\"><img src=\""
														]
														,[
															23,
															"host"
														]
													]
													,[
														2,
														"phpimg/default.png \" width=\"55px\" height=\"55px\" style=\"float:left;margin-right:15px;border-radius:100px;border: 4px solid #ffffff;\"/></div><div><p style=\"font-size:15px;padding-top:10px\">"
													]
												]
												,[
													19,
													cr.system_object.prototype.exps.tokenat
													,[
[
														23,
														"SavedCards"
													]
,[
														6,
														[
															5,
															[
																19,
																cr.system_object.prototype.exps.loopindex
															]
															,[
																0,
																1
															]
														]
														,[
															0,
															5
														]
													]
,[
														2,
														"|"
													]
													]
												]
											]
											,[
												2,
												"</p><p style=\"font-size:10px;padding-top:5px\">"
											]
										]
										,[
											19,
											cr.system_object.prototype.exps.tokenat
											,[
[
												23,
												"SavedCards"
											]
,[
												4,
												[
													6,
													[
														5,
														[
															19,
															cr.system_object.prototype.exps.loopindex
														]
														,[
															0,
															1
														]
													]
													,[
														0,
														5
													]
												]
												,[
													0,
													1
												]
											]
,[
												2,
												"|"
											]
											]
										]
									]
									,[
										2,
										"</p></div>"
									]
								]
							]
,							[
								7,
								[
									19,
									cr.system_object.prototype.exps.tokenat
									,[
[
										23,
										"SavedCards"
									]
,[
										4,
										[
											6,
											[
												5,
												[
													19,
													cr.system_object.prototype.exps.loopindex
												]
												,[
													0,
													1
												]
											]
											,[
												0,
												5
											]
										]
										,[
											0,
											3
										]
									]
,[
										2,
										"|"
									]
									]
								]
							]
,							[
								3,
								1
							]
,							[
								7,
								[
									2,
									"#"
								]
							]
,							[
								0,
								[
									0,
									0
								]
							]
,							[
								0,
								[
									0,
									0
								]
							]
,							[
								0,
								[
									0,
									5
								]
							]
,							[
								0,
								[
									0,
									0
								]
							]
,							[
								0,
								[
									0,
									3
								]
							]
,							[
								0,
								[
									0,
									0
								]
							]
,							[
								7,
								[
									0,
									58
								]
							]
,							[
								7,
								[
									2,
									"auto"
								]
							]
,							[
								7,
								[
									2,
									"auto"
								]
							]
,							[
								7,
								[
									2,
									"#f5f5f5"
								]
							]
,							[
								3,
								0
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						2894511658153721,
						[
						],
						[
						[
							70,
							cr.plugins_.iScroll.prototype.acts.modify_fonts,
							null,
							5293803068223302,
							false
							,[
							[
								7,
								[
									19,
									cr.system_object.prototype.exps.tokenat
									,[
[
										23,
										"SavedCards"
									]
,[
										4,
										[
											6,
											[
												5,
												[
													19,
													cr.system_object.prototype.exps.loopindex
												]
												,[
													0,
													1
												]
											]
											,[
												0,
												5
											]
										]
										,[
											0,
											3
										]
									]
,[
										2,
										"|"
									]
									]
								]
							]
,							[
								7,
								[
									2,
									"OpenSansLight"
								]
							]
,							[
								7,
								[
									2,
									"#5a5a5a"
								]
							]
,							[
								0,
								[
									0,
									12
								]
							]
							]
						]
,						[
							70,
							cr.plugins_.iScroll.prototype.acts.modify_borders,
							null,
							2647068712746303,
							false
							,[
							[
								7,
								[
									19,
									cr.system_object.prototype.exps.tokenat
									,[
[
										23,
										"SavedCards"
									]
,[
										4,
										[
											6,
											[
												5,
												[
													19,
													cr.system_object.prototype.exps.loopindex
												]
												,[
													0,
													1
												]
											]
											,[
												0,
												5
											]
										]
										,[
											0,
											3
										]
									]
,[
										2,
										"|"
									]
									]
								]
							]
,							[
								0,
								[
									0,
									0
								]
							]
,							[
								0,
								[
									1,
									0.2
								]
							]
,							[
								0,
								[
									0,
									0
								]
							]
,							[
								0,
								[
									0,
									0
								]
							]
,							[
								7,
								[
									2,
									"#DBDBDB"
								]
							]
							]
						]
,						[
							70,
							cr.plugins_.iScroll.prototype.acts.refresh_Scroller,
							null,
							7922279911307982,
							false
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					1931802390691418,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						2113648367051703,
						false
						,[
						[
							7,
							[
								19,
								cr.system_object.prototype.exps.loopindex
							]
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								23,
								"count"
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetGroupActive,
						null,
						3660355971463669,
						false
						,[
						[
							1,
							[
								2,
								"ShowCards2"
							]
						]
,						[
							3,
							2
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[false, "ShowCards3"],
			false,
			null,
			7258008695917546,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				7258008695917546,
				false
				,[
				[
					1,
					[
						2,
						"ShowCards3"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				7677516801321318,
				[
				[
					-1,
					cr.system_object.prototype.cnds.For,
					null,
					0,
					true,
					false,
					false,
					2901987919508933,
					false
					,[
					[
						1,
						[
							2,
							"loop1"
						]
					]
,					[
						0,
						[
							0,
							1
						]
					]
,					[
						0,
						[
							23,
							"count"
						]
					]
					]
				]
				],
				[
				[
					70,
					cr.plugins_.iScroll.prototype.acts.remove_Line,
					null,
					5073388307265615,
					false
					,[
					[
						7,
						[
							19,
							cr.system_object.prototype.exps.tokenat
							,[
[
								23,
								"SavedCards"
							]
,[
								4,
								[
									6,
									[
										5,
										[
											19,
											cr.system_object.prototype.exps.loopindex
											,[
[
												2,
												"loop1"
											]
											]
										]
										,[
											0,
											1
										]
									]
									,[
										0,
										5
									]
								]
								,[
									0,
									3
								]
							]
,[
								2,
								"|"
							]
							]
						]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					8311618177186208,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						7344971846614384,
						false
						,[
						[
							7,
							[
								19,
								cr.system_object.prototype.exps.tokenat
								,[
[
									23,
									"SavedCards"
								]
,[
									6,
									[
										5,
										[
											19,
											cr.system_object.prototype.exps.loopindex
										]
										,[
											0,
											1
										]
									]
									,[
										0,
										5
									]
								]
,[
									2,
									"|"
								]
								]
							]
						]
,						[
							8,
							1
						]
,						[
							7,
							[
								2,
								""
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						null,
						true,
						null,
						1814712256108176,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Compare,
							null,
							0,
							false,
							false,
							false,
							9222690399858679,
							false
							,[
							[
								7,
								[
									19,
									cr.system_object.prototype.exps.find
									,[
[
										19,
										cr.system_object.prototype.exps.tokenat
										,[
[
											23,
											"SavedCards"
										]
,[
											6,
											[
												5,
												[
													19,
													cr.system_object.prototype.exps.loopindex
												]
												,[
													0,
													1
												]
											]
											,[
												0,
												5
											]
										]
,[
											2,
											"|"
										]
										]
									]
,[
										20,
										39,
										cr.plugins_.TextBox.prototype.exps.Text,
										true,
										null
									]
									]
								]
							]
,							[
								8,
								5
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.cnds.Compare,
							null,
							0,
							false,
							false,
							false,
							2246579082647502,
							false
							,[
							[
								7,
								[
									19,
									cr.system_object.prototype.exps.find
									,[
[
										19,
										cr.system_object.prototype.exps.tokenat
										,[
[
											23,
											"SavedCards"
										]
,[
											4,
											[
												6,
												[
													5,
													[
														19,
														cr.system_object.prototype.exps.loopindex
													]
													,[
														0,
														1
													]
												]
												,[
													0,
													5
												]
											]
											,[
												0,
												4
											]
										]
,[
											2,
											"|"
										]
										]
									]
,[
										20,
										39,
										cr.plugins_.TextBox.prototype.exps.Text,
										true,
										null
									]
									]
								]
							]
,							[
								8,
								5
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							7068949359343164,
							[
							[
								-1,
								cr.system_object.prototype.cnds.Compare,
								null,
								0,
								false,
								false,
								false,
								6888261882633905,
								false
								,[
								[
									7,
									[
										19,
										cr.system_object.prototype.exps.find
										,[
[
											19,
											cr.system_object.prototype.exps.tokenat
											,[
[
												23,
												"SavedCards"
											]
,[
												4,
												[
													6,
													[
														5,
														[
															19,
															cr.system_object.prototype.exps.loopindex
														]
														,[
															0,
															1
														]
													]
													,[
														0,
														5
													]
												]
												,[
													0,
													2
												]
											]
,[
												2,
												"|"
											]
											]
										]
,[
											2,
											"http"
										]
										]
									]
								]
,								[
									8,
									5
								]
,								[
									7,
									[
										0,
										0
									]
								]
								]
							]
							],
							[
							[
								70,
								cr.plugins_.iScroll.prototype.acts.add_Line,
								null,
								3628526378797971,
								false
								,[
								[
									7,
									[
										10,
										[
											10,
											[
												10,
												[
													10,
													[
														10,
														[
															10,
															[
																2,
																"<div style=\"margin-top:-10px;\"><img src=\""
															]
															,[
																19,
																cr.system_object.prototype.exps.tokenat
																,[
[
																	23,
																	"SavedCards"
																]
,[
																	4,
																	[
																		6,
																		[
																			5,
																			[
																				19,
																				cr.system_object.prototype.exps.loopindex
																			]
																			,[
																				0,
																				1
																			]
																		]
																		,[
																			0,
																			5
																		]
																	]
																	,[
																		0,
																		2
																	]
																]
,[
																	2,
																	"|"
																]
																]
															]
														]
														,[
															2,
															"\" width=\"55px\" height=\"55px\" style=\"float:left;margin-right:15px;border-radius:100px;border: 4px solid #ffffff;\"/></div><div><p style=\"font-size:15px;padding-top:10px\">"
														]
													]
													,[
														19,
														cr.system_object.prototype.exps.tokenat
														,[
[
															23,
															"SavedCards"
														]
,[
															6,
															[
																5,
																[
																	19,
																	cr.system_object.prototype.exps.loopindex
																]
																,[
																	0,
																	1
																]
															]
															,[
																0,
																5
															]
														]
,[
															2,
															"|"
														]
														]
													]
												]
												,[
													2,
													"</p><p style=\"font-size:10px;padding-top:5px\">"
												]
											]
											,[
												19,
												cr.system_object.prototype.exps.tokenat
												,[
[
													23,
													"SavedCards"
												]
,[
													4,
													[
														6,
														[
															5,
															[
																19,
																cr.system_object.prototype.exps.loopindex
															]
															,[
																0,
																1
															]
														]
														,[
															0,
															5
														]
													]
													,[
														0,
														1
													]
												]
,[
													2,
													"|"
												]
												]
											]
										]
										,[
											2,
											"</p></div>"
										]
									]
								]
,								[
									7,
									[
										19,
										cr.system_object.prototype.exps.tokenat
										,[
[
											23,
											"SavedCards"
										]
,[
											4,
											[
												6,
												[
													5,
													[
														19,
														cr.system_object.prototype.exps.loopindex
													]
													,[
														0,
														1
													]
												]
												,[
													0,
													5
												]
											]
											,[
												0,
												3
											]
										]
,[
											2,
											"|"
										]
										]
									]
								]
,								[
									3,
									1
								]
,								[
									7,
									[
										2,
										"#"
									]
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									0,
									[
										0,
										5
									]
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									0,
									[
										0,
										3
									]
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									7,
									[
										0,
										58
									]
								]
,								[
									7,
									[
										0,
										2
									]
								]
,								[
									7,
									[
										2,
										"auto"
									]
								]
,								[
									7,
									[
										2,
										"#f5f5f5"
									]
								]
,								[
									3,
									0
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							1533979667483255,
							[
							[
								-1,
								cr.system_object.prototype.cnds.Compare,
								null,
								0,
								false,
								false,
								false,
								1037196279710402,
								false
								,[
								[
									7,
									[
										19,
										cr.system_object.prototype.exps.find
										,[
[
											19,
											cr.system_object.prototype.exps.tokenat
											,[
[
												23,
												"SavedCards"
											]
,[
												4,
												[
													6,
													[
														5,
														[
															19,
															cr.system_object.prototype.exps.loopindex
														]
														,[
															0,
															1
														]
													]
													,[
														0,
														5
													]
												]
												,[
													0,
													2
												]
											]
,[
												2,
												"|"
											]
											]
										]
,[
											2,
											"phpimg"
										]
										]
									]
								]
,								[
									8,
									5
								]
,								[
									7,
									[
										0,
										0
									]
								]
								]
							]
							],
							[
							[
								70,
								cr.plugins_.iScroll.prototype.acts.add_Line,
								null,
								3942391142237176,
								false
								,[
								[
									7,
									[
										10,
										[
											10,
											[
												10,
												[
													10,
													[
														10,
														[
															10,
															[
																10,
																[
																	2,
																	"<div style=\"margin-top:-10px;\"><img src=\""
																]
																,[
																	23,
																	"host"
																]
															]
															,[
																19,
																cr.system_object.prototype.exps.tokenat
																,[
[
																	23,
																	"SavedCards"
																]
,[
																	4,
																	[
																		6,
																		[
																			5,
																			[
																				19,
																				cr.system_object.prototype.exps.loopindex
																			]
																			,[
																				0,
																				1
																			]
																		]
																		,[
																			0,
																			5
																		]
																	]
																	,[
																		0,
																		2
																	]
																]
,[
																	2,
																	"|"
																]
																]
															]
														]
														,[
															2,
															" \" width=\"55px\" height=\"55px\" style=\"float:left;margin-right:15px;border-radius:100px;border: 4px solid #ffffff;\"/></div><div><p style=\"font-size:15px;padding-top:10px\">"
														]
													]
													,[
														19,
														cr.system_object.prototype.exps.tokenat
														,[
[
															23,
															"SavedCards"
														]
,[
															6,
															[
																5,
																[
																	19,
																	cr.system_object.prototype.exps.loopindex
																]
																,[
																	0,
																	1
																]
															]
															,[
																0,
																5
															]
														]
,[
															2,
															"|"
														]
														]
													]
												]
												,[
													2,
													"</p><p style=\"font-size:10px;padding-top:5px\">"
												]
											]
											,[
												19,
												cr.system_object.prototype.exps.tokenat
												,[
[
													23,
													"SavedCards"
												]
,[
													4,
													[
														6,
														[
															5,
															[
																19,
																cr.system_object.prototype.exps.loopindex
															]
															,[
																0,
																1
															]
														]
														,[
															0,
															5
														]
													]
													,[
														0,
														1
													]
												]
,[
													2,
													"|"
												]
												]
											]
										]
										,[
											2,
											"</p></div>"
										]
									]
								]
,								[
									7,
									[
										19,
										cr.system_object.prototype.exps.tokenat
										,[
[
											23,
											"SavedCards"
										]
,[
											4,
											[
												6,
												[
													5,
													[
														19,
														cr.system_object.prototype.exps.loopindex
													]
													,[
														0,
														1
													]
												]
												,[
													0,
													5
												]
											]
											,[
												0,
												3
											]
										]
,[
											2,
											"|"
										]
										]
									]
								]
,								[
									3,
									1
								]
,								[
									7,
									[
										2,
										"#"
									]
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									0,
									[
										0,
										5
									]
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									0,
									[
										0,
										3
									]
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									7,
									[
										0,
										58
									]
								]
,								[
									7,
									[
										0,
										2
									]
								]
,								[
									7,
									[
										2,
										"auto"
									]
								]
,								[
									7,
									[
										2,
										"#f5f5f5"
									]
								]
,								[
									3,
									0
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							8643106576733499,
							[
							[
								-1,
								cr.system_object.prototype.cnds.Compare,
								null,
								0,
								false,
								false,
								false,
								9403246540163774,
								false
								,[
								[
									7,
									[
										19,
										cr.system_object.prototype.exps.len
										,[
[
											19,
											cr.system_object.prototype.exps.tokenat
											,[
[
												23,
												"SavedCards"
											]
,[
												4,
												[
													6,
													[
														5,
														[
															19,
															cr.system_object.prototype.exps.loopindex
														]
														,[
															0,
															1
														]
													]
													,[
														0,
														5
													]
												]
												,[
													0,
													2
												]
											]
,[
												2,
												"|"
											]
											]
										]
										]
									]
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										0
									]
								]
								]
							]
							],
							[
							[
								70,
								cr.plugins_.iScroll.prototype.acts.add_Line,
								null,
								8057724480147007,
								false
								,[
								[
									7,
									[
										10,
										[
											10,
											[
												10,
												[
													10,
													[
														10,
														[
															10,
															[
																2,
																"<div style=\"margin-top:-10px;\"><img src=\""
															]
															,[
																23,
																"host"
															]
														]
														,[
															2,
															"phpimg/default.png \" width=\"55px\" height=\"55px\" style=\"float:left;margin-right:15px;border-radius:100px;border: 4px solid #ffffff;\"/></div><div><p style=\"font-size:15px;padding-top:10px\">"
														]
													]
													,[
														19,
														cr.system_object.prototype.exps.tokenat
														,[
[
															23,
															"SavedCards"
														]
,[
															6,
															[
																5,
																[
																	19,
																	cr.system_object.prototype.exps.loopindex
																]
																,[
																	0,
																	1
																]
															]
															,[
																0,
																5
															]
														]
,[
															2,
															"|"
														]
														]
													]
												]
												,[
													2,
													"</p><p style=\"font-size:10px;padding-top:5px\">"
												]
											]
											,[
												19,
												cr.system_object.prototype.exps.tokenat
												,[
[
													23,
													"SavedCards"
												]
,[
													4,
													[
														6,
														[
															5,
															[
																19,
																cr.system_object.prototype.exps.loopindex
															]
															,[
																0,
																1
															]
														]
														,[
															0,
															5
														]
													]
													,[
														0,
														1
													]
												]
,[
													2,
													"|"
												]
												]
											]
										]
										,[
											2,
											"</p></div>"
										]
									]
								]
,								[
									7,
									[
										19,
										cr.system_object.prototype.exps.tokenat
										,[
[
											23,
											"SavedCards"
										]
,[
											4,
											[
												6,
												[
													5,
													[
														19,
														cr.system_object.prototype.exps.loopindex
													]
													,[
														0,
														1
													]
												]
												,[
													0,
													5
												]
											]
											,[
												0,
												3
											]
										]
,[
											2,
											"|"
										]
										]
									]
								]
,								[
									3,
									1
								]
,								[
									7,
									[
										2,
										"#"
									]
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									0,
									[
										0,
										5
									]
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									0,
									[
										0,
										3
									]
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									7,
									[
										0,
										58
									]
								]
,								[
									7,
									[
										0,
										2
									]
								]
,								[
									7,
									[
										2,
										"auto"
									]
								]
,								[
									7,
									[
										2,
										"#f5f5f5"
									]
								]
,								[
									3,
									0
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							733592967632166,
							[
							],
							[
							[
								70,
								cr.plugins_.iScroll.prototype.acts.modify_fonts,
								null,
								7529349054527357,
								false
								,[
								[
									7,
									[
										19,
										cr.system_object.prototype.exps.tokenat
										,[
[
											23,
											"SavedCards"
										]
,[
											4,
											[
												6,
												[
													5,
													[
														19,
														cr.system_object.prototype.exps.loopindex
													]
													,[
														0,
														1
													]
												]
												,[
													0,
													5
												]
											]
											,[
												0,
												3
											]
										]
,[
											2,
											"|"
										]
										]
									]
								]
,								[
									7,
									[
										2,
										"OpenSansLight"
									]
								]
,								[
									7,
									[
										2,
										"#5a5a5a"
									]
								]
,								[
									0,
									[
										0,
										12
									]
								]
								]
							]
,							[
								70,
								cr.plugins_.iScroll.prototype.acts.modify_borders,
								null,
								559216348600288,
								false
								,[
								[
									7,
									[
										19,
										cr.system_object.prototype.exps.tokenat
										,[
[
											23,
											"SavedCards"
										]
,[
											4,
											[
												6,
												[
													5,
													[
														19,
														cr.system_object.prototype.exps.loopindex
													]
													,[
														0,
														1
													]
												]
												,[
													0,
													5
												]
											]
											,[
												0,
												3
											]
										]
,[
											2,
											"|"
										]
										]
									]
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									0,
									[
										1,
										0.2
									]
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									7,
									[
										2,
										"#DBDBDB"
									]
								]
								]
							]
,							[
								70,
								cr.plugins_.iScroll.prototype.acts.refresh_Scroller,
								null,
								6465974487941646,
								false
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					1931802390691418,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						2113648367051703,
						false
						,[
						[
							7,
							[
								19,
								cr.system_object.prototype.exps.loopindex
							]
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								23,
								"count"
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetGroupActive,
						null,
						3660355971463669,
						false
						,[
						[
							1,
							[
								2,
								"ShowCards3"
							]
						]
,						[
							3,
							2
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			5864265157563224,
			[
			[
				70,
				cr.plugins_.iScroll.prototype.cnds.isAnyClicked,
				null,
				1,
				false,
				false,
				false,
				1011966652951461,
				false
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				4857586304785299,
				false
				,[
				[
					11,
					"hcid"
				]
,				[
					7,
					[
						20,
						70,
						cr.plugins_.iScroll.prototype.exps.actualElementId,
						false,
						null
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				2717220600089737,
				false
				,[
				[
					11,
					"edit"
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.GoToLayout,
				null,
				4021113010740593,
				false
				,[
				[
					6,
					"HelloCard"
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			1637250048072689,
			[
			[
				39,
				cr.plugins_.TextBox.prototype.cnds.OnTextChanged,
				null,
				1,
				false,
				false,
				false,
				9419109354414896,
				false
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.SetGroupActive,
				null,
				2346732319534601,
				false
				,[
				[
					1,
					[
						2,
						"ShowCards3"
					]
				]
,				[
					3,
					1
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			1907284931617972,
			[
			[
				-1,
				cr.system_object.prototype.cnds.EveryTick,
				null,
				0,
				false,
				false,
				false,
				8921124826590047,
				false
			]
			],
			[
			[
				70,
				cr.plugins_.iScroll.prototype.acts.SetX,
				null,
				9648276521022974,
				false
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.viewportleft
						,[
[
							0,
							0
						]
						]
					]
				]
				]
			]
,			[
				70,
				cr.plugins_.iScroll.prototype.acts.SetWidth,
				null,
				7815506903218446,
				false
				,[
				[
					0,
					[
						4,
						[
							19,
							cr.system_object.prototype.exps.viewportright
							,[
[
								0,
								0
							]
							]
						]
						,[
							19,
							cr.system_object.prototype.exps.abs
							,[
[
								19,
								cr.system_object.prototype.exps.viewportleft
								,[
[
									0,
									0
								]
								]
							]
							]
						]
					]
				]
				]
			]
,			[
				34,
				cr.plugins_.Sprite.prototype.acts.SetX,
				null,
				5713276729304599,
				false
				,[
				[
					0,
					[
						7,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewportleft
								,[
[
									0,
									0
								]
								]
							]
							,[
								19,
								cr.system_object.prototype.exps.viewportright
								,[
[
									0,
									0
								]
								]
							]
						]
						,[
							0,
							2
						]
					]
				]
				]
			]
,			[
				34,
				cr.plugins_.Sprite.prototype.acts.SetWidth,
				null,
				369089899616646,
				false
				,[
				[
					0,
					[
						4,
						[
							19,
							cr.system_object.prototype.exps.viewportright
							,[
[
								0,
								0
							]
							]
						]
						,[
							19,
							cr.system_object.prototype.exps.abs
							,[
[
								19,
								cr.system_object.prototype.exps.viewportleft
								,[
[
									0,
									0
								]
								]
							]
							]
						]
					]
				]
				]
			]
,			[
				33,
				cr.plugins_.Sprite.prototype.acts.SetWidth,
				null,
				5222892175295041,
				false
				,[
				[
					0,
					[
						7,
						[
							20,
							34,
							cr.plugins_.Sprite.prototype.exps.Width,
							false,
							null
						]
						,[
							0,
							4
						]
					]
				]
				]
			]
,			[
				33,
				cr.plugins_.Sprite.prototype.acts.SetX,
				null,
				6227872003380188,
				false
				,[
				[
					0,
					[
						5,
						[
							5,
							[
								6,
								[
									4,
									[
										21,
										33,
										false,
										null
										,0
									]
									,[
										0,
										1
									]
								]
								,[
									7,
									[
										20,
										34,
										cr.plugins_.Sprite.prototype.exps.Width,
										false,
										null
									]
									,[
										0,
										4
									]
								]
							]
							,[
								7,
								[
									20,
									34,
									cr.plugins_.Sprite.prototype.exps.Width,
									false,
									null
								]
								,[
									0,
									8
								]
							]
						]
						,[
							19,
							cr.system_object.prototype.exps.abs
							,[
[
								19,
								cr.system_object.prototype.exps.viewportleft
								,[
[
									0,
									0
								]
								]
							]
							]
						]
					]
				]
				]
			]
,			[
				40,
				cr.plugins_.Sprite.prototype.acts.SetX,
				null,
				9965548411972405,
				false
				,[
				[
					0,
					[
						5,
						[
							7,
							[
								20,
								34,
								cr.plugins_.Sprite.prototype.exps.Width,
								false,
								null
							]
							,[
								0,
								2
							]
						]
						,[
							19,
							cr.system_object.prototype.exps.abs
							,[
[
								19,
								cr.system_object.prototype.exps.viewportleft
								,[
[
									0,
									0
								]
								]
							]
							]
						]
					]
				]
				]
			]
			]
			,[
			[
				0,
				null,
				false,
				null,
				2867958271855372,
				[
				[
					9,
					cr.plugins_.Text.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					9697395739941892,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"heading"
						]
					]
					]
				]
				],
				[
				[
					9,
					cr.plugins_.Text.prototype.acts.SetX,
					null,
					6640682396295643,
					false
					,[
					[
						0,
						[
							5,
							[
								7,
								[
									20,
									34,
									cr.plugins_.Sprite.prototype.exps.Width,
									false,
									null
								]
								,[
									0,
									2
								]
							]
							,[
								19,
								cr.system_object.prototype.exps.abs
								,[
[
									19,
									cr.system_object.prototype.exps.viewportleft
									,[
[
										0,
										0
									]
									]
								]
								]
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8124837267526521,
				[
				[
					40,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					7649438093576678,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					49,
					cr.plugins_.Sprite.prototype.acts.SetPosToObject,
					null,
					1943489960293029,
					false
					,[
					[
						4,
						40
					]
,					[
						7,
						[
							0,
							2
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8194368315275963,
				[
				[
					33,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					8658587855787397,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					6132396298291581,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					77,
					cr.plugins_.Text.prototype.cnds.CompareText,
					null,
					0,
					false,
					false,
					false,
					2494003731773187,
					false
					,[
					[
						1,
						[
							2,
							"search"
						]
					]
,					[
						3,
						0
					]
					]
				]
				],
				[
				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetX,
					null,
					5131229381299944,
					false
					,[
					[
						0,
						[
							20,
							33,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
					]
					]
				]
,				[
					77,
					cr.plugins_.Text.prototype.acts.SetX,
					null,
					7118693062499427,
					false
					,[
					[
						0,
						[
							20,
							17,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				1878221026955998,
				[
				[
					33,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					1401956439164714,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					77,
					cr.plugins_.Text.prototype.cnds.CompareText,
					null,
					0,
					false,
					false,
					false,
					34216998525508,
					false
					,[
					[
						1,
						[
							2,
							"saved"
						]
					]
,					[
						3,
						0
					]
					]
				]
				],
				[
				[
					36,
					cr.plugins_.Sprite.prototype.acts.SetX,
					null,
					9740221854230516,
					false
					,[
					[
						0,
						[
							20,
							33,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
					]
					]
				]
,				[
					77,
					cr.plugins_.Text.prototype.acts.SetX,
					null,
					5985925685981264,
					false
					,[
					[
						0,
						[
							20,
							36,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				7819607085856998,
				[
				[
					33,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					9807316553748722,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							2
						]
					]
					]
				]
,				[
					77,
					cr.plugins_.Text.prototype.cnds.CompareText,
					null,
					0,
					false,
					false,
					false,
					4547230194928424,
					false
					,[
					[
						1,
						[
							2,
							"my cards"
						]
					]
,					[
						3,
						0
					]
					]
				]
				],
				[
				[
					37,
					cr.plugins_.Sprite.prototype.acts.SetX,
					null,
					3567577765211237,
					false
					,[
					[
						0,
						[
							20,
							33,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
					]
					]
				]
,				[
					77,
					cr.plugins_.Text.prototype.acts.SetX,
					null,
					4277733572103636,
					false
					,[
					[
						0,
						[
							20,
							37,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3338772404904637,
				[
				[
					33,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					8963751022033036,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							3
						]
					]
					]
				]
,				[
					77,
					cr.plugins_.Text.prototype.cnds.CompareText,
					null,
					0,
					false,
					false,
					false,
					8688230154255658,
					false
					,[
					[
						1,
						[
							2,
							"settings"
						]
					]
,					[
						3,
						0
					]
					]
				]
				],
				[
				[
					38,
					cr.plugins_.Sprite.prototype.acts.SetX,
					null,
					6605902694859281,
					false
					,[
					[
						0,
						[
							20,
							33,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
					]
					]
				]
,				[
					77,
					cr.plugins_.Text.prototype.acts.SetX,
					null,
					1068331039623047,
					false
					,[
					[
						0,
						[
							20,
							38,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			4985004017144295,
			[
			[
				97,
				cr.plugins_.Phonegap.prototype.cnds.OnBack,
				null,
				1,
				false,
				false,
				false,
				7777923993606107,
				false
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.GoToLayout,
				null,
				2457749753995791,
				false
				,[
				[
					6,
					"Search"
				]
				]
			]
			]
		]
		]
	]
,	[
		"MyCards",
		[
		[
			1,
			"imageReload",
			0,
			1,
false,false,7027564272570314,false
		]
,		[
			1,
			"pos",
			0,
			0,
false,false,9202522550363971,false
		]
,		[
			2,
			"Global",
			false
		]
,		[
			0,
			null,
			false,
			null,
			6350228164321272,
			[
			[
				-1,
				cr.system_object.prototype.cnds.OnLayoutStart,
				null,
				1,
				false,
				false,
				false,
				240725837707547,
				false
			]
			],
			[
			[
				5,
				cr.plugins_.AJAX.prototype.acts.Post,
				null,
				7413445096537437,
				false
				,[
				[
					1,
					[
						2,
						"getMyCard"
					]
				]
,				[
					1,
					[
						10,
						[
							10,
							[
								10,
								[
									23,
									"host"
								]
								,[
									2,
									"retrieve.php?hcid="
								]
							]
							,[
								20,
								0,
								cr.plugins_.WebStorage.prototype.exps.LocalValue,
								true,
								null
								,[
[
									2,
									"hcid"
								]
								]
							]
						]
						,[
							2,
							"&email=&name=&contact="
						]
					]
				]
,				[
					1,
					[
						2,
						""
					]
				]
,				[
					1,
					[
						2,
						"POST"
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				7323730553370481,
				false
				,[
				[
					11,
					"edit"
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
,			[
				0,
				cr.plugins_.WebStorage.prototype.acts.StoreLocal,
				null,
				2544236897298121,
				false
				,[
				[
					1,
					[
						2,
						"privacy"
					]
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
			]
			,[
			[
				0,
				null,
				false,
				null,
				9339139956946371,
				[
				[
					2,
					cr.plugins_.Browser.prototype.cnds.IsOnline,
					null,
					0,
					false,
					true,
					false,
					3498941946976656,
					false
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.LoadState,
					null,
					5052736854295913,
					false
					,[
					[
						1,
						[
							2,
							"mycardsOffline"
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9180119036440089,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					7790099580300156,
					false
					,[
					[
						7,
						[
							19,
							cr.system_object.prototype.exps.find
							,[
[
								20,
								0,
								cr.plugins_.WebStorage.prototype.exps.LocalValue,
								true,
								null
								,[
[
									2,
									"propic"
								]
								]
							]
,[
								2,
								"http"
							]
							]
						]
					]
,					[
						8,
						5
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					3079335835972004,
					false
					,[
					[
						11,
						"imageReload"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					54,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					8868726200758357,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					70,
					cr.plugins_.iScroll.prototype.acts.add_Line,
					null,
					1894998519237108,
					false
					,[
					[
						7,
						[
							10,
							[
								10,
								[
									10,
									[
										10,
										[
											10,
											[
												10,
												[
													2,
													"<div style=\"margin-top:-10px;\"><img src=\""
												]
												,[
													20,
													0,
													cr.plugins_.WebStorage.prototype.exps.LocalValue,
													true,
													null
													,[
[
														2,
														"propic"
													]
													]
												]
											]
											,[
												2,
												"\" width=\"55px\" height=\"55px\" style=\"float:left;margin-right:15px;border-radius:100px;border: 4px solid #ffffff;\"/></div><div><p style=\"font-size:15px;padding-top:10px\">"
											]
										]
										,[
											20,
											0,
											cr.plugins_.WebStorage.prototype.exps.LocalValue,
											true,
											null
											,[
[
												2,
												"fullname"
											]
											]
										]
									]
									,[
										2,
										"</p><p style=\"font-size:10px;padding-top:5px\">"
									]
								]
								,[
									20,
									0,
									cr.plugins_.WebStorage.prototype.exps.LocalValue,
									true,
									null
									,[
[
										2,
										"designation"
									]
									]
								]
							]
							,[
								2,
								"</p></div>"
							]
						]
					]
,					[
						7,
						[
							20,
							0,
							cr.plugins_.WebStorage.prototype.exps.LocalValue,
							true,
							null
							,[
[
								2,
								"hcid"
							]
							]
						]
					]
,					[
						3,
						1
					]
,					[
						7,
						[
							2,
							"#"
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							0,
							5
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							0,
							3
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						7,
						[
							0,
							58
						]
					]
,					[
						7,
						[
							2,
							"auto"
						]
					]
,					[
						7,
						[
							2,
							"auto"
						]
					]
,					[
						7,
						[
							2,
							"#f5f5f5"
						]
					]
,					[
						3,
						0
					]
					]
				]
,				[
					98,
					cr.plugins_.iScroll.prototype.acts.modify_borders,
					null,
					2304131826689899,
					false
					,[
					[
						7,
						[
							20,
							0,
							cr.plugins_.WebStorage.prototype.exps.LocalValue,
							true,
							null
							,[
[
								2,
								"hcid"
							]
							]
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							1,
							0.2
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						7,
						[
							2,
							"#DBDBDB"
						]
					]
					]
				]
,				[
					70,
					cr.plugins_.iScroll.prototype.acts.modify_fonts,
					null,
					3599853670324123,
					false
					,[
					[
						7,
						[
							20,
							0,
							cr.plugins_.WebStorage.prototype.exps.LocalValue,
							true,
							null
							,[
[
								2,
								"hcid"
							]
							]
						]
					]
,					[
						7,
						[
							2,
							"OpenSansLight"
						]
					]
,					[
						7,
						[
							2,
							"#5a5a5a"
						]
					]
,					[
						0,
						[
							0,
							12
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				7881075508323073,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					1058799770209456,
					false
					,[
					[
						7,
						[
							19,
							cr.system_object.prototype.exps.find
							,[
[
								20,
								0,
								cr.plugins_.WebStorage.prototype.exps.LocalValue,
								true,
								null
								,[
[
									2,
									"propic"
								]
								]
							]
,[
								2,
								"phpimg"
							]
							]
						]
					]
,					[
						8,
						5
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					2141931416232618,
					false
					,[
					[
						11,
						"imageReload"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					54,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					9927050324215213,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					98,
					cr.plugins_.iScroll.prototype.acts.add_Line,
					null,
					5581032204133679,
					false
					,[
					[
						7,
						[
							10,
							[
								10,
								[
									10,
									[
										10,
										[
											10,
											[
												10,
												[
													10,
													[
														2,
														"<div style=\"margin-top:-10px;\"><img src=\""
													]
													,[
														23,
														"host"
													]
												]
												,[
													20,
													0,
													cr.plugins_.WebStorage.prototype.exps.LocalValue,
													true,
													null
													,[
[
														2,
														"propic"
													]
													]
												]
											]
											,[
												2,
												"\" width=\"55px\" height=\"55px\" style=\"float:left;margin-right:15px;border-radius:100px;border: 4px solid #ffffff;\"/></div><div><p style=\"padding-top:10px; font-size:15px\">"
											]
										]
										,[
											20,
											0,
											cr.plugins_.WebStorage.prototype.exps.LocalValue,
											true,
											null
											,[
[
												2,
												"fullname"
											]
											]
										]
									]
									,[
										2,
										"</p><p style=\"font-size:10px;padding-top:5px\">"
									]
								]
								,[
									20,
									0,
									cr.plugins_.WebStorage.prototype.exps.LocalValue,
									true,
									null
									,[
[
										2,
										"designation"
									]
									]
								]
							]
							,[
								2,
								"</p></div>"
							]
						]
					]
,					[
						7,
						[
							20,
							0,
							cr.plugins_.WebStorage.prototype.exps.LocalValue,
							true,
							null
							,[
[
								2,
								"hcid"
							]
							]
						]
					]
,					[
						3,
						1
					]
,					[
						7,
						[
							2,
							"#"
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							0,
							5
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							0,
							3
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						7,
						[
							0,
							58
						]
					]
,					[
						7,
						[
							2,
							"auto"
						]
					]
,					[
						7,
						[
							2,
							"auto"
						]
					]
,					[
						7,
						[
							2,
							"#f5f5f5"
						]
					]
,					[
						3,
						0
					]
					]
				]
,				[
					98,
					cr.plugins_.iScroll.prototype.acts.modify_borders,
					null,
					7310682653186672,
					false
					,[
					[
						7,
						[
							20,
							0,
							cr.plugins_.WebStorage.prototype.exps.LocalValue,
							true,
							null
							,[
[
								2,
								"hcid"
							]
							]
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							1,
							0.2
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						7,
						[
							2,
							"#DBDBDB"
						]
					]
					]
				]
,				[
					70,
					cr.plugins_.iScroll.prototype.acts.modify_fonts,
					null,
					5620247404178611,
					false
					,[
					[
						7,
						[
							20,
							0,
							cr.plugins_.WebStorage.prototype.exps.LocalValue,
							true,
							null
							,[
[
								2,
								"hcid"
							]
							]
						]
					]
,					[
						7,
						[
							2,
							"OpenSansLight"
						]
					]
,					[
						7,
						[
							2,
							"#5a5a5a"
						]
					]
,					[
						0,
						[
							0,
							12
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4346888532050749,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					8749838039128601,
					false
					,[
					[
						7,
						[
							19,
							cr.system_object.prototype.exps.len
							,[
[
								20,
								0,
								cr.plugins_.WebStorage.prototype.exps.LocalValue,
								true,
								null
								,[
[
									2,
									"propic"
								]
								]
							]
							]
						]
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					6284946470386404,
					false
					,[
					[
						11,
						"imageReload"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					54,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					637518668314424,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					98,
					cr.plugins_.iScroll.prototype.acts.add_Line,
					null,
					5914232021539842,
					false
					,[
					[
						7,
						[
							10,
							[
								10,
								[
									10,
									[
										10,
										[
											10,
											[
												10,
												[
													10,
													[
														2,
														"<div style=\"margin-top:-10px;\"><img src=\""
													]
													,[
														23,
														"host"
													]
												]
												,[
													2,
													"phpimg/default.png"
												]
											]
											,[
												2,
												"\" width=\"55px\" height=\"55px\" style=\"float:left;margin-right:15px;border-radius:100px;border: 4px solid #ffffff;\"/></div><div><p style=\"padding-top:10px; font-size:15px\">"
											]
										]
										,[
											20,
											0,
											cr.plugins_.WebStorage.prototype.exps.LocalValue,
											true,
											null
											,[
[
												2,
												"fullname"
											]
											]
										]
									]
									,[
										2,
										"</p><p style=\"font-size:10px;padding-top:5px;\">"
									]
								]
								,[
									20,
									0,
									cr.plugins_.WebStorage.prototype.exps.LocalValue,
									true,
									null
									,[
[
										2,
										"designation"
									]
									]
								]
							]
							,[
								2,
								"</p></div>"
							]
						]
					]
,					[
						7,
						[
							20,
							0,
							cr.plugins_.WebStorage.prototype.exps.LocalValue,
							true,
							null
							,[
[
								2,
								"hcid"
							]
							]
						]
					]
,					[
						3,
						1
					]
,					[
						7,
						[
							2,
							"#"
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							0,
							5
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							0,
							3
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						7,
						[
							0,
							58
						]
					]
,					[
						7,
						[
							2,
							"auto"
						]
					]
,					[
						7,
						[
							2,
							"auto"
						]
					]
,					[
						7,
						[
							2,
							"#f5f5f5"
						]
					]
,					[
						3,
						0
					]
					]
				]
,				[
					98,
					cr.plugins_.iScroll.prototype.acts.modify_borders,
					null,
					9168917642633009,
					false
					,[
					[
						7,
						[
							20,
							0,
							cr.plugins_.WebStorage.prototype.exps.LocalValue,
							true,
							null
							,[
[
								2,
								"hcid"
							]
							]
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							1,
							0.2
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						7,
						[
							2,
							"#DBDBDB"
						]
					]
					]
				]
,				[
					70,
					cr.plugins_.iScroll.prototype.acts.modify_fonts,
					null,
					5287016846988261,
					false
					,[
					[
						7,
						[
							20,
							0,
							cr.plugins_.WebStorage.prototype.exps.LocalValue,
							true,
							null
							,[
[
								2,
								"hcid"
							]
							]
						]
					]
,					[
						7,
						[
							2,
							"OpenSansLight"
						]
					]
,					[
						7,
						[
							2,
							"#5a5a5a"
						]
					]
,					[
						0,
						[
							0,
							12
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			7275198828176098,
			[
			[
				45,
				cr.plugins_.Text.prototype.cnds.CompareText,
				null,
				0,
				false,
				false,
				false,
				712566073410228,
				false
				,[
				[
					1,
					[
						2,
						""
					]
				]
,				[
					3,
					0
				]
				]
			]
			],
			[
			[
				45,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				9820239665244448,
				false
				,[
				[
					7,
					[
						2,
						"-"
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			6123298490980696,
			[
			[
				5,
				cr.plugins_.AJAX.prototype.cnds.OnComplete,
				null,
				1,
				false,
				false,
				false,
				9861219218885136,
				false
				,[
				[
					1,
					[
						2,
						"getMyCard"
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.Compare,
				null,
				0,
				false,
				false,
				false,
				8840863076337464,
				false
				,[
				[
					7,
					[
						20,
						5,
						cr.plugins_.AJAX.prototype.exps.LastData,
						true,
						null
					]
				]
,				[
					8,
					1
				]
,				[
					7,
					[
						2,
						""
					]
				]
				]
			]
			],
			[
			[
				44,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				6291975248350293,
				false
				,[
				[
					7,
					[
						19,
						cr.system_object.prototype.exps.tokenat
						,[
[
							20,
							5,
							cr.plugins_.AJAX.prototype.exps.LastData,
							true,
							null
						]
,[
							0,
							1
						]
,[
							2,
							"|"
						]
						]
					]
				]
				]
			]
,			[
				45,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				7943958880532286,
				false
				,[
				[
					7,
					[
						19,
						cr.system_object.prototype.exps.tokenat
						,[
[
							20,
							5,
							cr.plugins_.AJAX.prototype.exps.LastData,
							true,
							null
						]
,[
							0,
							2
						]
,[
							2,
							"|"
						]
						]
					]
				]
				]
			]
,			[
				44,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				6569116248187181,
				false
				,[
				[
					3,
					1
				]
				]
			]
,			[
				45,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				2328913609946429,
				false
				,[
				[
					3,
					1
				]
				]
			]
,			[
				42,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				1206744874360704,
				false
				,[
				[
					3,
					1
				]
				]
			]
,			[
				98,
				cr.plugins_.iScroll.prototype.acts.remove_Line,
				null,
				4991691632976738,
				false
				,[
				[
					7,
					[
						20,
						0,
						cr.plugins_.WebStorage.prototype.exps.LocalValue,
						true,
						null
						,[
[
							2,
							"hcid"
						]
						]
					]
				]
				]
			]
			]
			,[
			[
				0,
				null,
				false,
				null,
				5836932050035752,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					9380527382856882,
					false
					,[
					[
						7,
						[
							19,
							cr.system_object.prototype.exps.find
							,[
[
								20,
								0,
								cr.plugins_.WebStorage.prototype.exps.LocalValue,
								true,
								null
								,[
[
									2,
									"propic"
								]
								]
							]
,[
								2,
								"http"
							]
							]
						]
					]
,					[
						8,
						5
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					4310024001970879,
					false
					,[
					[
						11,
						"imageReload"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					98,
					cr.plugins_.iScroll.prototype.acts.add_Line,
					null,
					1961744718707935,
					false
					,[
					[
						7,
						[
							10,
							[
								10,
								[
									10,
									[
										10,
										[
											10,
											[
												10,
												[
													2,
													"<div style=\"margin-top:-10px;\"><img src=\""
												]
												,[
													19,
													cr.system_object.prototype.exps.tokenat
													,[
[
														20,
														5,
														cr.plugins_.AJAX.prototype.exps.LastData,
														true,
														null
													]
,[
														0,
														6
													]
,[
														2,
														"|"
													]
													]
												]
											]
											,[
												2,
												"\" width=\"55px\" height=\"55px\" style=\"float:left;margin-right:15px;border-radius:100px;border: 4px solid #ffffff;\"/></div><div><p style=\"padding-top:10px; font-size:15px\">"
											]
										]
										,[
											19,
											cr.system_object.prototype.exps.tokenat
											,[
[
												20,
												5,
												cr.plugins_.AJAX.prototype.exps.LastData,
												true,
												null
											]
,[
												0,
												1
											]
,[
												2,
												"|"
											]
											]
										]
									]
									,[
										2,
										"</p><p style=\"font-size:10px;padding-top:5px;\">"
									]
								]
								,[
									19,
									cr.system_object.prototype.exps.tokenat
									,[
[
										20,
										5,
										cr.plugins_.AJAX.prototype.exps.LastData,
										true,
										null
									]
,[
										0,
										2
									]
,[
										2,
										"|"
									]
									]
								]
							]
							,[
								2,
								"</div>"
							]
						]
					]
,					[
						7,
						[
							19,
							cr.system_object.prototype.exps.tokenat
							,[
[
								20,
								5,
								cr.plugins_.AJAX.prototype.exps.LastData,
								true,
								null
							]
,[
								0,
								0
							]
,[
								2,
								"|"
							]
							]
						]
					]
,					[
						3,
						1
					]
,					[
						7,
						[
							2,
							"#"
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							0,
							5
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							0,
							3
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						7,
						[
							0,
							58
						]
					]
,					[
						7,
						[
							2,
							"auto"
						]
					]
,					[
						7,
						[
							2,
							"auto"
						]
					]
,					[
						7,
						[
							2,
							"#f5f5f5"
						]
					]
,					[
						3,
						0
					]
					]
				]
,				[
					98,
					cr.plugins_.iScroll.prototype.acts.modify_borders,
					null,
					4392775403796723,
					false
					,[
					[
						7,
						[
							19,
							cr.system_object.prototype.exps.tokenat
							,[
[
								20,
								5,
								cr.plugins_.AJAX.prototype.exps.LastData,
								true,
								null
							]
,[
								0,
								0
							]
,[
								2,
								"|"
							]
							]
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							1,
							0.2
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						7,
						[
							2,
							"#DBDBDB"
						]
					]
					]
				]
,				[
					70,
					cr.plugins_.iScroll.prototype.acts.modify_fonts,
					null,
					8781323066199077,
					false
					,[
					[
						7,
						[
							19,
							cr.system_object.prototype.exps.tokenat
							,[
[
								20,
								5,
								cr.plugins_.AJAX.prototype.exps.LastData,
								true,
								null
							]
,[
								0,
								0
							]
,[
								2,
								"|"
							]
							]
						]
					]
,					[
						7,
						[
							2,
							"OpenSansLight"
						]
					]
,					[
						7,
						[
							2,
							"#5a5a5a"
						]
					]
,					[
						0,
						[
							0,
							12
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				1402719647266375,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					4901943666721171,
					false
					,[
					[
						7,
						[
							19,
							cr.system_object.prototype.exps.find
							,[
[
								20,
								0,
								cr.plugins_.WebStorage.prototype.exps.LocalValue,
								true,
								null
								,[
[
									2,
									"propic"
								]
								]
							]
,[
								2,
								"phpimg"
							]
							]
						]
					]
,					[
						8,
						5
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					3366212360546663,
					false
					,[
					[
						11,
						"imageReload"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					98,
					cr.plugins_.iScroll.prototype.acts.add_Line,
					null,
					7520738698940729,
					false
					,[
					[
						7,
						[
							10,
							[
								10,
								[
									10,
									[
										10,
										[
											10,
											[
												10,
												[
													10,
													[
														2,
														"<div style=\"margin-top:-10px;\"><img src=\""
													]
													,[
														23,
														"host"
													]
												]
												,[
													19,
													cr.system_object.prototype.exps.tokenat
													,[
[
														20,
														5,
														cr.plugins_.AJAX.prototype.exps.LastData,
														true,
														null
													]
,[
														0,
														6
													]
,[
														2,
														"|"
													]
													]
												]
											]
											,[
												2,
												"\" width=\"55px\" height=\"55px\" style=\"float:left;margin-right:15px;border-radius:100px;border: 4px solid #ffffff;\"/></div><div><p style=\"padding-top:10px; font-size:15px\">"
											]
										]
										,[
											19,
											cr.system_object.prototype.exps.tokenat
											,[
[
												20,
												5,
												cr.plugins_.AJAX.prototype.exps.LastData,
												true,
												null
											]
,[
												0,
												1
											]
,[
												2,
												"|"
											]
											]
										]
									]
									,[
										2,
										"</p><p style=\"font-size:10px;padding-top:5px;\">"
									]
								]
								,[
									19,
									cr.system_object.prototype.exps.tokenat
									,[
[
										20,
										5,
										cr.plugins_.AJAX.prototype.exps.LastData,
										true,
										null
									]
,[
										0,
										2
									]
,[
										2,
										"|"
									]
									]
								]
							]
							,[
								2,
								"</div>"
							]
						]
					]
,					[
						7,
						[
							19,
							cr.system_object.prototype.exps.tokenat
							,[
[
								20,
								5,
								cr.plugins_.AJAX.prototype.exps.LastData,
								true,
								null
							]
,[
								0,
								0
							]
,[
								2,
								"|"
							]
							]
						]
					]
,					[
						3,
						1
					]
,					[
						7,
						[
							2,
							"#"
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							0,
							5
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							0,
							3
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						7,
						[
							0,
							58
						]
					]
,					[
						7,
						[
							2,
							"auto"
						]
					]
,					[
						7,
						[
							2,
							"auto"
						]
					]
,					[
						7,
						[
							2,
							"#f5f5f5"
						]
					]
,					[
						3,
						0
					]
					]
				]
,				[
					98,
					cr.plugins_.iScroll.prototype.acts.modify_borders,
					null,
					3791498508349847,
					false
					,[
					[
						7,
						[
							19,
							cr.system_object.prototype.exps.tokenat
							,[
[
								20,
								5,
								cr.plugins_.AJAX.prototype.exps.LastData,
								true,
								null
							]
,[
								0,
								0
							]
,[
								2,
								"|"
							]
							]
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							1,
							0.2
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						7,
						[
							2,
							"#DBDBDB"
						]
					]
					]
				]
,				[
					70,
					cr.plugins_.iScroll.prototype.acts.modify_fonts,
					null,
					5645268973573701,
					false
					,[
					[
						7,
						[
							19,
							cr.system_object.prototype.exps.tokenat
							,[
[
								20,
								5,
								cr.plugins_.AJAX.prototype.exps.LastData,
								true,
								null
							]
,[
								0,
								0
							]
,[
								2,
								"|"
							]
							]
						]
					]
,					[
						7,
						[
							2,
							"OpenSansLight"
						]
					]
,					[
						7,
						[
							2,
							"#5a5a5a"
						]
					]
,					[
						0,
						[
							0,
							12
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				1071873473522629,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					1235681279505617,
					false
					,[
					[
						7,
						[
							19,
							cr.system_object.prototype.exps.len
							,[
[
								20,
								0,
								cr.plugins_.WebStorage.prototype.exps.LocalValue,
								true,
								null
								,[
[
									2,
									"propic"
								]
								]
							]
							]
						]
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					6898502594719892,
					false
					,[
					[
						11,
						"imageReload"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					98,
					cr.plugins_.iScroll.prototype.acts.add_Line,
					null,
					7399763161048579,
					false
					,[
					[
						7,
						[
							10,
							[
								10,
								[
									10,
									[
										10,
										[
											10,
											[
												10,
												[
													10,
													[
														2,
														"<div style=\"margin-top:-10px;\"><img src=\""
													]
													,[
														23,
														"host"
													]
												]
												,[
													2,
													"phpimg/default.png"
												]
											]
											,[
												2,
												"\" width=\"55px\" height=\"55px\" style=\"float:left;margin-right:15px;border-radius:100px;border: 4px solid #ffffff;\"/></div><div><p style=\"padding-top:10px; font-size:15px\">"
											]
										]
										,[
											19,
											cr.system_object.prototype.exps.tokenat
											,[
[
												20,
												5,
												cr.plugins_.AJAX.prototype.exps.LastData,
												true,
												null
											]
,[
												0,
												1
											]
,[
												2,
												"|"
											]
											]
										]
									]
									,[
										2,
										"</p><p style=\"font-size:10px;padding-top:5px;\">"
									]
								]
								,[
									19,
									cr.system_object.prototype.exps.tokenat
									,[
[
										20,
										5,
										cr.plugins_.AJAX.prototype.exps.LastData,
										true,
										null
									]
,[
										0,
										2
									]
,[
										2,
										"|"
									]
									]
								]
							]
							,[
								2,
								"</div>"
							]
						]
					]
,					[
						7,
						[
							19,
							cr.system_object.prototype.exps.tokenat
							,[
[
								20,
								5,
								cr.plugins_.AJAX.prototype.exps.LastData,
								true,
								null
							]
,[
								0,
								0
							]
,[
								2,
								"|"
							]
							]
						]
					]
,					[
						3,
						1
					]
,					[
						7,
						[
							2,
							"#"
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							0,
							5
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							0,
							3
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						7,
						[
							0,
							58
						]
					]
,					[
						7,
						[
							2,
							"auto"
						]
					]
,					[
						7,
						[
							2,
							"auto"
						]
					]
,					[
						7,
						[
							2,
							"#f5f5f5"
						]
					]
,					[
						3,
						0
					]
					]
				]
,				[
					98,
					cr.plugins_.iScroll.prototype.acts.modify_borders,
					null,
					2273786080006853,
					false
					,[
					[
						7,
						[
							19,
							cr.system_object.prototype.exps.tokenat
							,[
[
								20,
								5,
								cr.plugins_.AJAX.prototype.exps.LastData,
								true,
								null
							]
,[
								0,
								0
							]
,[
								2,
								"|"
							]
							]
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							1,
							0.2
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						7,
						[
							2,
							"#DBDBDB"
						]
					]
					]
				]
,				[
					70,
					cr.plugins_.iScroll.prototype.acts.modify_fonts,
					null,
					1131559052654302,
					false
					,[
					[
						7,
						[
							19,
							cr.system_object.prototype.exps.tokenat
							,[
[
								20,
								5,
								cr.plugins_.AJAX.prototype.exps.LastData,
								true,
								null
							]
,[
								0,
								0
							]
,[
								2,
								"|"
							]
							]
						]
					]
,					[
						7,
						[
							2,
							"OpenSansLight"
						]
					]
,					[
						7,
						[
							2,
							"#5a5a5a"
						]
					]
,					[
						0,
						[
							0,
							12
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			331227267718953,
			[
			[
				1,
				cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
				null,
				1,
				false,
				false,
				false,
				8326400008002718,
				false
			]
,			[
				1,
				cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
				null,
				0,
				false,
				false,
				false,
				7775016734910322,
				false
				,[
				[
					4,
					32
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				3116522684065378,
				false
				,[
				[
					11,
					"edit"
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.GoToLayout,
				null,
				8561222458031816,
				false
				,[
				[
					6,
					"HelloCard"
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			7277387526772005,
			[
			[
				98,
				cr.plugins_.iScroll.prototype.cnds.isClicked,
				null,
				1,
				false,
				false,
				false,
				6197442760056639,
				false
				,[
				[
					7,
					[
						20,
						0,
						cr.plugins_.WebStorage.prototype.exps.LocalValue,
						true,
						null
						,[
[
							2,
							"hcid"
						]
						]
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				8853832827368997,
				false
				,[
				[
					11,
					"edit"
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.GoToLayout,
				null,
				7289032702650223,
				false
				,[
				[
					6,
					"HelloCard"
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			1072403693285912,
			[
			[
				1,
				cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
				null,
				1,
				false,
				false,
				false,
				7442427804470174,
				false
			]
,			[
				1,
				cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
				null,
				0,
				false,
				false,
				false,
				9458262767694238,
				false
				,[
				[
					4,
					48
				]
				]
			]
			],
			[
			[
				29,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				2790878461187193,
				false
				,[
				[
					7,
					[
						2,
						"Adding multiple cards coming soon.!\nwe won't let u wait for long."
					]
				]
				]
			]
,			[
				95,
				cr.plugins_.PhonegapDialog.prototype.acts.Alert,
				null,
				7475710904215677,
				false
				,[
				[
					1,
					[
						2,
						"Add New Card"
					]
				]
,				[
					1,
					[
						2,
						"We are adding this feature soon.!!"
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			1590788097486874,
			[
			[
				-1,
				cr.system_object.prototype.cnds.EveryTick,
				null,
				0,
				false,
				false,
				false,
				4399084210801532,
				false
			]
			],
			[
			[
				48,
				cr.plugins_.Sprite.prototype.acts.SetX,
				null,
				9403527172294198,
				false
				,[
				[
					0,
					[
						0,
						75
					]
				]
				]
			]
,			[
				32,
				cr.plugins_.Sprite.prototype.acts.SetX,
				null,
				1248723394327077,
				false
				,[
				[
					0,
					[
						5,
						[
							19,
							cr.system_object.prototype.exps.viewportright
							,[
[
								0,
								0
							]
							]
						]
						,[
							0,
							75
						]
					]
				]
				]
			]
,			[
				98,
				cr.plugins_.iScroll.prototype.acts.SetWidth,
				null,
				2828253051358336,
				false
				,[
				[
					0,
					[
						4,
						[
							19,
							cr.system_object.prototype.exps.abs
							,[
[
								19,
								cr.system_object.prototype.exps.viewportleft
								,[
[
									0,
									0
								]
								]
							]
							]
						]
						,[
							19,
							cr.system_object.prototype.exps.viewportright
							,[
[
								0,
								0
							]
							]
						]
					]
				]
				]
			]
			]
			,[
			[
				0,
				null,
				false,
				null,
				712772082459274,
				[
				[
					9,
					cr.plugins_.Text.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					6774031029470868,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"buttontext"
						]
					]
					]
				]
				],
				[
				[
					9,
					cr.plugins_.Text.prototype.acts.SetPosToObject,
					null,
					2294868502061615,
					false
					,[
					[
						4,
						32
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			4020510752979092,
			[
			[
				97,
				cr.plugins_.Phonegap.prototype.cnds.OnBack,
				null,
				1,
				false,
				false,
				false,
				2668793243002132,
				false
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.GoToLayout,
				null,
				8421578364880554,
				false
				,[
				[
					6,
					"Search"
				]
				]
			]
			]
		]
		]
	]
,	[
		"Setting",
		[
		[
			2,
			"Global",
			false
		]
,		[
			0,
			null,
			false,
			null,
			3679510551663485,
			[
			[
				88,
				cr.plugins_.sliderbar.prototype.cnds.OnChanged,
				null,
				1,
				false,
				false,
				false,
				6784873644435214,
				false
			]
			],
			[
			[
				5,
				cr.plugins_.AJAX.prototype.acts.Post,
				null,
				5946664001978521,
				false
				,[
				[
					1,
					[
						2,
						"changePrivacy"
					]
				]
,				[
					1,
					[
						10,
						[
							10,
							[
								10,
								[
									10,
									[
										23,
										"host"
									]
									,[
										2,
										"check_privacy.php?hcid="
									]
								]
								,[
									20,
									0,
									cr.plugins_.WebStorage.prototype.exps.LocalValue,
									true,
									null
									,[
[
										2,
										"hcid"
									]
									]
								]
							]
							,[
								2,
								"&check=no&privacy="
							]
						]
						,[
							20,
							88,
							cr.plugins_.sliderbar.prototype.exps.Value,
							false,
							null
						]
					]
				]
,				[
					1,
					[
						2,
						""
					]
				]
,				[
					1,
					[
						2,
						"POST"
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			2950079103982538,
			[
			[
				5,
				cr.plugins_.AJAX.prototype.cnds.OnComplete,
				null,
				1,
				false,
				false,
				false,
				1462696987719059,
				false
				,[
				[
					1,
					[
						2,
						"changePrivacy"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				7122751702278587,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					7626761370595167,
					false
					,[
					[
						7,
						[
							20,
							5,
							cr.plugins_.AJAX.prototype.exps.LastData,
							true,
							null
						]
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"0"
						]
					]
					]
				]
				],
				[
				[
					88,
					cr.plugins_.sliderbar.prototype.acts.SetValue,
					null,
					8653336046272541,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					0,
					cr.plugins_.WebStorage.prototype.acts.StoreLocal,
					null,
					8990000860404686,
					false
					,[
					[
						1,
						[
							2,
							"privacy"
						]
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6411373836808882,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					7320725919997925,
					false
					,[
					[
						7,
						[
							20,
							5,
							cr.plugins_.AJAX.prototype.exps.LastData,
							true,
							null
						]
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"1"
						]
					]
					]
				]
				],
				[
				[
					88,
					cr.plugins_.sliderbar.prototype.acts.SetValue,
					null,
					800955154675646,
					false
					,[
					[
						0,
						[
							0,
							1
						]
					]
					]
				]
,				[
					0,
					cr.plugins_.WebStorage.prototype.acts.StoreLocal,
					null,
					486545589623745,
					false
					,[
					[
						1,
						[
							2,
							"privacy"
						]
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			2663289553133824,
			[
			[
				-1,
				cr.system_object.prototype.cnds.OnLayoutStart,
				null,
				1,
				false,
				false,
				false,
				5916056969978713,
				false
			]
			],
			[
			[
				5,
				cr.plugins_.AJAX.prototype.acts.Post,
				null,
				7036749835732543,
				false
				,[
				[
					1,
					[
						2,
						"checkPrivacy"
					]
				]
,				[
					1,
					[
						10,
						[
							10,
							[
								10,
								[
									23,
									"host"
								]
								,[
									2,
									"check_privacy.php?hcid="
								]
							]
							,[
								20,
								0,
								cr.plugins_.WebStorage.prototype.exps.LocalValue,
								true,
								null
								,[
[
									2,
									"hcid"
								]
								]
							]
						]
						,[
							2,
							"&check=yes&privacy="
						]
					]
				]
,				[
					1,
					[
						2,
						""
					]
				]
,				[
					1,
					[
						2,
						"POST"
					]
				]
				]
			]
,			[
				88,
				cr.plugins_.sliderbar.prototype.acts.SetValue,
				null,
				3530311519410967,
				false
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps["int"]
						,[
[
							20,
							0,
							cr.plugins_.WebStorage.prototype.exps.LocalValue,
							true,
							null
							,[
[
								2,
								"privacy"
							]
							]
						]
						]
					]
				]
				]
			]
,			[
				24,
				cr.behaviors.Pin.prototype.acts.Pin,
				"Pin",
				5908359059855401,
				false
				,[
				[
					4,
					9
				]
,				[
					3,
					0
				]
				]
			]
,			[
				88,
				cr.behaviors.Pin.prototype.acts.Pin,
				"Pin",
				8471136423879797,
				false
				,[
				[
					4,
					9
				]
,				[
					3,
					0
				]
				]
			]
,			[
				93,
				cr.behaviors.Pin.prototype.acts.Pin,
				"Pin",
				9447044634543817,
				false
				,[
				[
					4,
					9
				]
,				[
					3,
					0
				]
				]
			]
,			[
				94,
				cr.behaviors.Pin.prototype.acts.Pin,
				"Pin",
				7103689473724431,
				false
				,[
				[
					4,
					9
				]
,				[
					3,
					0
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			9458128497381744,
			[
			[
				5,
				cr.plugins_.AJAX.prototype.cnds.OnComplete,
				null,
				1,
				false,
				false,
				false,
				7369992518079605,
				false
				,[
				[
					1,
					[
						2,
						"checkPrivacy"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				5665645142487737,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					1749759530153697,
					false
					,[
					[
						7,
						[
							20,
							5,
							cr.plugins_.AJAX.prototype.exps.LastData,
							true,
							null
						]
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"0"
						]
					]
					]
				]
				],
				[
				[
					0,
					cr.plugins_.WebStorage.prototype.acts.StoreLocal,
					null,
					9556028278343883,
					false
					,[
					[
						1,
						[
							2,
							"privacy"
						]
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				7014402253467063,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					7408826436499116,
					false
					,[
					[
						7,
						[
							20,
							5,
							cr.plugins_.AJAX.prototype.exps.LastData,
							true,
							null
						]
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"1"
						]
					]
					]
				]
				],
				[
				[
					0,
					cr.plugins_.WebStorage.prototype.acts.StoreLocal,
					null,
					6394619533674963,
					false
					,[
					[
						1,
						[
							2,
							"privacy"
						]
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				2776497985880534,
				[
				],
				[
				[
					88,
					cr.plugins_.sliderbar.prototype.acts.SetValue,
					null,
					9419963185000223,
					false
					,[
					[
						0,
						[
							19,
							cr.system_object.prototype.exps["int"]
							,[
[
								20,
								0,
								cr.plugins_.WebStorage.prototype.exps.LocalValue,
								true,
								null
								,[
[
									2,
									"privacy"
								]
								]
							]
							]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			5004350532465437,
			[
			[
				1,
				cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
				null,
				1,
				false,
				false,
				false,
				1464894119779206,
				false
			]
,			[
				1,
				cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
				null,
				0,
				false,
				false,
				false,
				2632880857085863,
				false
				,[
				[
					4,
					93
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				7012890784218912,
				[
				[
					93,
					cr.plugins_.Sprite.prototype.cnds.CompareFrame,
					null,
					0,
					false,
					false,
					false,
					6327660691457717,
					false
					,[
					[
						8,
						0
					]
,					[
						0,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					2,
					cr.plugins_.Browser.prototype.acts.GoToURLWindow,
					null,
					3775611307191154,
					false
					,[
					[
						1,
						[
							2,
							"https://www.facebook.com/sharer/sharer.php?u=https://play.google.com/store/apps/details?id=com.nareshg.hellocard"
						]
					]
,					[
						1,
						[
							2,
							"share"
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8296847851146051,
				[
				[
					93,
					cr.plugins_.Sprite.prototype.cnds.CompareFrame,
					null,
					0,
					false,
					false,
					false,
					9085890135573697,
					false
					,[
					[
						8,
						0
					]
,					[
						0,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					2,
					cr.plugins_.Browser.prototype.acts.GoToURLWindow,
					null,
					9884684877637852,
					false
					,[
					[
						1,
						[
							2,
							"https://twitter.com/home?status=Download%20app%20on%20https://play.google.com/store/apps/details?id=com.nareshg.hellocard"
						]
					]
,					[
						1,
						[
							2,
							"share"
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9076588354764501,
				[
				[
					93,
					cr.plugins_.Sprite.prototype.cnds.CompareFrame,
					null,
					0,
					false,
					false,
					false,
					1150622665090819,
					false
					,[
					[
						8,
						0
					]
,					[
						0,
						[
							0,
							2
						]
					]
					]
				]
				],
				[
				[
					2,
					cr.plugins_.Browser.prototype.acts.GoToURLWindow,
					null,
					5823837410551862,
					false
					,[
					[
						1,
						[
							10,
							[
								10,
								[
									2,
									"mailto:yourfriendemailid@hellocard.co?subject=My hellocard handle is "
								]
								,[
									20,
									0,
									cr.plugins_.WebStorage.prototype.exps.LocalValue,
									true,
									null
									,[
[
										2,
										"hcid"
									]
									]
								]
							]
							,[
								2,
								" add me now&body=add me"
							]
						]
					]
,					[
						1,
						[
							2,
							"share"
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				1151754414666041,
				[
				[
					93,
					cr.plugins_.Sprite.prototype.cnds.CompareFrame,
					null,
					0,
					false,
					false,
					false,
					4980425874894891,
					false
					,[
					[
						8,
						0
					]
,					[
						0,
						[
							0,
							3
						]
					]
					]
				]
				],
				[
				[
					2,
					cr.plugins_.Browser.prototype.acts.GoToURLWindow,
					null,
					7018060861422791,
					false
					,[
					[
						1,
						[
							10,
							[
								10,
								[
									2,
									"sms:?body=My hellocard handle is "
								]
								,[
									20,
									0,
									cr.plugins_.WebStorage.prototype.exps.LocalValue,
									true,
									null
									,[
[
										2,
										"hcid"
									]
									]
								]
							]
							,[
								2,
								" add me now"
							]
						]
					]
,					[
						1,
						[
							2,
							"NewWindow"
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			3427268371814763,
			[
			[
				1,
				cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
				null,
				1,
				false,
				false,
				false,
				1730113668024918,
				false
			]
,			[
				1,
				cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
				null,
				0,
				false,
				false,
				false,
				9630147528248331,
				false
				,[
				[
					4,
					24
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				6526657660484133,
				[
				[
					24,
					cr.plugins_.Text.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					5567554080340418,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"about"
						]
					]
					]
				]
				],
				[
				[
					2,
					cr.plugins_.Browser.prototype.acts.GoToURLWindow,
					null,
					2966348792111165,
					false
					,[
					[
						1,
						[
							2,
							"http://hellocard.co"
						]
					]
,					[
						1,
						[
							2,
							"share"
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3827394511630855,
				[
				[
					24,
					cr.plugins_.Text.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					4333667243193297,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"report"
						]
					]
					]
				]
				],
				[
				[
					2,
					cr.plugins_.Browser.prototype.acts.GoToURLWindow,
					null,
					6340099445454219,
					false
					,[
					[
						1,
						[
							2,
							"mailto:support@hellocard.co?subject=I found a bug&body=it looks like this."
						]
					]
,					[
						1,
						[
							2,
							"share"
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				260951571499805,
				[
				[
					24,
					cr.plugins_.Text.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					2558650060578369,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"signout"
						]
					]
					]
				]
				],
				[
				[
					95,
					cr.plugins_.PhonegapDialog.prototype.acts.Confirm,
					null,
					5859063749382587,
					false
					,[
					[
						1,
						[
							2,
							"Log out"
						]
					]
,					[
						1,
						[
							2,
							"Do u want to logout?"
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			5218892411905783,
			[
			[
				1,
				cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
				null,
				1,
				false,
				false,
				false,
				1899721307594612,
				false
			]
,			[
				1,
				cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
				null,
				0,
				false,
				false,
				false,
				4052053196184292,
				false
				,[
				[
					4,
					94
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				6504495402700137,
				[
				[
					94,
					cr.plugins_.Sprite.prototype.cnds.CompareFrame,
					null,
					0,
					false,
					false,
					false,
					5391895930253039,
					false
					,[
					[
						8,
						0
					]
,					[
						0,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					2,
					cr.plugins_.Browser.prototype.acts.GoToURLWindow,
					null,
					7172034161019297,
					false
					,[
					[
						1,
						[
							2,
							"mailto:support@hellocard.co?subject=I found a bug&body=it looks like this."
						]
					]
,					[
						1,
						[
							2,
							"share"
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6527491979520699,
				[
				[
					94,
					cr.plugins_.Sprite.prototype.cnds.CompareFrame,
					null,
					0,
					false,
					false,
					false,
					1473386889445838,
					false
					,[
					[
						8,
						0
					]
,					[
						0,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					2,
					cr.plugins_.Browser.prototype.acts.GoToURLWindow,
					null,
					2803493283304584,
					false
					,[
					[
						1,
						[
							2,
							"http://hellocard.co"
						]
					]
,					[
						1,
						[
							2,
							"share"
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				1416618024060245,
				[
				[
					94,
					cr.plugins_.Sprite.prototype.cnds.CompareFrame,
					null,
					0,
					false,
					false,
					false,
					3578048305400661,
					false
					,[
					[
						8,
						0
					]
,					[
						0,
						[
							0,
							2
						]
					]
					]
				]
				],
				[
				[
					95,
					cr.plugins_.PhonegapDialog.prototype.acts.Confirm,
					null,
					805539972185603,
					false
					,[
					[
						1,
						[
							2,
							"Log out"
						]
					]
,					[
						1,
						[
							2,
							"Do u want to logout?"
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			5675621914879106,
			[
			[
				97,
				cr.plugins_.Phonegap.prototype.cnds.OnBack,
				null,
				1,
				false,
				false,
				false,
				7779314583377153,
				false
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.GoToLayout,
				null,
				8840102255475012,
				false
				,[
				[
					6,
					"Search"
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			1800085376743717,
			[
			[
				95,
				cr.plugins_.PhonegapDialog.prototype.cnds.ConfirmYesClicked,
				null,
				1,
				false,
				false,
				false,
				4292740003261512,
				false
			]
,			[
				95,
				cr.plugins_.PhonegapDialog.prototype.cnds.TitleIs,
				null,
				0,
				false,
				false,
				false,
				3640445823121523,
				false
				,[
				[
					1,
					[
						2,
						"Log out"
					]
				]
				]
			]
			],
			[
			[
				0,
				cr.plugins_.WebStorage.prototype.acts.ClearLocal,
				null,
				8121694042217968,
				false
			]
,			[
				0,
				cr.plugins_.WebStorage.prototype.acts.ClearSession,
				null,
				1400048583507883,
				false
			]
,			[
				-1,
				cr.system_object.prototype.acts.GoToLayout,
				null,
				7349907796049401,
				false
				,[
				[
					6,
					"mainLogin"
				]
				]
			]
			]
		]
		]
	]
,	[
		"Saved",
		[
		[
			1,
			"SavedCards",
			1,
			"",
false,false,8468457979000372,false
		]
,		[
			1,
			"count",
			0,
			0,
false,false,206582533619037,false
		]
,		[
			1,
			"c",
			0,
			0,
false,false,2660680873582001,false
		]
,		[
			1,
			"y",
			0,
			180,
false,false,7519545696782739,false
		]
,		[
			2,
			"Global",
			false
		]
,		[
			0,
			null,
			false,
			null,
			2097332863862528,
			[
			[
				-1,
				cr.system_object.prototype.cnds.OnLayoutStart,
				null,
				1,
				false,
				false,
				false,
				8386698639841542,
				false
			]
			],
			[
			[
				5,
				cr.plugins_.AJAX.prototype.acts.Post,
				null,
				2842841947438618,
				false
				,[
				[
					1,
					[
						2,
						"GetSavedCards"
					]
				]
,				[
					1,
					[
						10,
						[
							10,
							[
								23,
								"host"
							]
							,[
								2,
								"retrieveSaved.php?hcid="
							]
						]
						,[
							20,
							0,
							cr.plugins_.WebStorage.prototype.exps.LocalValue,
							true,
							null
							,[
[
								2,
								"hcid"
							]
							]
						]
					]
				]
,				[
					1,
					[
						2,
						""
					]
				]
,				[
					1,
					[
						2,
						"POST"
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				6339297219190913,
				false
				,[
				[
					11,
					"y"
				]
,				[
					7,
					[
						0,
						180
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				9802477745473628,
				false
				,[
				[
					11,
					"c"
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
,			[
				61,
				cr.plugins_.HTML_Img.prototype.acts.Destroy,
				null,
				2296208289963579,
				false
			]
,			[
				44,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				7004463029452685,
				false
			]
,			[
				45,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				7950530057673618,
				false
			]
,			[
				42,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				2782839487156308,
				false
			]
,			[
				64,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				6139001450773225,
				false
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				2651194119346351,
				false
				,[
				[
					11,
					"SavedCards"
				]
,				[
					7,
					[
						20,
						0,
						cr.plugins_.WebStorage.prototype.exps.LocalValue,
						true,
						null
						,[
[
							2,
							"SavedCards"
						]
						]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			7811694871075176,
			[
			[
				5,
				cr.plugins_.AJAX.prototype.cnds.OnComplete,
				null,
				1,
				false,
				false,
				false,
				8308670677624466,
				false
				,[
				[
					1,
					[
						2,
						"GetSavedCards"
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.Compare,
				null,
				0,
				false,
				false,
				false,
				853947781730888,
				false
				,[
				[
					7,
					[
						20,
						5,
						cr.plugins_.AJAX.prototype.exps.LastData,
						true,
						null
					]
				]
,				[
					8,
					1
				]
,				[
					7,
					[
						2,
						""
					]
				]
				]
			]
			],
			[
			[
				0,
				cr.plugins_.WebStorage.prototype.acts.StoreLocal,
				null,
				5060147352743624,
				false
				,[
				[
					1,
					[
						2,
						"SavedCards"
					]
				]
,				[
					7,
					[
						20,
						5,
						cr.plugins_.AJAX.prototype.exps.LastData,
						true,
						null
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				4029091744473362,
				false
				,[
				[
					11,
					"SavedCards"
				]
,				[
					7,
					[
						20,
						5,
						cr.plugins_.AJAX.prototype.exps.LastData,
						true,
						null
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			7148655225657672,
			[
			[
				-1,
				cr.system_object.prototype.cnds.Compare,
				null,
				0,
				false,
				false,
				false,
				7795502203884047,
				false
				,[
				[
					7,
					[
						19,
						cr.system_object.prototype.exps.tokencount
						,[
[
							23,
							"SavedCards"
						]
,[
							2,
							"|"
						]
						]
					]
				]
,				[
					8,
					4
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.TriggerOnce,
				null,
				0,
				false,
				false,
				false,
				7464781674685133,
				false
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				8503272929177478,
				false
				,[
				[
					11,
					"count"
				]
,				[
					7,
					[
						7,
						[
							5,
							[
								19,
								cr.system_object.prototype.exps.tokencount
								,[
[
									23,
									"SavedCards"
								]
,[
									2,
									"|"
								]
								]
							]
							,[
								0,
								1
							]
						]
						,[
							0,
							4
						]
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetGroupActive,
				null,
				8032052197853186,
				false
				,[
				[
					1,
					[
						2,
						"ShowCards"
					]
				]
,				[
					3,
					1
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			3414344911313221,
			[
			[
				1,
				cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
				null,
				1,
				false,
				false,
				false,
				4402465641173427,
				false
			]
,			[
				1,
				cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
				null,
				0,
				false,
				false,
				false,
				1254176161254891,
				false
				,[
				[
					4,
					66
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				2680013091912625,
				false
				,[
				[
					11,
					"hcid"
				]
,				[
					7,
					[
						20,
						66,
						cr.plugins_.Text.prototype.exps.Text,
						true,
						null
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				9180544654783269,
				false
				,[
				[
					11,
					"edit"
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.GoToLayout,
				null,
				1910158976496406,
				false
				,[
				[
					6,
					"HelloCard"
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			8135670247563587,
			[
			[
				61,
				cr.plugins_.HTML_Img.prototype.cnds.OnChange,
				null,
				1,
				false,
				false,
				false,
				5764582972968644,
				false
			]
,			[
				64,
				cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
				null,
				0,
				false,
				false,
				false,
				2222530157105626,
				false
				,[
				[
					10,
					0
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						21,
						61,
						true,
						null
						,0
					]
				]
				]
			]
			],
			[
			[
				61,
				cr.plugins_.HTML_Img.prototype.acts.SetVisible,
				null,
				5871039157637794,
				false
				,[
				[
					3,
					0
				]
				]
			]
,			[
				64,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				6387462223093571,
				false
				,[
				[
					3,
					1
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			7711195741165188,
			[
			[
				61,
				cr.plugins_.HTML_Img.prototype.cnds.OnComplete,
				null,
				1,
				false,
				false,
				false,
				3595965677473327,
				false
			]
,			[
				64,
				cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
				null,
				0,
				false,
				false,
				false,
				7276948091976994,
				false
				,[
				[
					10,
					0
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						21,
						61,
						true,
						null
						,0
					]
				]
				]
			]
			],
			[
			[
				61,
				cr.plugins_.HTML_Img.prototype.acts.SetVisible,
				null,
				9887724001466942,
				false
				,[
				[
					3,
					1
				]
				]
			]
,			[
				64,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				839484902683689,
				false
				,[
				[
					3,
					0
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			8373074372081779,
			[
			[
				1,
				cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
				null,
				1,
				false,
				false,
				false,
				6660429684722639,
				false
			]
,			[
				1,
				cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
				null,
				0,
				false,
				false,
				false,
				1600160823565913,
				false
				,[
				[
					4,
					46
				]
				]
			]
			],
			[
			[
				46,
				cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
				null,
				6726467344453264,
				false
				,[
				[
					10,
					0
				]
,				[
					7,
					[
						4,
						[
							21,
							46,
							false,
							null
							,0
						]
						,[
							0,
							1
						]
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				3234883606914738,
				false
				,[
				[
					11,
					"hcid"
				]
,				[
					7,
					[
						21,
						46,
						true,
						null
						,1
					]
				]
				]
			]
			]
			,[
			[
				0,
				null,
				false,
				null,
				5441873798796954,
				[
				[
					46,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					5226406638077641,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							2
						]
					]
					]
				]
				],
				[
				[
					46,
					cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
					null,
					5114166225856773,
					false
					,[
					[
						10,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3425676607741567,
				[
				[
					46,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					7701072664946402,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					64,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					3430258428226382,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							23,
							"hcid"
						]
					]
					]
				]
				],
				[
				[
					5,
					cr.plugins_.AJAX.prototype.acts.Post,
					null,
					1577802935448341,
					false
					,[
					[
						1,
						[
							2,
							"discard1"
						]
					]
,					[
						1,
						[
							10,
							[
								10,
								[
									10,
									[
										10,
										[
											23,
											"host"
										]
										,[
											2,
											"discard.php?myhcid="
										]
									]
									,[
										20,
										0,
										cr.plugins_.WebStorage.prototype.exps.LocalValue,
										true,
										null
										,[
[
											2,
											"hcid"
										]
										]
									]
								]
								,[
									2,
									"&delhcid="
								]
							]
							,[
								23,
								"hcid"
							]
						]
					]
,					[
						1,
						[
							2,
							""
						]
					]
,					[
						1,
						[
							2,
							"POST"
						]
					]
					]
				]
,				[
					46,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					7006626933180022,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					64,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					8513610828600433,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					64,
					cr.plugins_.Sprite.prototype.acts.SetPosToObject,
					null,
					3791493571267019,
					false
					,[
					[
						4,
						46
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4609968135021549,
				[
				[
					46,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					6269016465891421,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					64,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					5600682164970086,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							23,
							"hcid"
						]
					]
					]
				]
				],
				[
				[
					5,
					cr.plugins_.AJAX.prototype.acts.Post,
					null,
					1949505881910941,
					false
					,[
					[
						1,
						[
							2,
							"savecard1"
						]
					]
,					[
						1,
						[
							10,
							[
								10,
								[
									10,
									[
										10,
										[
											10,
											[
												23,
												"host"
											]
											,[
												2,
												"savecard.php?myhcid="
											]
										]
										,[
											20,
											0,
											cr.plugins_.WebStorage.prototype.exps.LocalValue,
											true,
											null
											,[
[
												2,
												"hcid"
											]
											]
										]
									]
									,[
										2,
										"&savehcid="
									]
								]
								,[
									23,
									"hcid"
								]
							]
							,[
								2,
								"&check=no"
							]
						]
					]
,					[
						1,
						[
							2,
							""
						]
					]
,					[
						1,
						[
							2,
							"POST"
						]
					]
					]
				]
,				[
					46,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					3471338709263061,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					64,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					2121576117834522,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					64,
					cr.plugins_.Sprite.prototype.acts.SetPosToObject,
					null,
					8857288888605631,
					false
					,[
					[
						4,
						46
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			7201185803999084,
			[
			[
				46,
				cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
				null,
				0,
				false,
				false,
				false,
				8962697971126503,
				false
				,[
				[
					10,
					0
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
			],
			[
			[
				46,
				cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
				null,
				609625932200305,
				false
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			1477662809005372,
			[
			[
				46,
				cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
				null,
				0,
				false,
				false,
				false,
				9449195134007385,
				false
				,[
				[
					10,
					0
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
			],
			[
			[
				46,
				cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
				null,
				8475498993802101,
				false
				,[
				[
					0,
					[
						0,
						1
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			8476009013516877,
			[
			[
				5,
				cr.plugins_.AJAX.prototype.cnds.OnComplete,
				null,
				1,
				false,
				false,
				false,
				7475121096762345,
				false
				,[
				[
					1,
					[
						2,
						"savecard1"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				9075846265719847,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					1619037316533823,
					false
					,[
					[
						7,
						[
							20,
							5,
							cr.plugins_.AJAX.prototype.exps.LastData,
							true,
							null
						]
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"1"
						]
					]
					]
				]
,				[
					46,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					7137373062272062,
					false
					,[
					[
						10,
						1
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							23,
							"hcid"
						]
					]
					]
				]
,				[
					64,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					3880216621822798,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							23,
							"hcid"
						]
					]
					]
				]
				],
				[
				[
					64,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					6675061589588898,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					46,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					3653259940795451,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					46,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					850103893515557,
					false
					,[
					[
						0,
						[
							0,
							1
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			2074226120089111,
			[
			[
				5,
				cr.plugins_.AJAX.prototype.cnds.OnComplete,
				null,
				1,
				false,
				false,
				false,
				3083587786448084,
				false
				,[
				[
					1,
					[
						2,
						"discard1"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				9995685768237671,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					906571868012667,
					false
					,[
					[
						7,
						[
							20,
							5,
							cr.plugins_.AJAX.prototype.exps.LastData,
							true,
							null
						]
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"1"
						]
					]
					]
				]
,				[
					46,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					3256981388818321,
					false
					,[
					[
						10,
						1
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							23,
							"hcid"
						]
					]
					]
				]
,				[
					64,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					7442443801962391,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							23,
							"hcid"
						]
					]
					]
				]
				],
				[
				[
					64,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					8300877773810906,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					46,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					6745016081375298,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					46,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					6499524655919467,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "TouchScroll"],
			false,
			null,
			3473400394481647,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				3473400394481647,
				false
				,[
				[
					1,
					[
						2,
						"TouchScroll"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				1089,
				[
				[
					-1,
					cr.system_object.prototype.cnds.EveryTick,
					null,
					0,
					false,
					false,
					false,
					1090,
					false
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					1096,
					[
					[
						67,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						1097,
						false
						,[
						[
							10,
							2
						]
,						[
							8,
							1
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						67,
						cr.plugins_.Sprite.prototype.acts.SetY,
						null,
						1098,
						false
						,[
						[
							0,
							[
								19,
								cr.system_object.prototype.exps.lerp
								,[
[
									20,
									67,
									cr.plugins_.Sprite.prototype.exps.Y,
									false,
									null
								]
,[
									5,
									[
										20,
										67,
										cr.plugins_.Sprite.prototype.exps.Y,
										false,
										null
									]
									,[
										21,
										67,
										false,
										null
										,2
									]
								]
,[
									1,
									0.35
								]
								]
							]
						]
						]
					]
,					[
						67,
						cr.plugins_.Sprite.prototype.acts.SubInstanceVar,
						null,
						1099,
						false
						,[
						[
							10,
							2
						]
,						[
							7,
							[
								7,
								[
									21,
									67,
									false,
									null
									,2
								]
								,[
									0,
									50
								]
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				1100,
				[
				[
					1,
					cr.plugins_.Touch.prototype.cnds.IsInTouch,
					null,
					0,
					false,
					false,
					false,
					1101,
					false
				]
				],
				[
				[
					67,
					cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
					null,
					1103,
					false
					,[
					[
						10,
						0
					]
,					[
						7,
						[
							21,
							67,
							false,
							null
							,1
						]
					]
					]
				]
,				[
					67,
					cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
					null,
					1105,
					false
					,[
					[
						10,
						1
					]
,					[
						7,
						[
							20,
							1,
							cr.plugins_.Touch.prototype.exps.Y,
							false,
							null
						]
					]
					]
				]
,				[
					67,
					cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
					null,
					1107,
					false
					,[
					[
						10,
						2
					]
,					[
						7,
						[
							5,
							[
								21,
								67,
								false,
								null
								,1
							]
							,[
								21,
								67,
								false,
								null
								,0
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				1108,
				[
				[
					1,
					cr.plugins_.Touch.prototype.cnds.OnTouchStart,
					null,
					1,
					false,
					false,
					false,
					1109,
					false
				]
				],
				[
				[
					67,
					cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
					null,
					1111,
					false
					,[
					[
						10,
						0
					]
,					[
						7,
						[
							20,
							1,
							cr.plugins_.Touch.prototype.exps.Y,
							false,
							null
						]
					]
					]
				]
,				[
					67,
					cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
					null,
					1113,
					false
					,[
					[
						10,
						1
					]
,					[
						7,
						[
							20,
							1,
							cr.plugins_.Touch.prototype.exps.Y,
							false,
							null
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			859651204528065,
			[
			[
				1,
				cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
				null,
				1,
				false,
				false,
				false,
				2129747063214414,
				false
			]
			],
			[
			[
				67,
				cr.behaviors.Bullet.prototype.acts.SetAcceleration,
				"Bullet",
				7850088879413664,
				false
				,[
				[
					0,
					[
						20,
						1,
						cr.plugins_.Touch.prototype.exps.AccelerationY,
						false,
						null
					]
				]
				]
			]
,			[
				67,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				1505876409943379,
				false
				,[
				[
					0,
					[
						0,
						90
					]
				]
				]
			]
			]
		]
,		[
			0,
			[false, "ShowCards"],
			false,
			null,
			1970374186255355,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				1970374186255355,
				false
				,[
				[
					1,
					[
						2,
						"ShowCards"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				9147436100218121,
				[
				[
					-1,
					cr.system_object.prototype.cnds.For,
					null,
					0,
					true,
					false,
					false,
					3165675599927884,
					false
					,[
					[
						1,
						[
							2,
							"loop"
						]
					]
,					[
						0,
						[
							0,
							1
						]
					]
,					[
						0,
						[
							23,
							"count"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					9041500105543407,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						5301561016965201,
						false
						,[
						[
							7,
							[
								19,
								cr.system_object.prototype.exps.tokenat
								,[
[
									23,
									"SavedCards"
								]
,[
									6,
									[
										5,
										[
											19,
											cr.system_object.prototype.exps.loopindex
										]
										,[
											0,
											1
										]
									]
									,[
										0,
										4
									]
								]
,[
									2,
									"|"
								]
								]
							]
						]
,						[
							8,
							1
						]
,						[
							7,
							[
								2,
								""
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.CreateObject,
						null,
						3787291954579691,
						false
						,[
						[
							4,
							42
						]
,						[
							5,
							[
								0,
								2
							]
						]
,						[
							0,
							[
								0,
								320
							]
						]
,						[
							0,
							[
								23,
								"y"
							]
						]
						]
					]
,					[
						42,
						cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
						null,
						472644903517869,
						false
						,[
						[
							0,
							[
								23,
								"c"
							]
						]
						]
					]
,					[
						42,
						cr.plugins_.Sprite.prototype.acts.SetVisible,
						null,
						4926679525758535,
						false
						,[
						[
							3,
							1
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.CreateObject,
						null,
						4718700593577701,
						false
						,[
						[
							4,
							44
						]
,						[
							5,
							[
								0,
								2
							]
						]
,						[
							0,
							[
								0,
								175
							]
						]
,						[
							0,
							[
								5,
								[
									23,
									"y"
								]
								,[
									0,
									30
								]
							]
						]
						]
					]
,					[
						44,
						cr.plugins_.Text.prototype.acts.SetText,
						null,
						9066008066970054,
						false
						,[
						[
							7,
							[
								19,
								cr.system_object.prototype.exps.tokenat
								,[
[
									23,
									"SavedCards"
								]
,[
									6,
									[
										5,
										[
											19,
											cr.system_object.prototype.exps.loopindex
										]
										,[
											0,
											1
										]
									]
									,[
										0,
										4
									]
								]
,[
									2,
									"|"
								]
								]
							]
						]
						]
					]
,					[
						44,
						cr.plugins_.Text.prototype.acts.SetVisible,
						null,
						6215709456447736,
						false
						,[
						[
							3,
							1
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.CreateObject,
						null,
						9496495860619069,
						false
						,[
						[
							4,
							45
						]
,						[
							5,
							[
								0,
								2
							]
						]
,						[
							0,
							[
								0,
								175
							]
						]
,						[
							0,
							[
								4,
								[
									23,
									"y"
								]
								,[
									0,
									20
								]
							]
						]
						]
					]
,					[
						45,
						cr.plugins_.Text.prototype.acts.SetText,
						null,
						3483908484773788,
						false
						,[
						[
							7,
							[
								19,
								cr.system_object.prototype.exps.tokenat
								,[
[
									23,
									"SavedCards"
								]
,[
									4,
									[
										6,
										[
											5,
											[
												19,
												cr.system_object.prototype.exps.loopindex
											]
											,[
												0,
												1
											]
										]
										,[
											0,
											4
										]
									]
									,[
										0,
										1
									]
								]
,[
									2,
									"|"
								]
								]
							]
						]
						]
					]
,					[
						45,
						cr.plugins_.Text.prototype.acts.SetVisible,
						null,
						3080266972310169,
						false
						,[
						[
							3,
							1
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						3125575109496889,
						false
						,[
						[
							11,
							"hcid"
						]
,						[
							7,
							[
								19,
								cr.system_object.prototype.exps.tokenat
								,[
[
									23,
									"SavedCards"
								]
,[
									4,
									[
										6,
										[
											5,
											[
												19,
												cr.system_object.prototype.exps.loopindex
											]
											,[
												0,
												1
											]
										]
										,[
											0,
											4
										]
									]
									,[
										0,
										3
									]
								]
,[
									2,
									"|"
								]
								]
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.CreateObject,
						null,
						5147725949709126,
						false
						,[
						[
							4,
							66
						]
,						[
							5,
							[
								0,
								2
							]
						]
,						[
							0,
							[
								0,
								120
							]
						]
,						[
							0,
							[
								23,
								"y"
							]
						]
						]
					]
,					[
						66,
						cr.plugins_.Text.prototype.acts.SetText,
						null,
						9357306721988146,
						false
						,[
						[
							7,
							[
								23,
								"hcid"
							]
						]
						]
					]
,					[
						66,
						cr.plugins_.Text.prototype.acts.SetVisible,
						null,
						6057028927464568,
						false
						,[
						[
							3,
							0
						]
						]
					]
,					[
						66,
						cr.plugins_.Text.prototype.acts.SetInstanceVar,
						null,
						2590716182972112,
						false
						,[
						[
							10,
							0
						]
,						[
							7,
							[
								19,
								cr.system_object.prototype.exps.loopindex
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.CreateObject,
						null,
						248371211378224,
						false
						,[
						[
							4,
							46
						]
,						[
							5,
							[
								0,
								2
							]
						]
,						[
							0,
							[
								0,
								525
							]
						]
,						[
							0,
							[
								23,
								"y"
							]
						]
						]
					]
,					[
						46,
						cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
						null,
						606433122515877,
						false
						,[
						[
							0,
							[
								0,
								1
							]
						]
						]
					]
,					[
						46,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						2132165055584001,
						false
						,[
						[
							10,
							1
						]
,						[
							7,
							[
								23,
								"hcid"
							]
						]
						]
					]
,					[
						46,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						7952230611562356,
						false
						,[
						[
							10,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						45,
						cr.plugins_.Text.prototype.acts.SetWebFont,
						null,
						8064232279562416,
						false
						,[
						[
							1,
							[
								2,
								"OpenSansLight"
							]
						]
,						[
							1,
							[
								2,
								"style.css"
							]
						]
						]
					]
,					[
						44,
						cr.plugins_.Text.prototype.acts.SetWebFont,
						null,
						7009917168044696,
						false
						,[
						[
							1,
							[
								2,
								"OpenSansLight"
							]
						]
,						[
							1,
							[
								2,
								"style.css"
							]
						]
						]
					]
					]
					,[
					[
						0,
						null,
						false,
						null,
						2098279865999712,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Compare,
							null,
							0,
							false,
							false,
							false,
							4457389518877871,
							false
							,[
							[
								7,
								[
									19,
									cr.system_object.prototype.exps.find
									,[
[
										19,
										cr.system_object.prototype.exps.tokenat
										,[
[
											23,
											"SavedCards"
										]
,[
											0,
											6
										]
,[
											2,
											"|"
										]
										]
									]
,[
										2,
										"http"
									]
									]
								]
							]
,							[
								8,
								5
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.CreateObject,
							null,
							4793217831420291,
							false
							,[
							[
								4,
								61
							]
,							[
								5,
								[
									0,
									2
								]
							]
,							[
								0,
								[
									0,
									35
								]
							]
,							[
								0,
								[
									5,
									[
										23,
										"y"
									]
									,[
										0,
										60
									]
								]
							]
							]
						]
,						[
							61,
							cr.plugins_.HTML_Img.prototype.acts.SetURL,
							null,
							4477278688722789,
							false
							,[
							[
								1,
								[
									19,
									cr.system_object.prototype.exps.tokenat
									,[
[
										23,
										"SavedCards"
									]
,[
										4,
										[
											6,
											[
												5,
												[
													19,
													cr.system_object.prototype.exps.loopindex
												]
												,[
													0,
													1
												]
											]
											,[
												0,
												4
											]
										]
										,[
											0,
											2
										]
									]
,[
										2,
										"|"
									]
									]
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.CreateObject,
							null,
							8238400673700975,
							false
							,[
							[
								4,
								64
							]
,							[
								5,
								[
									0,
									3
								]
							]
,							[
								0,
								[
									4,
									[
										20,
										61,
										cr.plugins_.HTML_Img.prototype.exps.X,
										false,
										null
									]
									,[
										7,
										[
											20,
											61,
											cr.plugins_.HTML_Img.prototype.exps.Width,
											false,
											null
										]
										,[
											0,
											2
										]
									]
								]
							]
,							[
								0,
								[
									4,
									[
										20,
										61,
										cr.plugins_.HTML_Img.prototype.exps.Y,
										false,
										null
									]
									,[
										7,
										[
											20,
											61,
											cr.plugins_.HTML_Img.prototype.exps.Height,
											false,
											null
										]
										,[
											0,
											2
										]
									]
								]
							]
							]
						]
,						[
							64,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							8470071898936043,
							false
							,[
							[
								10,
								0
							]
,							[
								7,
								[
									23,
									"hcid"
								]
							]
							]
						]
,						[
							61,
							cr.plugins_.HTML_Img.prototype.acts.SetInstanceVar,
							null,
							1031761804375323,
							false
							,[
							[
								10,
								0
							]
,							[
								7,
								[
									23,
									"hcid"
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						8269616095233862,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Compare,
							null,
							0,
							false,
							false,
							false,
							3366297197613349,
							false
							,[
							[
								7,
								[
									19,
									cr.system_object.prototype.exps.find
									,[
[
										19,
										cr.system_object.prototype.exps.tokenat
										,[
[
											23,
											"SavedCards"
										]
,[
											0,
											6
										]
,[
											2,
											"|"
										]
										]
									]
,[
										2,
										"phpimg"
									]
									]
								]
							]
,							[
								8,
								5
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.CreateObject,
							null,
							3679404244867101,
							false
							,[
							[
								4,
								61
							]
,							[
								5,
								[
									0,
									2
								]
							]
,							[
								0,
								[
									0,
									35
								]
							]
,							[
								0,
								[
									5,
									[
										23,
										"y"
									]
									,[
										0,
										60
									]
								]
							]
							]
						]
,						[
							61,
							cr.plugins_.HTML_Img.prototype.acts.SetURL,
							null,
							9949647378567826,
							false
							,[
							[
								1,
								[
									10,
									[
										23,
										"host"
									]
									,[
										19,
										cr.system_object.prototype.exps.tokenat
										,[
[
											23,
											"SavedCards"
										]
,[
											4,
											[
												6,
												[
													5,
													[
														19,
														cr.system_object.prototype.exps.loopindex
													]
													,[
														0,
														1
													]
												]
												,[
													0,
													4
												]
											]
											,[
												0,
												2
											]
										]
,[
											2,
											"|"
										]
										]
									]
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.CreateObject,
							null,
							6364843862424173,
							false
							,[
							[
								4,
								64
							]
,							[
								5,
								[
									0,
									3
								]
							]
,							[
								0,
								[
									4,
									[
										20,
										61,
										cr.plugins_.HTML_Img.prototype.exps.X,
										false,
										null
									]
									,[
										7,
										[
											20,
											61,
											cr.plugins_.HTML_Img.prototype.exps.Width,
											false,
											null
										]
										,[
											0,
											2
										]
									]
								]
							]
,							[
								0,
								[
									4,
									[
										20,
										61,
										cr.plugins_.HTML_Img.prototype.exps.Y,
										false,
										null
									]
									,[
										7,
										[
											20,
											61,
											cr.plugins_.HTML_Img.prototype.exps.Height,
											false,
											null
										]
										,[
											0,
											2
										]
									]
								]
							]
							]
						]
,						[
							64,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							2128879833068493,
							false
							,[
							[
								10,
								0
							]
,							[
								7,
								[
									23,
									"hcid"
								]
							]
							]
						]
,						[
							61,
							cr.plugins_.HTML_Img.prototype.acts.SetInstanceVar,
							null,
							5855122175493927,
							false
							,[
							[
								10,
								0
							]
,							[
								7,
								[
									23,
									"hcid"
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						4335583500432136,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Compare,
							null,
							0,
							false,
							false,
							false,
							7730555536407782,
							false
							,[
							[
								7,
								[
									19,
									cr.system_object.prototype.exps.len
									,[
[
										19,
										cr.system_object.prototype.exps.tokenat
										,[
[
											23,
											"SavedCards"
										]
,[
											0,
											6
										]
,[
											2,
											"|"
										]
										]
									]
									]
								]
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.CreateObject,
							null,
							535393428427901,
							false
							,[
							[
								4,
								61
							]
,							[
								5,
								[
									0,
									2
								]
							]
,							[
								0,
								[
									0,
									35
								]
							]
,							[
								0,
								[
									5,
									[
										23,
										"y"
									]
									,[
										0,
										60
									]
								]
							]
							]
						]
,						[
							61,
							cr.plugins_.HTML_Img.prototype.acts.SetURL,
							null,
							3903194237524916,
							false
							,[
							[
								1,
								[
									10,
									[
										23,
										"host"
									]
									,[
										2,
										"phpimg/default.png"
									]
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.CreateObject,
							null,
							6137957360127225,
							false
							,[
							[
								4,
								64
							]
,							[
								5,
								[
									0,
									3
								]
							]
,							[
								0,
								[
									4,
									[
										20,
										61,
										cr.plugins_.HTML_Img.prototype.exps.X,
										false,
										null
									]
									,[
										7,
										[
											20,
											61,
											cr.plugins_.HTML_Img.prototype.exps.Width,
											false,
											null
										]
										,[
											0,
											2
										]
									]
								]
							]
,							[
								0,
								[
									4,
									[
										20,
										61,
										cr.plugins_.HTML_Img.prototype.exps.Y,
										false,
										null
									]
									,[
										7,
										[
											20,
											61,
											cr.plugins_.HTML_Img.prototype.exps.Height,
											false,
											null
										]
										,[
											0,
											2
										]
									]
								]
							]
							]
						]
,						[
							64,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							6444911541491934,
							false
							,[
							[
								10,
								0
							]
,							[
								7,
								[
									23,
									"hcid"
								]
							]
							]
						]
,						[
							61,
							cr.plugins_.HTML_Img.prototype.acts.SetInstanceVar,
							null,
							2893193317516211,
							false
							,[
							[
								10,
								0
							]
,							[
								7,
								[
									23,
									"hcid"
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						3997722664309938,
						[
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.AddVar,
							null,
							5970377379269182,
							false
							,[
							[
								11,
								"y"
							]
,							[
								7,
								[
									20,
									42,
									cr.plugins_.Sprite.prototype.exps.Height,
									false,
									null
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.AddVar,
							null,
							5865455620593526,
							false
							,[
							[
								11,
								"c"
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					6474421715041235,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						9963248314562804,
						false
						,[
						[
							7,
							[
								19,
								cr.system_object.prototype.exps.loopindex
							]
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								23,
								"count"
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetGroupActive,
						null,
						7007370610966721,
						false
						,[
						[
							1,
							[
								2,
								"ShowCards"
							]
						]
,						[
							3,
							2
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					9144373098951894,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						5708199453478743,
						false
						,[
						[
							11,
							"c"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								2
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						8325952418439636,
						false
						,[
						[
							11,
							"c"
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
		]
	]
,	[
		"Search",
		[
		[
			1,
			"privacy",
			0,
			0,
false,false,2867016947492848,false
		]
,		[
			1,
			"tabs",
			0,
			0,
false,false,4881753412295543,false
		]
,		[
			2,
			"Global",
			false
		]
,		[
			0,
			null,
			false,
			null,
			8308052948712563,
			[
			[
				-1,
				cr.system_object.prototype.cnds.OnLayoutStart,
				null,
				1,
				false,
				false,
				false,
				1610780881187048,
				false
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				4097268854903151,
				false
				,[
				[
					11,
					"tabs"
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				5288560098695643,
				false
				,[
				[
					11,
					"hcid"
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				7596604931618962,
				false
				,[
				[
					11,
					"edit"
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetLayerVisible,
				null,
				7282765793923633,
				false
				,[
				[
					5,
					[
						0,
						2
					]
				]
,				[
					3,
					0
				]
				]
			]
,			[
				29,
				cr.behaviors.Pin.prototype.acts.Pin,
				"Pin",
				316088430293894,
				false
				,[
				[
					4,
					46
				]
,				[
					3,
					0
				]
				]
			]
,			[
				29,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				6825161494237431,
				false
				,[
				[
					3,
					0
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			6689662853966894,
			[
			[
				1,
				cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
				null,
				1,
				false,
				false,
				false,
				8761333180849395,
				false
			]
,			[
				1,
				cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
				null,
				0,
				false,
				false,
				false,
				61836312941208,
				false
				,[
				[
					4,
					46
				]
				]
			]
			],
			[
			[
				46,
				cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
				null,
				4719672233767974,
				false
				,[
				[
					10,
					0
				]
,				[
					7,
					[
						4,
						[
							21,
							46,
							false,
							null
							,0
						]
						,[
							0,
							1
						]
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetLayerVisible,
				null,
				8528557498214597,
				false
				,[
				[
					5,
					[
						0,
						2
					]
				]
,				[
					3,
					0
				]
				]
			]
,			[
				29,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				8389095915340588,
				false
				,[
				[
					3,
					0
				]
				]
			]
			]
			,[
			[
				0,
				null,
				false,
				null,
				9193667013376891,
				[
				[
					39,
					cr.plugins_.TextBox.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					4544146730711028,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					39,
					cr.plugins_.TextBox.prototype.acts.SetEnabled,
					null,
					4950402077723568,
					false
					,[
					[
						3,
						0
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				551332998186828,
				[
				[
					46,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					4160966764339833,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							2
						]
					]
					]
				]
				],
				[
				[
					46,
					cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
					null,
					6808381862861809,
					false
					,[
					[
						10,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				97380099725074,
				[
				[
					46,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					2318613144317872,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					5,
					cr.plugins_.AJAX.prototype.acts.Post,
					null,
					6682935624181508,
					false
					,[
					[
						1,
						[
							2,
							"discard"
						]
					]
,					[
						1,
						[
							10,
							[
								10,
								[
									10,
									[
										10,
										[
											23,
											"host"
										]
										,[
											2,
											"discard.php?myhcid="
										]
									]
									,[
										20,
										0,
										cr.plugins_.WebStorage.prototype.exps.LocalValue,
										true,
										null
										,[
[
											2,
											"hcid"
										]
										]
									]
								]
								,[
									2,
									"&delhcid="
								]
							]
							,[
								23,
								"hcid"
							]
						]
					]
,					[
						1,
						[
							2,
							""
						]
					]
,					[
						1,
						[
							2,
							"POST"
						]
					]
					]
				]
,				[
					46,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					7697725017381734,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					64,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					3103694887283588,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					64,
					cr.plugins_.Sprite.prototype.acts.SetPosToObject,
					null,
					2389565699263586,
					false
					,[
					[
						4,
						46
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8983054227831676,
				[
				[
					46,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					4844744320662914,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					5,
					cr.plugins_.AJAX.prototype.acts.Post,
					null,
					889527774778912,
					false
					,[
					[
						1,
						[
							2,
							"savecard"
						]
					]
,					[
						1,
						[
							10,
							[
								10,
								[
									10,
									[
										10,
										[
											10,
											[
												23,
												"host"
											]
											,[
												2,
												"savecard.php?myhcid="
											]
										]
										,[
											20,
											0,
											cr.plugins_.WebStorage.prototype.exps.LocalValue,
											true,
											null
											,[
[
												2,
												"hcid"
											]
											]
										]
									]
									,[
										2,
										"&savehcid="
									]
								]
								,[
									23,
									"hcid"
								]
							]
							,[
								2,
								"&check=no"
							]
						]
					]
,					[
						1,
						[
							2,
							""
						]
					]
,					[
						1,
						[
							2,
							"POST"
						]
					]
					]
				]
,				[
					46,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					9789514321702492,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					64,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					5887506223748226,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					64,
					cr.plugins_.Sprite.prototype.acts.SetPosToObject,
					null,
					7126253354033521,
					false
					,[
					[
						4,
						46
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			2426087201922861,
			[
			[
				46,
				cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
				null,
				0,
				false,
				false,
				false,
				6340992648881298,
				false
				,[
				[
					10,
					0
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
			],
			[
			[
				46,
				cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
				null,
				718542894298292,
				false
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			35746656945941,
			[
			[
				46,
				cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
				null,
				0,
				false,
				false,
				false,
				8943871966035924,
				false
				,[
				[
					10,
					0
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
			],
			[
			[
				46,
				cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
				null,
				8969491339704004,
				false
				,[
				[
					0,
					[
						0,
						1
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			2893362809509772,
			[
			[
				5,
				cr.plugins_.AJAX.prototype.cnds.OnComplete,
				null,
				1,
				false,
				false,
				false,
				6559728583690693,
				false
				,[
				[
					1,
					[
						2,
						"savecard"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				8833442756398716,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					5318141806088725,
					false
					,[
					[
						7,
						[
							20,
							5,
							cr.plugins_.AJAX.prototype.exps.LastData,
							true,
							null
						]
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"1"
						]
					]
					]
				]
				],
				[
				[
					64,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					2159393995470617,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					46,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					8637857338561243,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					46,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					7941490162707202,
					false
					,[
					[
						0,
						[
							0,
							1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetLayerVisible,
					null,
					4978420229146176,
					false
					,[
					[
						5,
						[
							0,
							2
						]
					]
,					[
						3,
						1
					]
					]
				]
,				[
					39,
					cr.plugins_.TextBox.prototype.acts.SetEnabled,
					null,
					8264424140322065,
					false
					,[
					[
						3,
						1
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					2599145129842039,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						5469266880781882,
						false
						,[
						[
							11,
							"privacy"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						5,
						cr.plugins_.AJAX.prototype.acts.Post,
						null,
						2779712110846615,
						false
						,[
						[
							1,
							[
								2,
								"notifyOtherUser1"
							]
						]
,						[
							1,
							[
								10,
								[
									10,
									[
										10,
										[
											10,
											[
												10,
												[
													23,
													"host"
												]
												,[
													2,
													"notify.php?myhcid="
												]
											]
											,[
												20,
												0,
												cr.plugins_.WebStorage.prototype.exps.LocalValue,
												true,
												null
												,[
[
													2,
													"hcid"
												]
												]
											]
										]
										,[
											2,
											"&savehcid="
										]
									]
									,[
										23,
										"hcid"
									]
								]
								,[
									2,
									"&type=0&message=saved your card&check=no"
								]
							]
						]
,						[
							1,
							[
								2,
								""
							]
						]
,						[
							1,
							[
								2,
								"POST"
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					9333020022393789,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						4454959855482643,
						false
						,[
						[
							11,
							"privacy"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						5,
						cr.plugins_.AJAX.prototype.acts.Post,
						null,
						6473786061686659,
						false
						,[
						[
							1,
							[
								2,
								"notifyOtherUser2"
							]
						]
,						[
							1,
							[
								10,
								[
									10,
									[
										10,
										[
											10,
											[
												10,
												[
													23,
													"host"
												]
												,[
													2,
													"notify.php?myhcid="
												]
											]
											,[
												20,
												0,
												cr.plugins_.WebStorage.prototype.exps.LocalValue,
												true,
												null
												,[
[
													2,
													"hcid"
												]
												]
											]
										]
										,[
											2,
											"&savehcid="
										]
									]
									,[
										23,
										"hcid"
									]
								]
								,[
									2,
									"&type=1&message= sent u a request &check=no"
								]
							]
						]
,						[
							1,
							[
								2,
								""
							]
						]
,						[
							1,
							[
								2,
								"POST"
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			2518411081425856,
			[
			[
				1,
				cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
				null,
				1,
				false,
				false,
				false,
				6505551672491463,
				false
			]
,			[
				9,
				cr.plugins_.Text.prototype.cnds.CompareInstanceVar,
				null,
				0,
				false,
				false,
				false,
				5670834665032274,
				false
				,[
				[
					10,
					0
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						2,
						"save"
					]
				]
				]
			]
,			[
				1,
				cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
				null,
				0,
				false,
				false,
				false,
				9430298789137938,
				false
				,[
				[
					4,
					9
				]
				]
			]
,			[
				39,
				cr.plugins_.TextBox.prototype.cnds.CompareInstanceVar,
				null,
				0,
				false,
				false,
				false,
				1427055787065053,
				false
				,[
				[
					10,
					0
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.LayerVisible,
				null,
				0,
				false,
				false,
				false,
				6309363589704058,
				false
				,[
				[
					5,
					[
						0,
						2
					]
				]
				]
			]
			],
			[
			[
				5,
				cr.plugins_.AJAX.prototype.acts.Post,
				null,
				4488852330509341,
				false
				,[
				[
					1,
					[
						2,
						"savetags"
					]
				]
,				[
					1,
					[
						10,
						[
							10,
							[
								10,
								[
									10,
									[
										10,
										[
											10,
											[
												23,
												"host"
											]
											,[
												2,
												"savetags.php?myhcid="
											]
										]
										,[
											20,
											0,
											cr.plugins_.WebStorage.prototype.exps.LocalValue,
											true,
											null
											,[
[
												2,
												"hcid"
											]
											]
										]
									]
									,[
										2,
										"&savehcid="
									]
								]
								,[
									23,
									"hcid"
								]
							]
							,[
								2,
								"&tags="
							]
						]
						,[
							20,
							39,
							cr.plugins_.TextBox.prototype.exps.Text,
							true,
							null
						]
					]
				]
,				[
					1,
					[
						2,
						""
					]
				]
,				[
					1,
					[
						2,
						"POST"
					]
				]
				]
			]
,			[
				64,
				cr.plugins_.Sprite.prototype.acts.SetPosToObject,
				null,
				3404243169494323,
				false
				,[
				[
					4,
					9
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
,			[
				64,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				1569168821839885,
				false
				,[
				[
					3,
					1
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			3540057883308414,
			[
			[
				5,
				cr.plugins_.AJAX.prototype.cnds.OnComplete,
				null,
				1,
				false,
				false,
				false,
				2750622950613936,
				false
				,[
				[
					1,
					[
						2,
						"savetags"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				4540957752142825,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					7478763597443582,
					false
					,[
					[
						7,
						[
							20,
							5,
							cr.plugins_.AJAX.prototype.exps.LastData,
							true,
							null
						]
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"1"
						]
					]
					]
				]
,				[
					39,
					cr.plugins_.TextBox.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					9657782218501548,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					64,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					6396320198228146,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetLayerVisible,
					null,
					2959076378157435,
					false
					,[
					[
						5,
						[
							0,
							2
						]
					]
,					[
						3,
						0
					]
					]
				]
,				[
					39,
					cr.plugins_.TextBox.prototype.acts.SetEnabled,
					null,
					8376036927281569,
					false
					,[
					[
						3,
						0
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			5684176537863244,
			[
			[
				5,
				cr.plugins_.AJAX.prototype.cnds.OnComplete,
				null,
				1,
				false,
				false,
				false,
				1113702724827223,
				false
				,[
				[
					1,
					[
						2,
						"discard"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				8905068990227386,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					3783754189534433,
					false
					,[
					[
						7,
						[
							20,
							5,
							cr.plugins_.AJAX.prototype.exps.LastData,
							true,
							null
						]
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"1"
						]
					]
					]
				]
				],
				[
				[
					64,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					8180299635700846,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					46,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					718258551295577,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					46,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					6311692996925792,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			5427173191843086,
			[
			[
				1,
				cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
				null,
				1,
				false,
				false,
				false,
				6952134016117176,
				false
			]
,			[
				1,
				cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
				null,
				0,
				false,
				false,
				false,
				6378445215937572,
				false
				,[
				[
					4,
					53
				]
				]
			]
			],
			[
			[
				54,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				9484820718416198,
				false
				,[
				[
					3,
					0
				]
				]
			]
,			[
				46,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				4996938053449966,
				false
				,[
				[
					3,
					0
				]
				]
			]
,			[
				42,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				1606489540925177,
				false
				,[
				[
					3,
					0
				]
				]
			]
,			[
				61,
				cr.plugins_.HTML_Img.prototype.acts.SetVisible,
				null,
				556802981564809,
				false
				,[
				[
					3,
					0
				]
				]
			]
,			[
				44,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				21213325804952,
				false
				,[
				[
					3,
					0
				]
				]
			]
,			[
				45,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				5877547615718413,
				false
				,[
				[
					3,
					0
				]
				]
			]
,			[
				29,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				1409848541654006,
				false
				,[
				[
					3,
					0
				]
				]
			]
,			[
				39,
				cr.plugins_.TextBox.prototype.acts.SetText,
				null,
				3217092725085258,
				false
				,[
				[
					1,
					[
						2,
						""
					]
				]
				]
			]
			]
			,[
			[
				0,
				null,
				false,
				null,
				651721223333914,
				[
				[
					39,
					cr.plugins_.TextBox.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					732013526792127,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetLayerVisible,
					null,
					8598926382939369,
					false
					,[
					[
						5,
						[
							0,
							2
						]
					]
,					[
						3,
						0
					]
					]
				]
,				[
					39,
					cr.plugins_.TextBox.prototype.acts.SetEnabled,
					null,
					7797382103119199,
					false
					,[
					[
						3,
						0
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9817145551097161,
				[
				[
					53,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					1737564629874578,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					7727778494249826,
					false
					,[
					[
						11,
						"tabs"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9367973335251999,
				[
				[
					53,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					723313283255352,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					9765132364674121,
					false
					,[
					[
						11,
						"tabs"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			6875174144880022,
			[
			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				2055937918852009,
				false
				,[
				[
					11,
					"tabs"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				8385395585456058,
				[
				[
					53,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					5552618981645654,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					9,
					cr.plugins_.Text.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					4225646076692049,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"0"
						]
					]
					]
				]
,				[
					39,
					cr.plugins_.TextBox.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					161673594402681,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					53,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					6390684236893904,
					false
					,[
					[
						0,
						[
							0,
							1
						]
					]
					]
				]
,				[
					9,
					cr.plugins_.Text.prototype.acts.SetFontColor,
					null,
					8245107997444201,
					false
					,[
					[
						0,
						[
							19,
							cr.system_object.prototype.exps.rgb
							,[
[
								0,
								255
							]
,[
								0,
								255
							]
,[
								0,
								255
							]
							]
						]
					]
					]
				]
,				[
					39,
					cr.plugins_.TextBox.prototype.acts.SetPlaceholder,
					null,
					6099735802188678,
					false
					,[
					[
						1,
						[
							2,
							"Hellocard id..."
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9667669277829276,
				[
				[
					53,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					2499576032300033,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					9,
					cr.plugins_.Text.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					9505270199567809,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"1"
						]
					]
					]
				]
				],
				[
				[
					53,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					8229526951092499,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					9,
					cr.plugins_.Text.prototype.acts.SetFontColor,
					null,
					8202699719762595,
					false
					,[
					[
						0,
						[
							19,
							cr.system_object.prototype.exps.rgb
							,[
[
								0,
								105
							]
,[
								0,
								105
							]
,[
								0,
								105
							]
							]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			6254141146463208,
			[
			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				2440939681982076,
				false
				,[
				[
					11,
					"tabs"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				2735987937551021,
				[
				[
					53,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					3264425564495787,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					9,
					cr.plugins_.Text.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					3668239002363313,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"0"
						]
					]
					]
				]
				],
				[
				[
					53,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					3579632709929588,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					9,
					cr.plugins_.Text.prototype.acts.SetFontColor,
					null,
					1862661627254006,
					false
					,[
					[
						0,
						[
							19,
							cr.system_object.prototype.exps.rgb
							,[
[
								0,
								105
							]
,[
								0,
								105
							]
,[
								0,
								105
							]
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				757578817529505,
				[
				[
					53,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					7615309484628715,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					9,
					cr.plugins_.Text.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					473990327049018,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"1"
						]
					]
					]
				]
,				[
					39,
					cr.plugins_.TextBox.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					5564023616635613,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					53,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					4234490943289417,
					false
					,[
					[
						0,
						[
							0,
							1
						]
					]
					]
				]
,				[
					9,
					cr.plugins_.Text.prototype.acts.SetFontColor,
					null,
					9153205303282734,
					false
					,[
					[
						0,
						[
							19,
							cr.system_object.prototype.exps.rgb
							,[
[
								0,
								255
							]
,[
								0,
								255
							]
,[
								0,
								255
							]
							]
						]
					]
					]
				]
,				[
					39,
					cr.plugins_.TextBox.prototype.acts.SetPlaceholder,
					null,
					967446708040338,
					false
					,[
					[
						1,
						[
							2,
							"email or number..."
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			1662877439614305,
			[
			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				3656839997773557,
				false
				,[
				[
					11,
					"tabs"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				2526727838759655,
				[
				[
					1,
					cr.plugins_.Touch.prototype.cnds.OnTouchObject,
					null,
					1,
					false,
					false,
					false,
					244146190339758,
					false
					,[
					[
						4,
						40
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					7838822550250381,
					false
					,[
					[
						7,
						[
							19,
							cr.system_object.prototype.exps.len
							,[
[
								20,
								39,
								cr.plugins_.TextBox.prototype.exps.Text,
								true,
								null
							]
							]
						]
					]
,					[
						8,
						4
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					39,
					cr.plugins_.TextBox.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					3198180759555464,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					40,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					9299142564703834,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					5,
					cr.plugins_.AJAX.prototype.acts.Post,
					null,
					8600887326361231,
					false
					,[
					[
						1,
						[
							2,
							"getFromHcid"
						]
					]
,					[
						1,
						[
							10,
							[
								10,
								[
									10,
									[
										23,
										"host"
									]
									,[
										2,
										"retrieve.php?hcid="
									]
								]
								,[
									20,
									39,
									cr.plugins_.TextBox.prototype.exps.Text,
									true,
									null
								]
							]
							,[
								2,
								"&email=&name=&contact="
							]
						]
					]
,					[
						1,
						[
							2,
							""
						]
					]
,					[
						1,
						[
							2,
							"POST"
						]
					]
					]
				]
,				[
					54,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					6735922038103533,
					false
					,[
					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				5900929717356379,
				[
				[
					-1,
					cr.system_object.prototype.cnds.EveryTick,
					null,
					0,
					false,
					false,
					false,
					9938318134077042,
					false
				]
,				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					6741613664788223,
					false
					,[
					[
						7,
						[
							19,
							cr.system_object.prototype.exps.len
							,[
[
								20,
								39,
								cr.plugins_.TextBox.prototype.exps.Text,
								true,
								null
							]
							]
						]
					]
,					[
						8,
						4
					]
,					[
						7,
						[
							23,
							"HCIDLEN"
						]
					]
					]
				]
,				[
					39,
					cr.plugins_.TextBox.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					9894744711745832,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					39,
					cr.plugins_.TextBox.prototype.acts.SetText,
					null,
					6383157947893064,
					false
					,[
					[
						1,
						[
							19,
							cr.system_object.prototype.exps.left
							,[
[
								20,
								39,
								cr.plugins_.TextBox.prototype.exps.Text,
								true,
								null
							]
,[
								23,
								"HCIDLEN"
							]
							]
						]
					]
					]
				]
,				[
					5,
					cr.plugins_.AJAX.prototype.acts.Post,
					null,
					7966217118594791,
					false
					,[
					[
						1,
						[
							2,
							"changePrivacy"
						]
					]
,					[
						1,
						[
							10,
							[
								10,
								[
									10,
									[
										10,
										[
											23,
											"host"
										]
										,[
											2,
											"check_privacy.php?hcid="
										]
									]
									,[
										20,
										0,
										cr.plugins_.WebStorage.prototype.exps.LocalValue,
										true,
										null
										,[
[
											2,
											"hcid"
										]
										]
									]
								]
								,[
									2,
									"&check=no&privacy="
								]
							]
							,[
								20,
								88,
								cr.plugins_.sliderbar.prototype.exps.Value,
								false,
								null
							]
						]
					]
,					[
						1,
						[
							2,
							""
						]
					]
,					[
						1,
						[
							2,
							"POST"
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				307915966815382,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					1218293433753805,
					false
					,[
					[
						7,
						[
							19,
							cr.system_object.prototype.exps.len
							,[
[
								20,
								39,
								cr.plugins_.TextBox.prototype.exps.Text,
								true,
								null
							]
							]
						]
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					54,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					15016197579728,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					46,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					1654488044330815,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					42,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					2288933487547695,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					61,
					cr.plugins_.HTML_Img.prototype.acts.SetVisible,
					null,
					9811393348034234,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					44,
					cr.plugins_.Text.prototype.acts.SetVisible,
					null,
					2193882722526945,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					45,
					cr.plugins_.Text.prototype.acts.SetVisible,
					null,
					7182909447557369,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					29,
					cr.plugins_.Text.prototype.acts.SetVisible,
					null,
					7345505854882336,
					false
					,[
					[
						3,
						0
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			4071367455548133,
			[
			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				5329359683424834,
				false
				,[
				[
					11,
					"tabs"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				1518798047724691,
				[
				[
					39,
					cr.plugins_.TextBox.prototype.cnds.OnTextChanged,
					null,
					1,
					false,
					false,
					false,
					846890254451508,
					false
				]
,				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					9093379247144103,
					false
					,[
					[
						7,
						[
							19,
							cr.system_object.prototype.exps.len
							,[
[
								20,
								39,
								cr.plugins_.TextBox.prototype.exps.Text,
								true,
								null
							]
							]
						]
					]
,					[
						8,
						4
					]
,					[
						7,
						[
							0,
							3
						]
					]
					]
				]
,				[
					39,
					cr.plugins_.TextBox.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					3032857877180099,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					54,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					2949353838200195,
					false
					,[
					[
						3,
						1
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					5468845073936288,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						7157853136623757,
						false
						,[
						[
							7,
							[
								19,
								cr.system_object.prototype.exps.find
								,[
[
									20,
									39,
									cr.plugins_.TextBox.prototype.exps.Text,
									true,
									null
								]
,[
									2,
									"@"
								]
								]
							]
						]
,						[
							8,
							4
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						9246119972099863,
						false
						,[
						[
							7,
							[
								19,
								cr.system_object.prototype.exps.find
								,[
[
									20,
									39,
									cr.plugins_.TextBox.prototype.exps.Text,
									true,
									null
								]
,[
									2,
									"."
								]
								]
							]
						]
,						[
							8,
							4
						]
,						[
							7,
							[
								0,
								2
							]
						]
						]
					]
,					[
						39,
						cr.plugins_.TextBox.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						7582608558460458,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						5,
						cr.plugins_.AJAX.prototype.acts.Post,
						null,
						245560700999039,
						false
						,[
						[
							1,
							[
								2,
								"getFromHcid3"
							]
						]
,						[
							1,
							[
								10,
								[
									10,
									[
										10,
										[
											23,
											"host"
										]
										,[
											2,
											"retrieve.php?hcid=&email="
										]
									]
									,[
										20,
										39,
										cr.plugins_.TextBox.prototype.exps.Text,
										true,
										null
									]
								]
								,[
									2,
									"&name=&contact="
								]
							]
						]
,						[
							1,
							[
								2,
								""
							]
						]
,						[
							1,
							[
								2,
								"POST"
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					74398094889929,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						3988117827087911,
						false
						,[
						[
							7,
							[
								19,
								cr.system_object.prototype.exps.find
								,[
[
									20,
									39,
									cr.plugins_.TextBox.prototype.exps.Text,
									true,
									null
								]
,[
									2,
									"@"
								]
								]
							]
						]
,						[
							8,
							2
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						94866133277062,
						false
						,[
						[
							7,
							[
								19,
								cr.system_object.prototype.exps.find
								,[
[
									20,
									39,
									cr.plugins_.TextBox.prototype.exps.Text,
									true,
									null
								]
,[
									2,
									"."
								]
								]
							]
						]
,						[
							8,
							2
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						39,
						cr.plugins_.TextBox.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						6730789644196241,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						8543434309785865,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Compare,
							null,
							0,
							false,
							false,
							false,
							9362399228240878,
							false
							,[
							[
								7,
								[
									19,
									cr.system_object.prototype.exps["int"]
									,[
[
										19,
										cr.system_object.prototype.exps.left
										,[
[
											20,
											39,
											cr.plugins_.TextBox.prototype.exps.Text,
											true,
											null
										]
,[
											0,
											1
										]
										]
									]
									]
								]
							]
,							[
								8,
								2
							]
,							[
								7,
								[
									0,
									10
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.cnds.Compare,
							null,
							0,
							false,
							false,
							false,
							2057265440905406,
							false
							,[
							[
								7,
								[
									19,
									cr.system_object.prototype.exps.len
									,[
[
										20,
										39,
										cr.plugins_.TextBox.prototype.exps.Text,
										true,
										null
									]
									]
								]
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									10
								]
							]
							]
						]
,						[
							39,
							cr.plugins_.TextBox.prototype.cnds.CompareInstanceVar,
							null,
							0,
							false,
							false,
							false,
							5473293808576406,
							false
							,[
							[
								10,
								0
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
						],
						[
						[
							5,
							cr.plugins_.AJAX.prototype.acts.Post,
							null,
							4377373575027953,
							false
							,[
							[
								1,
								[
									2,
									"getFromHcid2"
								]
							]
,							[
								1,
								[
									10,
									[
										10,
										[
											23,
											"host"
										]
										,[
											2,
											"retrieve.php?hcid=&email=&name=&contact="
										]
									]
									,[
										20,
										39,
										cr.plugins_.TextBox.prototype.exps.Text,
										true,
										null
									]
								]
							]
,							[
								1,
								[
									2,
									""
								]
							]
,							[
								1,
								[
									2,
									"POST"
								]
							]
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				5507833961107898,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					8857626578762792,
					false
					,[
					[
						7,
						[
							19,
							cr.system_object.prototype.exps.len
							,[
[
								20,
								39,
								cr.plugins_.TextBox.prototype.exps.Text,
								true,
								null
							]
							]
						]
					]
,					[
						8,
						2
					]
,					[
						7,
						[
							0,
							4
						]
					]
					]
				]
,				[
					39,
					cr.plugins_.TextBox.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					3117589773734357,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					54,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					5295621050631053,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					46,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					9651407595904777,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					42,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					3915591286910646,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					61,
					cr.plugins_.HTML_Img.prototype.acts.SetVisible,
					null,
					2245278320763654,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					44,
					cr.plugins_.Text.prototype.acts.SetVisible,
					null,
					1684458493746858,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					45,
					cr.plugins_.Text.prototype.acts.SetVisible,
					null,
					1397267153904172,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					29,
					cr.plugins_.Text.prototype.acts.SetVisible,
					null,
					5801742636719038,
					false
					,[
					[
						3,
						0
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			true,
			null,
			6578897817975334,
			[
			[
				5,
				cr.plugins_.AJAX.prototype.cnds.OnComplete,
				null,
				1,
				false,
				false,
				false,
				4095972951933816,
				false
				,[
				[
					1,
					[
						2,
						"getFromHcid"
					]
				]
				]
			]
,			[
				5,
				cr.plugins_.AJAX.prototype.cnds.OnComplete,
				null,
				1,
				false,
				false,
				false,
				2512265951796657,
				false
				,[
				[
					1,
					[
						2,
						"getFromHcid3"
					]
				]
				]
			]
,			[
				5,
				cr.plugins_.AJAX.prototype.cnds.OnComplete,
				null,
				1,
				false,
				false,
				false,
				6023129670510348,
				false
				,[
				[
					1,
					[
						2,
						"getFromHcid2"
					]
				]
				]
			]
			],
			[
			[
				29,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				6625335658565362,
				false
				,[
				[
					3,
					0
				]
				]
			]
			]
			,[
			[
				0,
				null,
				false,
				null,
				4036284457037417,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					5219578053413896,
					false
					,[
					[
						7,
						[
							20,
							5,
							cr.plugins_.AJAX.prototype.exps.LastData,
							true,
							null
						]
					]
,					[
						8,
						1
					]
,					[
						7,
						[
							2,
							""
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					863634402831615,
					false
					,[
					[
						7,
						[
							19,
							cr.system_object.prototype.exps.tokenat
							,[
[
								20,
								5,
								cr.plugins_.AJAX.prototype.exps.LastData,
								true,
								null
							]
,[
								0,
								0
							]
,[
								2,
								"|"
							]
							]
						]
					]
,					[
						8,
						1
					]
,					[
						7,
						[
							20,
							0,
							cr.plugins_.WebStorage.prototype.exps.LocalValue,
							true,
							null
							,[
[
								2,
								"hcid"
							]
							]
						]
					]
					]
				]
				],
				[
				[
					44,
					cr.plugins_.Text.prototype.acts.SetText,
					null,
					3388648176783714,
					false
					,[
					[
						7,
						[
							19,
							cr.system_object.prototype.exps.tokenat
							,[
[
								20,
								5,
								cr.plugins_.AJAX.prototype.exps.LastData,
								true,
								null
							]
,[
								0,
								1
							]
,[
								2,
								"|"
							]
							]
						]
					]
					]
				]
,				[
					45,
					cr.plugins_.Text.prototype.acts.SetText,
					null,
					5693766083050436,
					false
					,[
					[
						7,
						[
							19,
							cr.system_object.prototype.exps.tokenat
							,[
[
								20,
								5,
								cr.plugins_.AJAX.prototype.exps.LastData,
								true,
								null
							]
,[
								0,
								2
							]
,[
								2,
								"|"
							]
							]
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					2637684884930373,
					false
					,[
					[
						11,
						"hcid"
					]
,					[
						7,
						[
							19,
							cr.system_object.prototype.exps.tokenat
							,[
[
								20,
								5,
								cr.plugins_.AJAX.prototype.exps.LastData,
								true,
								null
							]
,[
								0,
								0
							]
,[
								2,
								"|"
							]
							]
						]
					]
					]
				]
,				[
					5,
					cr.plugins_.AJAX.prototype.acts.Post,
					null,
					6372099977519455,
					false
					,[
					[
						1,
						[
							2,
							"saved_card"
						]
					]
,					[
						1,
						[
							10,
							[
								10,
								[
									10,
									[
										10,
										[
											10,
											[
												23,
												"host"
											]
											,[
												2,
												"savecard.php?myhcid="
											]
										]
										,[
											20,
											0,
											cr.plugins_.WebStorage.prototype.exps.LocalValue,
											true,
											null
											,[
[
												2,
												"hcid"
											]
											]
										]
									]
									,[
										2,
										"&savehcid="
									]
								]
								,[
									23,
									"hcid"
								]
							]
							,[
								2,
								"&check=yes"
							]
						]
					]
,					[
						1,
						[
							2,
							""
						]
					]
,					[
						1,
						[
							2,
							"POST"
						]
					]
					]
				]
,				[
					5,
					cr.plugins_.AJAX.prototype.acts.Post,
					null,
					3139520756416751,
					false
					,[
					[
						1,
						[
							2,
							"RetrieveForLocalStorage"
						]
					]
,					[
						1,
						[
							10,
							[
								10,
								[
									10,
									[
										23,
										"host"
									]
									,[
										2,
										"retrieve.php?hcid="
									]
								]
								,[
									20,
									0,
									cr.plugins_.WebStorage.prototype.exps.LocalValue,
									true,
									null
									,[
[
										2,
										"hcid"
									]
									]
								]
							]
							,[
								2,
								"&email=&contact=&name="
							]
						]
					]
,					[
						1,
						[
							2,
							""
						]
					]
,					[
						1,
						[
							2,
							"POST"
						]
					]
					]
				]
,				[
					5,
					cr.plugins_.AJAX.prototype.acts.Post,
					null,
					6656428476215926,
					false
					,[
					[
						1,
						[
							2,
							"checkPrivacy"
						]
					]
,					[
						1,
						[
							10,
							[
								10,
								[
									10,
									[
										23,
										"host"
									]
									,[
										2,
										"check_privacy.php?hcid="
									]
								]
								,[
									23,
									"hcid"
								]
							]
							,[
								2,
								"&check=yes&privacy="
							]
						]
					]
,					[
						1,
						[
							2,
							""
						]
					]
,					[
						1,
						[
							2,
							"POST"
						]
					]
					]
				]
,				[
					42,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					9014778944272253,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					44,
					cr.plugins_.Text.prototype.acts.SetVisible,
					null,
					7433494265956096,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					45,
					cr.plugins_.Text.prototype.acts.SetVisible,
					null,
					3915659658870535,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					54,
					cr.plugins_.Sprite.prototype.acts.SetPos,
					null,
					7122595724919842,
					false
					,[
					[
						0,
						[
							4,
							[
								20,
								61,
								cr.plugins_.HTML_Img.prototype.exps.X,
								false,
								null
							]
							,[
								7,
								[
									20,
									61,
									cr.plugins_.HTML_Img.prototype.exps.Width,
									false,
									null
								]
								,[
									0,
									2
								]
							]
						]
					]
,					[
						0,
						[
							4,
							[
								20,
								61,
								cr.plugins_.HTML_Img.prototype.exps.Y,
								false,
								null
							]
							,[
								7,
								[
									20,
									61,
									cr.plugins_.HTML_Img.prototype.exps.Height,
									false,
									null
								]
								,[
									0,
									2
								]
							]
						]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					5799551499284665,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						318516416801263,
						false
						,[
						[
							7,
							[
								19,
								cr.system_object.prototype.exps.find
								,[
[
									19,
									cr.system_object.prototype.exps.tokenat
									,[
[
										20,
										5,
										cr.plugins_.AJAX.prototype.exps.LastData,
										true,
										null
									]
,[
										0,
										6
									]
,[
										2,
										"|"
									]
									]
								]
,[
									2,
									"http"
								]
								]
							]
						]
,						[
							8,
							5
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						61,
						cr.plugins_.HTML_Img.prototype.acts.SetURL,
						null,
						1692463725731632,
						false
						,[
						[
							1,
							[
								19,
								cr.system_object.prototype.exps.tokenat
								,[
[
									20,
									5,
									cr.plugins_.AJAX.prototype.exps.LastData,
									true,
									null
								]
,[
									0,
									6
								]
,[
									2,
									"|"
								]
								]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					9545785570701898,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						930709149714583,
						false
						,[
						[
							7,
							[
								19,
								cr.system_object.prototype.exps.find
								,[
[
									19,
									cr.system_object.prototype.exps.tokenat
									,[
[
										20,
										5,
										cr.plugins_.AJAX.prototype.exps.LastData,
										true,
										null
									]
,[
										0,
										6
									]
,[
										2,
										"|"
									]
									]
								]
,[
									2,
									"phpimg"
								]
								]
							]
						]
,						[
							8,
							5
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						61,
						cr.plugins_.HTML_Img.prototype.acts.SetURL,
						null,
						8565907169138219,
						false
						,[
						[
							1,
							[
								10,
								[
									23,
									"host"
								]
								,[
									19,
									cr.system_object.prototype.exps.tokenat
									,[
[
										20,
										5,
										cr.plugins_.AJAX.prototype.exps.LastData,
										true,
										null
									]
,[
										0,
										6
									]
,[
										2,
										"|"
									]
									]
								]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					4651680434345663,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						1762332791263921,
						false
						,[
						[
							7,
							[
								19,
								cr.system_object.prototype.exps.len
								,[
[
									19,
									cr.system_object.prototype.exps.tokenat
									,[
[
										20,
										5,
										cr.plugins_.AJAX.prototype.exps.LastData,
										true,
										null
									]
,[
										0,
										6
									]
,[
										2,
										"|"
									]
									]
								]
								]
							]
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						61,
						cr.plugins_.HTML_Img.prototype.acts.SetURL,
						null,
						1442622962206488,
						false
						,[
						[
							1,
							[
								10,
								[
									23,
									"host"
								]
								,[
									2,
									"phpimg/default.png"
								]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					7230177939441997,
					[
					[
						45,
						cr.plugins_.Text.prototype.cnds.CompareText,
						null,
						0,
						false,
						false,
						false,
						597112674248963,
						false
						,[
						[
							1,
							[
								2,
								""
							]
						]
,						[
							3,
							0
						]
						]
					]
					],
					[
					[
						45,
						cr.plugins_.Text.prototype.acts.SetText,
						null,
						2835746122814724,
						false
						,[
						[
							7,
							[
								2,
								"-"
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				972055750976344,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Else,
					null,
					0,
					false,
					false,
					false,
					8441304904571596,
					false
				]
				],
				[
				[
					54,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					6514372694032225,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					46,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					6474436103918542,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					42,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					1746090252903728,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					44,
					cr.plugins_.Text.prototype.acts.SetVisible,
					null,
					3543754393320492,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					45,
					cr.plugins_.Text.prototype.acts.SetVisible,
					null,
					7037467303538964,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					61,
					cr.plugins_.HTML_Img.prototype.acts.SetVisible,
					null,
					6340643398523472,
					false
					,[
					[
						3,
						0
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			6133098247951958,
			[
			[
				5,
				cr.plugins_.AJAX.prototype.cnds.OnError,
				null,
				1,
				false,
				false,
				false,
				3734351576860283,
				false
				,[
				[
					1,
					[
						2,
						"getFromHcid"
					]
				]
				]
			]
			],
			[
			[
				54,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5758724831425609,
				false
				,[
				[
					3,
					0
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			5192781064215578,
			[
			[
				61,
				cr.plugins_.HTML_Img.prototype.cnds.OnComplete,
				null,
				1,
				false,
				false,
				false,
				6514882994135914,
				false
			]
			],
			[
			[
				54,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				1383593721301466,
				false
				,[
				[
					3,
					0
				]
				]
			]
,			[
				61,
				cr.plugins_.HTML_Img.prototype.acts.SetVisible,
				null,
				8051383994205815,
				false
				,[
				[
					3,
					1
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			5560331166107605,
			[
			[
				1,
				cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
				null,
				1,
				false,
				false,
				false,
				8689093605726583,
				false
			]
,			[
				44,
				cr.plugins_.Text.prototype.cnds.IsVisible,
				null,
				0,
				false,
				false,
				false,
				4729463275944958,
				false
			]
,			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				8113883987210593,
				false
				,[
				[
					11,
					"privacy"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				true,
				null,
				5134217854827531,
				[
				[
					1,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					3620872707297761,
					false
					,[
					[
						4,
						61
					]
					]
				]
,				[
					1,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					4197559309722704,
					false
					,[
					[
						4,
						44
					]
					]
				]
,				[
					1,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					4373414154921155,
					false
					,[
					[
						4,
						45
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					2953200494659141,
					false
					,[
					[
						11,
						"edit"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.GoToLayout,
					null,
					8582960511769041,
					false
					,[
					[
						6,
						"HelloCard"
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			441804198615895,
			[
			[
				5,
				cr.plugins_.AJAX.prototype.cnds.OnComplete,
				null,
				1,
				false,
				false,
				false,
				8759298515248482,
				false
				,[
				[
					1,
					[
						2,
						"saved_card"
					]
				]
				]
			]
			],
			[
			[
				46,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				181800099842389,
				false
				,[
				[
					3,
					1
				]
				]
			]
,			[
				29,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				4030265646543119,
				false
				,[
				[
					3,
					0
				]
				]
			]
,			[
				64,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				4357524597927465,
				false
				,[
				[
					3,
					0
				]
				]
			]
			]
			,[
			[
				0,
				null,
				false,
				null,
				7256315716114579,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					1561882722391134,
					false
					,[
					[
						7,
						[
							20,
							5,
							cr.plugins_.AJAX.prototype.exps.LastData,
							true,
							null
						]
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"0"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					4828953745027085,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						4056666757382289,
						false
						,[
						[
							11,
							"privacy"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						5,
						cr.plugins_.AJAX.prototype.acts.Post,
						null,
						1990641752940192,
						false
						,[
						[
							1,
							[
								2,
								"notifyOtherUser1"
							]
						]
,						[
							1,
							[
								10,
								[
									10,
									[
										10,
										[
											10,
											[
												10,
												[
													23,
													"host"
												]
												,[
													2,
													"notify.php?myhcid="
												]
											]
											,[
												20,
												0,
												cr.plugins_.WebStorage.prototype.exps.LocalValue,
												true,
												null
												,[
[
													2,
													"hcid"
												]
												]
											]
										]
										,[
											2,
											"&savehcid="
										]
									]
									,[
										23,
										"hcid"
									]
								]
								,[
									2,
									"&type=0&message=saved your card&check=no"
								]
							]
						]
,						[
							1,
							[
								2,
								""
							]
						]
,						[
							1,
							[
								2,
								"POST"
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					5049886325862048,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						5385766970210781,
						false
						,[
						[
							11,
							"privacy"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						5,
						cr.plugins_.AJAX.prototype.acts.Post,
						null,
						3405095038812897,
						false
						,[
						[
							1,
							[
								2,
								"notifyOtherUser2"
							]
						]
,						[
							1,
							[
								10,
								[
									10,
									[
										10,
										[
											10,
											[
												10,
												[
													23,
													"host"
												]
												,[
													2,
													"notify.php?myhcid="
												]
											]
											,[
												20,
												0,
												cr.plugins_.WebStorage.prototype.exps.LocalValue,
												true,
												null
												,[
[
													2,
													"hcid"
												]
												]
											]
										]
										,[
											2,
											"&savehcid="
										]
									]
									,[
										23,
										"hcid"
									]
								]
								,[
									2,
									"&type=1&message= sent u a request &check=no"
								]
							]
						]
,						[
							1,
							[
								2,
								""
							]
						]
,						[
							1,
							[
								2,
								"POST"
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				5181389717686957,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Else,
					null,
					0,
					false,
					false,
					false,
					7510976388209853,
					false
				]
				],
				[
				[
					46,
					cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
					null,
					4022843635366302,
					false
					,[
					[
						10,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					46,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					866762068986699,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			1543346029449634,
			[
			[
				5,
				cr.plugins_.AJAX.prototype.cnds.OnComplete,
				null,
				1,
				false,
				false,
				false,
				3159112803019573,
				false
				,[
				[
					1,
					[
						2,
						"notifyOtherUser1"
					]
				]
				]
			]
			],
			[
			[
				46,
				cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
				null,
				3472715947320597,
				false
				,[
				[
					10,
					0
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
,			[
				46,
				cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
				null,
				7411742556352241,
				false
				,[
				[
					0,
					[
						0,
						1
					]
				]
				]
			]
,			[
				29,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				6023007930527437,
				false
				,[
				[
					3,
					0
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			3570792600238264,
			[
			[
				5,
				cr.plugins_.AJAX.prototype.cnds.OnComplete,
				null,
				1,
				false,
				false,
				false,
				9607315785577903,
				false
				,[
				[
					1,
					[
						2,
						"notifyOtherUser2"
					]
				]
				]
			]
			],
			[
			[
				46,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				8442546025508878,
				false
				,[
				[
					3,
					0
				]
				]
			]
,			[
				29,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				6601457636282879,
				false
				,[
				[
					3,
					1
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			5728763780339421,
			[
			[
				5,
				cr.plugins_.AJAX.prototype.cnds.OnComplete,
				null,
				1,
				false,
				false,
				false,
				9889087832609909,
				false
				,[
				[
					1,
					[
						2,
						"RetrieveForLocalStorage"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				760624817685296,
				[
				[
					0,
					cr.plugins_.WebStorage.prototype.cnds.LocalStorageExists,
					null,
					0,
					false,
					true,
					false,
					8333450631482099,
					false
					,[
					[
						1,
						[
							2,
							"SavedCards"
						]
					]
					]
				]
				],
				[
				[
					0,
					cr.plugins_.WebStorage.prototype.acts.StoreLocal,
					null,
					3480729372878436,
					false
					,[
					[
						1,
						[
							2,
							"SavedCards"
						]
					]
,					[
						7,
						[
							2,
							""
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				5938916711086208,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					1903054698757594,
					false
					,[
					[
						7,
						[
							20,
							5,
							cr.plugins_.AJAX.prototype.exps.LastData,
							true,
							null
						]
					]
,					[
						8,
						1
					]
,					[
						7,
						[
							2,
							""
						]
					]
					]
				]
				],
				[
				[
					0,
					cr.plugins_.WebStorage.prototype.acts.StoreLocal,
					null,
					1017013109317686,
					false
					,[
					[
						1,
						[
							2,
							"SavedCards"
						]
					]
,					[
						7,
						[
							10,
							[
								20,
								0,
								cr.plugins_.WebStorage.prototype.exps.LocalValue,
								true,
								null
								,[
[
									2,
									"SavedCards"
								]
								]
							]
							,[
								19,
								cr.system_object.prototype.exps.tokenat
								,[
[
									20,
									5,
									cr.plugins_.AJAX.prototype.exps.LastData,
									true,
									null
								]
,[
									0,
									0
								]
,[
									2,
									"|"
								]
								]
							]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			6151797438329444,
			[
			[
				1,
				cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
				null,
				1,
				false,
				false,
				false,
				5765359061342108,
				false
			]
,			[
				1,
				cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
				null,
				0,
				false,
				false,
				false,
				1814899080418015,
				false
				,[
				[
					4,
					49
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				7191379400464265,
				[
				[
					39,
					cr.plugins_.TextBox.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					1876543373577046,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					39,
					cr.plugins_.TextBox.prototype.acts.SetText,
					null,
					8973793268916941,
					false
					,[
					[
						1,
						[
							2,
							""
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				475747020445725,
				[
				[
					39,
					cr.plugins_.TextBox.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					5654820061327163,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetLayerVisible,
					null,
					6398850105366014,
					false
					,[
					[
						5,
						[
							0,
							2
						]
					]
,					[
						3,
						0
					]
					]
				]
,				[
					39,
					cr.plugins_.TextBox.prototype.acts.SetEnabled,
					null,
					1190619351039881,
					false
					,[
					[
						3,
						0
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			7005871195645413,
			[
			[
				-1,
				cr.system_object.prototype.cnds.EveryTick,
				null,
				0,
				false,
				false,
				false,
				1308955612673538,
				false
			]
			],
			[
			[
				53,
				cr.plugins_.Sprite.prototype.acts.SetWidth,
				null,
				8996308451576115,
				false
				,[
				[
					0,
					[
						7,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewportright
								,[
[
									0,
									0
								]
								]
							]
							,[
								19,
								cr.system_object.prototype.exps.abs
								,[
[
									19,
									cr.system_object.prototype.exps.viewportleft
									,[
[
										0,
										0
									]
									]
								]
								]
							]
						]
						,[
							0,
							2
						]
					]
				]
				]
			]
,			[
				54,
				cr.plugins_.Sprite.prototype.acts.SetX,
				null,
				5245179170445822,
				false
				,[
				[
					0,
					[
						4,
						[
							20,
							61,
							cr.plugins_.HTML_Img.prototype.exps.X,
							false,
							null
						]
						,[
							7,
							[
								20,
								61,
								cr.plugins_.HTML_Img.prototype.exps.Width,
								false,
								null
							]
							,[
								0,
								2
							]
						]
					]
				]
				]
			]
			]
			,[
			[
				0,
				null,
				false,
				null,
				8057212839049259,
				[
				[
					9,
					cr.plugins_.Text.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					8715004804136242,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"save"
						]
					]
					]
				]
,				[
					40,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					8438839006321965,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					9,
					cr.plugins_.Text.prototype.acts.SetPosToObject,
					null,
					3849988180510602,
					false
					,[
					[
						4,
						40
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				2505174581396737,
				[
				[
					9,
					cr.plugins_.Text.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					4230174644837573,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"0"
						]
					]
					]
				]
				],
				[
				[
					9,
					cr.plugins_.Text.prototype.acts.SetX,
					null,
					4183414516395859,
					false
					,[
					[
						0,
						[
							7,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewportright
									,[
[
										0,
										0
									]
									]
								]
								,[
									19,
									cr.system_object.prototype.exps.abs
									,[
[
										19,
										cr.system_object.prototype.exps.viewportleft
										,[
[
											0,
											0
										]
										]
									]
									]
								]
							]
							,[
								0,
								4
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				2270091283954466,
				[
				[
					53,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					58074960953288,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					53,
					cr.plugins_.Sprite.prototype.acts.SetX,
					null,
					6267628447708702,
					false
					,[
					[
						0,
						[
							7,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewportright
									,[
[
										0,
										0
									]
									]
								]
								,[
									19,
									cr.system_object.prototype.exps.abs
									,[
[
										19,
										cr.system_object.prototype.exps.viewportleft
										,[
[
											0,
											0
										]
										]
									]
									]
								]
							]
							,[
								0,
								4
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6481451376898185,
				[
				[
					9,
					cr.plugins_.Text.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					1631713692721935,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"1"
						]
					]
					]
				]
				],
				[
				[
					9,
					cr.plugins_.Text.prototype.acts.SetX,
					null,
					4916429108767285,
					false
					,[
					[
						0,
						[
							6,
							[
								0,
								3
							]
							,[
								7,
								[
									4,
									[
										19,
										cr.system_object.prototype.exps.viewportright
										,[
[
											0,
											0
										]
										]
									]
									,[
										19,
										cr.system_object.prototype.exps.abs
										,[
[
											19,
											cr.system_object.prototype.exps.viewportleft
											,[
[
												0,
												0
											]
											]
										]
										]
									]
								]
								,[
									0,
									4
								]
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				2417588881077294,
				[
				[
					53,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					6489176853599054,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					53,
					cr.plugins_.Sprite.prototype.acts.SetX,
					null,
					370657048672293,
					false
					,[
					[
						0,
						[
							6,
							[
								0,
								3
							]
							,[
								7,
								[
									4,
									[
										19,
										cr.system_object.prototype.exps.viewportright
										,[
[
											0,
											0
										]
										]
									]
									,[
										19,
										cr.system_object.prototype.exps.abs
										,[
[
											19,
											cr.system_object.prototype.exps.viewportleft
											,[
[
												0,
												0
											]
											]
										]
										]
									]
								]
								,[
									0,
									4
								]
							]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			9390876660990192,
			[
			[
				5,
				cr.plugins_.AJAX.prototype.cnds.OnComplete,
				null,
				1,
				false,
				false,
				false,
				6727221243389146,
				false
				,[
				[
					1,
					[
						2,
						"checkPrivacy"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				4781657531733068,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					9767091072252084,
					false
					,[
					[
						7,
						[
							20,
							5,
							cr.plugins_.AJAX.prototype.exps.LastData,
							true,
							null
						]
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"0"
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					6761648579975604,
					false
					,[
					[
						11,
						"privacy"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3865243730739764,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					6288189946289056,
					false
					,[
					[
						7,
						[
							20,
							5,
							cr.plugins_.AJAX.prototype.exps.LastData,
							true,
							null
						]
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"1"
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					707346072976025,
					false
					,[
					[
						11,
						"privacy"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				]
			]
			]
		]
		]
	]
,	[
		"HelloCard",
		[
		[
			1,
			"pop",
			0,
			0,
false,false,4296538046965909,false
		]
,		[
			1,
			"eco",
			0,
			0,
false,false,1847827683337492,false
		]
,		[
			1,
			"website",
			1,
			"",
false,false,8171124893965636,false
		]
,		[
			1,
			"linkdin",
			1,
			"",
false,false,7503559847616935,false
		]
,		[
			1,
			"twitter",
			1,
			"",
false,false,3372501074930635,false
		]
,		[
			1,
			"facebook",
			1,
			"",
false,false,4974556736397402,false
		]
,		[
			1,
			"i",
			0,
			0,
false,false,6566922209882365,false
		]
,		[
			1,
			"ey",
			0,
			0,
false,false,6696619981587142,false
		]
,		[
			1,
			"cam",
			0,
			0,
false,false,9658045546897063,false
		]
,		[
			1,
			"contact1",
			1,
			"",
false,false,3052273973106541,false
		]
,		[
			1,
			"email1",
			1,
			"",
false,false,1975268460006603,false
		]
,		[
			1,
			"company",
			1,
			"",
false,false,195791445994406,false
		]
,		[
			1,
			"designation",
			1,
			"",
false,false,6260605945945713,false
		]
,		[
			1,
			"ex",
			0,
			0,
false,false,858584354635174,false
		]
,		[
			2,
			"Global",
			false
		]
,		[
			0,
			null,
			false,
			null,
			4287168085599246,
			[
			[
				1,
				cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
				null,
				1,
				false,
				false,
				false,
				857181722814057,
				false
			]
,			[
				1,
				cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
				null,
				0,
				false,
				false,
				false,
				7715075212677437,
				false
				,[
				[
					4,
					35
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				8716948733016867,
				false
				,[
				[
					11,
					"ey"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				5446245722612068,
				false
				,[
				[
					11,
					"ex"
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
			]
			,[
			[
				0,
				null,
				false,
				null,
				186530790688654,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					6266885095828905,
					false
					,[
					[
						11,
						"edit"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.GoToLayout,
					null,
					975827006890922,
					false
					,[
					[
						6,
						"MyCards"
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6238730714789778,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					6052316472048546,
					false
					,[
					[
						11,
						"edit"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.GoToLayout,
					null,
					1710981958680175,
					false
					,[
					[
						6,
						"Search"
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			33577745997175,
			[
			[
				9,
				cr.plugins_.Text.prototype.cnds.CompareInstanceVar,
				null,
				0,
				false,
				false,
				false,
				5171756833990933,
				false
				,[
				[
					10,
					0
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						2,
						"edit"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				1932497261499771,
				[
				[
					-1,
					cr.system_object.prototype.cnds.OnLayoutStart,
					null,
					1,
					false,
					false,
					false,
					8019611639734915,
					false
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					5365650432763551,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						2892540036353553,
						false
						,[
						[
							11,
							"edit"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						9,
						cr.plugins_.Text.prototype.acts.SetVisible,
						null,
						5007559628185215,
						false
						,[
						[
							3,
							1
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					7185513935949092,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						8201855403121025,
						false
						,[
						[
							11,
							"edit"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						9,
						cr.plugins_.Text.prototype.acts.SetVisible,
						null,
						9256811958093813,
						false
						,[
						[
							3,
							0
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4512641418827414,
				[
				[
					1,
					cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
					null,
					1,
					false,
					false,
					false,
					7000860428316886,
					false
				]
,				[
					1,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					1232702797057494,
					false
					,[
					[
						4,
						9
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					9767193138187448,
					false
					,[
					[
						11,
						"edit"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					9,
					cr.plugins_.Text.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					490895496407863,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"edit"
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					37773218620434,
					false
					,[
					[
						11,
						"ey"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.AddVar,
					null,
					7505736596595508,
					false
					,[
					[
						11,
						"ex"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					6951922334228332,
					false
					,[
					[
						11,
						"i"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8079657829076457,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					1737755304503656,
					false
					,[
					[
						11,
						"ex"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.TriggerOnce,
					null,
					0,
					false,
					false,
					false,
					5862324819525575,
					false
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					905270351502891,
					false
					,[
					[
						11,
						"edit"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					6418892287965751,
					false
					,[
					[
						11,
						"i"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					60,
					cr.plugins_.TextBox.prototype.acts.SetEnabled,
					null,
					9861792343056097,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					60,
					cr.plugins_.TextBox.prototype.acts.SetVisible,
					null,
					8230111463483641,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					5,
					cr.plugins_.AJAX.prototype.acts.Post,
					null,
					4571679782489251,
					false
					,[
					[
						1,
						[
							2,
							"UpdateInfo"
						]
					]
,					[
						1,
						[
							10,
							[
								10,
								[
									10,
									[
										10,
										[
											10,
											[
												10,
												[
													10,
													[
														10,
														[
															10,
															[
																10,
																[
																	23,
																	"host"
																]
																,[
																	2,
																	"update.php?&hcid="
																]
															]
															,[
																20,
																0,
																cr.plugins_.WebStorage.prototype.exps.LocalValue,
																true,
																null
																,[
[
																	2,
																	"hcid"
																]
																]
															]
														]
														,[
															2,
															"&email="
														]
													]
													,[
														23,
														"email1"
													]
												]
												,[
													2,
													"&contact="
												]
											]
											,[
												23,
												"contact1"
											]
										]
										,[
											2,
											"&company="
										]
									]
									,[
										23,
										"company"
									]
								]
								,[
									2,
									"&designation="
								]
							]
							,[
								23,
								"designation"
							]
						]
					]
,					[
						1,
						[
							2,
							""
						]
					]
,					[
						1,
						[
							2,
							"POST"
						]
					]
					]
				]
,				[
					54,
					cr.plugins_.Sprite.prototype.acts.SetPos,
					null,
					3730717715981457,
					false
					,[
					[
						0,
						[
							7,
							[
								19,
								cr.system_object.prototype.exps.layoutwidth
							]
							,[
								0,
								2
							]
						]
					]
,					[
						0,
						[
							7,
							[
								19,
								cr.system_object.prototype.exps.layoutheight
							]
							,[
								0,
								2
							]
						]
					]
					]
				]
,				[
					54,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					9187573999219616,
					false
					,[
					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8221415531578217,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					8734035930068512,
					false
					,[
					[
						11,
						"ex"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.TriggerOnce,
					null,
					0,
					false,
					false,
					false,
					9624949550797858,
					false
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					2777395752631593,
					false
					,[
					[
						11,
						"edit"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					60,
					cr.plugins_.TextBox.prototype.acts.SetEnabled,
					null,
					8396081900293755,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					60,
					cr.plugins_.TextBox.prototype.acts.SetVisible,
					null,
					8477313605088281,
					false
					,[
					[
						3,
						1
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					8637193096459503,
					[
					[
						9,
						cr.plugins_.Text.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						2535638028255815,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								2,
								"edit"
							]
						]
						]
					]
					],
					[
					[
						9,
						cr.plugins_.Text.prototype.acts.SetText,
						null,
						4131432277786886,
						false
						,[
						[
							7,
							[
								2,
								"save"
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8715314261427306,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					482655673623646,
					false
					,[
					[
						11,
						"ex"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							2
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					7642713328100433,
					false
					,[
					[
						11,
						"ex"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			3338256957472253,
			[
			[
				-1,
				cr.system_object.prototype.cnds.OnLayoutStart,
				null,
				1,
				false,
				false,
				false,
				3002769936589576,
				false
			]
			],
			[
			[
				54,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				2595669441336771,
				false
				,[
				[
					3,
					1
				]
				]
			]
			]
			,[
			[
				0,
				null,
				false,
				null,
				6996316665931456,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					2846036039215632,
					false
					,[
					[
						11,
						"edit"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					5,
					cr.plugins_.AJAX.prototype.acts.Post,
					null,
					7467547165396181,
					false
					,[
					[
						1,
						[
							2,
							"ShowFromHcid"
						]
					]
,					[
						1,
						[
							10,
							[
								10,
								[
									10,
									[
										23,
										"host"
									]
									,[
										2,
										"retrieve.php?hcid="
									]
								]
								,[
									23,
									"hcid"
								]
							]
							,[
								2,
								"&email=&name=&contact="
							]
						]
					]
,					[
						1,
						[
							2,
							""
						]
					]
,					[
						1,
						[
							2,
							"POST"
						]
					]
					]
				]
,				[
					5,
					cr.plugins_.AJAX.prototype.acts.Post,
					null,
					1744189804521736,
					false
					,[
					[
						1,
						[
							2,
							"SocialFromHcid"
						]
					]
,					[
						1,
						[
							10,
							[
								10,
								[
									23,
									"host"
								]
								,[
									2,
									"retrieveSocial.php?hcid="
								]
							]
							,[
								23,
								"hcid"
							]
						]
					]
,					[
						1,
						[
							2,
							""
						]
					]
,					[
						1,
						[
							2,
							"POST"
						]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					3173002127713147,
					[
					[
						9,
						cr.plugins_.Text.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						926980589863467,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								2,
								"heading"
							]
						]
						]
					]
					],
					[
					[
						9,
						cr.plugins_.Text.prototype.acts.SetText,
						null,
						7739911412002378,
						false
						,[
						[
							7,
							[
								23,
								"hcid"
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8952289457603987,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					9940625471353714,
					false
					,[
					[
						11,
						"edit"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					61,
					cr.plugins_.HTML_Img.prototype.acts.SetURL,
					null,
					9441526958430707,
					false
					,[
					[
						1,
						[
							10,
							[
								23,
								"host"
							]
							,[
								2,
								"phpimg/default.png"
							]
						]
					]
					]
				]
,				[
					5,
					cr.plugins_.AJAX.prototype.acts.Post,
					null,
					1797434976750942,
					false
					,[
					[
						1,
						[
							2,
							"ShowFromHcid"
						]
					]
,					[
						1,
						[
							10,
							[
								10,
								[
									10,
									[
										23,
										"host"
									]
									,[
										2,
										"retrieve.php?hcid="
									]
								]
								,[
									20,
									0,
									cr.plugins_.WebStorage.prototype.exps.LocalValue,
									true,
									null
									,[
[
										2,
										"hcid"
									]
									]
								]
							]
							,[
								2,
								"&email=&name=&contact="
							]
						]
					]
,					[
						1,
						[
							2,
							""
						]
					]
,					[
						1,
						[
							2,
							"POST"
						]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					2069944950659896,
					[
					[
						9,
						cr.plugins_.Text.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						2858345501155326,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								2,
								"heading"
							]
						]
						]
					]
					],
					[
					[
						9,
						cr.plugins_.Text.prototype.acts.SetText,
						null,
						4282895115543794,
						false
						,[
						[
							7,
							[
								20,
								0,
								cr.plugins_.WebStorage.prototype.exps.LocalValue,
								true,
								null
								,[
[
									2,
									"hcid"
								]
								]
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			1850689491277477,
			[
			[
				5,
				cr.plugins_.AJAX.prototype.cnds.OnComplete,
				null,
				1,
				false,
				false,
				false,
				9367781412400335,
				false
				,[
				[
					1,
					[
						2,
						"ShowFromHcid"
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.Compare,
				null,
				0,
				false,
				false,
				false,
				9481134051678796,
				false
				,[
				[
					7,
					[
						20,
						5,
						cr.plugins_.AJAX.prototype.exps.LastData,
						true,
						null
					]
				]
,				[
					8,
					1
				]
,				[
					7,
					[
						2,
						""
					]
				]
				]
			]
			],
			[
			[
				57,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				1800333148393851,
				false
				,[
				[
					7,
					[
						19,
						cr.system_object.prototype.exps.tokenat
						,[
[
							20,
							5,
							cr.plugins_.AJAX.prototype.exps.LastData,
							true,
							null
						]
,[
							0,
							1
						]
,[
							2,
							"|"
						]
						]
					]
				]
				]
			]
			]
			,[
			[
				0,
				null,
				false,
				null,
				3614550805078593,
				[
				[
					60,
					cr.plugins_.TextBox.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					8821540262536851,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"designation"
						]
					]
					]
				]
,				[
					9,
					cr.plugins_.Text.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					4468105324358625,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"designation"
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					5806892946341062,
					false
					,[
					[
						11,
						"designation"
					]
,					[
						7,
						[
							19,
							cr.system_object.prototype.exps.tokenat
							,[
[
								20,
								5,
								cr.plugins_.AJAX.prototype.exps.LastData,
								true,
								null
							]
,[
								0,
								2
							]
,[
								2,
								"|"
							]
							]
						]
					]
					]
				]
,				[
					9,
					cr.plugins_.Text.prototype.acts.SetText,
					null,
					13131199796727,
					false
					,[
					[
						7,
						[
							23,
							"designation"
						]
					]
					]
				]
,				[
					60,
					cr.plugins_.TextBox.prototype.acts.SetText,
					null,
					9187987931135382,
					false
					,[
					[
						1,
						[
							23,
							"designation"
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				7643916495183255,
				[
				[
					60,
					cr.plugins_.TextBox.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					6337258693361857,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"company"
						]
					]
					]
				]
,				[
					9,
					cr.plugins_.Text.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					9989583137977831,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"company"
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					4295069308179672,
					false
					,[
					[
						11,
						"company"
					]
,					[
						7,
						[
							19,
							cr.system_object.prototype.exps.tokenat
							,[
[
								20,
								5,
								cr.plugins_.AJAX.prototype.exps.LastData,
								true,
								null
							]
,[
								0,
								3
							]
,[
								2,
								"|"
							]
							]
						]
					]
					]
				]
,				[
					9,
					cr.plugins_.Text.prototype.acts.SetText,
					null,
					2941636144817832,
					false
					,[
					[
						7,
						[
							23,
							"company"
						]
					]
					]
				]
,				[
					60,
					cr.plugins_.TextBox.prototype.acts.SetText,
					null,
					7559968199711046,
					false
					,[
					[
						1,
						[
							23,
							"company"
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				5525888492843958,
				[
				[
					60,
					cr.plugins_.TextBox.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					7694037051417019,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"number"
						]
					]
					]
				]
,				[
					9,
					cr.plugins_.Text.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					6894845264004058,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"number"
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					7097011068130782,
					false
					,[
					[
						11,
						"contact1"
					]
,					[
						7,
						[
							19,
							cr.system_object.prototype.exps.tokenat
							,[
[
								20,
								5,
								cr.plugins_.AJAX.prototype.exps.LastData,
								true,
								null
							]
,[
								0,
								4
							]
,[
								2,
								"|"
							]
							]
						]
					]
					]
				]
,				[
					9,
					cr.plugins_.Text.prototype.acts.SetText,
					null,
					9677926529383884,
					false
					,[
					[
						7,
						[
							23,
							"contact1"
						]
					]
					]
				]
,				[
					60,
					cr.plugins_.TextBox.prototype.acts.SetText,
					null,
					1734622469128853,
					false
					,[
					[
						1,
						[
							23,
							"contact1"
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4130132714093912,
				[
				[
					60,
					cr.plugins_.TextBox.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					3063071460730985,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"email"
						]
					]
					]
				]
,				[
					9,
					cr.plugins_.Text.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					9113120708970624,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"email"
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					8911434981851528,
					false
					,[
					[
						11,
						"email1"
					]
,					[
						7,
						[
							19,
							cr.system_object.prototype.exps.tokenat
							,[
[
								20,
								5,
								cr.plugins_.AJAX.prototype.exps.LastData,
								true,
								null
							]
,[
								0,
								5
							]
,[
								2,
								"|"
							]
							]
						]
					]
					]
				]
,				[
					9,
					cr.plugins_.Text.prototype.acts.SetText,
					null,
					9244482147151831,
					false
					,[
					[
						7,
						[
							23,
							"email1"
						]
					]
					]
				]
,				[
					60,
					cr.plugins_.TextBox.prototype.acts.SetText,
					null,
					1566846654111553,
					false
					,[
					[
						1,
						[
							23,
							"email1"
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				2190378311755096,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					6784571893669177,
					false
					,[
					[
						7,
						[
							19,
							cr.system_object.prototype.exps.len
							,[
[
								19,
								cr.system_object.prototype.exps.tokenat
								,[
[
									20,
									5,
									cr.plugins_.AJAX.prototype.exps.LastData,
									true,
									null
								]
,[
									0,
									6
								]
,[
									2,
									"|"
								]
								]
							]
							]
						]
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					61,
					cr.plugins_.HTML_Img.prototype.acts.SetURL,
					null,
					5408839302633051,
					false
					,[
					[
						1,
						[
							10,
							[
								23,
								"host"
							]
							,[
								2,
								"phpimg/default.png"
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				7361411466563185,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					2881712963283973,
					false
					,[
					[
						7,
						[
							20,
							5,
							cr.plugins_.AJAX.prototype.exps.LastData,
							true,
							null
						]
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							""
						]
					]
					]
				]
				],
				[
				[
					61,
					cr.plugins_.HTML_Img.prototype.acts.SetURL,
					null,
					5195260415354905,
					false
					,[
					[
						1,
						[
							10,
							[
								23,
								"host"
							]
							,[
								2,
								"phpimg/default.png"
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3647937340069747,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					9891264112454985,
					false
					,[
					[
						7,
						[
							19,
							cr.system_object.prototype.exps.find
							,[
[
								19,
								cr.system_object.prototype.exps.tokenat
								,[
[
									20,
									5,
									cr.plugins_.AJAX.prototype.exps.LastData,
									true,
									null
								]
,[
									0,
									6
								]
,[
									2,
									"|"
								]
								]
							]
,[
								2,
								"http"
							]
							]
						]
					]
,					[
						8,
						5
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					61,
					cr.plugins_.HTML_Img.prototype.acts.SetURL,
					null,
					4771839395388923,
					false
					,[
					[
						1,
						[
							19,
							cr.system_object.prototype.exps.tokenat
							,[
[
								20,
								5,
								cr.plugins_.AJAX.prototype.exps.LastData,
								true,
								null
							]
,[
								0,
								6
							]
,[
								2,
								"|"
							]
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4245782438132176,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					2945011726683846,
					false
					,[
					[
						7,
						[
							19,
							cr.system_object.prototype.exps.find
							,[
[
								19,
								cr.system_object.prototype.exps.tokenat
								,[
[
									20,
									5,
									cr.plugins_.AJAX.prototype.exps.LastData,
									true,
									null
								]
,[
									0,
									6
								]
,[
									2,
									"|"
								]
								]
							]
,[
								2,
								"phpimg"
							]
							]
						]
					]
,					[
						8,
						5
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					61,
					cr.plugins_.HTML_Img.prototype.acts.SetURL,
					null,
					4378147153979312,
					false
					,[
					[
						1,
						[
							10,
							[
								23,
								"host"
							]
							,[
								19,
								cr.system_object.prototype.exps.tokenat
								,[
[
									20,
									5,
									cr.plugins_.AJAX.prototype.exps.LastData,
									true,
									null
								]
,[
									0,
									6
								]
,[
									2,
									"|"
								]
								]
							]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			1281746830891392,
			[
			[
				5,
				cr.plugins_.AJAX.prototype.cnds.OnComplete,
				null,
				1,
				false,
				false,
				false,
				1751184831389245,
				false
				,[
				[
					1,
					[
						2,
						"SocialFromHcid"
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				9711275037431273,
				false
				,[
				[
					11,
					"facebook"
				]
,				[
					7,
					[
						19,
						cr.system_object.prototype.exps.tokenat
						,[
[
							20,
							5,
							cr.plugins_.AJAX.prototype.exps.LastData,
							true,
							null
						]
,[
							0,
							0
						]
,[
							2,
							"|"
						]
						]
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				7788195195257356,
				false
				,[
				[
					11,
					"twitter"
				]
,				[
					7,
					[
						19,
						cr.system_object.prototype.exps.tokenat
						,[
[
							20,
							5,
							cr.plugins_.AJAX.prototype.exps.LastData,
							true,
							null
						]
,[
							0,
							1
						]
,[
							2,
							"|"
						]
						]
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				9907780271987135,
				false
				,[
				[
					11,
					"linkdin"
				]
,				[
					7,
					[
						19,
						cr.system_object.prototype.exps.tokenat
						,[
[
							20,
							5,
							cr.plugins_.AJAX.prototype.exps.LastData,
							true,
							null
						]
,[
							0,
							2
						]
,[
							2,
							"|"
						]
						]
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				9973552758928236,
				false
				,[
				[
					11,
					"website"
				]
,				[
					7,
					[
						19,
						cr.system_object.prototype.exps.tokenat
						,[
[
							20,
							5,
							cr.plugins_.AJAX.prototype.exps.LastData,
							true,
							null
						]
,[
							0,
							3
						]
,[
							2,
							"|"
						]
						]
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				3028973396374463,
				false
				,[
				[
					11,
					"eco"
				]
,				[
					7,
					[
						19,
						cr.system_object.prototype.exps.tokenat
						,[
[
							20,
							5,
							cr.plugins_.AJAX.prototype.exps.LastData,
							true,
							null
						]
,[
							0,
							4
						]
,[
							2,
							"|"
						]
						]
					]
				]
				]
			]
,			[
				75,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				724697775292928,
				false
				,[
				[
					7,
					[
						23,
						"eco"
					]
				]
				]
			]
			]
			,[
			[
				0,
				null,
				false,
				null,
				8767753724858959,
				[
				[
					0,
					cr.plugins_.WebStorage.prototype.cnds.CompareKeyText,
					null,
					0,
					false,
					false,
					false,
					4062111101811401,
					false
					,[
					[
						1,
						[
							2,
							"hcid"
						]
					]
,					[
						1,
						[
							23,
							"hcid"
						]
					]
,					[
						3,
						0
					]
					]
				]
				],
				[
				[
					0,
					cr.plugins_.WebStorage.prototype.acts.StoreLocal,
					null,
					4497381137505899,
					false
					,[
					[
						1,
						[
							2,
							"facebook"
						]
					]
,					[
						7,
						[
							19,
							cr.system_object.prototype.exps.tokenat
							,[
[
								20,
								5,
								cr.plugins_.AJAX.prototype.exps.LastData,
								true,
								null
							]
,[
								0,
								0
							]
,[
								2,
								"|"
							]
							]
						]
					]
					]
				]
,				[
					0,
					cr.plugins_.WebStorage.prototype.acts.StoreLocal,
					null,
					8306454893126683,
					false
					,[
					[
						1,
						[
							2,
							"twitter"
						]
					]
,					[
						7,
						[
							19,
							cr.system_object.prototype.exps.tokenat
							,[
[
								20,
								5,
								cr.plugins_.AJAX.prototype.exps.LastData,
								true,
								null
							]
,[
								0,
								1
							]
,[
								2,
								"|"
							]
							]
						]
					]
					]
				]
,				[
					0,
					cr.plugins_.WebStorage.prototype.acts.StoreLocal,
					null,
					6550637290981681,
					false
					,[
					[
						1,
						[
							2,
							"linkdin"
						]
					]
,					[
						7,
						[
							19,
							cr.system_object.prototype.exps.tokenat
							,[
[
								20,
								5,
								cr.plugins_.AJAX.prototype.exps.LastData,
								true,
								null
							]
,[
								0,
								2
							]
,[
								2,
								"|"
							]
							]
						]
					]
					]
				]
,				[
					0,
					cr.plugins_.WebStorage.prototype.acts.StoreLocal,
					null,
					2722784700675135,
					false
					,[
					[
						1,
						[
							2,
							"website"
						]
					]
,					[
						7,
						[
							19,
							cr.system_object.prototype.exps.tokenat
							,[
[
								20,
								5,
								cr.plugins_.AJAX.prototype.exps.LastData,
								true,
								null
							]
,[
								0,
								3
							]
,[
								2,
								"|"
							]
							]
						]
					]
					]
				]
,				[
					0,
					cr.plugins_.WebStorage.prototype.acts.StoreLocal,
					null,
					4717022864962642,
					false
					,[
					[
						1,
						[
							2,
							"eco"
						]
					]
,					[
						7,
						[
							19,
							cr.system_object.prototype.exps.tokenat
							,[
[
								20,
								5,
								cr.plugins_.AJAX.prototype.exps.LastData,
								true,
								null
							]
,[
								0,
								4
							]
,[
								2,
								"|"
							]
							]
						]
					]
					]
				]
,				[
					75,
					cr.plugins_.Text.prototype.acts.SetText,
					null,
					8255785384231984,
					false
					,[
					[
						7,
						[
							20,
							0,
							cr.plugins_.WebStorage.prototype.exps.LocalValue,
							true,
							null
							,[
[
								2,
								"eco"
							]
							]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			3271443242180814,
			[
			[
				61,
				cr.plugins_.HTML_Img.prototype.cnds.OnChange,
				null,
				1,
				false,
				false,
				false,
				6848022051294701,
				false
			]
			],
			[
			[
				61,
				cr.plugins_.HTML_Img.prototype.acts.SetVisible,
				null,
				2744154264216379,
				false
				,[
				[
					3,
					0
				]
				]
			]
,			[
				54,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				4189785972556387,
				false
				,[
				[
					3,
					1
				]
				]
			]
,			[
				54,
				cr.plugins_.Sprite.prototype.acts.SetY,
				null,
				2113852623702761,
				false
				,[
				[
					0,
					[
						4,
						[
							20,
							61,
							cr.plugins_.HTML_Img.prototype.exps.Y,
							false,
							null
						]
						,[
							7,
							[
								20,
								61,
								cr.plugins_.HTML_Img.prototype.exps.Height,
								false,
								null
							]
							,[
								0,
								2
							]
						]
					]
				]
				]
			]
,			[
				29,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				8359483718564807,
				false
				,[
				[
					7,
					[
						20,
						61,
						cr.plugins_.HTML_Img.prototype.exps.GetURL,
						true,
						null
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			5312121040286484,
			[
			[
				61,
				cr.plugins_.HTML_Img.prototype.cnds.OnComplete,
				null,
				1,
				false,
				false,
				false,
				9876907587729361,
				false
			]
			],
			[
			[
				54,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5224806475271388,
				false
				,[
				[
					3,
					0
				]
				]
			]
,			[
				61,
				cr.plugins_.HTML_Img.prototype.acts.SetVisible,
				null,
				9081126381392053,
				false
				,[
				[
					3,
					1
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			6494321473669211,
			[
			[
				60,
				cr.plugins_.TextBox.prototype.cnds.OnTextChanged,
				null,
				1,
				false,
				false,
				false,
				6587887839901073,
				false
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				8911003926811523,
				[
				[
					60,
					cr.plugins_.TextBox.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					7549160463636492,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"designation"
						]
					]
					]
				]
,				[
					9,
					cr.plugins_.Text.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					4984240529273622,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"designation"
						]
					]
					]
				]
				],
				[
				[
					9,
					cr.plugins_.Text.prototype.acts.SetText,
					null,
					4574268426278427,
					false
					,[
					[
						7,
						[
							20,
							60,
							cr.plugins_.TextBox.prototype.exps.Text,
							true,
							null
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					3132300478018619,
					false
					,[
					[
						11,
						"designation"
					]
,					[
						7,
						[
							20,
							60,
							cr.plugins_.TextBox.prototype.exps.Text,
							true,
							null
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9889981951539785,
				[
				[
					60,
					cr.plugins_.TextBox.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					1503335369883087,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"company"
						]
					]
					]
				]
,				[
					9,
					cr.plugins_.Text.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					1843561473444688,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"company"
						]
					]
					]
				]
				],
				[
				[
					9,
					cr.plugins_.Text.prototype.acts.SetText,
					null,
					6803785200348505,
					false
					,[
					[
						7,
						[
							20,
							60,
							cr.plugins_.TextBox.prototype.exps.Text,
							true,
							null
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					6993565918990691,
					false
					,[
					[
						11,
						"company"
					]
,					[
						7,
						[
							20,
							60,
							cr.plugins_.TextBox.prototype.exps.Text,
							true,
							null
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				5118445852744594,
				[
				[
					60,
					cr.plugins_.TextBox.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					5259859431650207,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"number"
						]
					]
					]
				]
,				[
					9,
					cr.plugins_.Text.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					3138575075331984,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"number"
						]
					]
					]
				]
				],
				[
				[
					9,
					cr.plugins_.Text.prototype.acts.SetText,
					null,
					7545796830618132,
					false
					,[
					[
						7,
						[
							20,
							60,
							cr.plugins_.TextBox.prototype.exps.Text,
							true,
							null
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					6900513714154669,
					false
					,[
					[
						11,
						"contact1"
					]
,					[
						7,
						[
							20,
							60,
							cr.plugins_.TextBox.prototype.exps.Text,
							true,
							null
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4134779669516556,
				[
				[
					60,
					cr.plugins_.TextBox.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					7428531211356242,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"email"
						]
					]
					]
				]
,				[
					9,
					cr.plugins_.Text.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					7904357068862741,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"email"
						]
					]
					]
				]
				],
				[
				[
					9,
					cr.plugins_.Text.prototype.acts.SetText,
					null,
					5445537488750643,
					false
					,[
					[
						7,
						[
							20,
							60,
							cr.plugins_.TextBox.prototype.exps.Text,
							true,
							null
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					5131839765304766,
					false
					,[
					[
						11,
						"email1"
					]
,					[
						7,
						[
							20,
							60,
							cr.plugins_.TextBox.prototype.exps.Text,
							true,
							null
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			3843715012394849,
			[
			[
				5,
				cr.plugins_.AJAX.prototype.cnds.OnComplete,
				null,
				1,
				false,
				false,
				false,
				4239169724902234,
				false
				,[
				[
					1,
					[
						2,
						"UpdateInfo"
					]
				]
				]
			]
			],
			[
			[
				54,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				6105607671229136,
				false
				,[
				[
					3,
					0
				]
				]
			]
			]
			,[
			[
				0,
				null,
				false,
				null,
				3149430166693065,
				[
				[
					9,
					cr.plugins_.Text.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					3430176006764558,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"edit"
						]
					]
					]
				]
				],
				[
				[
					9,
					cr.plugins_.Text.prototype.acts.SetText,
					null,
					1390419636246485,
					false
					,[
					[
						7,
						[
							2,
							"edit"
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3953939254467822,
				[
				[
					9,
					cr.plugins_.Text.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					1202144781381315,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"save"
						]
					]
					]
				]
				],
				[
				[
					73,
					cr.plugins_.TextBox.prototype.acts.SetEnabled,
					null,
					7572689529563238,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					74,
					cr.plugins_.Sprite.prototype.acts.SetX,
					null,
					1142860903022982,
					false
					,[
					[
						0,
						[
							6,
							[
								3,
								[
									19,
									cr.system_object.prototype.exps.layoutwidth
								]
							]
							,[
								0,
								2
							]
						]
					]
					]
				]
,				[
					71,
					cr.plugins_.Sprite.prototype.acts.SetX,
					null,
					5284843690889158,
					false
					,[
					[
						0,
						[
							6,
							[
								0,
								-2
							]
							,[
								19,
								cr.system_object.prototype.exps.layoutwidth
							]
						]
					]
					]
				]
,				[
					73,
					cr.plugins_.TextBox.prototype.acts.SetPosToObject,
					null,
					6439285850404141,
					false
					,[
					[
						4,
						74
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					9,
					cr.plugins_.Text.prototype.acts.SetPosToObject,
					null,
					3145643105238966,
					false
					,[
					[
						4,
						74
					]
,					[
						7,
						[
							0,
							2
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				7898350584745043,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					5338438375329883,
					false
					,[
					[
						7,
						[
							20,
							5,
							cr.plugins_.AJAX.prototype.exps.LastData,
							true,
							null
						]
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"0"
						]
					]
					]
				]
				],
				[
				[
					5,
					cr.plugins_.AJAX.prototype.acts.Post,
					null,
					2033747877554844,
					false
					,[
					[
						1,
						[
							2,
							"ShowFromHcid"
						]
					]
,					[
						1,
						[
							10,
							[
								10,
								[
									10,
									[
										23,
										"host"
									]
									,[
										2,
										"retrieve.php?hcid="
									]
								]
								,[
									20,
									0,
									cr.plugins_.WebStorage.prototype.exps.LocalValue,
									true,
									null
									,[
[
										2,
										"hcid"
									]
									]
								]
							]
							,[
								2,
								"&email=&name=&contact="
							]
						]
					]
,					[
						1,
						[
							2,
							""
						]
					]
,					[
						1,
						[
							2,
							"POST"
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			2268452760657199,
			[
			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				2200398313451332,
				false
				,[
				[
					11,
					"edit"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				9563902855136382,
				false
				,[
				[
					11,
					"ex"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				2944017122507965,
				[
				[
					1,
					cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
					null,
					1,
					false,
					false,
					false,
					217984768295469,
					false
				]
,				[
					1,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					1251498886232724,
					false
					,[
					[
						4,
						61
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					9400019814673099,
					false
					,[
					[
						11,
						"ey"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					68,
					cr.plugins_.HTML_iFrame.prototype.acts.SetURL,
					null,
					4022611686513353,
					false
					,[
					[
						1,
						[
							10,
							[
								10,
								[
									23,
									"host"
								]
								,[
									2,
									"imgUpload.php?hcid="
								]
							]
							,[
								20,
								0,
								cr.plugins_.WebStorage.prototype.exps.LocalValue,
								true,
								null
								,[
[
									2,
									"hcid"
								]
								]
							]
						]
					]
					]
				]
,				[
					68,
					cr.plugins_.HTML_iFrame.prototype.acts.SetX,
					null,
					3409407480962182,
					false
					,[
					[
						0,
						[
							0,
							40
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetLayerVisible,
					null,
					4256294479919139,
					false
					,[
					[
						5,
						[
							0,
							2
						]
					]
,					[
						3,
						1
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetLayerVisible,
					null,
					5276775277212455,
					false
					,[
					[
						5,
						[
							0,
							3
						]
					]
,					[
						3,
						1
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.CreateObject,
					null,
					8941085636803004,
					false
					,[
					[
						4,
						32
					]
,					[
						5,
						[
							0,
							3
						]
					]
,					[
						0,
						[
							5,
							[
								4,
								[
									20,
									68,
									cr.plugins_.HTML_iFrame.prototype.exps.X,
									false,
									null
								]
								,[
									20,
									68,
									cr.plugins_.HTML_iFrame.prototype.exps.Width,
									false,
									null
								]
							]
							,[
								0,
								64
							]
						]
					]
,					[
						0,
						[
							5,
							[
								20,
								68,
								cr.plugins_.HTML_iFrame.prototype.exps.Y,
								false,
								null
							]
							,[
								0,
								30
							]
						]
					]
					]
				]
,				[
					32,
					cr.plugins_.Sprite.prototype.acts.SetSize,
					null,
					2039749679832929,
					false
					,[
					[
						0,
						[
							0,
							64
						]
					]
,					[
						0,
						[
							0,
							64
						]
					]
					]
				]
,				[
					60,
					cr.plugins_.TextBox.prototype.acts.SetEnabled,
					null,
					8017617099573412,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					60,
					cr.plugins_.TextBox.prototype.acts.SetVisible,
					null,
					277302694274867,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.CreateObject,
					null,
					5045188315188805,
					false
					,[
					[
						4,
						9
					]
,					[
						5,
						[
							0,
							4
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					9,
					cr.plugins_.Text.prototype.acts.SetInstanceVar,
					null,
					6263814213191979,
					false
					,[
					[
						10,
						0
					]
,					[
						7,
						[
							2,
							"close"
						]
					]
					]
				]
,				[
					9,
					cr.plugins_.Text.prototype.acts.SetPosToObject,
					null,
					5853733531438872,
					false
					,[
					[
						4,
						32
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					9,
					cr.plugins_.Text.prototype.acts.SetText,
					null,
					8874877419521194,
					false
					,[
					[
						7,
						[
							2,
							"X"
						]
					]
					]
				]
,				[
					9,
					cr.plugins_.Text.prototype.acts.SetFontColor,
					null,
					7586299559359657,
					false
					,[
					[
						0,
						[
							19,
							cr.system_object.prototype.exps.rgb
							,[
[
								0,
								255
							]
,[
								0,
								255
							]
,[
								0,
								255
							]
							]
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					1604243983870041,
					false
					,[
					[
						0,
						[
							0,
							1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					2011329312669748,
					false
					,[
					[
						11,
						"ey"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				5576419120530456,
				[
				[
					1,
					cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
					null,
					1,
					false,
					false,
					false,
					1155373446249507,
					false
				]
,				[
					1,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					5565897900220825,
					false
					,[
					[
						4,
						50
					]
					]
				]
,				[
					9,
					cr.plugins_.Text.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					465175105048728,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"save"
						]
					]
					]
				]
				],
				[
				[
					74,
					cr.plugins_.Sprite.prototype.acts.SetX,
					null,
					1021356834758841,
					false
					,[
					[
						0,
						[
							7,
							[
								19,
								cr.system_object.prototype.exps.layoutwidth
							]
							,[
								0,
								2
							]
						]
					]
					]
				]
,				[
					73,
					cr.plugins_.TextBox.prototype.acts.SetPosToObject,
					null,
					1386243926630404,
					false
					,[
					[
						4,
						74
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					9,
					cr.plugins_.Text.prototype.acts.SetPosToObject,
					null,
					4308963920535683,
					false
					,[
					[
						4,
						74
					]
,					[
						7,
						[
							0,
							2
						]
					]
					]
				]
,				[
					71,
					cr.plugins_.Sprite.prototype.acts.SetX,
					null,
					461285445238253,
					false
					,[
					[
						0,
						[
							20,
							50,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
					]
					]
				]
,				[
					73,
					cr.plugins_.TextBox.prototype.acts.SetEnabled,
					null,
					6887387731345271,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					73,
					cr.plugins_.TextBox.prototype.acts.SetInstanceVar,
					null,
					7399030491604734,
					false
					,[
					[
						10,
						0
					]
,					[
						7,
						[
							21,
							50,
							true,
							null
							,0
						]
					]
					]
				]
,				[
					73,
					cr.plugins_.TextBox.prototype.acts.SetText,
					null,
					133367319614291,
					false
					,[
					[
						1,
						[
							2,
							""
						]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					3866156298381973,
					[
					[
						50,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						4052080127916685,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								2,
								"facebook"
							]
						]
						]
					]
					],
					[
					[
						73,
						cr.plugins_.TextBox.prototype.acts.SetPlaceholder,
						null,
						418855974323335,
						false
						,[
						[
							1,
							[
								2,
								"facebook username Eg: John"
							]
						]
						]
					]
,					[
						73,
						cr.plugins_.TextBox.prototype.acts.SetText,
						null,
						6359633647223665,
						false
						,[
						[
							1,
							[
								20,
								0,
								cr.plugins_.WebStorage.prototype.exps.LocalValue,
								true,
								null
								,[
[
									2,
									"facebook"
								]
								]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					8491093937110148,
					[
					[
						50,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						4705146293011184,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								2,
								"twitter"
							]
						]
						]
					]
					],
					[
					[
						73,
						cr.plugins_.TextBox.prototype.acts.SetPlaceholder,
						null,
						1994845349187303,
						false
						,[
						[
							1,
							[
								2,
								"twitter username Eg: John"
							]
						]
						]
					]
,					[
						73,
						cr.plugins_.TextBox.prototype.acts.SetText,
						null,
						5583888300978655,
						false
						,[
						[
							1,
							[
								20,
								0,
								cr.plugins_.WebStorage.prototype.exps.LocalValue,
								true,
								null
								,[
[
									2,
									"twitter"
								]
								]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					8197523193187214,
					[
					[
						50,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						1706952926736958,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								2,
								"linkdin"
							]
						]
						]
					]
					],
					[
					[
						73,
						cr.plugins_.TextBox.prototype.acts.SetPlaceholder,
						null,
						1102511094434102,
						false
						,[
						[
							1,
							[
								2,
								"linkdIn username Eg: John"
							]
						]
						]
					]
,					[
						73,
						cr.plugins_.TextBox.prototype.acts.SetText,
						null,
						5504525531759064,
						false
						,[
						[
							1,
							[
								20,
								0,
								cr.plugins_.WebStorage.prototype.exps.LocalValue,
								true,
								null
								,[
[
									2,
									"linkdin"
								]
								]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					7575301518374406,
					[
					[
						50,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						1399881737356235,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								2,
								"website"
							]
						]
						]
					]
					],
					[
					[
						73,
						cr.plugins_.TextBox.prototype.acts.SetPlaceholder,
						null,
						3047041296168281,
						false
						,[
						[
							1,
							[
								2,
								"your website Eg: www.hellocard.co"
							]
						]
						]
					]
,					[
						73,
						cr.plugins_.TextBox.prototype.acts.SetText,
						null,
						1854302459068971,
						false
						,[
						[
							1,
							[
								20,
								0,
								cr.plugins_.WebStorage.prototype.exps.LocalValue,
								true,
								null
								,[
[
									2,
									"website"
								]
								]
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8956876287145695,
				[
				[
					1,
					cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
					null,
					1,
					false,
					false,
					false,
					8867201136344686,
					false
				]
,				[
					1,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					1589180412826277,
					false
					,[
					[
						4,
						9
					]
					]
				]
,				[
					9,
					cr.plugins_.Text.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					8766243403846421,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"save"
						]
					]
					]
				]
				],
				[
				[
					73,
					cr.plugins_.TextBox.prototype.acts.SetEnabled,
					null,
					5147791367376011,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					54,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					4533014570354166,
					false
					,[
					[
						3,
						1
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					7512900049177178,
					[
					[
						73,
						cr.plugins_.TextBox.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						9064872291672415,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								2,
								"facebook"
							]
						]
						]
					]
					],
					[
					[
						5,
						cr.plugins_.AJAX.prototype.acts.Post,
						null,
						8161443080670193,
						false
						,[
						[
							1,
							[
								2,
								"saveSocial"
							]
						]
,						[
							1,
							[
								10,
								[
									10,
									[
										10,
										[
											10,
											[
												10,
												[
													23,
													"host"
												]
												,[
													2,
													"saveSocial.php?hcid="
												]
											]
											,[
												20,
												0,
												cr.plugins_.WebStorage.prototype.exps.LocalValue,
												true,
												null
												,[
[
													2,
													"hcid"
												]
												]
											]
										]
										,[
											2,
											"&facebook="
										]
									]
									,[
										20,
										73,
										cr.plugins_.TextBox.prototype.exps.Text,
										true,
										null
									]
								]
								,[
									2,
									"&twitter=&linkdin=&website="
								]
							]
						]
,						[
							1,
							[
								2,
								""
							]
						]
,						[
							1,
							[
								2,
								"POST"
							]
						]
						]
					]
,					[
						0,
						cr.plugins_.WebStorage.prototype.acts.StoreLocal,
						null,
						6782210048239059,
						false
						,[
						[
							1,
							[
								2,
								"facebook"
							]
						]
,						[
							7,
							[
								20,
								73,
								cr.plugins_.TextBox.prototype.exps.Text,
								true,
								null
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					1514498853321314,
					[
					[
						73,
						cr.plugins_.TextBox.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						9691726624774195,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								2,
								"twitter"
							]
						]
						]
					]
					],
					[
					[
						5,
						cr.plugins_.AJAX.prototype.acts.Post,
						null,
						7984493888003044,
						false
						,[
						[
							1,
							[
								2,
								"saveSocial"
							]
						]
,						[
							1,
							[
								10,
								[
									10,
									[
										10,
										[
											10,
											[
												10,
												[
													23,
													"host"
												]
												,[
													2,
													"saveSocial.php?hcid="
												]
											]
											,[
												20,
												0,
												cr.plugins_.WebStorage.prototype.exps.LocalValue,
												true,
												null
												,[
[
													2,
													"hcid"
												]
												]
											]
										]
										,[
											2,
											"&facebook=&twitter="
										]
									]
									,[
										20,
										73,
										cr.plugins_.TextBox.prototype.exps.Text,
										true,
										null
									]
								]
								,[
									2,
									"&linkdin=&website="
								]
							]
						]
,						[
							1,
							[
								2,
								""
							]
						]
,						[
							1,
							[
								2,
								"POST"
							]
						]
						]
					]
,					[
						0,
						cr.plugins_.WebStorage.prototype.acts.StoreLocal,
						null,
						8577429070586757,
						false
						,[
						[
							1,
							[
								2,
								"twitter"
							]
						]
,						[
							7,
							[
								20,
								73,
								cr.plugins_.TextBox.prototype.exps.Text,
								true,
								null
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					7835441215404514,
					[
					[
						73,
						cr.plugins_.TextBox.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3623040499146378,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								2,
								"linkdin"
							]
						]
						]
					]
					],
					[
					[
						5,
						cr.plugins_.AJAX.prototype.acts.Post,
						null,
						4518705241484147,
						false
						,[
						[
							1,
							[
								2,
								"saveSocial"
							]
						]
,						[
							1,
							[
								10,
								[
									10,
									[
										10,
										[
											10,
											[
												10,
												[
													23,
													"host"
												]
												,[
													2,
													"saveSocial.php?hcid="
												]
											]
											,[
												20,
												0,
												cr.plugins_.WebStorage.prototype.exps.LocalValue,
												true,
												null
												,[
[
													2,
													"hcid"
												]
												]
											]
										]
										,[
											2,
											"&facebook=&twitter=&linkdin="
										]
									]
									,[
										20,
										73,
										cr.plugins_.TextBox.prototype.exps.Text,
										true,
										null
									]
								]
								,[
									2,
									"&website="
								]
							]
						]
,						[
							1,
							[
								2,
								""
							]
						]
,						[
							1,
							[
								2,
								"POST"
							]
						]
						]
					]
,					[
						0,
						cr.plugins_.WebStorage.prototype.acts.StoreLocal,
						null,
						3236662338490179,
						false
						,[
						[
							1,
							[
								2,
								"linkdin"
							]
						]
,						[
							7,
							[
								20,
								73,
								cr.plugins_.TextBox.prototype.exps.Text,
								true,
								null
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					9202418158760314,
					[
					[
						73,
						cr.plugins_.TextBox.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						1371855346355358,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								2,
								"website"
							]
						]
						]
					]
					],
					[
					[
						5,
						cr.plugins_.AJAX.prototype.acts.Post,
						null,
						39273316509611,
						false
						,[
						[
							1,
							[
								2,
								"saveSocial"
							]
						]
,						[
							1,
							[
								10,
								[
									10,
									[
										10,
										[
											10,
											[
												23,
												"host"
											]
											,[
												2,
												"saveSocial.php?hcid="
											]
										]
										,[
											20,
											0,
											cr.plugins_.WebStorage.prototype.exps.LocalValue,
											true,
											null
											,[
[
												2,
												"hcid"
											]
											]
										]
									]
									,[
										2,
										"&facebook=&twitter=&linkdin=&website="
									]
								]
								,[
									20,
									73,
									cr.plugins_.TextBox.prototype.exps.Text,
									true,
									null
								]
							]
						]
,						[
							1,
							[
								2,
								""
							]
						]
,						[
							1,
							[
								2,
								"POST"
							]
						]
						]
					]
,					[
						0,
						cr.plugins_.WebStorage.prototype.acts.StoreLocal,
						null,
						7707959652296408,
						false
						,[
						[
							1,
							[
								2,
								"website"
							]
						]
,						[
							7,
							[
								20,
								73,
								cr.plugins_.TextBox.prototype.exps.Text,
								true,
								null
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				1467574959390236,
				[
				[
					5,
					cr.plugins_.AJAX.prototype.cnds.OnComplete,
					null,
					1,
					false,
					false,
					false,
					8652253822163924,
					false
					,[
					[
						1,
						[
							2,
							"saveSocial"
						]
					]
					]
				]
,				[
					9,
					cr.plugins_.Text.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					2548413872849929,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"save"
						]
					]
					]
				]
				],
				[
				[
					74,
					cr.plugins_.Sprite.prototype.acts.SetX,
					null,
					9126059871049422,
					false
					,[
					[
						0,
						[
							6,
							[
								3,
								[
									19,
									cr.system_object.prototype.exps.layoutwidth
								]
							]
							,[
								0,
								2
							]
						]
					]
					]
				]
,				[
					71,
					cr.plugins_.Sprite.prototype.acts.SetX,
					null,
					8453772639852433,
					false
					,[
					[
						0,
						[
							6,
							[
								0,
								-2
							]
							,[
								19,
								cr.system_object.prototype.exps.layoutwidth
							]
						]
					]
					]
				]
,				[
					54,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					3706246787079615,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					73,
					cr.plugins_.TextBox.prototype.acts.SetPosToObject,
					null,
					9170537775335872,
					false
					,[
					[
						4,
						74
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					9,
					cr.plugins_.Text.prototype.acts.SetPosToObject,
					null,
					5846662419255796,
					false
					,[
					[
						4,
						74
					]
,					[
						7,
						[
							0,
							2
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				1187520741264211,
				[
				[
					1,
					cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
					null,
					1,
					false,
					false,
					false,
					9056315967915706,
					false
				]
,				[
					1,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					2476263105128308,
					false
					,[
					[
						4,
						32
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					5717280985036631,
					false
					,[
					[
						11,
						"ey"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					9,
					cr.plugins_.Text.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					2388486723352269,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"close"
						]
					]
					]
				]
				],
				[
				[
					5,
					cr.plugins_.AJAX.prototype.acts.Post,
					null,
					5719994641436774,
					false
					,[
					[
						1,
						[
							2,
							"ShowFromHcid"
						]
					]
,					[
						1,
						[
							10,
							[
								10,
								[
									10,
									[
										23,
										"host"
									]
									,[
										2,
										"retrieve.php?hcid="
									]
								]
								,[
									20,
									0,
									cr.plugins_.WebStorage.prototype.exps.LocalValue,
									true,
									null
									,[
[
										2,
										"hcid"
									]
									]
								]
							]
							,[
								2,
								"&email=&name=&contact="
							]
						]
					]
,					[
						1,
						[
							2,
							""
						]
					]
,					[
						1,
						[
							2,
							"POST"
						]
					]
					]
				]
,				[
					68,
					cr.plugins_.HTML_iFrame.prototype.acts.SetX,
					null,
					3304225396225831,
					false
					,[
					[
						0,
						[
							0,
							2000
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetLayerVisible,
					null,
					8627528677243831,
					false
					,[
					[
						5,
						[
							0,
							2
						]
					]
,					[
						3,
						0
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetLayerVisible,
					null,
					603802908417527,
					false
					,[
					[
						5,
						[
							0,
							3
						]
					]
,					[
						3,
						0
					]
					]
				]
,				[
					60,
					cr.plugins_.TextBox.prototype.acts.SetEnabled,
					null,
					3152832044673032,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					60,
					cr.plugins_.TextBox.prototype.acts.SetVisible,
					null,
					331689246102431,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					7916116085843229,
					false
					,[
					[
						11,
						"ey"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					32,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					7828537369748032,
					false
				]
,				[
					9,
					cr.plugins_.Text.prototype.acts.Destroy,
					null,
					4847303359398261,
					false
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			5928194632068683,
			[
			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				2834241401132642,
				false
				,[
				[
					11,
					"edit"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				2277874178334383,
				[
				[
					1,
					cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
					null,
					1,
					false,
					false,
					false,
					1523597774154177,
					false
				]
,				[
					1,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					8756349644097988,
					false
					,[
					[
						4,
						80
					]
					]
				]
				],
				[
				[
					80,
					cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
					null,
					365812275932068,
					false
					,[
					[
						10,
						0
					]
,					[
						7,
						[
							4,
							[
								21,
								80,
								false,
								null
								,0
							]
							,[
								0,
								1
							]
						]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					6563440210370852,
					[
					[
						80,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						5840884811449492,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								2
							]
						]
						]
					]
					],
					[
					[
						80,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						6029197143857242,
						false
						,[
						[
							10,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					6113521670966719,
					[
					[
						80,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						5908364956326069,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						5,
						cr.plugins_.AJAX.prototype.acts.Post,
						null,
						1905389284854577,
						false
						,[
						[
							1,
							[
								2,
								"discard1"
							]
						]
,						[
							1,
							[
								10,
								[
									10,
									[
										10,
										[
											10,
											[
												23,
												"host"
											]
											,[
												2,
												"discard.php?myhcid="
											]
										]
										,[
											20,
											0,
											cr.plugins_.WebStorage.prototype.exps.LocalValue,
											true,
											null
											,[
[
												2,
												"hcid"
											]
											]
										]
									]
									,[
										2,
										"&delhcid="
									]
								]
								,[
									23,
									"hcid"
								]
							]
						]
,						[
							1,
							[
								2,
								""
							]
						]
,						[
							1,
							[
								2,
								"POST"
							]
						]
						]
					]
,					[
						80,
						cr.plugins_.Sprite.prototype.acts.SetVisible,
						null,
						794073947235812,
						false
						,[
						[
							3,
							0
						]
						]
					]
,					[
						64,
						cr.plugins_.Sprite.prototype.acts.SetVisible,
						null,
						5961114717902466,
						false
						,[
						[
							3,
							1
						]
						]
					]
,					[
						64,
						cr.plugins_.Sprite.prototype.acts.SetPosToObject,
						null,
						9825873256734142,
						false
						,[
						[
							4,
							80
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					7415542249147567,
					[
					[
						80,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						7060776854677403,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						5,
						cr.plugins_.AJAX.prototype.acts.Post,
						null,
						1064023724526724,
						false
						,[
						[
							1,
							[
								2,
								"savecard1"
							]
						]
,						[
							1,
							[
								10,
								[
									10,
									[
										10,
										[
											10,
											[
												10,
												[
													23,
													"host"
												]
												,[
													2,
													"savecard.php?myhcid="
												]
											]
											,[
												20,
												0,
												cr.plugins_.WebStorage.prototype.exps.LocalValue,
												true,
												null
												,[
[
													2,
													"hcid"
												]
												]
											]
										]
										,[
											2,
											"&savehcid="
										]
									]
									,[
										23,
										"hcid"
									]
								]
								,[
									2,
									"&check=no"
								]
							]
						]
,						[
							1,
							[
								2,
								""
							]
						]
,						[
							1,
							[
								2,
								"POST"
							]
						]
						]
					]
,					[
						80,
						cr.plugins_.Sprite.prototype.acts.SetVisible,
						null,
						2120120131080006,
						false
						,[
						[
							3,
							0
						]
						]
					]
,					[
						64,
						cr.plugins_.Sprite.prototype.acts.SetVisible,
						null,
						7909306755774607,
						false
						,[
						[
							3,
							1
						]
						]
					]
,					[
						64,
						cr.plugins_.Sprite.prototype.acts.SetPosToObject,
						null,
						2493298181881712,
						false
						,[
						[
							4,
							80
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				2395431325640612,
				[
				[
					80,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					8766865513703734,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					80,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					2605542455342648,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6913956316115589,
				[
				[
					80,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					8560945716980243,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					80,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					3216878400623243,
					false
					,[
					[
						0,
						[
							0,
							1
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9820938395441888,
				[
				[
					5,
					cr.plugins_.AJAX.prototype.cnds.OnComplete,
					null,
					1,
					false,
					false,
					false,
					6855070275071514,
					false
					,[
					[
						1,
						[
							2,
							"savecard1"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					6519497407606867,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						7799717823847046,
						false
						,[
						[
							7,
							[
								20,
								5,
								cr.plugins_.AJAX.prototype.exps.LastData,
								true,
								null
							]
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								2,
								"1"
							]
						]
						]
					]
					],
					[
					[
						64,
						cr.plugins_.Sprite.prototype.acts.SetVisible,
						null,
						3432765803950334,
						false
						,[
						[
							3,
							0
						]
						]
					]
,					[
						80,
						cr.plugins_.Sprite.prototype.acts.SetVisible,
						null,
						4032221919608498,
						false
						,[
						[
							3,
							1
						]
						]
					]
,					[
						80,
						cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
						null,
						9301234652472923,
						false
						,[
						[
							0,
							[
								0,
								1
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3996434730550612,
				[
				[
					5,
					cr.plugins_.AJAX.prototype.cnds.OnComplete,
					null,
					1,
					false,
					false,
					false,
					5088738740685758,
					false
					,[
					[
						1,
						[
							2,
							"discard1"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					8461737809548442,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						7050172377602444,
						false
						,[
						[
							7,
							[
								20,
								5,
								cr.plugins_.AJAX.prototype.exps.LastData,
								true,
								null
							]
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								2,
								"1"
							]
						]
						]
					]
					],
					[
					[
						64,
						cr.plugins_.Sprite.prototype.acts.SetVisible,
						null,
						8984623946519976,
						false
						,[
						[
							3,
							0
						]
						]
					]
,					[
						80,
						cr.plugins_.Sprite.prototype.acts.SetVisible,
						null,
						9823788346987885,
						false
						,[
						[
							3,
							1
						]
						]
					]
,					[
						80,
						cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
						null,
						2829093985934054,
						false
						,[
						[
							0,
							[
								0,
								0
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			808438814530068,
			[
			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				4794890101919569,
				false
				,[
				[
					11,
					"edit"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				6581522301911828,
				false
				,[
				[
					11,
					"ex"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				223872117677156,
				[
				[
					1,
					cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
					null,
					1,
					false,
					false,
					false,
					2692791108571544,
					false
				]
,				[
					1,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					4746241509669035,
					false
					,[
					[
						4,
						50
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					9503942628791905,
					[
					[
						50,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						1288067884653757,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								2,
								"facebook"
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						5095377912798976,
						false
						,[
						[
							7,
							[
								20,
								0,
								cr.plugins_.WebStorage.prototype.exps.LocalValue,
								true,
								null
								,[
[
									2,
									"facebook"
								]
								]
							]
						]
,						[
							8,
							1
						]
,						[
							7,
							[
								2,
								""
							]
						]
						]
					]
					],
					[
					[
						2,
						cr.plugins_.Browser.prototype.acts.GoToURL,
						null,
						9949565305554281,
						false
						,[
						[
							1,
							[
								10,
								[
									2,
									"https://www.facebook.com/"
								]
								,[
									20,
									0,
									cr.plugins_.WebStorage.prototype.exps.LocalValue,
									true,
									null
									,[
[
										2,
										"facebook"
									]
									]
								]
							]
						]
,						[
							3,
							0
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					6366541233627682,
					[
					[
						50,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						1288807267679188,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								2,
								"twitter"
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						4516191433290251,
						false
						,[
						[
							7,
							[
								20,
								0,
								cr.plugins_.WebStorage.prototype.exps.LocalValue,
								true,
								null
								,[
[
									2,
									"twitter"
								]
								]
							]
						]
,						[
							8,
							1
						]
,						[
							7,
							[
								2,
								""
							]
						]
						]
					]
					],
					[
					[
						2,
						cr.plugins_.Browser.prototype.acts.GoToURL,
						null,
						3821867905624103,
						false
						,[
						[
							1,
							[
								10,
								[
									2,
									"https://www.twitter.com/"
								]
								,[
									20,
									0,
									cr.plugins_.WebStorage.prototype.exps.LocalValue,
									true,
									null
									,[
[
										2,
										"twitter"
									]
									]
								]
							]
						]
,						[
							3,
							0
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					3057716581458531,
					[
					[
						50,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						4374770200990424,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								2,
								"linkdin"
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						5508461032840732,
						false
						,[
						[
							7,
							[
								20,
								0,
								cr.plugins_.WebStorage.prototype.exps.LocalValue,
								true,
								null
								,[
[
									2,
									"linkdin"
								]
								]
							]
						]
,						[
							8,
							1
						]
,						[
							7,
							[
								2,
								""
							]
						]
						]
					]
					],
					[
					[
						2,
						cr.plugins_.Browser.prototype.acts.GoToURL,
						null,
						1662513637264273,
						false
						,[
						[
							1,
							[
								10,
								[
									2,
									"https://www.linkedin.com/in/"
								]
								,[
									20,
									0,
									cr.plugins_.WebStorage.prototype.exps.LocalValue,
									true,
									null
									,[
[
										2,
										"linkdin"
									]
									]
								]
							]
						]
,						[
							3,
							0
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					8262391633426287,
					[
					[
						50,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						5196798671003327,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								2,
								"website"
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						4599966082438303,
						false
						,[
						[
							7,
							[
								20,
								0,
								cr.plugins_.WebStorage.prototype.exps.LocalValue,
								true,
								null
								,[
[
									2,
									"website"
								]
								]
							]
						]
,						[
							8,
							1
						]
,						[
							7,
							[
								2,
								""
							]
						]
						]
					]
					],
					[
					[
						2,
						cr.plugins_.Browser.prototype.acts.GoToURL,
						null,
						3553392026500105,
						false
						,[
						[
							1,
							[
								10,
								[
									2,
									"http://"
								]
								,[
									20,
									0,
									cr.plugins_.WebStorage.prototype.exps.LocalValue,
									true,
									null
									,[
[
										2,
										"website"
									]
									]
								]
							]
						]
,						[
							3,
							0
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			9002105301313781,
			[
			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				7313973470299967,
				false
				,[
				[
					11,
					"edit"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				8585697562902495,
				[
				[
					1,
					cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
					null,
					1,
					false,
					false,
					false,
					5179269507055118,
					false
				]
,				[
					1,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					9937738139861257,
					false
					,[
					[
						4,
						50
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					5619016180364255,
					[
					[
						50,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3143426178235497,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								2,
								"facebook"
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						6999949623202569,
						false
						,[
						[
							11,
							"facebook"
						]
,						[
							8,
							1
						]
,						[
							7,
							[
								2,
								""
							]
						]
						]
					]
					],
					[
					[
						2,
						cr.plugins_.Browser.prototype.acts.GoToURL,
						null,
						7968491575320797,
						false
						,[
						[
							1,
							[
								10,
								[
									2,
									"https://www.facebook.com/"
								]
								,[
									23,
									"facebook"
								]
							]
						]
,						[
							3,
							0
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					6086122700754808,
					[
					[
						50,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						9267374517835153,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								2,
								"twitter"
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						1452839101534364,
						false
						,[
						[
							11,
							"twitter"
						]
,						[
							8,
							1
						]
,						[
							7,
							[
								2,
								""
							]
						]
						]
					]
					],
					[
					[
						2,
						cr.plugins_.Browser.prototype.acts.GoToURL,
						null,
						1042128061636585,
						false
						,[
						[
							1,
							[
								10,
								[
									2,
									"https://www.twitter.com/"
								]
								,[
									23,
									"twitter"
								]
							]
						]
,						[
							3,
							0
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					9016336855339484,
					[
					[
						50,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						5261680163993566,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								2,
								"linkdin"
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						1682945441693801,
						false
						,[
						[
							11,
							"linkdin"
						]
,						[
							8,
							1
						]
,						[
							7,
							[
								2,
								""
							]
						]
						]
					]
					],
					[
					[
						2,
						cr.plugins_.Browser.prototype.acts.GoToURL,
						null,
						113848227527179,
						false
						,[
						[
							1,
							[
								10,
								[
									2,
									"https://www.linkedin.com/in/"
								]
								,[
									23,
									"linkdin"
								]
							]
						]
,						[
							3,
							0
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					6734664737980635,
					[
					[
						50,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						8719237300232016,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								2,
								"website"
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						9252624399265948,
						false
						,[
						[
							11,
							"website"
						]
,						[
							8,
							1
						]
,						[
							7,
							[
								2,
								""
							]
						]
						]
					]
					],
					[
					[
						2,
						cr.plugins_.Browser.prototype.acts.GoToURL,
						null,
						1408674702782239,
						false
						,[
						[
							1,
							[
								10,
								[
									2,
									"http://"
								]
								,[
									23,
									"website"
								]
							]
						]
,						[
							3,
							0
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			7201518117809834,
			[
			[
				-1,
				cr.system_object.prototype.cnds.EveryTick,
				null,
				0,
				false,
				false,
				false,
				8664974816965862,
				false
			]
			],
			[
			[
				78,
				cr.plugins_.Sprite.prototype.acts.SetX,
				null,
				7169456705631475,
				false
				,[
				[
					0,
					[
						7,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewportleft
								,[
[
									0,
									0
								]
								]
							]
							,[
								19,
								cr.system_object.prototype.exps.viewportright
								,[
[
									0,
									0
								]
								]
							]
						]
						,[
							0,
							2
						]
					]
				]
				]
			]
,			[
				61,
				cr.plugins_.HTML_Img.prototype.acts.SetX,
				null,
				5478668098675124,
				false
				,[
				[
					0,
					[
						5,
						[
							5,
							[
								7,
								[
									4,
									[
										19,
										cr.system_object.prototype.exps.abs
										,[
[
											19,
											cr.system_object.prototype.exps.viewportleft
											,[
[
												0,
												0
											]
											]
										]
										]
									]
									,[
										19,
										cr.system_object.prototype.exps.viewportright
										,[
[
											0,
											0
										]
										]
									]
								]
								,[
									0,
									2
								]
							]
							,[
								7,
								[
									20,
									61,
									cr.plugins_.HTML_Img.prototype.exps.Width,
									false,
									null
								]
								,[
									0,
									2
								]
							]
						]
						,[
							0,
							10
						]
					]
				]
				]
			]
,			[
				57,
				cr.plugins_.Text.prototype.acts.SetX,
				null,
				7233252846297389,
				false
				,[
				[
					0,
					[
						7,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.abs
								,[
[
									19,
									cr.system_object.prototype.exps.viewportleft
									,[
[
										0,
										0
									]
									]
								]
								]
							]
							,[
								19,
								cr.system_object.prototype.exps.viewportright
								,[
[
									0,
									0
								]
								]
							]
						]
						,[
							0,
							2
						]
					]
				]
				]
			]
,			[
				47,
				cr.plugins_.Sprite.prototype.acts.SetX,
				null,
				4351374584202129,
				false
				,[
				[
					0,
					[
						5,
						[
							20,
							79,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
						,[
							0,
							165
						]
					]
				]
				]
			]
,			[
				54,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				8828993708330988,
				false
				,[
				[
					0,
					[
						7,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewportleft
								,[
[
									0,
									0
								]
								]
							]
							,[
								19,
								cr.system_object.prototype.exps.viewportright
								,[
[
									0,
									0
								]
								]
							]
						]
						,[
							0,
							2
						]
					]
				]
,				[
					0,
					[
						4,
						[
							20,
							61,
							cr.plugins_.HTML_Img.prototype.exps.Y,
							false,
							null
						]
						,[
							7,
							[
								20,
								61,
								cr.plugins_.HTML_Img.prototype.exps.Width,
								false,
								null
							]
							,[
								0,
								2
							]
						]
					]
				]
				]
			]
,			[
				41,
				cr.plugins_.Sprite.prototype.acts.SetPosToObject,
				null,
				6978621372460249,
				false
				,[
				[
					4,
					78
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
,			[
				75,
				cr.plugins_.Text.prototype.acts.SetPosToObject,
				null,
				5413597421355657,
				false
				,[
				[
					4,
					78
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
,			[
				85,
				cr.plugins_.Sprite.prototype.acts.SetX,
				null,
				8746427283058174,
				false
				,[
				[
					0,
					[
						7,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.abs
								,[
[
									19,
									cr.system_object.prototype.exps.viewportleft
									,[
[
										0,
										0
									]
									]
								]
								]
							]
							,[
								19,
								cr.system_object.prototype.exps.viewportright
								,[
[
									0,
									0
								]
								]
							]
						]
						,[
							0,
							2
						]
					]
				]
				]
			]
			]
			,[
			[
				0,
				null,
				false,
				null,
				5046193871428786,
				[
				[
					47,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					8776595346001662,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							5
						]
					]
					]
				]
,				[
					9,
					cr.plugins_.Text.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					3404847204705255,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"email"
						]
					]
					]
				]
,				[
					79,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					9892262447108165,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					47,
					cr.plugins_.Sprite.prototype.acts.SetY,
					null,
					9925546708524539,
					false
					,[
					[
						0,
						[
							20,
							79,
							cr.plugins_.Sprite.prototype.exps.Y,
							false,
							null
						]
					]
					]
				]
,				[
					9,
					cr.plugins_.Text.prototype.acts.SetY,
					null,
					2935534679888922,
					false
					,[
					[
						0,
						[
							20,
							79,
							cr.plugins_.Sprite.prototype.exps.Y,
							false,
							null
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8117249754668288,
				[
				[
					47,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					5200136452312168,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							6
						]
					]
					]
				]
,				[
					9,
					cr.plugins_.Text.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					8420351067783793,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"number"
						]
					]
					]
				]
,				[
					79,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					2046723942238064,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					47,
					cr.plugins_.Sprite.prototype.acts.SetY,
					null,
					5594179568755425,
					false
					,[
					[
						0,
						[
							20,
							79,
							cr.plugins_.Sprite.prototype.exps.Y,
							false,
							null
						]
					]
					]
				]
,				[
					9,
					cr.plugins_.Text.prototype.acts.SetY,
					null,
					4229848905582114,
					false
					,[
					[
						0,
						[
							20,
							79,
							cr.plugins_.Sprite.prototype.exps.Y,
							false,
							null
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9564525783045006,
				[
				[
					47,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					8825562229534478,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							7
						]
					]
					]
				]
,				[
					9,
					cr.plugins_.Text.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					4979869373660455,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"company"
						]
					]
					]
				]
,				[
					79,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					848949747344761,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							2
						]
					]
					]
				]
				],
				[
				[
					47,
					cr.plugins_.Sprite.prototype.acts.SetY,
					null,
					5297602614604321,
					false
					,[
					[
						0,
						[
							20,
							79,
							cr.plugins_.Sprite.prototype.exps.Y,
							false,
							null
						]
					]
					]
				]
,				[
					9,
					cr.plugins_.Text.prototype.acts.SetY,
					null,
					7320104700296858,
					false
					,[
					[
						0,
						[
							20,
							79,
							cr.plugins_.Sprite.prototype.exps.Y,
							false,
							null
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6968972369745103,
				[
				[
					47,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					8636993435457384,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							8
						]
					]
					]
				]
				],
				[
				[
					47,
					cr.plugins_.Sprite.prototype.acts.SetX,
					null,
					8480428349958151,
					false
					,[
					[
						0,
						[
							4,
							[
								20,
								79,
								cr.plugins_.Sprite.prototype.exps.X,
								false,
								null
							]
							,[
								0,
								170
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4074572037788785,
				[
				[
					47,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					9119003219845575,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							9
						]
					]
					]
				]
				],
				[
				[
					47,
					cr.plugins_.Sprite.prototype.acts.SetX,
					null,
					6301278673609431,
					false
					,[
					[
						0,
						[
							5,
							[
								20,
								79,
								cr.plugins_.Sprite.prototype.exps.X,
								false,
								null
							]
							,[
								0,
								170
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8401166818228902,
				[
				],
				[
				[
					79,
					cr.plugins_.Sprite.prototype.acts.SetX,
					null,
					2607235792407918,
					false
					,[
					[
						0,
						[
							7,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.abs
									,[
[
										19,
										cr.system_object.prototype.exps.viewportleft
										,[
[
											0,
											0
										]
										]
									]
									]
								]
								,[
									19,
									cr.system_object.prototype.exps.viewportright
									,[
[
										0,
										0
									]
									]
								]
							]
							,[
								0,
								2
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				906003082034145,
				[
				[
					9,
					cr.plugins_.Text.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					3944800410868043,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"designation"
						]
					]
					]
				]
				],
				[
				[
					9,
					cr.plugins_.Text.prototype.acts.SetX,
					null,
					9187631657215168,
					false
					,[
					[
						0,
						[
							7,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.abs
									,[
[
										19,
										cr.system_object.prototype.exps.viewportleft
										,[
[
											0,
											0
										]
										]
									]
									]
								]
								,[
									19,
									cr.system_object.prototype.exps.viewportright
									,[
[
										0,
										0
									]
									]
								]
							]
							,[
								0,
								2
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				true,
				null,
				1017157799776488,
				[
				[
					9,
					cr.plugins_.Text.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					2105690850126229,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"email"
						]
					]
					]
				]
,				[
					9,
					cr.plugins_.Text.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					2055784093333209,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"number"
						]
					]
					]
				]
,				[
					9,
					cr.plugins_.Text.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					3531938437618518,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"company"
						]
					]
					]
				]
				],
				[
				[
					9,
					cr.plugins_.Text.prototype.acts.SetX,
					null,
					917283994587786,
					false
					,[
					[
						0,
						[
							4,
							[
								20,
								79,
								cr.plugins_.Sprite.prototype.exps.X,
								false,
								null
							]
							,[
								0,
								25
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4990141469757638,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					1302486698057894,
					false
					,[
					[
						11,
						"pop"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					81,
					cr.plugins_.Sprite.prototype.acts.SetX,
					null,
					8716094082696312,
					false
					,[
					[
						0,
						[
							20,
							79,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				2214351133002759,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					9631209651335781,
					false
					,[
					[
						11,
						"edit"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					80,
					cr.plugins_.Sprite.prototype.acts.SetX,
					null,
					6574574054365326,
					false
					,[
					[
						0,
						[
							5,
							[
								20,
								79,
								cr.plugins_.Sprite.prototype.exps.X,
								false,
								null
							]
							,[
								0,
								170
							]
						]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					2414874761873327,
					[
					[
						47,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						7052571597581911,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								10
							]
						]
						]
					]
					],
					[
					[
						47,
						cr.behaviors.Pin.prototype.acts.Unpin,
						"Pin",
						3198864849048922,
						false
					]
,					[
						47,
						cr.plugins_.Sprite.prototype.acts.SetX,
						null,
						2773505810187914,
						false
						,[
						[
							0,
							[
								0,
								-1000
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			4595176565247321,
			[
			[
				-1,
				cr.system_object.prototype.cnds.OnLayoutStart,
				null,
				1,
				false,
				false,
				false,
				8259623063317045,
				false
			]
			],
			[
			[
				83,
				cr.behaviors.Pin.prototype.acts.Pin,
				"Pin",
				9750909204043722,
				false
				,[
				[
					4,
					81
				]
,				[
					3,
					0
				]
				]
			]
,			[
				82,
				cr.behaviors.Pin.prototype.acts.Pin,
				"Pin",
				3237432849373531,
				false
				,[
				[
					4,
					81
				]
,				[
					3,
					0
				]
				]
			]
,			[
				84,
				cr.behaviors.Pin.prototype.acts.Pin,
				"Pin",
				6157701468767022,
				false
				,[
				[
					4,
					81
				]
,				[
					3,
					0
				]
				]
			]
,			[
				81,
				cr.plugins_.Sprite.prototype.acts.SetX,
				null,
				394614528116114,
				false
				,[
				[
					0,
					[
						0,
						-1000
					]
				]
				]
			]
			]
			,[
			[
				0,
				null,
				false,
				null,
				1819572880938316,
				[
				[
					9,
					cr.plugins_.Text.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					2719442546256953,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"edit"
						]
					]
					]
				]
				],
				[
				[
					9,
					cr.behaviors.Pin.prototype.acts.Pin,
					"Pin",
					5152721968207595,
					false
					,[
					[
						4,
						78
					]
,					[
						3,
						0
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				2524541734916082,
				[
				[
					47,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					6425616349306302,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							10
						]
					]
					]
				]
				],
				[
				[
					47,
					cr.behaviors.Pin.prototype.acts.Pin,
					"Pin",
					7283290782591777,
					false
					,[
					[
						4,
						78
					]
,					[
						3,
						0
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			1581375595880215,
			[
			[
				1,
				cr.plugins_.Touch.prototype.cnds.OnTouchObject,
				null,
				1,
				false,
				false,
				false,
				3208850794208868,
				false
				,[
				[
					4,
					47
				]
				]
			]
,			[
				47,
				cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
				null,
				0,
				false,
				false,
				false,
				4023323372528612,
				false
				,[
				[
					10,
					0
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						8
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.SetLayerVisible,
				null,
				8202005696153009,
				false
				,[
				[
					5,
					[
						0,
						5
					]
				]
,				[
					3,
					1
				]
				]
			]
,			[
				81,
				cr.plugins_.Sprite.prototype.acts.SetX,
				null,
				1608126595155655,
				false
				,[
				[
					0,
					[
						0,
						320
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				2081841422887382,
				false
				,[
				[
					11,
					"pop"
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			2615792847035576,
			[
			[
				1,
				cr.plugins_.Touch.prototype.cnds.OnTouchObject,
				null,
				1,
				false,
				false,
				false,
				8742871721765625,
				false
				,[
				[
					4,
					84
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.SetLayerVisible,
				null,
				9326897489948513,
				false
				,[
				[
					5,
					[
						0,
						5
					]
				]
,				[
					3,
					0
				]
				]
			]
,			[
				81,
				cr.plugins_.Sprite.prototype.acts.SetX,
				null,
				774629085877996,
				false
				,[
				[
					0,
					[
						0,
						-1000
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				5538553014139023,
				false
				,[
				[
					11,
					"pop"
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			110343854580165,
			[
			[
				1,
				cr.plugins_.Touch.prototype.cnds.OnTouchObject,
				null,
				1,
				false,
				false,
				false,
				2536127868269172,
				false
				,[
				[
					4,
					83
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				8107417167208233,
				[
				[
					83,
					cr.plugins_.Sprite.prototype.cnds.CompareFrame,
					null,
					0,
					false,
					false,
					false,
					4436675780520066,
					false
					,[
					[
						8,
						0
					]
,					[
						0,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					2,
					cr.plugins_.Browser.prototype.acts.GoToURL,
					null,
					7720564944767356,
					false
					,[
					[
						1,
						[
							2,
							"http://"
						]
					]
,					[
						3,
						0
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				5223180672946242,
				[
				[
					83,
					cr.plugins_.Sprite.prototype.cnds.CompareFrame,
					null,
					0,
					false,
					false,
					false,
					7103382993894062,
					false
					,[
					[
						8,
						0
					]
,					[
						0,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					2,
					cr.plugins_.Browser.prototype.acts.GoToURL,
					null,
					9286490811981254,
					false
					,[
					[
						1,
						[
							2,
							"http://"
						]
					]
,					[
						3,
						0
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6015435077778307,
				[
				[
					83,
					cr.plugins_.Sprite.prototype.cnds.CompareFrame,
					null,
					0,
					false,
					false,
					false,
					3073946693618725,
					false
					,[
					[
						8,
						0
					]
,					[
						0,
						[
							0,
							2
						]
					]
					]
				]
				],
				[
				[
					2,
					cr.plugins_.Browser.prototype.acts.GoToURL,
					null,
					8365739374598034,
					false
					,[
					[
						1,
						[
							2,
							"http://"
						]
					]
,					[
						3,
						0
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4950860404510567,
				[
				[
					83,
					cr.plugins_.Sprite.prototype.cnds.CompareFrame,
					null,
					0,
					false,
					false,
					false,
					3507043565894473,
					false
					,[
					[
						8,
						0
					]
,					[
						0,
						[
							0,
							3
						]
					]
					]
				]
				],
				[
				[
					2,
					cr.plugins_.Browser.prototype.acts.GoToURL,
					null,
					1394888278836279,
					false
					,[
					[
						1,
						[
							2,
							"http://"
						]
					]
,					[
						3,
						0
					]
					]
				]
				]
			]
			]
		]
		]
	]
,	[
		"forgotPassword",
		[
		[
			2,
			"Global",
			false
		]
,		[
			0,
			null,
			false,
			null,
			5767507308230708,
			[
			[
				1,
				cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
				null,
				1,
				false,
				false,
				false,
				8231381138066259,
				false
			]
,			[
				1,
				cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
				null,
				0,
				false,
				false,
				false,
				843593091089554,
				false
				,[
				[
					4,
					35
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.GoToLayout,
				null,
				5543249553655954,
				false
				,[
				[
					6,
					"Login"
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			370712820805906,
			[
			[
				1,
				cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
				null,
				1,
				false,
				false,
				false,
				5892918668618519,
				false
			]
,			[
				1,
				cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
				null,
				0,
				false,
				false,
				false,
				305397920336088,
				false
				,[
				[
					4,
					32
				]
				]
			]
,			[
				32,
				cr.plugins_.Sprite.prototype.cnds.CompareOpacity,
				null,
				0,
				false,
				false,
				false,
				5916966861728969,
				false
				,[
				[
					8,
					0
				]
,				[
					0,
					[
						0,
						100
					]
				]
				]
			]
			],
			[
			[
				5,
				cr.plugins_.AJAX.prototype.acts.Post,
				null,
				411659939621623,
				false
				,[
				[
					1,
					[
						2,
						"fp"
					]
				]
,				[
					1,
					[
						10,
						[
							10,
							[
								23,
								"host"
							]
							,[
								2,
								"forgot-password.php?email="
							]
						]
						,[
							20,
							19,
							cr.plugins_.TextBox.prototype.exps.Text,
							true,
							null
						]
					]
				]
,				[
					1,
					[
						2,
						""
					]
				]
,				[
					1,
					[
						2,
						"POST"
					]
				]
				]
			]
,			[
				32,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				9002458741529355,
				false
			]
			]
			,[
			[
				0,
				null,
				false,
				null,
				2421799709398429,
				[
				[
					9,
					cr.plugins_.Text.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					9633794815162341,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"reset"
						]
					]
					]
				]
				],
				[
				[
					9,
					cr.plugins_.Text.prototype.acts.Destroy,
					null,
					93064285189513,
					false
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			7773551963710708,
			[
			[
				5,
				cr.plugins_.AJAX.prototype.cnds.OnComplete,
				null,
				1,
				false,
				false,
				false,
				3100852851929083,
				false
				,[
				[
					1,
					[
						2,
						"fp"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				4961768910393934,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					6180793206726597,
					false
					,[
					[
						7,
						[
							20,
							5,
							cr.plugins_.AJAX.prototype.exps.LastData,
							true,
							null
						]
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"1"
						]
					]
					]
				]
				],
				[
				[
					19,
					cr.plugins_.TextBox.prototype.acts.SetEnabled,
					null,
					3675415384978755,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					29,
					cr.plugins_.Text.prototype.acts.SetText,
					null,
					9013914405883151,
					false
					,[
					[
						7,
						[
							2,
							"Password Send to ur mail."
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9510254997356851,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Else,
					null,
					0,
					false,
					false,
					false,
					697450484375394,
					false
				]
				],
				[
				[
					29,
					cr.plugins_.Text.prototype.acts.SetText,
					null,
					6815457114185118,
					false
					,[
					[
						7,
						[
							2,
							"Error: unable to send the data at this moment."
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			2337206373750034,
			[
			[
				-1,
				cr.system_object.prototype.cnds.Compare,
				null,
				0,
				false,
				false,
				false,
				1684400352046232,
				false
				,[
				[
					7,
					[
						19,
						cr.system_object.prototype.exps.find
						,[
[
							20,
							19,
							cr.plugins_.TextBox.prototype.exps.Text,
							true,
							null
						]
,[
							2,
							"@"
						]
						]
					]
				]
,				[
					8,
					2
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
			],
			[
			[
				32,
				cr.plugins_.Sprite.prototype.acts.SetOpacity,
				null,
				1316968166930187,
				false
				,[
				[
					0,
					[
						0,
						100
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			5948886369179056,
			[
			[
				-1,
				cr.system_object.prototype.cnds.Else,
				null,
				0,
				false,
				false,
				false,
				9278565623856844,
				false
			]
			],
			[
			]
			,[
			[
				0,
				null,
				true,
				null,
				1203489953417747,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					4374703865715655,
					false
					,[
					[
						7,
						[
							19,
							cr.system_object.prototype.exps.find
							,[
[
								20,
								19,
								cr.plugins_.TextBox.prototype.exps.Text,
								true,
								null
							]
,[
								2,
								"@"
							]
							]
						]
					]
,					[
						8,
						2
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					7383671592027119,
					false
					,[
					[
						7,
						[
							19,
							cr.system_object.prototype.exps.find
							,[
[
								20,
								19,
								cr.plugins_.TextBox.prototype.exps.Text,
								true,
								null
							]
,[
								2,
								"."
							]
							]
						]
					]
,					[
						8,
						2
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					32,
					cr.plugins_.Sprite.prototype.acts.SetOpacity,
					null,
					4431905990608334,
					false
					,[
					[
						0,
						[
							0,
							50
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3769018216438925,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Else,
					null,
					0,
					false,
					false,
					false,
					8062231654312248,
					false
				]
				],
				[
				[
					32,
					cr.plugins_.Sprite.prototype.acts.SetOpacity,
					null,
					2749920433343131,
					false
					,[
					[
						0,
						[
							0,
							100
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			6986051526874376,
			[
			[
				-1,
				cr.system_object.prototype.cnds.EveryTick,
				null,
				0,
				false,
				false,
				false,
				3715547881620125,
				false
			]
			],
			[
			[
				47,
				cr.plugins_.Sprite.prototype.acts.SetX,
				null,
				3000246234485356,
				false
				,[
				[
					0,
					[
						5,
						[
							20,
							14,
							cr.plugins_.TextBox.prototype.exps.X,
							false,
							null
						]
						,[
							20,
							47,
							cr.plugins_.Sprite.prototype.exps.Width,
							false,
							null
						]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			1459149195712658,
			[
			[
				97,
				cr.plugins_.Phonegap.prototype.cnds.OnBack,
				null,
				1,
				false,
				false,
				false,
				3975781032753258,
				false
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.GoToLayout,
				null,
				173894857104092,
				false
				,[
				[
					6,
					"Login"
				]
				]
			]
			]
		]
		]
	]
,	[
		"mainLogin",
		[
		[
			2,
			"Global",
			false
		]
,		[
			0,
			null,
			false,
			null,
			164832273020066,
			[
			[
				1,
				cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
				null,
				1,
				false,
				false,
				false,
				5647801472128479,
				false
			]
,			[
				1,
				cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
				null,
				0,
				false,
				false,
				false,
				7912718448078088,
				false
				,[
				[
					4,
					76
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.GoToLayout,
				null,
				9033370847461343,
				false
				,[
				[
					6,
					"Login"
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			2743234393314204,
			[
			[
				1,
				cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
				null,
				1,
				false,
				false,
				false,
				7160635554371503,
				false
			]
,			[
				1,
				cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
				null,
				0,
				false,
				false,
				false,
				5727920383945002,
				false
				,[
				[
					4,
					62
				]
				]
			]
			],
			[
			[
				54,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				2692042176733865,
				false
				,[
				[
					3,
					1
				]
				]
			]
,			[
				12,
				cr.plugins_.TextBox.prototype.acts.SetEnabled,
				null,
				9290316782348984,
				false
				,[
				[
					3,
					0
				]
				]
			]
,			[
				14,
				cr.plugins_.TextBox.prototype.acts.SetEnabled,
				null,
				743749105680415,
				false
				,[
				[
					3,
					0
				]
				]
			]
			]
			,[
			[
				0,
				null,
				false,
				null,
				1531367711014041,
				[
				[
					0,
					cr.plugins_.WebStorage.prototype.cnds.CompareKeyNumber,
					null,
					0,
					false,
					false,
					false,
					6911335632606027,
					false
					,[
					[
						1,
						[
							2,
							"login"
						]
					]
,					[
						8,
						0
					]
,					[
						0,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					0,
					cr.plugins_.WebStorage.prototype.acts.StoreLocal,
					null,
					4445378537739303,
					false
					,[
					[
						1,
						[
							2,
							"fb"
						]
					]
,					[
						7,
						[
							0,
							2
						]
					]
					]
				]
,				[
					99,
					cr.plugins_.Facebook2_1.prototype.acts.Phonegap_Login,
					null,
					8738398588488246,
					false
					,[
					[
						1,
						[
							2,
							"http://localhost/"
						]
					]
,					[
						1,
						[
							2,
							""
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			1150331705001791,
			[
			[
				-1,
				cr.system_object.prototype.cnds.Compare,
				null,
				0,
				false,
				false,
				false,
				5040454197318192,
				false
				,[
				[
					7,
					[
						20,
						63,
						cr.plugins_.FacebookMod.prototype.exps.Email,
						true,
						null
					]
				]
,				[
					8,
					1
				]
,				[
					7,
					[
						2,
						""
					]
				]
				]
			]
,			[
				63,
				cr.plugins_.FacebookMod.prototype.cnds.IsLoggedIn,
				null,
				0,
				false,
				false,
				false,
				6831149207381639,
				false
			]
,			[
				0,
				cr.plugins_.WebStorage.prototype.cnds.CompareKeyNumber,
				null,
				0,
				false,
				false,
				false,
				8279398658447423,
				false
				,[
				[
					1,
					[
						2,
						"fb"
					]
				]
,				[
					8,
					0
				]
,				[
					0,
					[
						0,
						2
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.TriggerOnce,
				null,
				0,
				false,
				false,
				false,
				1422636641980098,
				false
			]
			],
			[
			[
				0,
				cr.plugins_.WebStorage.prototype.acts.StoreLocal,
				null,
				7492868395089054,
				false
				,[
				[
					1,
					[
						2,
						"fb"
					]
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
,			[
				0,
				cr.plugins_.WebStorage.prototype.acts.StoreLocal,
				null,
				2009419331996043,
				false
				,[
				[
					1,
					[
						2,
						"fullname"
					]
				]
,				[
					7,
					[
						20,
						63,
						cr.plugins_.FacebookMod.prototype.exps.FullName,
						true,
						null
					]
				]
				]
			]
,			[
				0,
				cr.plugins_.WebStorage.prototype.acts.StoreLocal,
				null,
				6220354046679329,
				false
				,[
				[
					1,
					[
						2,
						"email"
					]
				]
,				[
					7,
					[
						20,
						63,
						cr.plugins_.FacebookMod.prototype.exps.Email,
						true,
						null
					]
				]
				]
			]
,			[
				0,
				cr.plugins_.WebStorage.prototype.acts.StoreLocal,
				null,
				9364647319042715,
				false
				,[
				[
					1,
					[
						2,
						"propic"
					]
				]
,				[
					7,
					[
						20,
						63,
						cr.plugins_.FacebookMod.prototype.exps.MyPic,
						true,
						null
					]
				]
				]
			]
,			[
				0,
				cr.plugins_.WebStorage.prototype.acts.StoreLocal,
				null,
				5453438473355911,
				false
				,[
				[
					1,
					[
						2,
						"fb_id"
					]
				]
,				[
					7,
					[
						20,
						63,
						cr.plugins_.FacebookMod.prototype.exps.UserID,
						false,
						null
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				9192269571966005,
				false
				,[
				[
					0,
					[
						1,
						1
					]
				]
				]
			]
,			[
				5,
				cr.plugins_.AJAX.prototype.acts.Post,
				null,
				6887153134710185,
				false
				,[
				[
					1,
					[
						2,
						"emailtohcidFB"
					]
				]
,				[
					1,
					[
						10,
						[
							10,
							[
								23,
								"host"
							]
							,[
								2,
								"retrieve.php?&hcid=&name&contact=&email="
							]
						]
						,[
							20,
							63,
							cr.plugins_.FacebookMod.prototype.exps.Email,
							true,
							null
						]
					]
				]
,				[
					1,
					[
						2,
						""
					]
				]
,				[
					1,
					[
						2,
						"POST"
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			980259180731169,
			[
			[
				5,
				cr.plugins_.AJAX.prototype.cnds.OnComplete,
				null,
				1,
				false,
				false,
				false,
				1729639831793458,
				false
				,[
				[
					1,
					[
						2,
						"emailtohcidFB"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				7490987083109304,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					8756415130821569,
					false
					,[
					[
						7,
						[
							20,
							5,
							cr.plugins_.AJAX.prototype.exps.LastData,
							true,
							null
						]
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							""
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.GoToLayout,
					null,
					9946391963641491,
					false
					,[
					[
						6,
						"Register"
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				2050534481019655,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Else,
					null,
					0,
					false,
					false,
					false,
					4761632772815384,
					false
				]
,				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					6766570899904887,
					false
					,[
					[
						7,
						[
							19,
							cr.system_object.prototype.exps.find
							,[
[
								19,
								cr.system_object.prototype.exps.tokenat
								,[
[
									20,
									5,
									cr.plugins_.AJAX.prototype.exps.LastData,
									true,
									null
								]
,[
									0,
									0
								]
,[
									2,
									"|"
								]
								]
							]
,[
								2,
								"@"
							]
							]
						]
					]
,					[
						8,
						2
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					0,
					cr.plugins_.WebStorage.prototype.acts.StoreLocal,
					null,
					2972379187894484,
					false
					,[
					[
						1,
						[
							2,
							"hcid"
						]
					]
,					[
						7,
						[
							19,
							cr.system_object.prototype.exps.tokenat
							,[
[
								20,
								5,
								cr.plugins_.AJAX.prototype.exps.LastData,
								true,
								null
							]
,[
								0,
								0
							]
,[
								2,
								"|"
							]
							]
						]
					]
					]
				]
,				[
					0,
					cr.plugins_.WebStorage.prototype.acts.StoreLocal,
					null,
					6192102431346881,
					false
					,[
					[
						1,
						[
							2,
							"fullname"
						]
					]
,					[
						7,
						[
							19,
							cr.system_object.prototype.exps.tokenat
							,[
[
								20,
								5,
								cr.plugins_.AJAX.prototype.exps.LastData,
								true,
								null
							]
,[
								0,
								1
							]
,[
								2,
								"|"
							]
							]
						]
					]
					]
				]
,				[
					0,
					cr.plugins_.WebStorage.prototype.acts.StoreLocal,
					null,
					5084680583778827,
					false
					,[
					[
						1,
						[
							2,
							"designation"
						]
					]
,					[
						7,
						[
							19,
							cr.system_object.prototype.exps.tokenat
							,[
[
								20,
								5,
								cr.plugins_.AJAX.prototype.exps.LastData,
								true,
								null
							]
,[
								0,
								2
							]
,[
								2,
								"|"
							]
							]
						]
					]
					]
				]
,				[
					0,
					cr.plugins_.WebStorage.prototype.acts.StoreLocal,
					null,
					2981131142140135,
					false
					,[
					[
						1,
						[
							2,
							"company"
						]
					]
,					[
						7,
						[
							19,
							cr.system_object.prototype.exps.tokenat
							,[
[
								20,
								5,
								cr.plugins_.AJAX.prototype.exps.LastData,
								true,
								null
							]
,[
								0,
								3
							]
,[
								2,
								"|"
							]
							]
						]
					]
					]
				]
,				[
					0,
					cr.plugins_.WebStorage.prototype.acts.StoreLocal,
					null,
					8429380264335166,
					false
					,[
					[
						1,
						[
							2,
							"contact"
						]
					]
,					[
						7,
						[
							19,
							cr.system_object.prototype.exps.tokenat
							,[
[
								20,
								5,
								cr.plugins_.AJAX.prototype.exps.LastData,
								true,
								null
							]
,[
								0,
								4
							]
,[
								2,
								"|"
							]
							]
						]
					]
					]
				]
,				[
					0,
					cr.plugins_.WebStorage.prototype.acts.StoreLocal,
					null,
					5370103688732714,
					false
					,[
					[
						1,
						[
							2,
							"email"
						]
					]
,					[
						7,
						[
							19,
							cr.system_object.prototype.exps.tokenat
							,[
[
								20,
								5,
								cr.plugins_.AJAX.prototype.exps.LastData,
								true,
								null
							]
,[
								0,
								5
							]
,[
								2,
								"|"
							]
							]
						]
					]
					]
				]
,				[
					0,
					cr.plugins_.WebStorage.prototype.acts.StoreLocal,
					null,
					3356319674302956,
					false
					,[
					[
						1,
						[
							2,
							"propic"
						]
					]
,					[
						7,
						[
							19,
							cr.system_object.prototype.exps.tokenat
							,[
[
								20,
								5,
								cr.plugins_.AJAX.prototype.exps.LastData,
								true,
								null
							]
,[
								0,
								6
							]
,[
								2,
								"|"
							]
							]
						]
					]
					]
				]
,				[
					0,
					cr.plugins_.WebStorage.prototype.acts.StoreLocal,
					null,
					5234792790431685,
					false
					,[
					[
						1,
						[
							2,
							"login"
						]
					]
,					[
						7,
						[
							2,
							"1"
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				1887465337250105,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Else,
					null,
					0,
					false,
					false,
					false,
					9410057207540198,
					false
				]
				],
				[
				[
					5,
					cr.plugins_.AJAX.prototype.acts.Post,
					null,
					5166153852854641,
					false
					,[
					[
						1,
						[
							2,
							"emailtohcidFB"
						]
					]
,					[
						1,
						[
							10,
							[
								10,
								[
									23,
									"host"
								]
								,[
									2,
									"retrieve.php?&hcid=&name&contact=&email="
								]
							]
							,[
								20,
								63,
								cr.plugins_.FacebookMod.prototype.exps.Email,
								true,
								null
							]
						]
					]
,					[
						1,
						[
							2,
							""
						]
					]
,					[
						1,
						[
							2,
							"POST"
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			3563233464913033,
			[
			[
				0,
				cr.plugins_.WebStorage.prototype.cnds.CompareKeyText,
				null,
				0,
				false,
				false,
				false,
				3441765975412753,
				false
				,[
				[
					1,
					[
						2,
						"login"
					]
				]
,				[
					1,
					[
						2,
						"1"
					]
				]
,				[
					3,
					0
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.GoToLayout,
				null,
				3899691278770065,
				false
				,[
				[
					6,
					"MyCards"
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			1550530674904016,
			[
			[
				1,
				cr.plugins_.Touch.prototype.cnds.OnTouchObject,
				null,
				1,
				false,
				false,
				false,
				9741310407134732,
				false
				,[
				[
					4,
					9
				]
				]
			]
,			[
				9,
				cr.plugins_.Text.prototype.cnds.CompareInstanceVar,
				null,
				0,
				false,
				false,
				false,
				4452472971547114,
				false
				,[
				[
					10,
					0
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						2,
						"register"
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.GoToLayout,
				null,
				9029509750839973,
				false
				,[
				[
					6,
					"Register"
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			5685409509339388,
			[
			[
				-1,
				cr.system_object.prototype.cnds.OnLayoutStart,
				null,
				1,
				false,
				false,
				false,
				2617079385804733,
				false
			]
			],
			[
			[
				0,
				cr.plugins_.WebStorage.prototype.acts.RemoveLocal,
				null,
				6361539174703978,
				false
				,[
				[
					1,
					[
						2,
						"hcid"
					]
				]
				]
			]
,			[
				0,
				cr.plugins_.WebStorage.prototype.acts.StoreLocal,
				null,
				6771877691324368,
				false
				,[
				[
					1,
					[
						2,
						"fb"
					]
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
,			[
				0,
				cr.plugins_.WebStorage.prototype.acts.StoreLocal,
				null,
				624636335035626,
				false
				,[
				[
					1,
					[
						2,
						"login"
					]
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
,			[
				0,
				cr.plugins_.WebStorage.prototype.acts.RemoveLocal,
				null,
				8554515348874362,
				false
				,[
				[
					1,
					[
						2,
						"email"
					]
				]
				]
			]
,			[
				0,
				cr.plugins_.WebStorage.prototype.acts.RemoveLocal,
				null,
				62988830533425,
				false
				,[
				[
					1,
					[
						2,
						"contact"
					]
				]
				]
			]
,			[
				0,
				cr.plugins_.WebStorage.prototype.acts.RemoveLocal,
				null,
				87191507907645,
				false
				,[
				[
					1,
					[
						2,
						"password"
					]
				]
				]
			]
,			[
				0,
				cr.plugins_.WebStorage.prototype.acts.RemoveLocal,
				null,
				1396923239507273,
				false
				,[
				[
					1,
					[
						2,
						"SavedCards"
					]
				]
				]
			]
			]
			,[
			[
				0,
				null,
				false,
				null,
				5641108823237479,
				[
				[
					0,
					cr.plugins_.WebStorage.prototype.cnds.CompareKeyText,
					null,
					0,
					false,
					false,
					false,
					931825978991436,
					false
					,[
					[
						1,
						[
							2,
							"login"
						]
					]
,					[
						1,
						[
							2,
							"1"
						]
					]
,					[
						3,
						0
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					3708805942604081,
					false
					,[
					[
						7,
						[
							20,
							0,
							cr.plugins_.WebStorage.prototype.exps.LocalValue,
							true,
							null
							,[
[
								2,
								"hcid"
							]
							]
						]
					]
,					[
						8,
						1
					]
,					[
						7,
						[
							2,
							""
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.GoToLayout,
					null,
					5468347140067563,
					false
					,[
					[
						6,
						"MyCards"
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "responsive2"],
			false,
			null,
			2378647933964832,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				2378647933964832,
				false
				,[
				[
					1,
					[
						2,
						"responsive2"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				4099922395473512,
				[
				[
					-1,
					cr.system_object.prototype.cnds.EveryTick,
					null,
					0,
					false,
					false,
					false,
					9148829363798412,
					false
				]
				],
				[
				[
					34,
					cr.plugins_.Sprite.prototype.acts.SetY,
					null,
					7669752750456223,
					false
					,[
					[
						0,
						[
							5,
							[
								19,
								cr.system_object.prototype.exps.viewportbottom
								,[
[
									0,
									0
								]
								]
							]
							,[
								7,
								[
									20,
									34,
									cr.plugins_.Sprite.prototype.exps.Height,
									false,
									null
								]
								,[
									0,
									2
								]
							]
						]
					]
					]
				]
,				[
					29,
					cr.plugins_.Text.prototype.acts.SetY,
					null,
					8182072015042552,
					false
					,[
					[
						0,
						[
							4,
							[
								4,
								[
									20,
									14,
									cr.plugins_.TextBox.prototype.exps.Y,
									false,
									null
								]
								,[
									20,
									14,
									cr.plugins_.TextBox.prototype.exps.Height,
									false,
									null
								]
							]
							,[
								0,
								50
							]
						]
					]
					]
				]
,				[
					32,
					cr.plugins_.Sprite.prototype.acts.SetY,
					null,
					6768827496805258,
					false
					,[
					[
						0,
						[
							4,
							[
								20,
								29,
								cr.plugins_.Text.prototype.exps.Y,
								false,
								null
							]
							,[
								0,
								75
							]
						]
					]
					]
				]
,				[
					8,
					cr.plugins_.Sprite.prototype.acts.SetX,
					null,
					5344369435083345,
					false
					,[
					[
						0,
						[
							7,
							[
								19,
								cr.system_object.prototype.exps.viewportright
								,[
[
									0,
									0
								]
								]
							]
							,[
								0,
								2
							]
						]
					]
					]
				]
,				[
					62,
					cr.plugins_.Sprite.prototype.acts.SetX,
					null,
					2559976654575396,
					false
					,[
					[
						0,
						[
							7,
							[
								19,
								cr.system_object.prototype.exps.viewportright
								,[
[
									0,
									0
								]
								]
							]
							,[
								0,
								2
							]
						]
					]
					]
				]
,				[
					76,
					cr.plugins_.Sprite.prototype.acts.SetX,
					null,
					916683081322129,
					false
					,[
					[
						0,
						[
							7,
							[
								19,
								cr.system_object.prototype.exps.viewportright
								,[
[
									0,
									0
								]
								]
							]
							,[
								0,
								2
							]
						]
					]
					]
				]
,				[
					54,
					cr.plugins_.Sprite.prototype.acts.SetPos,
					null,
					6327590967157681,
					false
					,[
					[
						0,
						[
							4,
							[
								4,
								[
									20,
									62,
									cr.plugins_.Sprite.prototype.exps.X,
									false,
									null
								]
								,[
									7,
									[
										20,
										62,
										cr.plugins_.Sprite.prototype.exps.Width,
										false,
										null
									]
									,[
										0,
										2
									]
								]
							]
							,[
								20,
								54,
								cr.plugins_.Sprite.prototype.exps.Width,
								false,
								null
							]
						]
					]
,					[
						0,
						[
							20,
							62,
							cr.plugins_.Sprite.prototype.exps.Y,
							false,
							null
						]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					3875268111120242,
					[
					[
						9,
						cr.plugins_.Text.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						9994959229543242,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								2,
								"label"
							]
						]
						]
					]
					],
					[
					[
						9,
						cr.plugins_.Text.prototype.acts.SetX,
						null,
						9667810005549593,
						false
						,[
						[
							0,
							[
								7,
								[
									19,
									cr.system_object.prototype.exps.viewportright
									,[
[
										0,
										0
									]
									]
								]
								,[
									0,
									2
								]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					7682743898552262,
					[
					[
						9,
						cr.plugins_.Text.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						4023636032096227,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								2,
								"register"
							]
						]
						]
					]
					],
					[
					[
						9,
						cr.plugins_.Text.prototype.acts.SetPos,
						null,
						4327379618600753,
						false
						,[
						[
							0,
							[
								7,
								[
									19,
									cr.system_object.prototype.exps.viewportright
									,[
[
										0,
										0
									]
									]
								]
								,[
									0,
									2
								]
							]
						]
,						[
							0,
							[
								20,
								34,
								cr.plugins_.Sprite.prototype.exps.Y,
								false,
								null
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			8057459010053115,
			[
			[
				-1,
				cr.system_object.prototype.cnds.OnLayoutStart,
				null,
				1,
				false,
				false,
				false,
				778278558738095,
				false
			]
			],
			[
			[
				0,
				cr.plugins_.WebStorage.prototype.acts.ClearLocal,
				null,
				811305697575538,
				false
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			7994666852555628,
			[
			[
				97,
				cr.plugins_.Phonegap.prototype.cnds.OnBack,
				null,
				1,
				false,
				false,
				false,
				5321661575845309,
				false
			]
			],
			[
			[
				97,
				cr.plugins_.Phonegap.prototype.acts.Close,
				null,
				3001167736865565,
				false
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			3650967724511875,
			[
			[
				99,
				cr.plugins_.Facebook2_1.prototype.cnds.CON_USER_LOGIN,
				null,
				1,
				false,
				false,
				false,
				8312415516402483,
				false
			]
			],
			[
			[
				29,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				7672099187992296,
				false
				,[
				[
					7,
					[
						20,
						99,
						cr.plugins_.Facebook2_1.prototype.exps.UserNameFull,
						true,
						null
					]
				]
				]
			]
			]
		]
		]
	]
,	[
		"Notifications",
		[
		[
			2,
			"Global",
			false
		]
,		[
			0,
			null,
			false,
			null,
			739169748488337,
			[
			[
				-1,
				cr.system_object.prototype.cnds.OnLayoutStart,
				null,
				1,
				false,
				false,
				false,
				5940113511467053,
				false
			]
			],
			[
			[
				5,
				cr.plugins_.AJAX.prototype.acts.Post,
				null,
				9180082293802824,
				false
				,[
				[
					1,
					[
						2,
						"getNotifications"
					]
				]
,				[
					1,
					[
						10,
						[
							10,
							[
								10,
								[
									23,
									"host"
								]
								,[
									2,
									"notify.php?myhcid=&savehcid="
								]
							]
							,[
								20,
								0,
								cr.plugins_.WebStorage.prototype.exps.LocalValue,
								true,
								null
								,[
[
									2,
									"hcid"
								]
								]
							]
						]
						,[
							2,
							"&type=&message=&check=yes"
						]
					]
				]
,				[
					1,
					[
						2,
						""
					]
				]
,				[
					1,
					[
						2,
						"POST"
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				9150065384273151,
				false
				,[
				[
					11,
					"count"
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				2151131007589951,
				false
				,[
				[
					11,
					"notifyEnable"
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
,			[
				96,
				cr.plugins_.PhonegapLocalNotification.prototype.acts.CancelAllLocalNotifications,
				null,
				4640809545839092,
				false
			]
			]
			,[
			[
				0,
				null,
				false,
				null,
				7788884518020655,
				[
				[
					0,
					cr.plugins_.WebStorage.prototype.cnds.LocalStorageExists,
					null,
					0,
					false,
					false,
					false,
					4400451452893358,
					false
					,[
					[
						1,
						[
							2,
							"Notifications"
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetGroupActive,
					null,
					4477806664512223,
					false
					,[
					[
						1,
						[
							2,
							"loopDisplay"
						]
					]
,					[
						3,
						1
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			5060696702770735,
			[
			[
				5,
				cr.plugins_.AJAX.prototype.cnds.OnComplete,
				null,
				1,
				false,
				false,
				false,
				5853934687173947,
				false
				,[
				[
					1,
					[
						2,
						"getNotifications"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				1138644160132156,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					7394426127358297,
					false
					,[
					[
						7,
						[
							19,
							cr.system_object.prototype.exps.find
							,[
[
								20,
								5,
								cr.plugins_.AJAX.prototype.exps.LastData,
								true,
								null
							]
,[
								2,
								"|"
							]
							]
						]
					]
,					[
						8,
						5
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					3851544433117027,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						5714213207729473,
						false
						,[
						[
							7,
							[
								20,
								0,
								cr.plugins_.WebStorage.prototype.exps.LocalValue,
								true,
								null
								,[
[
									2,
									"Notifications"
								]
								]
							]
						]
,						[
							8,
							1
						]
,						[
							7,
							[
								20,
								5,
								cr.plugins_.AJAX.prototype.exps.LastData,
								true,
								null
							]
						]
						]
					]
					],
					[
					[
						0,
						cr.plugins_.WebStorage.prototype.acts.StoreLocal,
						null,
						6657534806500344,
						false
						,[
						[
							1,
							[
								2,
								"Notifications"
							]
						]
,						[
							7,
							[
								20,
								5,
								cr.plugins_.AJAX.prototype.exps.LastData,
								true,
								null
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						5651191129067203,
						false
						,[
						[
							11,
							"count"
						]
,						[
							7,
							[
								7,
								[
									5,
									[
										19,
										cr.system_object.prototype.exps.tokencount
										,[
[
											20,
											0,
											cr.plugins_.WebStorage.prototype.exps.LocalValue,
											true,
											null
											,[
[
												2,
												"Notifications"
											]
											]
										]
,[
											2,
											"|"
										]
										]
									]
									,[
										0,
										1
									]
								]
								,[
									0,
									5
								]
							]
						]
						]
					]
,					[
						0,
						cr.plugins_.WebStorage.prototype.acts.StoreLocal,
						null,
						7678935662591857,
						false
						,[
						[
							1,
							[
								2,
								"numOfNotifications"
							]
						]
,						[
							7,
							[
								23,
								"count"
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetGroupActive,
						null,
						2988710143072596,
						false
						,[
						[
							1,
							[
								2,
								"loopDisplay"
							]
						]
,						[
							3,
							1
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					1442653250251746,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Else,
						null,
						0,
						false,
						false,
						false,
						7790969547139407,
						false
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						2723854315877369,
						false
						,[
						[
							11,
							"count"
						]
,						[
							7,
							[
								7,
								[
									5,
									[
										19,
										cr.system_object.prototype.exps.tokencount
										,[
[
											20,
											0,
											cr.plugins_.WebStorage.prototype.exps.LocalValue,
											true,
											null
											,[
[
												2,
												"Notifications"
											]
											]
										]
,[
											2,
											"|"
										]
										]
									]
									,[
										0,
										1
									]
								]
								,[
									0,
									5
								]
							]
						]
						]
					]
,					[
						0,
						cr.plugins_.WebStorage.prototype.acts.StoreLocal,
						null,
						2105496764163009,
						false
						,[
						[
							1,
							[
								2,
								"numOfNotifications"
							]
						]
,						[
							7,
							[
								23,
								"count"
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetGroupActive,
						null,
						6925318926955164,
						false
						,[
						[
							1,
							[
								2,
								"loopDisplay"
							]
						]
,						[
							3,
							1
						]
						]
					]
,					[
						0,
						cr.plugins_.WebStorage.prototype.acts.StoreLocal,
						null,
						1479424371509937,
						false
						,[
						[
							1,
							[
								2,
								"numOfNotifications"
							]
						]
,						[
							7,
							[
								7,
								[
									5,
									[
										19,
										cr.system_object.prototype.exps.tokencount
										,[
[
											20,
											5,
											cr.plugins_.AJAX.prototype.exps.LastData,
											true,
											null
										]
,[
											2,
											"|"
										]
										]
									]
									,[
										0,
										1
									]
								]
								,[
									0,
									5
								]
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "loopDisplay"],
			false,
			null,
			52038330426197,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				52038330426197,
				false
				,[
				[
					1,
					[
						2,
						"loopDisplay"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				3360544808530682,
				[
				[
					-1,
					cr.system_object.prototype.cnds.For,
					null,
					0,
					true,
					false,
					false,
					1982975736199419,
					false
					,[
					[
						1,
						[
							2,
							"loopDisplay"
						]
					]
,					[
						0,
						[
							23,
							"count"
						]
					]
,					[
						0,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					89,
					cr.plugins_.iScroll.prototype.acts.remove_Line,
					null,
					1966702966767038,
					false
					,[
					[
						7,
						[
							10,
							[
								10,
								[
									10,
									[
										10,
										[
											19,
											cr.system_object.prototype.exps.tokenat
											,[
[
												20,
												0,
												cr.plugins_.WebStorage.prototype.exps.LocalValue,
												true,
												null
												,[
[
													2,
													"Notifications"
												]
												]
											]
,[
												6,
												[
													5,
													[
														19,
														cr.system_object.prototype.exps.loopindex
													]
													,[
														0,
														1
													]
												]
												,[
													0,
													5
												]
											]
,[
												2,
												"|"
											]
											]
										]
										,[
											2,
											"|"
										]
									]
									,[
										19,
										cr.system_object.prototype.exps.tokenat
										,[
[
											20,
											0,
											cr.plugins_.WebStorage.prototype.exps.LocalValue,
											true,
											null
											,[
[
												2,
												"Notifications"
											]
											]
										]
,[
											4,
											[
												6,
												[
													5,
													[
														19,
														cr.system_object.prototype.exps.loopindex
													]
													,[
														0,
														1
													]
												]
												,[
													0,
													5
												]
											]
											,[
												0,
												1
											]
										]
,[
											2,
											"|"
										]
										]
									]
								]
								,[
									2,
									"|"
								]
							]
							,[
								19,
								cr.system_object.prototype.exps.tokenat
								,[
[
									20,
									0,
									cr.plugins_.WebStorage.prototype.exps.LocalValue,
									true,
									null
									,[
[
										2,
										"Notifications"
									]
									]
								]
,[
									4,
									[
										6,
										[
											5,
											[
												19,
												cr.system_object.prototype.exps.loopindex
											]
											,[
												0,
												1
											]
										]
										,[
											0,
											5
										]
									]
									,[
										0,
										4
									]
								]
,[
									2,
									"|"
								]
								]
							]
						]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					2075147070085259,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						8530435429119523,
						false
						,[
						[
							7,
							[
								19,
								cr.system_object.prototype.exps.tokenat
								,[
[
									20,
									0,
									cr.plugins_.WebStorage.prototype.exps.LocalValue,
									true,
									null
									,[
[
										2,
										"Notifications"
									]
									]
								]
,[
									6,
									[
										5,
										[
											19,
											cr.system_object.prototype.exps.loopindex
										]
										,[
											0,
											1
										]
									]
									,[
										0,
										5
									]
								]
,[
									2,
									"|"
								]
								]
							]
						]
,						[
							8,
							1
						]
,						[
							7,
							[
								2,
								""
							]
						]
						]
					]
					],
					[
					[
						89,
						cr.plugins_.iScroll.prototype.acts.add_Line,
						null,
						6465608521999508,
						false
						,[
						[
							7,
							[
								10,
								[
									10,
									[
										10,
										[
											10,
											[
												10,
												[
													10,
													[
														2,
														"<div style=\"margin-top:-12px;\"><img src=\""
													]
													,[
														19,
														cr.system_object.prototype.exps.tokenat
														,[
[
															20,
															0,
															cr.plugins_.WebStorage.prototype.exps.LocalValue,
															true,
															null
															,[
[
																2,
																"Notifications"
															]
															]
														]
,[
															4,
															[
																6,
																[
																	5,
																	[
																		19,
																		cr.system_object.prototype.exps.loopindex
																	]
																	,[
																		0,
																		1
																	]
																]
																,[
																	0,
																	5
																]
															]
															,[
																0,
																1
															]
														]
,[
															2,
															"|"
														]
														]
													]
												]
												,[
													2,
													"\" width=\"50px\" height=\"50px\" style=\"float:left;margin-right:15px;border-radius:100px;border: 4px solid #ffffff;\"/><b>"
												]
											]
											,[
												19,
												cr.system_object.prototype.exps.tokenat
												,[
[
													20,
													0,
													cr.plugins_.WebStorage.prototype.exps.LocalValue,
													true,
													null
													,[
[
														2,
														"Notifications"
													]
													]
												]
,[
													4,
													[
														6,
														[
															5,
															[
																19,
																cr.system_object.prototype.exps.loopindex
															]
															,[
																0,
																1
															]
														]
														,[
															0,
															5
														]
													]
													,[
														0,
														2
													]
												]
,[
													2,
													"|"
												]
												]
											]
										]
										,[
											2,
											"</b> "
										]
									]
									,[
										19,
										cr.system_object.prototype.exps.tokenat
										,[
[
											20,
											0,
											cr.plugins_.WebStorage.prototype.exps.LocalValue,
											true,
											null
											,[
[
												2,
												"Notifications"
											]
											]
										]
,[
											4,
											[
												6,
												[
													5,
													[
														19,
														cr.system_object.prototype.exps.loopindex
													]
													,[
														0,
														1
													]
												]
												,[
													0,
													5
												]
											]
											,[
												0,
												3
											]
										]
,[
											2,
											"|"
										]
										]
									]
								]
								,[
									2,
									"</div>"
								]
							]
						]
,						[
							7,
							[
								10,
								[
									10,
									[
										10,
										[
											10,
											[
												19,
												cr.system_object.prototype.exps.tokenat
												,[
[
													20,
													0,
													cr.plugins_.WebStorage.prototype.exps.LocalValue,
													true,
													null
													,[
[
														2,
														"Notifications"
													]
													]
												]
,[
													6,
													[
														5,
														[
															19,
															cr.system_object.prototype.exps.loopindex
														]
														,[
															0,
															1
														]
													]
													,[
														0,
														5
													]
												]
,[
													2,
													"|"
												]
												]
											]
											,[
												2,
												"|"
											]
										]
										,[
											19,
											cr.system_object.prototype.exps.tokenat
											,[
[
												20,
												0,
												cr.plugins_.WebStorage.prototype.exps.LocalValue,
												true,
												null
												,[
[
													2,
													"Notifications"
												]
												]
											]
,[
												4,
												[
													6,
													[
														5,
														[
															19,
															cr.system_object.prototype.exps.loopindex
														]
														,[
															0,
															1
														]
													]
													,[
														0,
														5
													]
												]
												,[
													0,
													1
												]
											]
,[
												2,
												"|"
											]
											]
										]
									]
									,[
										2,
										"|"
									]
								]
								,[
									19,
									cr.system_object.prototype.exps.tokenat
									,[
[
										20,
										0,
										cr.plugins_.WebStorage.prototype.exps.LocalValue,
										true,
										null
										,[
[
											2,
											"Notifications"
										]
										]
									]
,[
										4,
										[
											6,
											[
												5,
												[
													19,
													cr.system_object.prototype.exps.loopindex
												]
												,[
													0,
													1
												]
											]
											,[
												0,
												5
											]
										]
										,[
											0,
											4
										]
									]
,[
										2,
										"|"
									]
									]
								]
							]
						]
,						[
							3,
							1
						]
,						[
							7,
							[
								2,
								"#"
							]
						]
,						[
							0,
							[
								0,
								0
							]
						]
,						[
							0,
							[
								0,
								1
							]
						]
,						[
							0,
							[
								0,
								5
							]
						]
,						[
							0,
							[
								0,
								0
							]
						]
,						[
							0,
							[
								0,
								5
							]
						]
,						[
							0,
							[
								0,
								0
							]
						]
,						[
							7,
							[
								0,
								50
							]
						]
,						[
							7,
							[
								2,
								"auto"
							]
						]
,						[
							7,
							[
								2,
								"auto"
							]
						]
,						[
							7,
							[
								2,
								"#f5f5f5"
							]
						]
,						[
							3,
							0
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					9071838756464981,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						8979858091673765,
						false
						,[
						[
							7,
							[
								19,
								cr.system_object.prototype.exps.find
								,[
[
									20,
									0,
									cr.plugins_.WebStorage.prototype.exps.LocalValue,
									true,
									null
									,[
[
										2,
										"checkedNotifications"
									]
									]
								]
,[
									10,
									[
										10,
										[
											10,
											[
												10,
												[
													19,
													cr.system_object.prototype.exps.tokenat
													,[
[
														20,
														5,
														cr.plugins_.AJAX.prototype.exps.LastData,
														true,
														null
													]
,[
														6,
														[
															5,
															[
																19,
																cr.system_object.prototype.exps.loopindex
															]
															,[
																0,
																1
															]
														]
														,[
															0,
															5
														]
													]
,[
														2,
														"|"
													]
													]
												]
												,[
													2,
													"|"
												]
											]
											,[
												19,
												cr.system_object.prototype.exps.tokenat
												,[
[
													20,
													0,
													cr.plugins_.WebStorage.prototype.exps.LocalValue,
													true,
													null
													,[
[
														2,
														"Notifications"
													]
													]
												]
,[
													4,
													[
														6,
														[
															5,
															[
																19,
																cr.system_object.prototype.exps.loopindex
															]
															,[
																0,
																1
															]
														]
														,[
															0,
															5
														]
													]
													,[
														0,
														1
													]
												]
,[
													2,
													"|"
												]
												]
											]
										]
										,[
											2,
											"|"
										]
									]
									,[
										19,
										cr.system_object.prototype.exps.tokenat
										,[
[
											20,
											0,
											cr.plugins_.WebStorage.prototype.exps.LocalValue,
											true,
											null
											,[
[
												2,
												"Notifications"
											]
											]
										]
,[
											4,
											[
												6,
												[
													5,
													[
														19,
														cr.system_object.prototype.exps.loopindex
													]
													,[
														0,
														1
													]
												]
												,[
													0,
													5
												]
											]
											,[
												0,
												4
											]
										]
,[
											2,
											"|"
										]
										]
									]
								]
								]
							]
						]
,						[
							8,
							5
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						89,
						cr.plugins_.iScroll.prototype.acts.append_Text,
						null,
						6409035160225321,
						false
						,[
						[
							7,
							[
								10,
								[
									10,
									[
										10,
										[
											10,
											[
												19,
												cr.system_object.prototype.exps.tokenat
												,[
[
													20,
													0,
													cr.plugins_.WebStorage.prototype.exps.LocalValue,
													true,
													null
													,[
[
														2,
														"Notifications"
													]
													]
												]
,[
													6,
													[
														5,
														[
															19,
															cr.system_object.prototype.exps.loopindex
														]
														,[
															0,
															1
														]
													]
													,[
														0,
														5
													]
												]
,[
													2,
													"|"
												]
												]
											]
											,[
												2,
												"|"
											]
										]
										,[
											19,
											cr.system_object.prototype.exps.tokenat
											,[
[
												20,
												0,
												cr.plugins_.WebStorage.prototype.exps.LocalValue,
												true,
												null
												,[
[
													2,
													"Notifications"
												]
												]
											]
,[
												4,
												[
													6,
													[
														5,
														[
															19,
															cr.system_object.prototype.exps.loopindex
														]
														,[
															0,
															1
														]
													]
													,[
														0,
														5
													]
												]
												,[
													0,
													1
												]
											]
,[
												2,
												"|"
											]
											]
										]
									]
									,[
										2,
										"|"
									]
								]
								,[
									19,
									cr.system_object.prototype.exps.tokenat
									,[
[
										20,
										0,
										cr.plugins_.WebStorage.prototype.exps.LocalValue,
										true,
										null
										,[
[
											2,
											"Notifications"
										]
										]
									]
,[
										4,
										[
											6,
											[
												5,
												[
													19,
													cr.system_object.prototype.exps.loopindex
												]
												,[
													0,
													1
												]
											]
											,[
												0,
												5
											]
										]
										,[
											0,
											4
										]
									]
,[
										2,
										"|"
									]
									]
								]
							]
						]
,						[
							7,
							[
								2,
								" - accepted"
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					4741387493213763,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						6946018792210993,
						false
						,[
						[
							7,
							[
								19,
								cr.system_object.prototype.exps.loopindex
							]
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								23,
								"count"
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetGroupActive,
						null,
						9016413271424198,
						false
						,[
						[
							1,
							[
								2,
								"loopDisplay"
							]
						]
,						[
							3,
							2
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			1295344588269724,
			[
			[
				-1,
				cr.system_object.prototype.cnds.EveryTick,
				null,
				0,
				false,
				false,
				false,
				553957423289337,
				false
			]
			],
			[
			[
				89,
				cr.plugins_.iScroll.prototype.acts.SetX,
				null,
				3671911624846657,
				false
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.viewportleft
						,[
[
							0,
							0
						]
						]
					]
				]
				]
			]
,			[
				89,
				cr.plugins_.iScroll.prototype.acts.SetWidth,
				null,
				2644142398360333,
				false
				,[
				[
					0,
					[
						4,
						[
							19,
							cr.system_object.prototype.exps.viewportright
							,[
[
								0,
								0
							]
							]
						]
						,[
							19,
							cr.system_object.prototype.exps.abs
							,[
[
								19,
								cr.system_object.prototype.exps.viewportleft
								,[
[
									0,
									0
								]
								]
							]
							]
						]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			2535020564125654,
			[
			[
				89,
				cr.plugins_.iScroll.prototype.cnds.isAnyClicked,
				null,
				1,
				false,
				false,
				false,
				9281346736915665,
				false
			]
,			[
				-1,
				cr.system_object.prototype.cnds.Compare,
				null,
				0,
				false,
				false,
				false,
				8090239053691864,
				false
				,[
				[
					7,
					[
						19,
						cr.system_object.prototype.exps["int"]
						,[
[
							19,
							cr.system_object.prototype.exps.tokenat
							,[
[
								20,
								89,
								cr.plugins_.iScroll.prototype.exps.actualElementId,
								false,
								null
							]
,[
								0,
								2
							]
,[
								2,
								"|"
							]
							]
						]
						]
					]
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.Compare,
				null,
				0,
				false,
				false,
				false,
				7854220060688301,
				false
				,[
				[
					7,
					[
						19,
						cr.system_object.prototype.exps.find
						,[
[
							20,
							0,
							cr.plugins_.WebStorage.prototype.exps.LocalValue,
							true,
							null
							,[
[
								2,
								"checkedNotifications"
							]
							]
						]
,[
							20,
							89,
							cr.plugins_.iScroll.prototype.exps.actualElementId,
							false,
							null
						]
						]
					]
				]
,				[
					8,
					2
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
			],
			[
			[
				95,
				cr.plugins_.PhonegapDialog.prototype.acts.Confirm,
				null,
				1979442428483775,
				false
				,[
				[
					1,
					[
						20,
						89,
						cr.plugins_.iScroll.prototype.exps.actualElementId,
						false,
						null
					]
				]
,				[
					1,
					[
						2,
						"Accept Request?"
					]
				]
				]
			]
,			[
				89,
				cr.plugins_.iScroll.prototype.acts.SetInstanceVar,
				null,
				702660043854851,
				false
				,[
				[
					10,
					0
				]
,				[
					7,
					[
						20,
						89,
						cr.plugins_.iScroll.prototype.exps.actualElementId,
						false,
						null
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			372133327066446,
			[
			[
				95,
				cr.plugins_.PhonegapDialog.prototype.cnds.ConfirmYesClicked,
				null,
				1,
				false,
				false,
				false,
				4339719173606857,
				false
			]
			],
			[
			[
				89,
				cr.plugins_.iScroll.prototype.acts.append_specialText,
				null,
				277088744500641,
				false
				,[
				[
					7,
					[
						21,
						89,
						true,
						null
						,0
					]
				]
,				[
					7,
					[
						2,
						" - accepted "
					]
				]
				]
			]
,			[
				0,
				cr.plugins_.WebStorage.prototype.acts.StoreLocal,
				null,
				1296655744272981,
				false
				,[
				[
					1,
					[
						2,
						"checkedNotifications"
					]
				]
,				[
					7,
					[
						10,
						[
							10,
							[
								20,
								0,
								cr.plugins_.WebStorage.prototype.exps.LocalValue,
								true,
								null
								,[
[
									2,
									"checkedNotifications"
								]
								]
							]
							,[
								2,
								";"
							]
						]
						,[
							21,
							89,
							true,
							null
							,0
						]
					]
				]
				]
			]
,			[
				5,
				cr.plugins_.AJAX.prototype.acts.Post,
				null,
				5678402742590991,
				false
				,[
				[
					1,
					[
						2,
						"changeAccepted"
					]
				]
,				[
					1,
					[
						10,
						[
							10,
							[
								10,
								[
									10,
									[
										10,
										[
											23,
											"host"
										]
										,[
											2,
											"check_accepted.php?myhcid="
										]
									]
									,[
										19,
										cr.system_object.prototype.exps.tokenat
										,[
[
											21,
											89,
											true,
											null
											,0
										]
,[
											0,
											0
										]
,[
											2,
											"|"
										]
										]
									]
								]
								,[
									2,
									"&savehcid="
								]
							]
							,[
								20,
								0,
								cr.plugins_.WebStorage.prototype.exps.LocalValue,
								true,
								null
								,[
[
									2,
									"hcid"
								]
								]
							]
						]
						,[
							2,
							"&check=no"
						]
					]
				]
,				[
					1,
					[
						2,
						""
					]
				]
,				[
					1,
					[
						2,
						"POST"
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			3336613074446506,
			[
			[
				97,
				cr.plugins_.Phonegap.prototype.cnds.OnBack,
				null,
				1,
				false,
				false,
				false,
				7524328808074834,
				false
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.GoToLayout,
				null,
				5144156042347461,
				false
				,[
				[
					6,
					"MyCards"
				]
				]
			]
			]
		]
		]
	]
	],
	[
	],
	"media/",
	false,
	640,
	1136,
	3,
	true,
	true,
	false,
	"1.0.0.0",
	true,
	false,
	0,
	1,
	299,
	false,
	true,
	2,
	false,
	[
	]
];};
